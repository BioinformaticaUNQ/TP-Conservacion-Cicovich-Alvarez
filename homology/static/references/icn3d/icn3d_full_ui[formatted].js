var Detector = {
    canvas: !!window.CanvasRenderingContext2D,
    webgl: function() {
        try {
            var e = document.createElement("canvas");
            return !(!window.WebGLRenderingContext || !e.getContext("webgl") && !e.getContext("experimental-webgl"))
        } catch (e) {
            return !1
        }
    }(),
    workers: !!window.Worker,
    fileapi: window.File && window.FileReader && window.FileList && window.Blob,
    getWebGLErrorMessage: function() {
        var e = document.createElement("div");
        return e.id = "webgl-error-message",
        e.style.fontFamily = "monospace",
        e.style.fontSize = "13px",
        e.style.fontWeight = "normal",
        e.style.textAlign = "center",
        e.style.background = "#fff",
        e.style.color = "#000",
        e.style.padding = "1.5em",
        e.style.width = "400px",
        e.style.margin = "5em auto 0",
        this.webgl || (e.innerHTML = window.WebGLRenderingContext ? ['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n") : ['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),
        e
    },
    addGetWebGLMessage: function(e) {
        var t, i, n;
        t = void 0 !== (e = e || {}).parent ? e.parent : document.body,
        i = void 0 !== e.id ? e.id : "oldie",
        (n = Detector.getWebGLErrorMessage()).id = i,
        t.appendChild(n)
    }
};
"object" == typeof module && (module.exports = Detector),
THREE.TrackballControls = function(e, t, n) {
    "use strict";
    var s = this;
    this.STATE = {
        NONE: -1,
        ROTATE: 0,
        ZOOM: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_ZOOM_PAN: 4
    },
    this.object = e,
    this.domElement = void 0 !== t ? t : document,
    this.enabled = !0,
    this.screen = {
        left: 0,
        top: 0,
        width: 0,
        height: 0
    },
    this.rotateSpeed = 1,
    this.zoomSpeed = 1.2,
    this.panSpeed = .3,
    this.noRotate = !1,
    this.noZoom = !1,
    this.noPan = !1,
    this.noRoll = !1,
    this.staticMoving = !1,
    this.dynamicDampingFactor = .2,
    this.minDistance = 0,
    this.maxDistance = 1 / 0,
    this.keys = [65, 83, 68],
    this.target = new THREE.Vector3;
    var i = new THREE.Vector3;
    this._state = this.STATE.NONE;
    var r = this.STATE.NONE
      , o = new THREE.Vector3;
    this._rotateStart = new THREE.Vector3,
    this._rotateEnd = new THREE.Vector3,
    this._zoomStart = new THREE.Vector2,
    this._zoomEnd = new THREE.Vector2;
    var a = 0
      , l = 0;
    this._panStart = new THREE.Vector2,
    this._panEnd = new THREE.Vector2,
    this.target0 = this.target.clone(),
    this.position0 = this.object.position.clone(),
    this.up0 = this.object.up.clone();
    var d = {
        type: "change"
    }
      , c = {
        type: "start"
    }
      , h = {
        type: "end"
    };
    this.handleResize = function() {
        if (this.domElement === document)
            this.screen.left = 0,
            this.screen.top = 0,
            this.screen.width = window.innerWidth,
            this.screen.height = window.innerHeight;
        else {
            var e = this.domElement.getBoundingClientRect()
              , t = this.domElement.ownerDocument.documentElement;
            this.screen.left = e.left + window.pageXOffset - t.clientLeft,
            this.screen.top = e.top + window.pageYOffset - t.clientTop,
            this.screen.width = e.width,
            this.screen.height = e.height
        }
    }
    ,
    this.handleEvent = function(e) {
        "function" == typeof this[e.type] && this[e.type](e)
    }
    ;
    var p, m, u, f, g, v, b, y, C, _ = (p = new THREE.Vector2,
    function(e, t) {
        return p.set((e - s.screen.left) / s.screen.width, (t - s.screen.top) / s.screen.height),
        p
    }
    ), S = (m = new THREE.Vector3,
    u = new THREE.Vector3,
    f = new THREE.Vector3,
    function(e, t) {
        f.set((e - .5 * s.screen.width - s.screen.left) / (.5 * s.screen.width), (.5 * s.screen.height + s.screen.top - t) / (.5 * s.screen.height), 0);
        var i = f.length();
        return s.noRoll ? i < Math.SQRT1_2 ? f.z = Math.sqrt(1 - i * i) : f.z = .5 / i : 1 < i ? f.normalize() : f.z = Math.sqrt(1 - i * i),
        o.copy(s.object.position).sub(s.target),
        m.copy(s.object.up).setLength(f.y),
        m.add(u.copy(s.object.up).cross(o).setLength(f.x)),
        m.add(o.setLength(f.z)),
        m
    }
    );
    function w(e) {
        !1 !== s.enabled && (window.removeEventListener("keydown", w),
        r = s._state,
        s._state === s.STATE.NONE && (e.keyCode !== s.keys[s.STATE.ROTATE] || s.noRotate ? e.keyCode !== s.keys[s.STATE.ZOOM] || s.noZoom ? e.keyCode !== s.keys[s.STATE.PAN] || s.noPan || (s._state = s.STATE.PAN) : s._state = s.STATE.ZOOM : s._state = s.STATE.ROTATE))
    }
    function A(e) {
        !1 !== s.enabled && (e.stopPropagation(),
        s._state !== s.STATE.ROTATE || s.noRotate ? s._state !== s.STATE.ZOOM || s.noZoom ? s._state !== s.STATE.PAN || s.noPan || s._panEnd.copy(_(e.pageX, e.pageY)) : s._zoomEnd.copy(_(e.pageX, e.pageY)) : s._rotateEnd.copy(S(e.pageX, e.pageY)))
    }
    function x(e) {
        !1 !== s.enabled && (e.stopPropagation(),
        s._state = s.STATE.NONE,
        document.removeEventListener("mousemove", A),
        document.removeEventListener("mouseup", x),
        s.dispatchEvent(h))
    }
    function k(e) {
        if (!1 !== s.enabled) {
            e.stopPropagation();
            var t = 0;
            e.wheelDelta ? t = e.wheelDelta / 40 : e.detail && (t = -e.detail / 3),
            s._zoomStart.y = .005 * t,
            s.dispatchEvent(c),
            s.dispatchEvent(h)
        }
    }
    this.rotateCamera = (g = new THREE.Vector3,
    v = new THREE.Quaternion,
    function(e, t) {
        var i;
        void 0 === e && (i = Math.acos(s._rotateStart.dot(s._rotateEnd) / s._rotateStart.length() / s._rotateEnd.length())),
        !i && void 0 === e || (void 0 === e ? (g.crossVectors(s._rotateStart, s._rotateEnd).normalize(),
        i *= s.rotateSpeed,
        v.setFromAxisAngle(g, -i)) : v.copy(e),
        void 0 === n || void 0 === n.quaternion || void 0 !== t && !0 !== t || n.quaternion.multiplyQuaternions(v, n.quaternion),
        o.applyQuaternion(v),
        s.object.up.applyQuaternion(v),
        s._rotateEnd.applyQuaternion(v),
        s.staticMoving ? s._rotateStart.copy(s._rotateEnd) : (v.setFromAxisAngle(g, i * (s.dynamicDampingFactor - 1)),
        s._rotateStart.applyQuaternion(v)))
    }
    ),
    this.zoomCamera = function(e, t) {
        var i;
        s._state === s.STATE.TOUCH_ZOOM_PAN ? (void 0 !== e ? i = e : (i = a / l,
        a = l),
        o.multiplyScalar(i),
        void 0 === n || void 0 === n._zoomFactor || void 0 !== t && !0 !== t || (n._zoomFactor *= i)) : (i = void 0 !== e ? e : 1 + (s._zoomEnd.y - s._zoomStart.y) * s.zoomSpeed,
        void 0 === n || void 0 === n._zoomFactor || void 0 !== t && !0 !== t || (n._zoomFactor *= i),
        1 !== i && (o.multiplyScalar(i),
        s.staticMoving ? s._zoomStart.copy(s._zoomEnd) : s._zoomStart.y += (s._zoomEnd.y - s._zoomStart.y) * this.dynamicDampingFactor))
    }
    ,
    this.panCamera = (b = new THREE.Vector2,
    y = new THREE.Vector3,
    C = new THREE.Vector3,
    function(e, t) {
        void 0 !== e ? (b = e,
        void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(e)) : (b.copy(s._panEnd).sub(s._panStart),
        void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(s._panEnd).sub(s._panStart)),
        b.lengthSq() && (b.multiplyScalar(o.length() * s.panSpeed),
        C.copy(o).cross(s.object.up).setLength(b.x),
        C.add(y.copy(s.object.up).setLength(b.y)),
        s.object.position.add(C),
        s.target.add(C),
        s.staticMoving ? s._panStart.copy(s._panEnd) : s._panStart.add(b.subVectors(s._panEnd, s._panStart).multiplyScalar(s.dynamicDampingFactor)))
    }
    ),
    this.checkDistances = function() {
        s.noZoom && s.noPan || (o.lengthSq() > s.maxDistance * s.maxDistance && s.object.position.addVectors(s.target, o.setLength(s.maxDistance)),
        o.lengthSq() < s.minDistance * s.minDistance && s.object.position.addVectors(s.target, o.setLength(s.minDistance)))
    }
    ,
    this.update = function(e) {
        o.subVectors(s.object.position, s.target),
        s.noRotate || (void 0 !== e && void 0 !== e.quaternion ? s.rotateCamera(e.quaternion, e.update) : s.rotateCamera()),
        s.noZoom || (void 0 !== e && void 0 !== e._zoomFactor ? s.zoomCamera(e._zoomFactor, e.update) : s.zoomCamera()),
        s.noPan || (void 0 !== e && void 0 !== e.mouseChange ? s.panCamera(e.mouseChange, e.update) : s.panCamera()),
        s.object.position.addVectors(s.target, o),
        s.checkDistances(),
        s.object.lookAt(s.target),
        1e-6 < i.distanceToSquared(s.object.position) && (s.dispatchEvent(d),
        i.copy(s.object.position))
    }
    ,
    this.reset = function() {
        s._state = s.STATE.NONE,
        r = s.STATE.NONE,
        s.target.copy(s.target0),
        s.object.position.copy(s.position0),
        s.object.up.copy(s.up0),
        o.subVectors(s.object.position, s.target),
        s.object.lookAt(s.target),
        s.dispatchEvent(d),
        i.copy(s.object.position)
    }
    ,
    this.domElement.addEventListener("contextmn", function(e) {}, !1),
    this.domElement.addEventListener("mousedown", function(e) {
        !1 !== s.enabled && (e.stopPropagation(),
        s._state === s.STATE.NONE && (s._state = e.button),
        s._state !== s.STATE.ROTATE || s.noRotate ? s._state !== s.STATE.ZOOM || s.noZoom ? s._state !== s.STATE.PAN || s.noPan || (s._panStart.copy(_(e.pageX, e.pageY)),
        s._panEnd.copy(s._panStart)) : (s._zoomStart.copy(_(e.pageX, e.pageY)),
        s._zoomEnd.copy(s._zoomStart)) : (s._rotateStart.copy(S(e.pageX, e.pageY)),
        s._rotateEnd.copy(s._rotateStart)),
        document.addEventListener("mousemove", A, !1),
        document.addEventListener("mouseup", x, !1),
        s.dispatchEvent(c))
    }, !1),
    this.domElement.addEventListener("mousewheel", k, !1),
    this.domElement.addEventListener("DOMMouseScroll", k, !1),
    this.domElement.addEventListener("touchstart", function(e) {
        if (!1 !== s.enabled) {
            switch (e.touches.length) {
            case 1:
                s._state = s.STATE.TOUCH_ROTATE,
                s._rotateStart.copy(S(e.touches[0].pageX, e.touches[0].pageY)),
                s._rotateEnd.copy(s._rotateStart);
                break;
            case 2:
                s._state = s.STATE.TOUCH_ZOOM_PAN;
                var t = e.touches[0].pageX - e.touches[1].pageX
                  , i = e.touches[0].pageY - e.touches[1].pageY;
                l = a = Math.sqrt(t * t + i * i);
                var n = (e.touches[0].pageX + e.touches[1].pageX) / 2
                  , r = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                s._panStart.copy(_(n, r)),
                s._panEnd.copy(s._panStart);
                break;
            default:
                s._state = s.STATE.NONE
            }
            s.dispatchEvent(c)
        }
    }, !1),
    this.domElement.addEventListener("touchend", function(e) {
        if (!1 !== s.enabled) {
            switch (e.touches.length) {
            case 1:
                s._rotateEnd.copy(S(e.touches[0].pageX, e.touches[0].pageY)),
                s._rotateStart.copy(s._rotateEnd);
                break;
            case 2:
                a = l = 0;
                var t = (e.touches[0].pageX + e.touches[1].pageX) / 2
                  , i = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                s._panEnd.copy(_(t, i)),
                s._panStart.copy(s._panEnd)
            }
            s._state = s.STATE.NONE,
            s.dispatchEvent(h)
        }
    }, !1),
    this.domElement.addEventListener("touchmove", function(e) {
        if (!1 !== s.enabled)
            switch (e.stopPropagation(),
            e.touches.length) {
            case 1:
                s._rotateEnd.copy(S(e.touches[0].pageX, e.touches[0].pageY));
                break;
            case 2:
                var t = e.touches[0].pageX - e.touches[1].pageX
                  , i = e.touches[0].pageY - e.touches[1].pageY;
                l = Math.sqrt(t * t + i * i);
                var n = (e.touches[0].pageX + e.touches[1].pageX) / 2
                  , r = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                s._panEnd.copy(_(n, r));
                break;
            default:
                s._state = s.STATE.NONE
            }
    }, !1),
    window.addEventListener("keydown", w, !1),
    window.addEventListener("keyup", function(e) {
        !1 !== s.enabled && (s._state = r,
        window.addEventListener("keydown", w, !1))
    }, !1),
    this.handleResize(),
    this.update()
}
,
THREE.TrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype),
THREE.TrackballControls.prototype.constructor = THREE.TrackballControls,
THREE.OrthographicTrackballControls = function(e, t, n) {
    this.icn3d;
    var s = this
      , o = {
        NONE: -1,
        ROTATE: 0,
        ZOOM: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_ZOOM_PAN: 4
    };
    this.object = e,
    this.domElement = void 0 !== t ? t : document,
    this.enabled = !0,
    this.screen = {
        left: 0,
        top: 0,
        width: 0,
        height: 0
    },
    this.rotateSpeed = .5,
    this.zoomSpeed = 1.2;
    this.zoomSpeed *= .01,
    this.panSpeed = .03,
    this.noRotate = !1,
    this.noZoom = !1,
    this.noPan = !1,
    this.noRoll = !1,
    this.staticMoving = !1,
    this.dynamicDampingFactor = .2,
    this.keys = [65, 83, 68],
    this.target = new THREE.Vector3;
    var i = new THREE.Vector3;
    this._state = o.NONE;
    var r = o.NONE
      , a = new THREE.Vector3;
    this._rotateStart = new THREE.Vector3,
    this._rotateEnd = new THREE.Vector3,
    this._zoomStart = new THREE.Vector2,
    this._zoomEnd = new THREE.Vector2;
    var l = 1
      , d = 0
      , c = 0;
    this._panStart = new THREE.Vector2,
    this._panEnd = new THREE.Vector2,
    this.target0 = this.target.clone(),
    this.position0 = this.object.position.clone(),
    this.up0 = this.object.up.clone(),
    this.left0 = this.object.left,
    this.right0 = this.object.right,
    this.top0 = this.object.top,
    this.bottom0 = this.object.bottom,
    this.center0 = new THREE.Vector2((this.left0 + this.right0) / 2,(this.top0 + this.bottom0) / 2);
    var h = {
        type: "change"
    }
      , p = {
        type: "start"
    }
      , m = {
        type: "end"
    };
    this.handleResize = function() {
        if (this.domElement === document)
            this.screen.left = 0,
            this.screen.top = 0,
            this.screen.width = window.innerWidth,
            this.screen.height = window.innerHeight;
        else {
            var e = this.domElement.getBoundingClientRect()
              , t = this.domElement.ownerDocument.documentElement;
            this.screen.left = e.left + window.pageXOffset - t.clientLeft,
            this.screen.top = e.top + window.pageYOffset - t.clientTop,
            this.screen.width = e.width,
            this.screen.height = e.height
        }
        this.left0 = this.object.left,
        this.right0 = this.object.right,
        this.top0 = this.object.top,
        this.bottom0 = this.object.bottom,
        this.center0.set((this.left0 + this.right0) / 2, (this.top0 + this.bottom0) / 2)
    }
    ,
    this.handleEvent = function(e) {
        "function" == typeof this[e.type] && this[e.type](e)
    }
    ;
    var u, f, g, v, b, y, C, _, S, w = (u = new THREE.Vector2,
    function(e, t) {
        return u.set((e - s.screen.left) / s.screen.width, (t - s.screen.top) / s.screen.height),
        u
    }
    ), A = (f = new THREE.Vector3,
    g = new THREE.Vector3,
    v = new THREE.Vector3,
    function(e, t) {
        v.set((e - .5 * s.screen.width - s.screen.left) / (.5 * s.screen.width), (.5 * s.screen.height + s.screen.top - t) / (.5 * s.screen.height), 0);
        var i = v.length();
        return s.noRoll ? i < Math.SQRT1_2 ? v.z = Math.sqrt(1 - i * i) : v.z = .5 / i : 1 < i ? v.normalize() : v.z = Math.sqrt(1 - i * i),
        a.copy(s.object.position).sub(s.target),
        f.copy(s.object.up).setLength(v.y),
        f.add(g.copy(s.object.up).cross(a).setLength(v.x)),
        f.add(a.setLength(v.z)),
        f
    }
    );
    function x(e) {
        !1 !== s.enabled && (window.removeEventListener("keydown", x),
        r = s._state,
        s._state === o.NONE && (e.keyCode !== s.keys[o.ROTATE] || s.noRotate ? e.keyCode !== s.keys[o.ZOOM] || s.noZoom ? e.keyCode !== s.keys[o.PAN] || s.noPan || (s._state = o.PAN) : s._state = o.ZOOM : s._state = o.ROTATE))
    }
    function k(e) {
        !1 !== s.enabled && (e.stopPropagation(),
        s._state !== o.ROTATE || s.noRotate ? s._state !== o.ZOOM || s.noZoom ? s._state !== o.PAN || s.noPan || s._panEnd.copy(w(e.pageX, e.pageY)) : s._zoomEnd.copy(w(e.pageX, e.pageY)) : s._rotateEnd.copy(A(e.pageX, e.pageY)))
    }
    function D(e) {
        !1 !== s.enabled && (e.stopPropagation(),
        s._state = o.NONE,
        document.removeEventListener("mousemove", k),
        document.removeEventListener("mouseup", D),
        s.dispatchEvent(m))
    }
    function O(e) {
        if (!1 !== s.enabled) {
            e.stopPropagation();
            var t = 0;
            e.wheelDelta ? t = e.wheelDelta / 40 : e.detail && (t = -e.detail / 3),
            s._zoomStart.y = .01 * t,
            s.dispatchEvent(p),
            s.dispatchEvent(m)
        }
    }
    this.rotateCamera = (b = new THREE.Vector3,
    y = new THREE.Quaternion,
    function(e, t) {
        var i;
        void 0 === e && (i = Math.acos(s._rotateStart.dot(s._rotateEnd) / s._rotateStart.length() / s._rotateEnd.length())),
        !i && void 0 === e || (void 0 === e ? (b.crossVectors(s._rotateStart, s._rotateEnd).normalize(),
        i *= s.rotateSpeed,
        y.setFromAxisAngle(b, -i)) : y.copy(e),
        void 0 === n || void 0 === n.quaternion || void 0 !== t && !0 !== t || n.quaternion.multiplyQuaternions(y, n.quaternion),
        a.applyQuaternion(y),
        s.object.up.applyQuaternion(y),
        s._rotateEnd.applyQuaternion(y),
        s.staticMoving ? s._rotateStart.copy(s._rotateEnd) : (y.setFromAxisAngle(b, i * (s.dynamicDampingFactor - 1)),
        s._rotateStart.applyQuaternion(y)))
    }
    ),
    this.zoomCamera = function(e, t) {
        var i;
        s._state === o.TOUCH_ZOOM_PAN ? void 0 !== e ? i = e : (i = d / c,
        d = c) : i = void 0 !== e ? e : 1 + (s._zoomEnd.y - s._zoomStart.y) * s.zoomSpeed / .01,
        void 0 === n || void 0 === n._zoomFactor || void 0 !== t && !0 !== t || (n._zoomFactor *= i),
        1 !== i && (l = i,
        s.object.left = l * s.left0 + (1 - l) * s.center0.x,
        s.object.right = l * s.right0 + (1 - l) * s.center0.x,
        s.object.top = l * s.top0 + (1 - l) * s.center0.y,
        s.object.bottom = l * s.bottom0 + (1 - l) * s.center0.y,
        s.staticMoving ? s._zoomStart.copy(s._zoomEnd) : s._zoomStart.y += (s._zoomEnd.y - s._zoomStart.y) * this.dynamicDampingFactor)
    }
    ,
    this.panCamera = (C = new THREE.Vector2,
    _ = new THREE.Vector3,
    S = new THREE.Vector3,
    function(e, t) {
        void 0 !== e ? (C = e,
        void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(e)) : (C.copy(s._panEnd).sub(s._panStart),
        void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(s._panEnd).sub(s._panStart)),
        C.lengthSq() && (C.multiplyScalar(a.length() * s.panSpeed),
        S.copy(a).cross(s.object.up).setLength(C.x),
        S.add(_.copy(s.object.up).setLength(C.y)),
        s.object.position.add(S),
        s.target.add(S),
        s.staticMoving ? s._panStart.copy(s._panEnd) : s._panStart.add(C.subVectors(s._panEnd, s._panStart).multiplyScalar(s.dynamicDampingFactor)))
    }
    ),
    this.update = function(e) {
        a.subVectors(s.object.position, s.target),
        s.noRotate || (void 0 !== e && void 0 !== e.quaternion ? s.rotateCamera(e.quaternion, e.update) : s.rotateCamera()),
        s.noZoom || (void 0 !== e && void 0 !== e._zoomFactor ? s.zoomCamera(e._zoomFactor, e.update) : s.zoomCamera(),
        s.object.updateProjectionMatrix()),
        s.noPan || (void 0 !== e && void 0 !== e.mouseChange ? s.panCamera(e.mouseChange, e.update) : s.panCamera()),
        s.object.position.addVectors(s.target, a),
        s.object.lookAt(s.target),
        1e-6 < i.distanceToSquared(s.object.position) && (s.dispatchEvent(h),
        i.copy(s.object.position))
    }
    ,
    this.reset = function() {
        s._state = o.NONE,
        r = o.NONE,
        s.target.copy(s.target0),
        s.object.position.copy(s.position0),
        s.object.up.copy(s.up0),
        a.subVectors(s.object.position, s.target),
        s.object.left = s.left0,
        s.object.right = s.right0,
        s.object.top = s.top0,
        s.object.bottom = s.bottom0,
        s.object.lookAt(s.target),
        s.dispatchEvent(h),
        i.copy(s.object.position)
    }
    ,
    this.domElement.addEventListener("contextmn", function(e) {}, !1),
    this.domElement.addEventListener("mousedown", function(e) {
        !1 !== s.enabled && (e.stopPropagation(),
        s._state === o.NONE && (s._state = e.button),
        s._state !== o.ROTATE || s.noRotate ? s._state !== o.ZOOM || s.noZoom ? s._state !== o.PAN || s.noPan || (s._panStart.copy(w(e.pageX, e.pageY)),
        s._panEnd.copy(s._panStart)) : (s._zoomStart.copy(w(e.pageX, e.pageY)),
        s._zoomEnd.copy(s._zoomStart)) : (s._rotateStart.copy(A(e.pageX, e.pageY)),
        s._rotateEnd.copy(s._rotateStart)),
        document.addEventListener("mousemove", k, !1),
        document.addEventListener("mouseup", D, !1),
        s.dispatchEvent(p))
    }, !1),
    this.domElement.addEventListener("mousewheel", O, !1),
    this.domElement.addEventListener("DOMMouseScroll", O, !1),
    this.domElement.addEventListener("touchstart", function(e) {
        if (!1 !== s.enabled) {
            switch (e.touches.length) {
            case 1:
                s._state = o.TOUCH_ROTATE,
                s._rotateStart.copy(A(e.touches[0].pageX, e.touches[0].pageY)),
                s._rotateEnd.copy(s._rotateStart);
                break;
            case 2:
                s._state = o.TOUCH_ZOOM_PAN;
                var t = e.touches[0].pageX - e.touches[1].pageX
                  , i = e.touches[0].pageY - e.touches[1].pageY;
                c = d = Math.sqrt(t * t + i * i);
                var n = (e.touches[0].pageX + e.touches[1].pageX) / 2
                  , r = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                s._panStart.copy(w(n, r)),
                s._panEnd.copy(s._panStart);
                break;
            default:
                s._state = o.NONE
            }
            s.dispatchEvent(p)
        }
    }, !1),
    this.domElement.addEventListener("touchend", function(e) {
        if (!1 !== s.enabled) {
            switch (e.touches.length) {
            case 1:
                s._rotateEnd.copy(A(e.touches[0].pageX, e.touches[0].pageY)),
                s._rotateStart.copy(s._rotateEnd);
                break;
            case 2:
                d = c = 0;
                var t = (e.touches[0].pageX + e.touches[1].pageX) / 2
                  , i = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                s._panEnd.copy(w(t, i)),
                s._panStart.copy(s._panEnd)
            }
            s._state = o.NONE,
            s.dispatchEvent(m)
        }
    }, !1),
    this.domElement.addEventListener("touchmove", function(e) {
        if (!1 !== s.enabled)
            switch (e.stopPropagation(),
            e.touches.length) {
            case 1:
                s._rotateEnd.copy(A(e.touches[0].pageX, e.touches[0].pageY));
                break;
            case 2:
                var t = e.touches[0].pageX - e.touches[1].pageX
                  , i = e.touches[0].pageY - e.touches[1].pageY;
                c = Math.sqrt(t * t + i * i);
                var n = (e.touches[0].pageX + e.touches[1].pageX) / 2
                  , r = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                s._panEnd.copy(w(n, r));
                break;
            default:
                s._state = o.NONE
            }
    }, !1),
    window.addEventListener("keydown", x, !1),
    window.addEventListener("keyup", function(e) {
        !1 !== s.enabled && (s._state = r,
        window.addEventListener("keydown", x, !1))
    }, !1),
    this.handleResize(),
    this.update()
}
,
THREE.OrthographicTrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype),
THREE.OrthographicTrackballControls.prototype.constructor = THREE.OrthographicTrackballControls,
THREE.RenderableObject = function() {
    "use strict";
    this.id = 0,
    this.object = null,
    this.z = 0
}
,
THREE.RenderableFace = function() {
    "use strict";
    this.id = 0,
    this.v1 = new THREE.RenderableVertex,
    this.v2 = new THREE.RenderableVertex,
    this.v3 = new THREE.RenderableVertex,
    this.normalModel = new THREE.Vector3,
    this.vertexNormalsModel = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3],
    this.vertexNormalsLength = 0,
    this.color = new THREE.Color,
    this.material = null,
    this.uvs = [new THREE.Vector2, new THREE.Vector2, new THREE.Vector2],
    this.z = 0
}
,
THREE.RenderableVertex = function() {
    "use strict";
    this.position = new THREE.Vector3,
    this.positionWorld = new THREE.Vector3,
    this.positionScreen = new THREE.Vector4,
    this.visible = !0
}
,
THREE.RenderableVertex.prototype.copy = function(e) {
    "use strict";
    this.positionWorld.copy(e.positionWorld),
    this.positionScreen.copy(e.positionScreen)
}
,
THREE.RenderableLine = function() {
    "use strict";
    this.id = 0,
    this.v1 = new THREE.RenderableVertex,
    this.v2 = new THREE.RenderableVertex,
    this.vertexColors = [new THREE.Color, new THREE.Color],
    this.material = null,
    this.z = 0
}
,
THREE.RenderableSprite = function() {
    "use strict";
    this.id = 0,
    this.object = null,
    this.x = 0,
    this.y = 0,
    this.z = 0,
    this.rotation = 0,
    this.scale = new THREE.Vector2,
    this.material = null
}
,
THREE.Projector = function() {
    "use strict";
    var K, J, r, ee, te, ie, ne, re, se, oe, ae, le = [], de = 0, ce = [], t = 0, i = [], n = 0, s = [], o = 0, a = [], l = 0, he = {
        objects: [],
        lights: [],
        elements: []
    }, pe = new THREE.Vector3, me = new THREE.Vector3, ue = new THREE.Vector3, fe = new THREE.Vector3, ge = new THREE.Vector4, d = new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)), v = new THREE.Box3, b = new Array(3), ve = (new Array(4),
    new THREE.Matrix4), be = new THREE.Matrix4, ye = new THREE.Matrix4, Ce = new THREE.Matrix3, _e = new THREE.Frustum, Se = new THREE.Vector4, we = new THREE.Vector4;
    this.projectVector = function(e, t) {
        console.warn("THREE.Projector: .projectVector() is now vector.project()."),
        e.project(t)
    }
    ,
    this.unprojectVector = function(e, t) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),
        e.unproject(t)
    }
    ,
    this.pkRay = function(e, t) {
        console.error("THREE.Projector: .pkRay() is now raycaster.setFromCamera().")
    }
    ;
    var Ae = new function() {
        function n(e) {
            var t = e.position
              , i = e.positionWorld
              , n = e.positionScreen;
            i.copy(t).applyMatrix4(ae),
            n.copy(i).applyMatrix4(be);
            var r = 1 / n.w;
            n.x *= r,
            n.y *= r,
            n.z *= r,
            e.visible = -1 <= n.x && n.x <= 1 && -1 <= n.y && n.y <= 1 && -1 <= n.z && n.z <= 1
        }
        function c(e, t, i) {
            return !0 === e.visible || !0 === t.visible || !0 === i.visible || (b[0] = e.positionScreen,
            b[1] = t.positionScreen,
            b[2] = i.positionScreen,
            d.isIntersectionBox(v.setFromPoints(b)))
        }
        function h(e, t, i) {
            return (i.positionScreen.x - e.positionScreen.x) * (t.positionScreen.y - e.positionScreen.y) - (i.positionScreen.y - e.positionScreen.y) * (t.positionScreen.x - e.positionScreen.x) < 0
        }
        var p = []
          , m = []
          , u = null
          , f = null
          , g = new THREE.Matrix3;
        return {
            setObject: function(e) {
                f = (u = e).material,
                g.getNormalMatrix(u.matrixWorld),
                p.length = 0,
                m.length = 0
            },
            projectVertex: n,
            checkTriangleVisibility: c,
            checkBackfaceCulling: h,
            pushVertex: function(e, t, i) {
                (r = xe()).position.set(e, t, i),
                n(r)
            },
            pushNormal: function(e, t, i) {
                p.push(e, t, i)
            },
            pushUv: function(e, t) {
                m.push(e, t)
            },
            pushLine: function(e, t) {
                var i = ce[e]
                  , n = ce[t];
                (ne = De()).id = u.id,
                ne.v1.copy(i),
                ne.v2.copy(n),
                ne.z = (i.positionScreen.z + n.positionScreen.z) / 2,
                ne.material = u.material,
                he.elements.push(ne)
            },
            pushTriangle: function(e, t, i) {
                var n = ce[e]
                  , r = ce[t]
                  , s = ce[i];
                if (!1 !== c(n, r, s) && (f.side === THREE.DoubleSide || !0 === h(n, r, s))) {
                    (te = ke()).id = u.id,
                    te.v1.copy(n),
                    te.v2.copy(r),
                    te.v3.copy(s),
                    te.z = (n.positionScreen.z + r.positionScreen.z + s.positionScreen.z) / 3;
                    for (var o = 0; o < 3; o++) {
                        var a = 3 * arguments[o]
                          , l = te.vertexNormalsModel[o];
                        l.set(p[a], p[1 + a], p[2 + a]),
                        l.applyMatrix3(g).normalize();
                        var d = 2 * arguments[o];
                        te.uvs[o].set(m[d], m[1 + d])
                    }
                    te.vertexNormalsLength = 3,
                    te.material = u.material,
                    he.elements.push(te)
                }
            }
        }
    }
    ;
    function xe() {
        if (ee !== t)
            return ce[ee++];
        var e = new THREE.RenderableVertex;
        return ce.push(e),
        t++,
        ee++,
        e
    }
    function ke() {
        if (ie !== n)
            return i[ie++];
        var e = new THREE.RenderableFace;
        return i.push(e),
        n++,
        ie++,
        e
    }
    function De() {
        if (re !== o)
            return s[re++];
        var e = new THREE.RenderableLine;
        return s.push(e),
        o++,
        re++,
        e
    }
    function Oe() {
        if (oe !== l)
            return a[oe++];
        var e = new THREE.RenderableSprite;
        return a.push(e),
        l++,
        oe++,
        e
    }
    function Re(e, t) {
        return e.z !== t.z ? t.z - e.z : e.id !== t.id ? e.id - t.id : 0
    }
    function Te(e, t) {
        var i = 0
          , n = 1
          , r = e.z + e.w
          , s = t.z + t.w
          , o = -e.z + e.w
          , a = -t.z + t.w;
        return 0 <= r && 0 <= s && 0 <= o && 0 <= a || !(r < 0 && s < 0 || o < 0 && a < 0) && (r < 0 ? i = Math.max(i, r / (r - s)) : s < 0 && (n = Math.min(n, r / (r - s))),
        o < 0 ? i = Math.max(i, o / (o - a)) : a < 0 && (n = Math.min(n, o / (o - a))),
        !(n < i) && (e.lerp(t, i),
        t.lerp(e, 1 - n),
        !0))
    }
    this.projectScene = function(e, t, i, n) {
        oe = re = ie = 0,
        !(he.elements.length = 0) === e.autoUpdate && e.updateMatrixWorld(),
        void 0 === t.parent && t.updateMatrixWorld(),
        ve.copy(t.matrixWorldInverse.getInverse(t.matrixWorld)),
        be.multiplyMatrices(t.projectionMatrix, ve),
        _e.setFromMatrix(be),
        J = 0,
        he.objects.length = 0,
        he.lights.length = 0,
        e.traverseVisible(function(e) {
            if (e instanceof THREE.Light)
                he.lights.push(e);
            else if (e instanceof THREE.Mesh || e instanceof THREE.Line || e instanceof THREE.Sprite) {
                if (!1 === e.material.visible)
                    return;
                !1 !== e.frustumCulled && !0 !== _e.intersectsObject(e) || ((K = function() {
                    if (J !== de)
                        return le[J++];
                    var e = new THREE.RenderableObject;
                    return le.push(e),
                    de++,
                    J++,
                    e
                }()).id = e.id,
                K.object = e,
                fe.setFromMatrixPosition(e.matrixWorld),
                fe.applyProjection(be),
                K.z = fe.z,
                he.objects.push(K))
            }
        }),
        !0 === i && he.objects.sort(Re);
        for (var r = 0, s = he.objects.length; r < s; r++) {
            var o = he.objects[r].object
              , a = o.geometry;
            if (Ae.setObject(o),
            ae = o.matrixWorld,
            ee = 0,
            o instanceof THREE.Mesh) {
                if (a instanceof THREE.BufferGeometry) {
                    var l = a.attributes
                      , d = a.offsets;
                    if (void 0 === l.position)
                        continue;
                    for (var c = 0, h = (X = l.position.array).length; c < h; c += 3)
                        Ae.pushVertex(X[c], X[c + 1], X[c + 2]);
                    if (void 0 !== l.normal) {
                        var p = l.normal.array;
                        for (c = 0,
                        h = p.length; c < h; c += 3)
                            Ae.pushNormal(p[c], p[c + 1], p[c + 2])
                    }
                    if (void 0 !== l.uv) {
                        var m = l.uv.array;
                        for (c = 0,
                        h = m.length; c < h; c += 2)
                            Ae.pushUv(m[c], m[c + 1])
                    }
                    if (void 0 !== l.index) {
                        var u = l.index.array;
                        if (0 < d.length)
                            for (r = 0; r < d.length; r++) {
                                var f = d[r]
                                  , g = f.index;
                                for (c = f.start,
                                h = f.start + f.count; c < h; c += 3)
                                    Ae.pushTriangle(u[c] + g, u[c + 1] + g, u[c + 2] + g)
                            }
                        else
                            for (c = 0,
                            h = u.length; c < h; c += 3)
                                Ae.pushTriangle(u[c], u[c + 1], u[c + 2])
                    } else
                        for (c = 0,
                        h = X.length / 3; c < h; c += 3)
                            Ae.pushTriangle(c, c + 1, c + 2)
                } else if (a instanceof THREE.Geometry) {
                    var v = a.vertices
                      , b = a.faces
                      , y = a.faceVertexUvs[0];
                    Ce.getNormalMatrix(ae);
                    for (var C = o.material instanceof THREE.MeshFaceMaterial, _ = !0 == C ? o.material : null, S = 0, w = v.length; S < w; S++) {
                        var A = v[S];
                        Ae.pushVertex(A.x, A.y, A.z)
                    }
                    for (var x = 0, k = b.length; x < k; x++) {
                        var D = b[x]
                          , O = !0 == C ? _.materials[D.materialIndex] : o.material;
                        if (void 0 !== O) {
                            var R = O.side
                              , T = ce[D.a]
                              , E = ce[D.b]
                              , I = ce[D.c];
                            if (!0 === O.morphTargets) {
                                var H = a.morphTargets
                                  , L = o.morphTargetInfluences
                                  , $ = T.position
                                  , P = E.position
                                  , F = I.position;
                                pe.set(0, 0, 0),
                                me.set(0, 0, 0),
                                ue.set(0, 0, 0);
                                for (var M = 0, N = H.length; M < N; M++) {
                                    var z = L[M];
                                    if (0 !== z) {
                                        var q = H[M].vertices;
                                        pe.x += (q[D.a].x - $.x) * z,
                                        pe.y += (q[D.a].y - $.y) * z,
                                        pe.z += (q[D.a].z - $.z) * z,
                                        me.x += (q[D.b].x - P.x) * z,
                                        me.y += (q[D.b].y - P.y) * z,
                                        me.z += (q[D.b].z - P.z) * z,
                                        ue.x += (q[D.c].x - F.x) * z,
                                        ue.y += (q[D.c].y - F.y) * z,
                                        ue.z += (q[D.c].z - F.z) * z
                                    }
                                }
                                T.position.add(pe),
                                E.position.add(me),
                                I.position.add(ue),
                                Ae.projectVertex(T),
                                Ae.projectVertex(E),
                                Ae.projectVertex(I)
                            }
                            if (!1 !== Ae.checkTriangleVisibility(T, E, I)) {
                                var j = Ae.checkBackfaceCulling(T, E, I);
                                if (R !== THREE.DoubleSide) {
                                    if (R === THREE.FrontSide && !1 === j)
                                        continue;
                                    if (R === THREE.BackSide && !0 === j)
                                        continue
                                }
                                (te = ke()).id = o.id,
                                te.v1.copy(T),
                                te.v2.copy(E),
                                te.v3.copy(I),
                                te.normalModel.copy(D.normal),
                                !1 !== j || R !== THREE.BackSide && R !== THREE.DoubleSide || te.normalModel.negate(),
                                te.normalModel.applyMatrix3(Ce).normalize();
                                for (var U = D.vertexNormals, B = 0, G = Math.min(U.length, 3); B < G; B++) {
                                    var V = te.vertexNormalsModel[B];
                                    V.copy(U[B]),
                                    !1 !== j || R !== THREE.BackSide && R !== THREE.DoubleSide || V.negate(),
                                    V.applyMatrix3(Ce).normalize()
                                }
                                te.vertexNormalsLength = U.length;
                                var W = y[x];
                                if (void 0 !== W)
                                    for (var Y = 0; Y < 3; Y++)
                                        te.uvs[Y].copy(W[Y]);
                                te.color = D.color,
                                te.material = O,
                                te.z = (T.positionScreen.z + E.positionScreen.z + I.positionScreen.z) / 3,
                                he.elements.push(te)
                            }
                        }
                    }
                }
            } else if (o instanceof THREE.Line) {
                if (a instanceof THREE.BufferGeometry) {
                    if (void 0 !== (l = a.attributes).position) {
                        var X;
                        for (c = 0,
                        h = (X = l.position.array).length; c < h; c += 3)
                            Ae.pushVertex(X[c], X[c + 1], X[c + 2]);
                        if (void 0 !== l.index)
                            for (c = 0,
                            h = (u = l.index.array).length; c < h; c += 2)
                                Ae.pushLine(u[c], u[c + 1]);
                        else {
                            var Q = o.mode === THREE.LinePieces ? 2 : 1;
                            for (c = 0,
                            h = X.length / 3 - 1; c < h; c += Q)
                                Ae.pushLine(c, c + 1)
                        }
                    }
                } else if (a instanceof THREE.Geometry) {
                    if (ye.multiplyMatrices(be, ae),
                    0 === (v = o.geometry.vertices).length)
                        continue;
                    (T = xe()).positionScreen.copy(v[0]).applyMatrix4(ye);
                    for (Q = o.mode === THREE.LinePieces ? 2 : 1,
                    S = 1,
                    w = v.length; S < w; S++)
                        (T = xe()).positionScreen.copy(v[S]).applyMatrix4(ye),
                        0 < (S + 1) % Q || (E = ce[ee - 2],
                        Se.copy(T.positionScreen),
                        we.copy(E.positionScreen),
                        !0 === Te(Se, we) && (Se.multiplyScalar(1 / Se.w),
                        we.multiplyScalar(1 / we.w),
                        (ne = De()).id = o.id,
                        ne.v1.positionScreen.copy(Se),
                        ne.v2.positionScreen.copy(we),
                        ne.z = Math.max(Se.z, we.z),
                        ne.material = o.material,
                        o.material.vertexColors === THREE.VertexColors && (ne.vertexColors[0].copy(o.geometry.colors[S]),
                        ne.vertexColors[1].copy(o.geometry.colors[S - 1])),
                        he.elements.push(ne)))
                }
            } else if (o instanceof THREE.Sprite) {
                ge.set(ae.elements[12], ae.elements[13], ae.elements[14], 1),
                ge.applyMatrix4(be);
                var Z = 1 / ge.w;
                ge.z *= Z,
                -1 <= ge.z && ge.z <= 1 && ((se = Oe()).id = o.id,
                se.x = ge.x * Z,
                se.y = ge.y * Z,
                se.z = ge.z,
                se.object = o,
                se.rotation = o.rotation,
                se.scale.x = o.scale.x * Math.abs(se.x - (ge.x + t.projectionMatrix.elements[0]) / (ge.w + t.projectionMatrix.elements[12])),
                se.scale.y = o.scale.y * Math.abs(se.y - (ge.y + t.projectionMatrix.elements[5]) / (ge.w + t.projectionMatrix.elements[13])),
                se.material = o.material,
                he.elements.push(se))
            }
        }
        return !0 === n && he.elements.sort(Re),
        he
    }
}
;
var MMTF = {};
function initIcn3dpyMMTF(e) {
    function p(e, t, i) {
        for (var n = (e.byteLength,
        0), r = i.length; n < r; n++) {
            var s = i.charCodeAt(n);
            if (s < 128)
                e.setUint8(t++, s >>> 0 & 127 | 0);
            else if (s < 2048)
                e.setUint8(t++, s >>> 6 & 31 | 192),
                e.setUint8(t++, s >>> 0 & 63 | 128);
            else if (s < 65536)
                e.setUint8(t++, s >>> 12 & 15 | 224),
                e.setUint8(t++, s >>> 6 & 63 | 128),
                e.setUint8(t++, s >>> 0 & 63 | 128);
            else {
                if (!(s < 1114112))
                    throw new Error("bad codepoint " + s);
                e.setUint8(t++, s >>> 18 & 7 | 240),
                e.setUint8(t++, s >>> 12 & 63 | 128),
                e.setUint8(t++, s >>> 6 & 63 | 128),
                e.setUint8(t++, s >>> 0 & 63 | 128)
            }
        }
    }
    function m(e) {
        for (var t = 0, i = 0, n = e.length; i < n; i++) {
            var r = e.charCodeAt(i);
            if (r < 128)
                t += 1;
            else if (r < 2048)
                t += 2;
            else if (r < 65536)
                t += 3;
            else {
                if (!(r < 1114112))
                    throw new Error("bad codepoint " + r);
                t += 4
            }
        }
        return t
    }
    function t(e) {
        var t = new ArrayBuffer(function e(t) {
            var i = typeof t;
            if ("string" == i) {
                if ((n = m(t)) < 32)
                    return 1 + n;
                if (n < 256)
                    return 2 + n;
                if (n < 65536)
                    return 3 + n;
                if (n < 4294967296)
                    return 5 + n
            }
            if (t instanceof Uint8Array) {
                if ((n = t.byteLength) < 256)
                    return 2 + n;
                if (n < 65536)
                    return 3 + n;
                if (n < 4294967296)
                    return 5 + n
            }
            if ("number" == i) {
                if (Math.floor(t) !== t)
                    return 9;
                if (0 <= t) {
                    if (t < 128)
                        return 1;
                    if (t < 256)
                        return 2;
                    if (t < 65536)
                        return 3;
                    if (t < 4294967296)
                        return 5;
                    throw new Error("Number too big 0x" + t.toString(16))
                }
                if (-32 <= t)
                    return 1;
                if (-128 <= t)
                    return 2;
                if (-32768 <= t)
                    return 3;
                if (-2147483648 <= t)
                    return 5;
                throw new Error("Number too small -0x" + t.toString(16).substr(1))
            }
            if ("boolean" == i || null === t)
                return 1;
            if ("object" != i)
                throw new Error("Unknown type " + i);
            var n, r = 0;
            if (Array.isArray(t)) {
                n = t.length;
                for (var s = 0; s < n; s++)
                    r += e(t[s])
            } else {
                var o = Object.keys(t);
                for (n = o.length,
                s = 0; s < n; s++) {
                    var a = o[s];
                    r += e(a) + e(t[a])
                }
            }
            if (n < 16)
                return 1 + r;
            if (n < 65536)
                return 3 + r;
            if (n < 4294967296)
                return 5 + r;
            throw new Error("Array or object too long 0x" + n.toString(16))
        }(e));
        return function e(t, i, n) {
            var r = typeof t;
            if ("string" == r) {
                if ((s = m(t)) < 32)
                    return i.setUint8(n, 160 | s),
                    p(i, n + 1, t),
                    1 + s;
                if (s < 256)
                    return i.setUint8(n, 217),
                    i.setUint8(n + 1, s),
                    p(i, n + 2, t),
                    2 + s;
                if (s < 65536)
                    return i.setUint8(n, 218),
                    i.setUint16(n + 1, s),
                    p(i, n + 3, t),
                    3 + s;
                if (s < 4294967296)
                    return i.setUint8(n, 219),
                    i.setUint32(n + 1, s),
                    p(i, n + 5, t),
                    5 + s
            }
            if (t instanceof Uint8Array) {
                var s = t.byteLength
                  , o = new Uint8Array(i.buffer);
                if (s < 256)
                    return i.setUint8(n, 196),
                    i.setUint8(n + 1, s),
                    o.set(t, n + 2),
                    2 + s;
                if (s < 65536)
                    return i.setUint8(n, 197),
                    i.setUint16(n + 1, s),
                    o.set(t, n + 3),
                    3 + s;
                if (s < 4294967296)
                    return i.setUint8(n, 198),
                    i.setUint32(n + 1, s),
                    o.set(t, n + 5),
                    5 + s
            }
            if ("number" == r) {
                if (!isFinite(t))
                    throw new Error("Number not finite: " + t);
                if (Math.floor(t) !== t)
                    return i.setUint8(n, 203),
                    i.setFloat64(n + 1, t),
                    9;
                if (0 <= t) {
                    if (t < 128)
                        return i.setUint8(n, t),
                        1;
                    if (t < 256)
                        return i.setUint8(n, 204),
                        i.setUint8(n + 1, t),
                        2;
                    if (t < 65536)
                        return i.setUint8(n, 205),
                        i.setUint16(n + 1, t),
                        3;
                    if (t < 4294967296)
                        return i.setUint8(n, 206),
                        i.setUint32(n + 1, t),
                        5;
                    throw new Error("Number too big 0x" + t.toString(16))
                }
                if (-32 <= t)
                    return i.setInt8(n, t),
                    1;
                if (-128 <= t)
                    return i.setUint8(n, 208),
                    i.setInt8(n + 1, t),
                    2;
                if (-32768 <= t)
                    return i.setUint8(n, 209),
                    i.setInt16(n + 1, t),
                    3;
                if (-2147483648 <= t)
                    return i.setUint8(n, 210),
                    i.setInt32(n + 1, t),
                    5;
                throw new Error("Number too small -0x" + (-t).toString(16).substr(1))
            }
            if (null === t)
                return i.setUint8(n, 192),
                1;
            if ("boolean" == r)
                return i.setUint8(n, t ? 195 : 194),
                1;
            if ("object" != r)
                throw new Error("Unknown type " + r);
            var a = 0
              , l = Array.isArray(t);
            if (l)
                s = t.length;
            else {
                var d = Object.keys(t);
                s = d.length
            }
            if (s < 16 ? (i.setUint8(n, s | (l ? 144 : 128)),
            a = 1) : s < 65536 ? (i.setUint8(n, l ? 220 : 222),
            i.setUint16(n + 1, s),
            a = 3) : s < 4294967296 && (i.setUint8(n, l ? 221 : 223),
            i.setUint32(n + 1, s),
            a = 5),
            l)
                for (var c = 0; c < s; c++)
                    a += e(t[c], i, n + a);
            else
                for (c = 0; c < s; c++) {
                    var h = d[c];
                    a += e(h, i, n + a),
                    a += e(t[h], i, n + a)
                }
            return a
        }(e, new DataView(t), 0),
        new Uint8Array(t)
    }
    function a(e, t, i) {
        return t ? new e(t.buffer,t.byteOffset,t.byteLength / (i || 1)) : void 0
    }
    function h(e) {
        return a(DataView, e)
    }
    function l(e) {
        return a(Uint8Array, e)
    }
    function d(e) {
        return a(Int8Array, e)
    }
    function c(e) {
        return a(Int32Array, e, 4)
    }
    function u(e, t) {
        var i = e.length / 2;
        t = t || new Int16Array(i);
        for (var n = 0, r = 0; n < i; ++n,
        r += 2)
            t[n] = e[r] << 8 ^ e[r + 1] << 0;
        return t
    }
    function f(e, t) {
        var i = e.length / 4;
        t = t || new Int32Array(i);
        for (var n = 0, r = 0; n < i; ++n,
        r += 4)
            t[n] = e[r] << 24 ^ e[r + 1] << 16 ^ e[r + 2] << 8 ^ e[r + 3] << 0;
        return t
    }
    function i(e, t) {
        for (var i = e.length, n = h(t = t || new Uint8Array(4 * i)), r = 0; r < i; ++r)
            n.setInt32(4 * r, e[r]);
        return l(t)
    }
    function g(e, t, i) {
        var n = e.length
          , r = 1 / t;
        i = i || new Float32Array(n);
        for (var s = 0; s < n; ++s)
            i[s] = e[s] * r;
        return i
    }
    function r(e, t, i) {
        var n = e.length;
        i = i || new Int32Array(n);
        for (var r = 0; r < n; ++r)
            i[r] = Math.round(e[r] * t);
        return i
    }
    function v(e, t) {
        var i, n;
        if (!t) {
            var r = 0;
            for (i = 0,
            n = e.length; i < n; i += 2)
                r += e[i + 1];
            t = new e.constructor(r)
        }
        var s = 0;
        for (i = 0,
        n = e.length; i < n; i += 2)
            for (var o = e[i], a = e[i + 1], l = 0; l < a; ++l)
                t[s] = o,
                ++s;
        return t
    }
    function n(e) {
        if (0 === e.length)
            return new Int32Array;
        var t, i, n = 2;
        for (t = 1,
        i = e.length; t < i; ++t)
            e[t - 1] !== e[t] && (n += 2);
        var r = new Int32Array(n)
          , s = 0
          , o = 1;
        for (t = 1,
        i = e.length; t < i; ++t)
            e[t - 1] !== e[t] ? (r[s] = e[t - 1],
            r[s + 1] = o,
            o = 1,
            s += 2) : ++o;
        return r[s] = e[e.length - 1],
        r[s + 1] = o,
        r
    }
    function b(e, t) {
        var i = e.length;
        t = t || new e.constructor(i),
        i && (t[0] = e[0]);
        for (var n = 1; n < i; ++n)
            t[n] = e[n] + t[n - 1];
        return t
    }
    function s(e, t) {
        var i = e.length;
        (t = t || new e.constructor(i))[0] = e[0];
        for (var n = 1; n < i; ++n)
            t[n] = e[n] - e[n - 1];
        return t
    }
    function y(e, t) {
        var i, n, r = e instanceof Int8Array ? 127 : 32767, s = -r - 1, o = e.length;
        if (!t) {
            var a = 0;
            for (i = 0; i < o; ++i)
                e[i] < r && e[i] > s && ++a;
            t = new Int32Array(a)
        }
        for (n = i = 0; i < o; ) {
            for (var l = 0; e[i] === r || e[i] === s; )
                l += e[i],
                ++i;
            l += e[i],
            ++i,
            t[n] = l,
            ++n
        }
        return t
    }
    function C(e, t, i) {
        return g(y(e, c(i)), t, i)
    }
    function _(e, t, i) {
        var n, r, s, o = y(e, c(i));
        return r = t,
        s = a(Float32Array, n = o, 4),
        g(b(n, c(s)), r, s)
    }
    function o(e, t, i) {
        return function(e, t) {
            var i, n = t ? 127 : 32767, r = -n - 1, s = e.length, o = 0;
            for (i = 0; i < s; ++i) {
                0 === (d = e[i]) ? ++o : 0 < d ? (o += Math.ceil(d / n),
                d % n == 0 && (o += 1)) : (o += Math.ceil(d / r),
                d % r == 0 && (o += 1))
            }
            var a = new (t ? Int8Array : Int16Array)(o)
              , l = 0;
            for (i = 0; i < s; ++i) {
                var d;
                if (0 <= (d = e[i]))
                    for (; n <= d; )
                        a[l] = n,
                        ++l,
                        d -= n;
                else
                    for (; d <= r; )
                        a[l] = r,
                        ++l,
                        d -= r;
                a[l] = d,
                ++l
            }
            return a
        }(s(r(e, t), n), i);
        var n
    }
    function S(e, t, i, n) {
        var r = new ArrayBuffer(12 + n.byteLength)
          , s = new Uint8Array(r)
          , o = new DataView(r);
        return o.setInt32(0, e),
        o.setInt32(4, t),
        i && s.set(i, 8),
        s.set(n, 12),
        s
    }
    function w(e) {
        return S(2, e.length, void 0, l(e))
    }
    function A(e) {
        return S(4, e.length, void 0, i(e))
    }
    function x(e, t) {
        return S(5, e.length / t, i([t]), l(e))
    }
    function k(e) {
        return S(6, e.length, void 0, i(n(e)))
    }
    function D(e) {
        return S(8, e.length, void 0, i(n(s(e))))
    }
    function O(e, t) {
        return S(9, e.length, i([t]), i(n(r(e, t))))
    }
    function R(e, t) {
        return S(10, e.length, i([t]), function(e, t) {
            for (var i = e.length, n = h(t = t || new Uint8Array(2 * i)), r = 0; r < i; ++r)
                n.setInt16(2 * r, e[r]);
            return l(t)
        }(o(e, t)))
    }
    function T(t) {
        var i = {};
        return P.forEach(function(e) {
            void 0 !== t[e] && (i[e] = t[e])
        }),
        t.bondAtomList && (i.bondAtomList = A(t.bondAtomList)),
        t.bondOrderList && (i.bondOrderList = w(t.bondOrderList)),
        i.xCoordList = R(t.xCoordList, 1e3),
        i.yCoordList = R(t.yCoordList, 1e3),
        i.zCoordList = R(t.zCoordList, 1e3),
        t.bFactorList && (i.bFactorList = R(t.bFactorList, 100)),
        t.atomIdList && (i.atomIdList = D(t.atomIdList)),
        t.altLocList && (i.altLocList = k(t.altLocList)),
        t.occupancyList && (i.occupancyList = O(t.occupancyList, 100)),
        i.groupIdList = D(t.groupIdList),
        i.groupTypeList = A(t.groupTypeList),
        t.secStructList && (i.secStructList = w(t.secStructList)),
        t.insCodeList && (i.insCodeList = k(t.insCodeList)),
        t.sequenceIndexList && (i.sequenceIndexList = D(t.sequenceIndexList)),
        i.chainIdList = x(t.chainIdList, 4),
        t.chainNameList && (i.chainNameList = x(t.chainNameList, 4)),
        i
    }
    function E(r) {
        function n(e) {
            for (var t = {}, i = 0; i < e; i++) {
                t[l()] = l()
            }
            return t
        }
        function s(e) {
            var t = r.subarray(d, d + e);
            return d += e,
            t
        }
        function o(e) {
            var t = r.subarray(d, d + e);
            d += e;
            if (65535 < e) {
                for (var i = [], n = 0; n < t.length; n += 65535)
                    i.push(String.fromCharCode.apply(null, t.subarray(n, n + 65535)));
                return i.join("")
            }
            return String.fromCharCode.apply(null, t)
        }
        function a(e) {
            for (var t = new Array(e), i = 0; i < e; i++)
                t[i] = l();
            return t
        }
        function l() {
            var e, t, i = r[d];
            if (0 == (128 & i))
                return d++,
                i;
            if (128 == (240 & i))
                return d++,
                n(t = 15 & i);
            if (144 == (240 & i))
                return d++,
                a(t = 15 & i);
            if (160 == (224 & i))
                return d++,
                o(t = 31 & i);
            if (224 == (224 & i))
                return e = c.getInt8(d),
                d++,
                e;
            switch (i) {
            case 192:
                return d++,
                null;
            case 194:
                return d++,
                !1;
            case 195:
                return d++,
                !0;
            case 196:
                return t = c.getUint8(d + 1),
                d += 2,
                s(t);
            case 197:
                return t = c.getUint16(d + 1),
                d += 3,
                s(t);
            case 198:
                return t = c.getUint32(d + 1),
                d += 5,
                s(t);
            case 202:
                return e = c.getFloat32(d + 1),
                d += 5,
                e;
            case 203:
                return e = c.getFloat64(d + 1),
                d += 9,
                e;
            case 204:
                return e = r[d + 1],
                d += 2,
                e;
            case 205:
                return e = c.getUint16(d + 1),
                d += 3,
                e;
            case 206:
                return e = c.getUint32(d + 1),
                d += 5,
                e;
            case 208:
                return e = c.getInt8(d + 1),
                d += 2,
                e;
            case 209:
                return e = c.getInt16(d + 1),
                d += 3,
                e;
            case 210:
                return e = c.getInt32(d + 1),
                d += 5,
                e;
            case 217:
                return t = c.getUint8(d + 1),
                d += 2,
                o(t);
            case 218:
                return t = c.getUint16(d + 1),
                d += 3,
                o(t);
            case 219:
                return t = c.getUint32(d + 1),
                d += 5,
                o(t);
            case 220:
                return t = c.getUint16(d + 1),
                d += 3,
                a(t);
            case 221:
                return t = c.getUint32(d + 1),
                d += 5,
                a(t);
            case 222:
                return t = c.getUint16(d + 1),
                d += 3,
                n(t);
            case 223:
                return t = c.getUint32(d + 1),
                d += 5,
                n(t)
            }
            throw new Error("Unknown type 0x" + i.toString(16))
        }
        var d = 0
          , c = new DataView(r.buffer);
        return l()
    }
    function I(e, t, i, n) {
        switch (e) {
        case 1:
            return function(e, t) {
                for (var i = e.length, n = h(t = t || new Float32Array(i / 4)), r = h(e), s = 0, o = 0, a = i / 4; s < a; ++s,
                o += 4)
                    n.setFloat32(o, r.getFloat32(o), !0);
                return t
            }(t);
        case 2:
            return d(t);
        case 3:
            return u(t);
        case 4:
            return f(t);
        case 5:
            return l(t);
        case 6:
            return v(f(t), new Uint8Array(i));
        case 7:
            return v(f(t));
        case 8:
            return b(v(f(t)), a);
        case 9:
            return r = f(t),
            s = f(n)[0],
            g(v(r, c(o)), s, o);
        case 10:
            return _(u(t), f(n)[0]);
        case 11:
            return g(u(t), f(n)[0]);
        case 12:
            return C(u(t), f(n)[0]);
        case 13:
            return C(d(t), f(n)[0]);
        case 14:
            return y(u(t));
        case 15:
            return y(d(t))
        }
        var r, s, o, a
    }
    function H(l, e) {
        var d = (e = e || {}).ignoreFields
          , c = {};
        return F.forEach(function(e) {
            var t, i, n, r, s, o = !!d && -1 !== d.indexOf(e), a = l[e];
            o || void 0 === a || (a instanceof Uint8Array ? c[e] = I.apply(null, (i = h(t = a),
            n = i.getInt32(0),
            r = i.getInt32(4),
            s = t.subarray(8, 12),
            [n, t = t.subarray(12), r, s])) : c[e] = a)
        }),
        c
    }
    function W(e) {
        return String.fromCharCode.apply(null, e).replace(/\0/g, "")
    }
    function L(e, t) {
        return e instanceof ArrayBuffer && (e = new Uint8Array(e)),
        H(e instanceof Uint8Array ? E(e) : e, t)
    }
    function $(e, t, i, n) {
        var r = new XMLHttpRequest;
        r.addEventListener("load", function() {
            try {
                var e = L(r.response);
                i(e)
            } catch (e) {
                n(e)
            }
        }, !0),
        r.addEventListener("error", n, !0),
        r.responseType = "arraybuffer",
        r.open("GET", t + e.toUpperCase()),
        r.send()
    }
    var P = ["mmtfVersion", "mmtfProducer", "unitCell", "spaceGroup", "structureId", "title", "depositionDate", "releaseDate", "experimentalMethods", "resolution", "rFree", "rWork", "bioAssemblyList", "ncsOperatorList", "entityList", "groupList", "numBonds", "numAtoms", "numGroups", "numChains", "numModels", "groupsPerChain", "chainsPerModel"]
      , F = P.concat(["xCoordList", "yCoordList", "zCoordList", "groupIdList", "groupTypeList", "chainIdList", "bFactorList", "atomIdList", "altLocList", "occupancyList", "secStructList", "insCodeList", "sequenceIndexList", "chainNameList", "bondAtomList", "bondOrderList"])
      , M = "//mmtf.rcsb.org/v1.0/"
      , N = M + "full/"
      , z = M + "reduced/";
    return e.encode = function(e) {
        return t(T(e))
    }
    ,
    e.decode = L,
    e.traverse = function(e, t, i) {
        var n, r, s, o, a, l, d = (i = i || {}).firstModelOnly, c = t.onModel, h = t.onChain, p = t.onGroup, m = t.onAtom, u = t.onBond, f = 0, g = 0, v = 0, b = 0, y = 0, C = -1, _ = e.chainNameList, S = e.secStructList, w = e.insCodeList, A = e.sequenceIndexList, x = e.atomIdList, k = e.bFactorList, D = e.altLocList, O = e.occupancyList, R = e.bondAtomList, T = e.bondOrderList;
        for (n = 0,
        r = e.chainsPerModel.length; n < r && !(d && 0 < f); ++n) {
            var E = e.chainsPerModel[f];
            for (c && c({
                chainCount: E,
                modelIndex: f
            }),
            s = 0; s < E; ++s) {
                var I = e.groupsPerChain[g];
                if (h) {
                    var H = W(e.chainIdList.subarray(4 * g, 4 * g + 4))
                      , L = null;
                    _ && (L = W(_.subarray(4 * g, 4 * g + 4))),
                    h({
                        groupCount: I,
                        chainIndex: g,
                        modelIndex: f,
                        chainId: H,
                        chainName: L
                    })
                }
                for (o = 0; o < I; ++o) {
                    var $ = e.groupList[e.groupTypeList[v]]
                      , P = $.atomNameList.length;
                    if (p) {
                        var F = null;
                        S && (F = S[v]);
                        var M = null;
                        e.insCodeList && (M = String.fromCharCode(w[v]));
                        var N = null;
                        A && (N = A[v]),
                        p({
                            atomCount: P,
                            groupIndex: v,
                            chainIndex: g,
                            modelIndex: f,
                            groupId: e.groupIdList[v],
                            groupType: e.groupTypeList[v],
                            groupName: $.groupName,
                            singleLetterCode: $.singleLetterCode,
                            chemCompType: $.chemCompType,
                            secStruct: F,
                            insCode: M,
                            sequenceIndex: N
                        })
                    }
                    for (a = 0; a < P; ++a) {
                        if (m) {
                            var z = null;
                            x && (z = x[b]);
                            var q = null;
                            k && (q = k[b]);
                            var j = null;
                            D && (j = String.fromCharCode(D[b]));
                            var U = null;
                            O && (U = O[b]),
                            m({
                                atomIndex: b,
                                groupIndex: v,
                                chainIndex: g,
                                modelIndex: f,
                                atomId: z,
                                element: $.elementList[a],
                                atomName: $.atomNameList[a],
                                formalCharge: $.formalChargeList[a],
                                xCoord: e.xCoordList[b],
                                yCoord: e.yCoordList[b],
                                zCoord: e.zCoordList[b],
                                bFactor: q,
                                altLoc: j,
                                occupancy: U
                            })
                        }
                        b += 1
                    }
                    if (u) {
                        var B = $.bondAtomList;
                        for (a = 0,
                        l = $.bondOrderList.length; a < l; ++a)
                            u({
                                atomIndex1: b - P + B[2 * a],
                                atomIndex2: b - P + B[2 * a + 1],
                                bondOrder: $.bondOrderList[a]
                            })
                    }
                    v += 1
                }
                g += 1
            }
            if (y = C + 1,
            C = b - 1,
            u && R)
                for (a = 0,
                l = R.length; a < l; a += 2) {
                    var G = R[a]
                      , V = R[a + 1];
                    (y <= G && G <= C || y <= V && V <= C) && u({
                        atomIndex1: G,
                        atomIndex2: V,
                        bondOrder: T ? T[a / 2] : null
                    })
                }
            f += 1
        }
    }
    ,
    e.fetch = function(e, t, i) {
        $(e, N, t, i)
    }
    ,
    e.fetchReduced = function(e, t, i) {
        $(e, z, t, i)
    }
    ,
    e.version = "v1.0.1",
    e.fetchUrl = N,
    e.fetchReducedUrl = z,
    e.encodeMsgpack = t,
    e.encodeMmtf = T,
    e.decodeMsgpack = E,
    e.decodeMmtf = H,
    e
}
MMTF = initIcn3dpyMMTF(MMTF);
var $NGL_shaderTextHash = {};
if ($NGL_shaderTextHash["SphereImpostor.frag"] = ["#define STANDARD", "#define IMPOSTOR", "", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float roughness;", "uniform float metalness;", "uniform float opacity;", "uniform float nearClip;", "uniform mat4 projectionMatrix;", "uniform float ortho;", "", "varying float vRadius;", "varying float vRadiusSq;", "varying vec3 vPoint;", "varying vec3 vPointViewPosition;", "", "#ifdef PICKING", "    uniform float objectId;", "    varying vec3 vPickingColor;", "#else", "    #include common", "    #include color_pars_fragment", "    #include fog_pars_fragment", "    #include bsdfs", "    #include lights_pars_begin", "    #include lights_physical_pars_fragment", "#endif", "", "bool flag2 = false;", "bool interior = false;", "vec3 cameraPos;", "vec3 cameraNormal;", "", "// Calculate depth based on the given camera position.", "float calcDepth( in vec3 cameraPos ){", "    vec2 clipZW = cameraPos.z * projectionMatrix[2].zw + projectionMatrix[3].zw;", "    return 0.5 + 0.5 * clipZW.x / clipZW.y;", "}", "", "float calcClip( vec3 cameraPos ){", "    return dot( vec4( cameraPos, 1.0 ), vec4( 0.0, 0.0, 1.0, nearClip - 0.5 ) );", "}", "", "bool Impostor( out vec3 cameraPos, out vec3 cameraNormal ){", "", "    vec3 cameraSpherePos = -vPointViewPosition;", "    cameraSpherePos.z += vRadius;", "", "    vec3 rayOrigin = mix( vec3( 0.0, 0.0, 0.0 ), vPoint, ortho );", "    vec3 rayDirection = mix( normalize( vPoint ), vec3( 0.0, 0.0, 1.0 ), ortho );", "    vec3 cameraSphereDir = mix( cameraSpherePos, rayOrigin - cameraSpherePos, ortho );", "", "    float B = dot( rayDirection, cameraSphereDir );", "    float det = B * B + vRadiusSq - dot( cameraSphereDir, cameraSphereDir );", "", "    if( det < 0.0 ){", "        discard;", "        return false;", "    }", "        float sqrtDet = sqrt( det );", "        float posT = mix( B + sqrtDet, B + sqrtDet, ortho );", "        float negT = mix( B - sqrtDet, sqrtDet - B, ortho );", "", "        cameraPos = rayDirection * negT + rayOrigin;", "", "        #ifdef NEAR_CLIP", "if( calcDepth( cameraPos ) <= 0.0 ){", "    cameraPos = rayDirection * posT + rayOrigin;", "    interior = true;", "    return false;", "}else if( calcClip( cameraPos ) > 0.0 ){", "    cameraPos = rayDirection * posT + rayOrigin;", "    interior = true;", "    flag2 = true;", "    return false;", "}else{", "    cameraNormal = normalize( cameraPos - cameraSpherePos );", "}", "        #else", "if( calcDepth( cameraPos ) <= 0.0 ){", "    cameraPos = rayDirection * posT + rayOrigin;", "    interior = true;", "    return false;", "}else{", "    cameraNormal = normalize( cameraPos - cameraSpherePos );", "}", "        #endif", "", "        cameraNormal = normalize( cameraPos - cameraSpherePos );", "        cameraNormal *= float(!interior) * 2.0 - 1.0;", "         return !interior;", "", "}", "", "void main(void){", "", "    bool flag = Impostor( cameraPos, cameraNormal );", "", "    #ifdef NEAR_CLIP", "        if( calcClip( cameraPos ) > 0.0 )", "            discard;", "    #endif", "", "    // FIXME not compatible with custom clipping plane", "    //Set the depth based on the new cameraPos.", "    gl_FragDepthEXT = calcDepth( cameraPos );", "    if( !flag ){", "", "        // clamp to near clipping plane and add a tiny value to", "        // make spheres with a greater radius occlude smaller ones", "        #ifdef NEAR_CLIP", "if( flag2 ){", "    gl_FragDepthEXT = max( 0.0, calcDepth( vec3( - ( nearClip - 0.5 ) ) ) + ( 0.0000001 / vRadius ) );", "}else if( gl_FragDepthEXT >= 0.0 ){", "    gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "}", "        #else", "if( gl_FragDepthEXT >= 0.0 ){", "    gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "}", "        #endif", "", "    }", "", "    // bugfix (mac only?)", "    if (gl_FragDepthEXT < 0.0)", "        discard;", "    if (gl_FragDepthEXT > 1.0)", "        discard;", "", "    #ifdef PICKING", "", "        gl_FragColor = vec4( vPickingColor, objectId );", "", "    #else", "", "        vec3 vNormal = cameraNormal;", "        vec3 vViewPosition = -cameraPos;", "", "        vec4 diffuseColor = vec4( diffuse, opacity );", "        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "        vec3 totalEmissiveLight = emissive;", "", "        #include color_fragment", "        #include roughnessmap_fragment", "        #include metalnessmap_fragment", "", "        // don't use include normal_fragment", "        vec3 normal = normalize( vNormal );", "", "        #include lights_physical_fragment", "        //include lights_template", "        #include lights_fragment_begin", "        #include lights_fragment_end", "", "        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", "", "        gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "        //gl_FragColor = vec4( reflectedLight.directSpecular, diffuseColor.a );", "", "        #include premultiplied_alpha_fragment", "        #include tonemapping_fragment", "        #include encodings_fragment", "        //include fog_fragment", "        #ifdef USE_FOG", "            #ifdef USE_LOGDEPTHBUF_EXT", "                float depth = gl_FragDepthEXT / gl_FragCoord.w;", "            #else", "                float depth = gl_FragCoord.z / gl_FragCoord.w;", "            #endif", "            #ifdef FOG_EXP2", "                float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );", "            #else", "                float fogFactor = smoothstep( fogNear, fogFar, depth );", "            #endif", "            gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );", "        #endif", "", "    #endif", "", "}"].join("\n"),
$NGL_shaderTextHash["SphereImpostor.vert"] = ["uniform mat4 projectionMatrixInverse;", "uniform float nearClip;", "", "varying float vRadius;", "varying float vRadiusSq;", "varying vec3 vPoint;", "varying vec3 vPointViewPosition;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "attribute vec2 mapping;", "//attribute vec3 position;", "attribute float radius;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    #include color_pars_vertex", "#endif", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "const mat4 D = mat4(", "    1.0, 0.0, 0.0, 0.0,", "    0.0, 1.0, 0.0, 0.0,", "    0.0, 0.0, 1.0, 0.0,", "    0.0, 0.0, 0.0, -1.0", ");", "", "mat4 transpose( in mat4 inMatrix ) {", "    vec4 i0 = inMatrix[0];", "    vec4 i1 = inMatrix[1];", "    vec4 i2 = inMatrix[2];", "    vec4 i3 = inMatrix[3];", "", "    mat4 outMatrix = mat4(", "        vec4(i0.x, i1.x, i2.x, i3.x),", "        vec4(i0.y, i1.y, i2.y, i3.y),", "        vec4(i0.z, i1.z, i2.z, i3.z),", "        vec4(i0.w, i1.w, i2.w, i3.w)", "    );", "    return outMatrix;", "}", "", "//------------------------------------------------------------------------------", "// Compute point size and center using the technique described in:", "// 'GPU-Based Ray-Casting of Quadratic Surfaces'", "// by Christian Sigg, Tim Weyrich, Mario Botsch, Markus Gross.", "//", "// Code based on", "/*=========================================================================", "", " Program:   Visualization Toolkit", " Module:    Quadrics_fs.glsl and Quadrics_vs.glsl", "", " Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen", " All rights reserved.", " See Copyright.txt or http://www.kitware.com/Copyright.htm for details.", "", " This software is distributed WITHOUT ANY WARRANTY; without even", " the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR", " PURPOSE.  See the above copyright notice for more information.", "", " =========================================================================*/", "", "// .NAME Quadrics_fs.glsl and Quadrics_vs.glsl", "// .SECTION Thanks", "// <verbatim>", "//", "//  This file is part of the PointSprites plugin developed and contributed by", "//", "//  Copyright (c) CSCS - Swiss National Supercomputing Centre", "//                EDF - Electricite de France", "//", "//  John Biddiscombe, Ugo Varetto (CSCS)", "//  Stephane Ploix (EDF)", "//", "// </verbatim>", "//", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - adapted to work with quads", "void ComputePointSizeAndPositionInClipCoordSphere(){", "", "    vec2 xbc;", "    vec2 ybc;", "", "    mat4 T = mat4(", "        radius, 0.0, 0.0, 0.0,", "        0.0, radius, 0.0, 0.0,", "        0.0, 0.0, radius, 0.0,", "        position.x, position.y, position.z, 1.0", "    );", "", "    mat4 R = transpose( projectionMatrix * modelViewMatrix * T );", "    float A = dot( R[ 3 ], D * R[ 3 ] );", "    float B = -2.0 * dot( R[ 0 ], D * R[ 3 ] );", "    float C = dot( R[ 0 ], D * R[ 0 ] );", "    xbc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    xbc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sx = abs( xbc[ 0 ] - xbc[ 1 ] ) * 0.5;", "", "    A = dot( R[ 3 ], D * R[ 3 ] );", "    B = -2.0 * dot( R[ 1 ], D * R[ 3 ] );", "    C = dot( R[ 1 ], D * R[ 1 ] );", "    ybc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    ybc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sy = abs( ybc[ 0 ] - ybc[ 1 ]  ) * 0.5;", "", "    gl_Position.xy = vec2( 0.5 * ( xbc.x + xbc.y ), 0.5 * ( ybc.x + ybc.y ) );", "    gl_Position.xy -= mapping * vec2( sx, sy );", "    gl_Position.xy *= gl_Position.w;", "", "}", "", "void main(void){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        #include color_vertex", "    #endif", "", "    vRadius = radius * matrixScale( modelViewMatrix );", "", "    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "    // avoid clipping, added again in fragment shader", "    mvPosition.z -= vRadius;", "", "    gl_Position = projectionMatrix * vec4( mvPosition.xyz, 1.0 );", "    ComputePointSizeAndPositionInClipCoordSphere();", "", "", "    vRadiusSq = vRadius * vRadius;", "    vec4 vPoint4 = projectionMatrixInverse * gl_Position;", "    vPoint = vPoint4.xyz / vPoint4.w;", "    vPointViewPosition = -mvPosition.xyz / mvPosition.w;", "", "}"].join("\n"),
$NGL_shaderTextHash["CylinderImpostor.frag"] = ["#define STANDARD", "#define IMPOSTOR", "", "// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.", "//", "//  All Rights Reserved", "//", "//  Permission to use, copy, modify, distribute, and distribute modified", "//  versions of this software and its built-in documentation for any", "//  purpose and without fee is hereby granted, provided that the above", "//  copyright notice appears in all copies and that both the copyright", "//  notice and this permission notice appear in supporting documentation,", "//  and that the name of Schrodinger, LLC not be used in advertising or", "//  publicity pertaining to distribution of the software without specific,", "//  written prior permission.", "//", "//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,", "//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN", "//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR", "//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS", "//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE", "//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE", "//  USE OR PERFORMANCE OF THIS SOFTWARE.", "", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - dual color", "// - pk color", "// - custom clipping", "// - three.js lighting", "", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float roughness;", "uniform float metalness;", "uniform float opacity;", "uniform float nearClip;", "uniform mat4 projectionMatrix;", "uniform float ortho;", "", "varying vec3 axis;", "varying vec4 base_radius;", "varying vec4 end_b;", "varying vec3 U;", "varying vec3 V;", "varying vec4 w;", "", "#ifdef PICKING", "    uniform float objectId;", "    varying vec3 vPickingColor;", "#else", "    varying vec3 vColor1;", "    varying vec3 vColor2;", "    #include common", "    #include fog_pars_fragment", "    #include bsdfs", "    #include lights_pars_begin", "    #include lights_physical_pars_fragment", "#endif", "", "bool interior = false;", "", "float distSq3( vec3 v3a, vec3 v3b ){", "    return (", "        ( v3a.x - v3b.x ) * ( v3a.x - v3b.x ) +", "        ( v3a.y - v3b.y ) * ( v3a.y - v3b.y ) +", "        ( v3a.z - v3b.z ) * ( v3a.z - v3b.z )", "    );", "}", "", "// Calculate depth based on the given camera position.", "float calcDepth( in vec3 cameraPos ){", "    vec2 clipZW = cameraPos.z * projectionMatrix[2].zw + projectionMatrix[3].zw;", "    return 0.5 + 0.5 * clipZW.x / clipZW.y;", "}", "", "float calcClip( vec3 cameraPos ){", "    return dot( vec4( cameraPos, 1.0 ), vec4( 0.0, 0.0, 1.0, nearClip - 0.5 ) );", "}", "", "void main(){", "", "    vec3 point = w.xyz / w.w;", "", "    // unpacking", "    vec3 base = base_radius.xyz;", "    float vRadius = base_radius.w;", "    vec3 end = end_b.xyz;", "    float b = end_b.w;", "", "    vec3 end_cyl = end;", "    vec3 surface_point = point;", "", "    vec3 ray_target = surface_point;", "    vec3 ray_origin = vec3(0.0);", "    vec3 ray_direction = mix(normalize(ray_origin - ray_target), vec3(0.0, 0.0, 1.0), ortho);", "    mat3 basis = mat3( U, V, axis );", "", "    vec3 diff = ray_target - 0.5 * (base + end_cyl);", "    vec3 P = diff * basis;", "", "    // angle (cos) between cylinder cylinder_axis and ray direction", "    float dz = dot( axis, ray_direction );", "", "    float radius2 = vRadius*vRadius;", "", "    // calculate distance to the cylinder from ray origin", "    vec3 D = vec3(dot(U, ray_direction),", "                dot(V, ray_direction),", "                dz);", "    float a0 = P.x*P.x + P.y*P.y - radius2;", "    float a1 = P.x*D.x + P.y*D.y;", "    float a2 = D.x*D.x + D.y*D.y;", "", "    // calculate a dicriminant of the above quadratic equation", "    float d = a1*a1 - a0*a2;", "    if (d < 0.0)", "        // outside of the cylinder", "        discard;", "", "    float dist = (-a1 + sqrt(d)) / a2;", "", "    // point of intersection on cylinder surface", "    vec3 new_point = ray_target + dist * ray_direction;", "", "    vec3 tmp_point = new_point - base;", "    vec3 _normal = normalize( tmp_point - axis * dot(tmp_point, axis) );", "", "    ray_origin = mix( ray_origin, surface_point, ortho );", "", "    // test caps", "    float front_cap_test = dot( tmp_point, axis );", "    float end_cap_test = dot((new_point - end_cyl), axis);", "", "    // to calculate caps, simply check the angle between", "    // the point of intersection - cylinder end vector", "    // and a cap plane normal (which is the cylinder cylinder_axis)", "    // if the angle < 0, the point is outside of cylinder", "    // test front cap", "", "    #ifndef CAP", "        vec3 new_point2 = ray_target + ( (-a1 - sqrt(d)) / a2 ) * ray_direction;", "        vec3 tmp_point2 = new_point2 - base;", "    #endif", "", "    // flat", "    if (front_cap_test < 0.0)", "    {", "        // ray-plane intersection", "        float dNV = dot(-axis, ray_direction);", "        if (dNV < 0.0)", "            discard;", "        float near = dot(-axis, (base)) / dNV;", "        vec3 front_point = ray_direction * near + ray_origin;", "        // within the cap radius?", "        if (dot(front_point - base, front_point-base) > radius2)", "            discard;", "", "        #ifdef CAP", "            new_point = front_point;", "            _normal = axis;", "        #else", "            new_point = ray_target + ( (-a1 - sqrt(d)) / a2 ) * ray_direction;", "            dNV = dot(-axis, ray_direction);", "            near = dot(axis, end_cyl) / dNV;", "            new_point2 = ray_direction * near + ray_origin;", "            if (dot(new_point2 - end_cyl, new_point2-base) < radius2)", "                discard;", "            interior = true;", "        #endif", "    }", "", "    // test end cap", "", "", "    // flat", "    if( end_cap_test > 0.0 )", "    {", "        // ray-plane intersection", "        float dNV = dot(axis, ray_direction);", "        if (dNV < 0.0)", "            discard;", "        float near = dot(axis, end_cyl) / dNV;", "        vec3 end_point = ray_direction * near + ray_origin;", "        // within the cap radius?", "        if( dot(end_point - end_cyl, end_point-base) > radius2 )", "            discard;", "", "        #ifdef CAP", "            new_point = end_point;", "            _normal = axis;", "        #else", "            new_point = ray_target + ( (-a1 - sqrt(d)) / a2 ) * ray_direction;", "            dNV = dot(-axis, ray_direction);", "            near = dot(-axis, (base)) / dNV;", "            new_point2 = ray_direction * near + ray_origin;", "            if (dot(new_point2 - base, new_point2-base) < radius2)", "                discard;", "            interior = true;", "        #endif", "    }", "", "    gl_FragDepthEXT = calcDepth( new_point );", "", "    #ifdef NEAR_CLIP", "        if( calcClip( new_point ) > 0.0 ){", "            dist = (-a1 - sqrt(d)) / a2;", "            new_point = ray_target + dist * ray_direction;", "            if( calcClip( new_point ) > 0.0 )", "                discard;", "            interior = true;", "            gl_FragDepthEXT = calcDepth( new_point );", "            if( gl_FragDepthEXT >= 0.0 ){", "                gl_FragDepthEXT = max( 0.0, calcDepth( vec3( - ( nearClip - 0.5 ) ) ) + ( 0.0000001 / vRadius ) );", "            }", "        }else if( gl_FragDepthEXT <= 0.0 ){", "            dist = (-a1 - sqrt(d)) / a2;", "            new_point = ray_target + dist * ray_direction;", "            interior = true;", "            gl_FragDepthEXT = calcDepth( new_point );", "            if( gl_FragDepthEXT >= 0.0 ){", "                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "            }", "        }", "    #else", "        if( gl_FragDepthEXT <= 0.0 ){", "            dist = (-a1 - sqrt(d)) / a2;", "            new_point = ray_target + dist * ray_direction;", "            interior = true;", "            gl_FragDepthEXT = calcDepth( new_point );", "            if( gl_FragDepthEXT >= 0.0 ){", "                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "            }", "        }", "    #endif", "", "    // this is a workaround necessary for Mac", "    // otherwise the modified fragment won't clip properly", "    if (gl_FragDepthEXT < 0.0)", "        discard;", "    if (gl_FragDepthEXT > 1.0)", "        discard;", "", "    #ifdef PICKING", "", "        gl_FragColor = vec4( vPickingColor, objectId );", "", "    #else", "", "        vec3 vViewPosition = -new_point;", "        vec3 vNormal = _normal;", "        vec3 vColor;", "", "        if( distSq3( new_point, end_cyl ) < distSq3( new_point, base ) ){", "            if( b < 0.0 ){", "                vColor = vColor1;", "            }else{", "                vColor = vColor2;", "            }", "        }else{", "            if( b > 0.0 ){", "                vColor = vColor1;", "            }else{", "                vColor = vColor2;", "            }", "        }", "", "        vec4 diffuseColor = vec4( diffuse, opacity );", "        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "        vec3 totalEmissiveLight = emissive;", "", "        #include color_fragment", "     //ifdef USE_COLOR", "     //diffuseColor.r *= vColor[0];", "     //diffuseColor.g *= vColor[1];", "     //diffuseColor.b *= vColor[2];", "     //endif", "        #include roughnessmap_fragment", "        #include metalnessmap_fragment", "", "        // don't use include normal_fragment", "        vec3 normal = normalize( vNormal );", "", "        #include lights_physical_fragment", "        //include lights_template", "        #include lights_fragment_begin", "        #include lights_fragment_end", "", "        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", "", "        gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "        //gl_FragColor = vec4( reflectedLight.directSpecular, diffuseColor.a );", "", "        #include premultiplied_alpha_fragment", "        #include tonemapping_fragment", "        #include encodings_fragment", "        //include fog_fragment", "        #ifdef USE_FOG", "            #ifdef USE_LOGDEPTHBUF_EXT", "                float depth = gl_FragDepthEXT / gl_FragCoord.w;", "            #else", "                float depth = gl_FragCoord.z / gl_FragCoord.w;", "            #endif", "            #ifdef FOG_EXP2", "                float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );", "            #else", "                float fogFactor = smoothstep( fogNear, fogFar, depth );", "            #endif", "            gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );", "        #endif", "", "    #endif", "", "}"].join("\n"),
$NGL_shaderTextHash["CylinderImpostor.vert"] = ["// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.", "//", "//  All Rights Reserved", "//", "//  Permission to use, copy, modify, distribute, and distribute modified", "//  versions of this software and its built-in documentation for any", "//  purpose and without fee is hereby granted, provided that the above", "//  copyright notice appears in all copies and that both the copyright", "//  notice and this permission notice appear in supporting documentation,", "//  and that the name of Schrodinger, LLC not be used in advertising or", "//  publicity pertaining to distribution of the software without specific,", "//  written prior permission.", "//", "//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,", "//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN", "//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR", "//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS", "//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE", "//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE", "//  USE OR PERFORMANCE OF THIS SOFTWARE.", "", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - dual color", "// - pk color", "// - shift", "", "attribute vec3 mapping;", "attribute vec3 position1;", "attribute vec3 position2;", "attribute float radius;", "", "varying vec3 axis;", "varying vec4 base_radius;", "varying vec4 end_b;", "varying vec3 U;", "varying vec3 V;", "varying vec4 w;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    //attribute vec3 color;", "    attribute vec3 color2;", "    varying vec3 vColor1;", "    varying vec3 vColor2;", "#endif", "", "uniform mat4 modelViewMatrixInverse;", "uniform float ortho;", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "void main(){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        vColor1 = color;", "        vColor2 = color2;", "    #endif", "", "    // vRadius = radius;", "    base_radius.w = radius * matrixScale( modelViewMatrix );", "", "    //vec3 center = position;", "    vec3 center = ( position2 + position1 ) / 2.0;", "    vec3 dir = normalize( position2 - position1 );", "    float ext = length( position2 - position1 ) / 2.0;", "", "    // using cameraPosition fails on some machines, not sure why", "    // vec3 cam_dir = normalize( cameraPosition - mix( center, vec3( 0.0 ), ortho ) );", "    vec3 cam_dir;", "    if( ortho == 0.0 ){", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 0, 1 ) ).xyz - center;", "    }else{", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 1, 0 ) ).xyz;", "    }", "    cam_dir = normalize( cam_dir );", "", "    vec3 ldir;", "", "    float b = dot( cam_dir, dir );", "    end_b.w = b;", "    // direction vector looks away, so flip", "    if( b < 0.0 )", "        ldir = -ext * dir;", "    // direction vector already looks in my direction", "    else", "        ldir = ext * dir;", "", "    vec3 left = normalize( cross( cam_dir, ldir ) );", "    left = radius * left;", "    vec3 up = radius * normalize( cross( left, ldir ) );", "", "    // transform to modelview coordinates", "    axis = normalize( normalMatrix * ldir );", "    U = normalize( normalMatrix * up );", "    V = normalize( normalMatrix * left );", "", "    vec4 base4 = modelViewMatrix * vec4( center - ldir, 1.0 );", "    base_radius.xyz = base4.xyz / base4.w;", "", "    vec4 top_position = modelViewMatrix * vec4( center + ldir, 1.0 );", "    vec4 end4 = top_position;", "    end_b.xyz = end4.xyz / end4.w;", "", "    w = modelViewMatrix * vec4(", "        center + mapping.x*ldir + mapping.y*left + mapping.z*up, 1.0", "    );", "", "    gl_Position = projectionMatrix * w;", "", "    // avoid clipping (1.0 seems to induce flickering with some drivers)", "    gl_Position.z = 0.99;", "", "}"].join("\n"),
$NGL_shaderTextHash["SphereInstancing.frag"] = $NGL_shaderTextHash["SphereImpostor.frag"],
$NGL_shaderTextHash["SphereInstancing.vert"] = ["uniform mat4 projectionMatrixInverse;", "uniform float nearClip;", "", "varying float vRadius;", "varying float vRadiusSq;", "varying vec3 vPoint;", "varying vec3 vPointViewPosition;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "attribute vec2 mapping;", "//attribute vec3 position;", "attribute float radius;", "attribute vec4 matrix1;", "attribute vec4 matrix2;", "attribute vec4 matrix3;", "attribute vec4 matrix4;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    #include color_pars_vertex", "#endif", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "const mat4 D = mat4(", "    1.0, 0.0, 0.0, 0.0,", "    0.0, 1.0, 0.0, 0.0,", "    0.0, 0.0, 1.0, 0.0,", "    0.0, 0.0, 0.0, -1.0", ");", "", "mat4 transpose( in mat4 inMatrix ) {", "    vec4 i0 = inMatrix[0];", "    vec4 i1 = inMatrix[1];", "    vec4 i2 = inMatrix[2];", "    vec4 i3 = inMatrix[3];", "", "    mat4 outMatrix = mat4(", "        vec4(i0.x, i1.x, i2.x, i3.x),", "        vec4(i0.y, i1.y, i2.y, i3.y),", "        vec4(i0.z, i1.z, i2.z, i3.z),", "        vec4(i0.w, i1.w, i2.w, i3.w)", "    );", "    return outMatrix;", "}", "", "//------------------------------------------------------------------------------", "// Compute point size and center using the technique described in:", "// 'GPU-Based Ray-Casting of Quadratic Surfaces'", "// by Christian Sigg, Tim Weyrich, Mario Botsch, Markus Gross.", "//", "// Code based on", "/*=========================================================================", "", " Program:   Visualization Toolkit", " Module:    Quadrics_fs.glsl and Quadrics_vs.glsl", "", " Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen", " All rights reserved.", " See Copyright.txt or http://www.kitware.com/Copyright.htm for details.", "", " This software is distributed WITHOUT ANY WARRANTY; without even", " the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR", " PURPOSE.  See the above copyright notice for more information.", "", " =========================================================================*/", "", "// .NAME Quadrics_fs.glsl and Quadrics_vs.glsl", "// .SECTION Thanks", "// <verbatim>", "//", "//  This file is part of the PointSprites plugin developed and contributed by", "//", "//  Copyright (c) CSCS - Swiss National Supercomputing Centre", "//                EDF - Electricite de France", "//", "//  John Biddiscombe, Ugo Varetto (CSCS)", "//  Stephane Ploix (EDF)", "//", "// </verbatim>", "//", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - adapted to work with quads", "void ComputePointSizeAndPositionInClipCoordSphere(vec4 updatePosition){", "", "    vec2 xbc;", "    vec2 ybc;", "", "    mat4 T = mat4(", "        radius, 0.0, 0.0, 0.0,", "        0.0, radius, 0.0, 0.0,", "        0.0, 0.0, radius, 0.0,", "        updatePosition.x, updatePosition.y, updatePosition.z, 1.0", "    );", "", "    mat4 R = transpose( projectionMatrix * modelViewMatrix * T );", "    float A = dot( R[ 3 ], D * R[ 3 ] );", "    float B = -2.0 * dot( R[ 0 ], D * R[ 3 ] );", "    float C = dot( R[ 0 ], D * R[ 0 ] );", "    xbc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    xbc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sx = abs( xbc[ 0 ] - xbc[ 1 ] ) * 0.5;", "", "    A = dot( R[ 3 ], D * R[ 3 ] );", "    B = -2.0 * dot( R[ 1 ], D * R[ 3 ] );", "    C = dot( R[ 1 ], D * R[ 1 ] );", "    ybc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    ybc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sy = abs( ybc[ 0 ] - ybc[ 1 ]  ) * 0.5;", "", "    gl_Position.xy = vec2( 0.5 * ( xbc.x + xbc.y ), 0.5 * ( ybc.x + ybc.y ) );", "    gl_Position.xy -= mapping * vec2( sx, sy );", "    gl_Position.xy *= gl_Position.w;", "", "}", "", "  mat4 computeMat(vec4 v1, vec4 v2, vec4 v3, vec4 v4) {", "    return mat4(", "      v1.x, v1.y, v1.z, v1.w,", "      v2.x, v2.y, v2.z, v2.w,", "      v3.x, v3.y, v3.z, v3.w,", "      v4.x, v4.y, v4.z, v4.w", "    );", "  }", "", "void main(void){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        #include color_vertex", "    #endif", "", "    vRadius = radius * matrixScale( modelViewMatrix );", "", "    mat4 matrix = computeMat(matrix1, matrix2, matrix3, matrix4);", "    vec4 updatePosition = matrix * vec4(position, 1.0);", "", "//    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "    vec4 mvPosition = modelViewMatrix * vec4( updatePosition.xyz, 1.0 );", "    // avoid clipping, added again in fragment shader", "    mvPosition.z -= vRadius;", "", "//    gl_Position = projectionMatrix * vec4( mvPosition.xyz, 1.0 );", "    gl_Position = projectionMatrix * vec4( mvPosition.xyz, 1.0 );", "    ComputePointSizeAndPositionInClipCoordSphere(updatePosition);", "", "", "    vRadiusSq = vRadius * vRadius;", "    vec4 vPoint4 = projectionMatrixInverse * gl_Position;", "    vPoint = vPoint4.xyz / vPoint4.w;", "    vPointViewPosition = -mvPosition.xyz / mvPosition.w;", "", "}"].join("\n"),
$NGL_shaderTextHash["CylinderInstancing.frag"] = $NGL_shaderTextHash["CylinderImpostor.frag"],
$NGL_shaderTextHash["CylinderInstancing.vert"] = ["// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.", "//", "//  All Rights Reserved", "//", "//  Permission to use, copy, modify, distribute, and distribute modified", "//  versions of this software and its built-in documentation for any", "//  purpose and without fee is hereby granted, provided that the above", "//  copyright notice appears in all copies and that both the copyright", "//  notice and this permission notice appear in supporting documentation,", "//  and that the name of Schrodinger, LLC not be used in advertising or", "//  publicity pertaining to distribution of the software without specific,", "//  written prior permission.", "//", "//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,", "//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN", "//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR", "//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS", "//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE", "//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE", "//  USE OR PERFORMANCE OF THIS SOFTWARE.", "", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - dual color", "// - pk color", "// - shift", "", "attribute vec3 mapping;", "attribute vec3 position1;", "attribute vec3 position2;", "attribute float radius;", "attribute vec4 matrix1;", "attribute vec4 matrix2;", "attribute vec4 matrix3;", "attribute vec4 matrix4;", "", "varying vec3 axis;", "varying vec4 base_radius;", "varying vec4 end_b;", "varying vec3 U;", "varying vec3 V;", "varying vec4 w;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    //attribute vec3 color;", "    attribute vec3 color2;", "    varying vec3 vColor1;", "    varying vec3 vColor2;", "#endif", "", "uniform mat4 modelViewMatrixInverse;", "uniform float ortho;", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "  mat4 computeMat(vec4 v1, vec4 v2, vec4 v3, vec4 v4) {", "    return mat4(", "      v1.x, v1.y, v1.z, v1.w,", "      v2.x, v2.y, v2.z, v2.w,", "      v3.x, v3.y, v3.z, v3.w,", "      v4.x, v4.y, v4.z, v4.w", "    );", "  }", "", "void main(){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        vColor1 = color;", "        vColor2 = color2;", "    #endif", "", "    // vRadius = radius;", "    base_radius.w = radius * matrixScale( modelViewMatrix );", "", "    //vec3 center = ( position2 + position1 ) / 2.0;", "", "    mat4 matrix = computeMat(matrix1, matrix2, matrix3, matrix4);", "    vec4 updatePosition1 = matrix * vec4(position1, 1.0);", "    vec4 updatePosition2 = matrix * vec4(position2, 1.0);", "    vec3 center = ( updatePosition2.xyz + updatePosition1.xyz ) / 2.0;", "", "    //vec3 dir = normalize( position2 - position1 );", "    vec3 dir = normalize( updatePosition2.xyz - updatePosition1.xyz );", "    float ext = length( position2 - position1 ) / 2.0;", "", "    // using cameraPosition fails on some machines, not sure why", "    // vec3 cam_dir = normalize( cameraPosition - mix( center, vec3( 0.0 ), ortho ) );", "    vec3 cam_dir;", "    if( ortho == 0.0 ){", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 0, 1 ) ).xyz - center;", "    }else{", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 1, 0 ) ).xyz;", "    }", "    cam_dir = normalize( cam_dir );", "", "    vec3 ldir;", "", "    float b = dot( cam_dir, dir );", "    end_b.w = b;", "    // direction vector looks away, so flip", "    if( b < 0.0 )", "        ldir = -ext * dir;", "    // direction vector already looks in my direction", "    else", "        ldir = ext * dir;", "", "    vec3 left = normalize( cross( cam_dir, ldir ) );", "    left = radius * left;", "    vec3 up = radius * normalize( cross( left, ldir ) );", "", "    // transform to modelview coordinates", "    axis = normalize( normalMatrix * ldir );", "    U = normalize( normalMatrix * up );", "    V = normalize( normalMatrix * left );", "", "    vec4 base4 = modelViewMatrix * vec4( center - ldir, 1.0 );", "    base_radius.xyz = base4.xyz / base4.w;", "", "    vec4 top_position = modelViewMatrix * vec4( center + ldir, 1.0 );", "    vec4 end4 = top_position;", "    end_b.xyz = end4.xyz / end4.w;", "", "    w = modelViewMatrix * vec4(", "        center + mapping.x*ldir + mapping.y*left + mapping.z*up, 1.0", "    );", "", "    gl_Position = projectionMatrix * w;", "", "    // avoid clipping (1.0 seems to induce flickering with some drivers)", "    gl_Position.z = 0.99;", "", "}"].join("\n"),
$NGL_shaderTextHash["Instancing.frag"] = ["#define STANDARD", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float roughness;", "uniform float metalness;", "uniform float opacity;", "uniform float nearClip;", "uniform float clipRadius;", "uniform mat4 projectionMatrix;", "uniform float ortho;", "varying float bCylinder;", "", "#if defined( NEAR_CLIP ) || defined( RADIUS_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )", "    varying vec3 vViewPosition;", "#endif", "", "#if defined( RADIUS_CLIP )", "    varying vec3 vClipCenter;", "#endif", "", "#if defined( PICKING )", "    uniform float objectId;", "    varying vec3 vPickingColor;", "#elif defined( NOLIGHT )", "    varying vec3 vColor;", "#else", "    #ifndef FLAT_SHADED", "        varying vec3 vNormal;", "    #endif", "    #include common", "    #include color_pars_fragment", "    #include fog_pars_fragment", "    #include bsdfs", "    #include lights_pars_begin", "    #include lights_physical_pars_fragment", "#endif", "", "void main(){", "    #include nearclip_fragment", "    #include radiusclip_fragment", "", "    #if defined( PICKING )", "", "        gl_FragColor = vec4( vPickingColor, objectId );", "", "    #elif defined( NOLIGHT )", "", "        gl_FragColor = vec4( vColor, opacity );", "", "    #else", "", "        vec4 diffuseColor = vec4( diffuse, opacity );", "        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "        vec3 totalEmissiveLight = emissive;", "", "        #include color_fragment", "        #include roughnessmap_fragment", "        #include metalnessmap_fragment", "        #include normal_flip", "        #include normal_fragment_begin", "", "        //include dull_interior_fragment", "", "        #include lights_physical_fragment", "        //include lights_template", "        #include lights_fragment_begin", "        #include lights_fragment_end", "", "        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", "", "        #include interior_fragment", "", "        gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "", "        #include premultiplied_alpha_fragment", "        #include tonemapping_fragment", "        #include encodings_fragment", "        #include fog_fragment", "", "        #include opaque_back_fragment", "", "    #endif", "", "}"].join("\n"),
$NGL_shaderTextHash["Instancing.vert"] = ["#define STANDARD", "", "uniform mat4 projectionMatrixInverse;", "uniform float nearClip;", "uniform vec3 clipCenter;", "attribute vec4 matrix1;", "attribute vec4 matrix2;", "attribute vec4 matrix3;", "attribute vec4 matrix4;", "attribute float cylinder;", "varying float bCylinder;", "", "#if defined( NEAR_CLIP ) || defined( RADIUS_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )", "    varying vec3 vViewPosition;", "#endif", "", "#if defined( RADIUS_CLIP )", "    varying vec3 vClipCenter;", "#endif", "", "#if defined( PICKING )", "    #include unpack_color", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#elif defined( NOLIGHT )", "    varying vec3 vColor;", "#else", "    #include color_pars_vertex", "    #ifndef FLAT_SHADED", "        varying vec3 vNormal;", "    #endif", "#endif", "", "#include common", "", "  mat4 computeMat(vec4 v1, vec4 v2, vec4 v3, vec4 v4) {", "    return mat4(", "      v1.x, v1.y, v1.z, v1.w,", "      v2.x, v2.y, v2.z, v2.w,", "      v3.x, v3.y, v3.z, v3.w,", "      v4.x, v4.y, v4.z, v4.w", "    );", "  }", "", "void main(){", "    bCylinder = cylinder;", "", "    mat4 matrix = computeMat(matrix1, matrix2, matrix3, matrix4);", "    vec4 updatePosition = matrix * vec4(position, 1.0);", "", "    #if defined( PICKING )", "        vPickingColor = unpackColor( primitiveId );", "    #elif defined( NOLIGHT )", "        vColor = color;", "    #else", "        #include color_vertex", "        //include beginnormal_vertex", "        //vec3 objectNormal = vec3( normal );", "        vec3 objectNormal = vec3(matrix * vec4(normal,0.0));", "        #include defaultnormal_vertex", "        // Normal computed with derivatives when FLAT_SHADED", "        #ifndef FLAT_SHADED", "            vNormal = normalize( transformedNormal );", "        #endif", "    #endif", "", "    //include begin_vertex", "    vec3 transformed = updatePosition.xyz;", "    //include project_vertex", "    vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );", "    gl_Position = projectionMatrix * mvPosition;", "", "    #if defined( NEAR_CLIP ) || defined( RADIUS_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )", "        vViewPosition = -mvPosition.xyz;", "    #endif", "", "    #if defined( RADIUS_CLIP )", "        vClipCenter = -( modelViewMatrix * vec4( clipCenter, 1.0 ) ).xyz;", "    #endif", "", "    #include nearclip_vertex", "", "}"].join("\n"),
"undefined" == typeof jQuery)
    throw new Error("iCn3D requires jQuery");
var iCn3D = function(e) {
    this.icn3d;
    this.id = e,
    this.pre = e.substr(0, e.indexOf("_") + 1),
    this.bControlGl = !1,
    this.container = $("#" + e),
    this.oriContainer = $("#" + e),
    this.maxatomcnt = 1e5,
    this.overdraw = 0,
    this.bDrawn = !1,
    this.bOpm = !1,
    this.crossstrucinter = 0,
    this.bSecondaryStructure = !1,
    this.bHighlight = 1,
    this.renderOrderPicking = -1,
    this.bInitial = !0,
    this.bDoublecolor = !1,
    this.originSize = 1,
    this.ALTERNATE_STRUCTURE = -1,
    Detector.webgl ? (this.renderer = new THREE.WebGLRenderer({
        canvas: this.oriContainer.get(0),
        antialias: !0,
        preserveDrawingBuffer: !0,
        sortObjects: !1,
        alpha: !0
    }),
    this.overdraw = 0) : alert("Currently your web browser has a problem on WebGL. If you are using Chrome, open a new tab for the same URL and WebGL may work again."),
    this.matShader = this.setOutlineColor("yellow"),
    this.frac = new THREE.Color(.1,.1,.1),
    this.scaleFactor = 1,
    this.labelScale = .3,
    this.bImpo = !0,
    this.bExtFragDepth = this.renderer.extensions.get("EXT_frag_depth"),
    this.bExtFragDepth ? console.log("EXT_frag_depth is supported. All spheres and cylinders are drawn using shaders.") : (this.bImpo = !1,
    console.log("EXT_frag_depth is NOT supported. All spheres and cylinders are drawn using geometry.")),
    this.bInstanced = this.renderer.extensions.get("ANGLE_instanced_arrays"),
    this.bInstanced ? console.log("ANGLE_instanced_arrays is supported. Assembly is drawn with one copy of the asymmetric unit using hardware instancing.") : console.log("ANGLE_instanced_arrays is NOT supported. Assembly is drawn by making copies of the asymmetric unit."),
    this.posArray = new Array,
    this.colorArray = new Array,
    this.pos2Array = new Array,
    this.color2Array = new Array,
    this.radiusArray = new Array,
    this.posArraySphere = new Array,
    this.colorArraySphere = new Array,
    this.radiusArraySphere = new Array,
    this.axis = !1,
    this.pk = 1,
    this.highlightlevel = 1,
    this.pickpair = !1,
    this.pAtomNum = 0,
    this.pAtom = void 0,
    this.pAtom2 = void 0,
    this.bCtrl = !1,
    this.bShift = !1,
    this.bStopRotate = !1,
    this.bCalphaOnly = !1,
    this.bAllAtoms = !0,
    this.bConsiderNeighbors = !1,
    this.bShowCrossResidueBond = !0,
    this.bExtrude = !0,
    this.effects = {
        none: this.renderer
    },
    this.maxD = 500,
    this.oriMaxD = this.maxD,
    this.cam_z = 2 * this.maxD,
    this.commands = [],
    this.optsHistory = [],
    this.logs = [],
    this.bRender = !0,
    this.hColor = new THREE.Color(16776960),
    this.sphereGeometry = new THREE.SphereGeometry(1,32,32),
    this.boxGeometry = new THREE.BoxGeometry(1,1,1),
    this.cylinderGeometry = new THREE.CylinderGeometry(1,1,1,32,1),
    this.cylinderGeometryOutline = new THREE.CylinderGeometry(1,1,1,32,1,!0),
    this.axisDIV = 15,
    this.strandDIV = 6,
    this.tubeDIV = 8,
    this.nucleicAcidStrandDIV = 6,
    this.linewidth = 1,
    this.hlLineRadius = .1,
    this.lineRadius = .1,
    this.coilWidth = .3,
    this.cylinderRadius = .4,
    this.traceRadius = .4,
    this.dotSphereScale = .3,
    this.sphereRadius = 1.5,
    this.cylinderHelixRadius = 1.6,
    this.ribbonthickness = .2,
    this.helixSheetWidth = 1.3,
    this.nucleicAcidWidth = .8,
    this.threshbox = 180,
    this.maxAtoms3DMultiFile = 4e4,
    this.LABELSIZE = 30,
    this.opts = {
        camera: "perspective",
        background: "transparent",
        color: "chain",
        sidec: "nothing",
        proteins: "ribbon",
        nucleotides: "nucleotide cartoon",
        surface: "nothing",
        wireframe: "no",
        map: "nothing",
        mapwireframe: "yes",
        emmap: "nothing",
        emmapwireframe: "yes",
        phimap: "nothing",
        phimapwireframe: "yes",
        phisurface: "nothing",
        phisurftype: "nothing",
        phisurfwf: "no",
        opacity: "1.0",
        chemicals: "stick",
        water: "nothing",
        ions: "sphere",
        hbonds: "no",
        saltbridge: "no",
        contact: "no",
        halogen: "no",
        "pi-cation": "no",
        "pi-stacking": "no",
        ssbonds: "yes",
        clbonds: "yes",
        labels: "no",
        lines: "no",
        rotationcenter: "molecule center",
        axis: "no",
        fog: "no",
        slab: "no",
        pk: "residue",
        chemicalbinding: "hide"
    },
    this.setColor()
};
iCn3D.prototype = {
    constructor: iCn3D,
    thr: function(e) {
        return new THREE.Color(e)
    },
    alternateWrapper: function() {
        this.bAlternate = !0,
        this.alternateStructures(),
        this.bAlternate = !1
    },
    setControl: function() {
        var s = this;
        this.WIDTH = this.container.width(),
        this.HEIGHT = this.container.height(),
        this.setWidthHeight(this.WIDTH, this.HEIGHT),
        this._zoomFactor = 1,
        this.mouseChange = new THREE.Vector2(0,0),
        this.quaternion = new THREE.Quaternion(0,0,0,1),
        this.container.bind("contextmenu", function(e) {}),
        s.typetext = !1,
        $(document).bind("keyup", function(e) {
            16 === e.keyCode && (s.bShift = !1),
            17 !== e.keyCode && 224 !== e.keyCode && 91 !== e.keyCode || (s.bCtrl = !1)
        }),
        $("input[type=text], textarea").focus(function() {
            s.typetext = !0
        }),
        $("input[type=text], textarea").blur(function() {
            s.typetext = !1
        }),
        $(document).bind("keydown", function(e) {
            if (!e.shiftKey && 16 !== e.keyCode || (s.bShift = !0),
            !e.ctrlKey && 17 !== e.keyCode && 224 !== e.keyCode && 91 !== e.keyCode || (s.bCtrl = !0),
            (s.bControlGl || s.controls) && (!s.bControlGl || window.controls)) {
                s.bStopRotate = !0;
                var t = s.bShift ? 90 : 5;
                if (!s.typetext)
                    if (90 === e.keyCode) {
                        var i = {};
                        s.bControlGl ? window.cam === s.perspectiveCamera ? i._zoomFactor = .9 : window.cam === s.orthographicCamera && (s._zoomFactor < .1 ? s._zoomFactor = .1 : 1 < s._zoomFactor && (s._zoomFactor = 1),
                        i._zoomFactor = .8 * s._zoomFactor,
                        i._zoomFactor < .1 && (i._zoomFactor = .1)) : s.cam === s.perspectiveCamera ? i._zoomFactor = .9 : s.cam === s.orthographicCamera && (s._zoomFactor < .1 ? s._zoomFactor = .1 : 1 < s._zoomFactor && (s._zoomFactor = 1),
                        i._zoomFactor = .8 * s._zoomFactor,
                        i._zoomFactor < .1 && (i._zoomFactor = .1)),
                        i.update = !0,
                        s.bControlGl ? window.controls.update(i) : s.controls.update(i),
                        s.bRender && s.render()
                    } else if (88 === e.keyCode) {
                        i = {};
                        s.bControlGl ? window.cam === s.perspectiveCamera ? i._zoomFactor = 1.03 : window.cam === s.orthographicCamera && (10 < s._zoomFactor ? s._zoomFactor = 10 : s._zoomFactor < 1 && (s._zoomFactor = 1),
                        i._zoomFactor = 1.01 * s._zoomFactor,
                        10 < i._zoomFactor && (i._zoomFactor = 10)) : s.cam === s.perspectiveCamera ? i._zoomFactor = 1.03 : s.cam === s.orthographicCamera && (10 < s._zoomFactor ? s._zoomFactor = 10 : s._zoomFactor < 1 && (s._zoomFactor = 1),
                        i._zoomFactor = 1.01 * s._zoomFactor,
                        10 < i._zoomFactor && (i._zoomFactor = 10)),
                        i.update = !0,
                        s.bControlGl ? window.controls.update(i) : s.controls.update(i),
                        s.bRender && s.render()
                    } else if (76 === e.keyCode) {
                        var n = new THREE.Vector3(0,1,0)
                          , r = -t / 180 * Math.PI;
                        s.setRotation(n, r)
                    } else if (74 === e.keyCode) {
                        n = new THREE.Vector3(0,1,0),
                        r = t / 180 * Math.PI;
                        s.setRotation(n, r)
                    } else if (73 === e.keyCode) {
                        n = new THREE.Vector3(1,0,0),
                        r = -t / 180 * Math.PI;
                        s.setRotation(n, r)
                    } else if (77 === e.keyCode) {
                        n = new THREE.Vector3(1,0,0),
                        r = t / 180 * Math.PI;
                        s.setRotation(n, r)
                    } else
                        65 === e.keyCode && 1 < Object.keys(s.structures).length && s.alternateWrapper()
            }
        }),
        this.container.bind("mouseup touchend", function(e) {
            s.isDragging = !1
        }),
        this.container.bind("mousedown", function(e) {
            if (s.isDragging = !0,
            s.scene) {
                if (s.bStopRotate = !0,
                s.pk && (e.altKey || e.ctrlKey || e.shiftKey || 18 === e.keyCode || 16 === e.keyCode || 17 === e.keyCode || 224 === e.keyCode || 91 === e.keyCode)) {
                    s.highlightlevel = s.pk;
                    s.rayCaster(e, !0)
                }
                s.bControlGl ? (window.controls.handleResize(),
                window.controls.update()) : (s.controls.handleResize(),
                s.controls.update()),
                s.bRender && s.render()
            }
        }),
        this.container.bind("touchstart", function(e) {
            if (s.isDragging = !0,
            s.scene) {
                s.bStopRotate = !0,
                $("#" + s.pre + "popup").hide();
                s.rayCaster(e, !0),
                s.bControlGl ? (window.controls.handleResize(),
                window.controls.update()) : (s.controls.handleResize(),
                s.controls.update()),
                s.bRender && s.render()
            }
        }),
        this.container.bind("mousemove touchmove", function(e) {
            if (s.scene) {
                $("#" + s.pre + "popup").hide();
                s.rayCaster(e, !1),
                s.bControlGl ? (window.controls.handleResize(),
                window.controls.update()) : (s.controls.handleResize(),
                s.controls.update()),
                s.bRender && s.render()
            }
        }),
        this.container.bind("mousewheel", function(e) {
            s.scene && (s.bStopRotate = !0,
            s.bControlGl ? (window.controls.handleResize(),
            window.controls.update()) : (s.controls.handleResize(),
            s.controls.update()),
            s.bRender && s.render())
        }),
        this.container.bind("DOMMouseScroll", function(e) {
            s.scene && (s.bStopRotate = !0,
            s.bControlGl ? (window.controls.handleResize(),
            window.controls.update()) : (s.controls.handleResize(),
            s.controls.update()),
            s.bRender && s.render())
        })
    },
    isIntersect: function(e, t, i, n, r) {
        var s = this
          , o = (s.icn3d,
        s.raycaster.intersectObjects(e))
          , a = !1
          , l = t.position;
        if (0 < o.length) {
            o[0].point.sub(l);
            for (var d = .5, c = s.getAtomsFromPosition(o[0].point, d); !c && d < 10; )
                d += .5,
                c = s.getAtomsFromPosition(o[0].point, d);
            c ? (a = !0,
            s.pickpair ? i && (s.pAtomNum % 2 == 0 ? s.pAtom = c : s.pAtom2 = c,
            ++s.pAtomNum) : s.pAtom = c,
            i ? s.showPicking(c) : s.showPicking(c, n, r)) : console.log("No atoms were found in 10 andstrom range")
        }
        return a
    },
    rayCaster: function(e, t) {
        this.icn3d;
        this.rayCasterBase(e, t)
    },
    rayCasterBase: function(e, t) {
        var i = this
          , n = (i.icn3d,
        e.pageX)
          , r = e.pageY;
        e.originalEvent.targetTouches && e.originalEvent.targetTouches[0] && (n = e.originalEvent.targetTouches[0].pageX,
        r = e.originalEvent.targetTouches[0].pageY);
        var s = i.oriContainer.offset().left
          , o = i.oriContainer.offset().top
          , a = i.oriContainer.width()
          , l = i.oriContainer.height()
          , d = n - s
          , c = r - o;
        i.mouse.x = d / a * 2 - 1,
        i.mouse.y = -c / l * 2 + 1;
        var h = new THREE.Vector3;
        h.x = i.mouse.x,
        h.y = i.mouse.y,
        0 < this.cam_z ? h.z = -1 : h.z = 1,
        i.cam === i.perspectiveCamera ? (0 < this.cam_z ? h.z = -1 : h.z = 1,
        h.unproject(i.cam),
        i.raycaster.set(i.cam.position, h.sub(i.cam.position).normalize())) : i.cam === i.orthographicCamera && (0 < this.cam_z ? h.z = 1 : h.z = -1,
        h.unproject(i.cam),
        i.raycaster.set(h, new THREE.Vector3(0,0,-1).transformDirection(i.cam.matrixWorld)));
        var p = this.isIntersect(i.objects, i.mdl, t, d, c);
        p = p || this.isIntersect(i.objects_ghost, i.mdl_ghost, t, d, c)
    },
    setRotation: function(e, t) {
        var i = this;
        i.icn3d;
        i.bControlGl ? e.applyQuaternion(window.cam.quaternion).normalize() : e.applyQuaternion(i.cam.quaternion).normalize();
        var n = new THREE.Quaternion;
        n.setFromAxisAngle(e, -t);
        var r = {};
        r.quaternion = n,
        r.update = !0,
        i.bControlGl ? window.controls.update(r) : i.controls.update(r),
        i.bRender && i.render()
    },
    setOutlineColor: function(e) {
        this.icn3d;
        var t = {
            outline: {
                vertex_shader: ["uniform float offset;", "void main() {", "vec4 pos = modelViewMatrix * vec4( position + normal * offset, 1.0 );", "gl_Position = projectionMatrix * pos;", "}"].join("\n"),
                fragment_shader: ["void main(){", "gl_FragColor = vec4( 1.0, 1.0, 0.0, 1.0 );", "}"].join("\n")
            }
        };
        "yellow" === e ? t.outline.fragment_shader = ["void main(){", "gl_FragColor = vec4( 1.0, 1.0, 0.0, 1.0 );", "}"].join("\n") : "green" === e ? t.outline.fragment_shader = ["void main(){", "gl_FragColor = vec4( 0.0, 1.0, 0.0, 1.0 );", "}"].join("\n") : "red" === e && (t.outline.fragment_shader = ["void main(){", "gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );", "}"].join("\n"));
        var i = t.outline;
        return new THREE.ShaderMaterial({
            uniforms: {
                offset: {
                    type: "f",
                    value: .5
                }
            },
            vertexShader: i.vertex_shader,
            fragmentShader: i.fragment_shader,
            depthTest: !1,
            depthWrite: !1,
            needsUpdate: !0
        })
    },
    setWidthHeight: function(e, t) {
        void 0 === this.scaleFactor && (this.scaleFactor = 1),
        this.renderer.setSize(e * this.scaleFactor, t * this.scaleFactor),
        this.renderer.domElement.style.width = e * this.scaleFactor + "px",
        this.renderer.domElement.style.height = t * this.scaleFactor + "px",
        this.renderer.domElement.width = e * this.scaleFactor,
        this.renderer.domElement.height = t * this.scaleFactor,
        this.container.whratio = e / t
    },
    nucleotidesArray: ["  G", "  A", "  T", "  C", "  U", " DG", " DA", " DT", " DC", " DU", "G", "A", "T", "C", "U", "DG", "DA", "DT", "DC", "DU"],
    ionsArray: ["  K", " NA", " MG", " AL", " CA", " TI", " MN", " FE", " NI", " CU", " ZN", " AG", " BA", "  F", " CL", " BR", "  I", "K", "NA", "MG", "AL", "CA", "TI", "MN", "FE", "NI", "CU", "ZN", "AG", "BA", "F", "CL", "BR", "I"],
    cationsTrimArray: ["K", "NA", "MG", "AL", "CA", "TI", "MN", "FE", "NI", "CU", "ZN", "AG", "BA"],
    anionsTrimArray: ["F", "CL", "BR", "I"],
    ionCharges: {
        K: 1,
        NA: 1,
        MG: 2,
        AL: 3,
        CA: 2,
        TI: 3,
        MN: 2,
        FE: 3,
        NI: 2,
        CU: 2,
        ZN: 2,
        AG: 1,
        BA: 2
    },
    vdwRadii: {
        H: 1.08,
        HE: 1.34,
        LI: 1.75,
        BE: 2.05,
        B: 1.47,
        C: 1.49,
        N: 1.41,
        O: 1.4,
        F: 1.39,
        NE: 1.68,
        NA: 1.84,
        MG: 2.05,
        AL: 2.11,
        SI: 2.07,
        P: 1.92,
        S: 1.82,
        CL: 1.83,
        AR: 1.93,
        K: 2.05,
        CA: 2.21,
        SC: 2.16,
        TI: 1.87,
        V: 1.79,
        CR: 1.89,
        MN: 1.97,
        FE: 1.94,
        CO: 1.92,
        NI: 1.84,
        CU: 1.86,
        ZN: 2.1,
        GA: 2.08,
        GE: 2.15,
        AS: 2.06,
        SE: 1.93,
        BR: 1.98,
        KR: 2.12,
        RB: 2.16,
        SR: 2.24,
        Y: 2.19,
        ZR: 1.86,
        NB: 2.07,
        MO: 2.09,
        TC: 2.09,
        RU: 2.07,
        RH: 1.95,
        PD: 2.02,
        AG: 2.03,
        CD: 2.3,
        IN: 2.36,
        SN: 2.33,
        SB: 2.25,
        TE: 2.23,
        I: 2.23,
        XE: 2.21,
        CS: 2.22,
        BA: 2.51,
        LA: 2.4,
        CE: 2.35,
        PR: 2.39,
        ND: 2.29,
        PM: 2.36,
        SM: 2.29,
        EU: 2.33,
        GD: 2.37,
        TB: 2.21,
        DY: 2.29,
        HO: 2.16,
        ER: 2.35,
        TM: 2.27,
        YB: 2.42,
        LU: 2.21,
        HF: 2.12,
        TA: 2.17,
        W: 2.1,
        RE: 2.17,
        OS: 2.16,
        IR: 2.02,
        PT: 2.09,
        AU: 2.17,
        HG: 2.09,
        TL: 2.35,
        PB: 2.32,
        BI: 2.43,
        PO: 2.29,
        AT: 2.36,
        RN: 2.43,
        FR: 2.56,
        RA: 2.43,
        AC: 2.6,
        TH: 2.37,
        PA: 2.43,
        U: 2.4,
        NP: 2.21,
        PU: 2.56,
        AM: 2.56,
        CM: 2.56,
        BK: 2.56,
        CF: 2.56,
        ES: 2.56,
        FM: 2.56
    },
    covalentRadii: {
        H: .31,
        HE: .28,
        LI: 1.28,
        BE: .96,
        B: .84,
        C: .76,
        N: .71,
        O: .66,
        F: .57,
        NE: .58,
        NA: 1.66,
        MG: 1.41,
        AL: 1.21,
        SI: 1.11,
        P: 1.07,
        S: 1.05,
        CL: 1.02,
        AR: 1.06,
        K: 2.03,
        CA: 1.76,
        SC: 1.7,
        TI: 1.6,
        V: 1.53,
        CR: 1.39,
        MN: 1.39,
        FE: 1.32,
        CO: 1.26,
        NI: 1.24,
        CU: 1.32,
        ZN: 1.22,
        GA: 1.22,
        GE: 1.2,
        AS: 1.19,
        SE: 1.2,
        BR: 1.2,
        KR: 1.16,
        RB: 2.2,
        SR: 1.95,
        Y: 1.9,
        ZR: 1.75,
        NB: 1.64,
        MO: 1.54,
        TC: 1.47,
        RU: 1.46,
        RH: 1.42,
        PD: 1.39,
        AG: 1.45,
        CD: 1.44,
        IN: 1.42,
        SN: 1.39,
        SB: 1.39,
        TE: 1.38,
        I: 1.39,
        XE: 1.4,
        CS: 2.44,
        BA: 2.15,
        LA: 2.07,
        CE: 2.04,
        PR: 2.03,
        ND: 2.01,
        PM: 1.99,
        SM: 1.98,
        EU: 1.98,
        GD: 1.96,
        TB: 1.94,
        DY: 1.92,
        HO: 1.92,
        ER: 1.89,
        TM: 1.9,
        YB: 1.87,
        LU: 1.87,
        HF: 1.75,
        TA: 1.7,
        W: 1.62,
        RE: 1.51,
        OS: 1.44,
        IR: 1.41,
        PT: 1.36,
        AU: 1.36,
        HG: 1.32,
        TL: 1.45,
        PB: 1.46,
        BI: 1.48,
        PO: 1.4,
        AT: 1.5,
        RN: 1.5,
        FR: 2.6,
        RA: 2.21,
        AC: 2.15,
        TH: 2.06,
        PA: 2,
        U: 1.96,
        NP: 1.9,
        PU: 1.87,
        AM: 1.8,
        CM: 1.69
    },
    setColor: function() {
        this.glycanHash = {
            GLC: {
                c: "1E90FF",
                s: "sphere"
            },
            BGC: {
                c: "1E90FF",
                s: "sphere"
            },
            NAG: {
                c: "1E90FF",
                s: "cube"
            },
            NDG: {
                c: "1E90FF",
                s: "cube"
            },
            GCS: {
                c: "1E90FF",
                s: "cube"
            },
            PA1: {
                c: "1E90FF",
                s: "cube"
            },
            GCU: {
                c: "1E90FF",
                s: "cone"
            },
            BDP: {
                c: "1E90FF",
                s: "cone"
            },
            G6D: {
                c: "1E90FF",
                s: "cone"
            },
            DDA: {
                c: "1E90FF",
                s: "cylinder"
            },
            B6D: {
                c: "1E90FF",
                s: "cylinder"
            },
            XXM: {
                c: "1E90FF",
                s: "cylinder"
            },
            MAN: {
                c: "00FF00",
                s: "sphere"
            },
            BMA: {
                c: "00FF00",
                s: "sphere"
            },
            BM3: {
                c: "00FF00",
                s: "cube"
            },
            "95Z": {
                c: "00FF00",
                s: "cube"
            },
            MAV: {
                c: "00FF00",
                s: "cone"
            },
            BEM: {
                c: "00FF00",
                s: "cone"
            },
            RAM: {
                c: "00FF00",
                s: "cone"
            },
            RM4: {
                c: "00FF00",
                s: "cone"
            },
            TYV: {
                c: "00FF00",
                s: "cylinder"
            },
            ARA: {
                c: "00FF00",
                s: "cylinder"
            },
            ARB: {
                c: "00FF00",
                s: "cylinder"
            },
            KDN: {
                c: "00FF00",
                s: "cylinder"
            },
            KDM: {
                c: "00FF00",
                s: "cylinder"
            },
            "6PZ": {
                c: "00FF00",
                s: "cylinder"
            },
            GMH: {
                c: "00FF00",
                s: "cylinder"
            },
            BDF: {
                c: "00FF00",
                s: "cylinder"
            },
            GAL: {
                c: "FFFF00",
                s: "sphere"
            },
            GLA: {
                c: "FFFF00",
                s: "sphere"
            },
            NGA: {
                c: "FFFF00",
                s: "cube"
            },
            A2G: {
                c: "FFFF00",
                s: "cube"
            },
            X6X: {
                c: "FFFF00",
                s: "cube"
            },
            "1GN": {
                c: "FFFF00",
                s: "cube"
            },
            ADA: {
                c: "FFFF00",
                s: "cone"
            },
            GTR: {
                c: "FFFF00",
                s: "cone"
            },
            LDY: {
                c: "FFFF00",
                s: "cylinder"
            },
            KDO: {
                c: "FFFF00",
                s: "cylinder"
            },
            T6T: {
                c: "FFFF00",
                s: "cylinder"
            },
            GUP: {
                c: "A52A2A",
                s: "sphere"
            },
            GL0: {
                c: "A52A2A",
                s: "sphere"
            },
            LGU: {
                c: "A52A2A",
                s: "cone"
            },
            ABE: {
                c: "A52A2A",
                s: "cylinder"
            },
            XYS: {
                c: "A52A2A",
                s: "cylinder"
            },
            XYP: {
                c: "A52A2A",
                s: "cylinder"
            },
            SOE: {
                c: "A52A2A",
                s: "cylinder"
            },
            PZU: {
                c: "FF69B4",
                s: "cylinder"
            },
            RIP: {
                c: "FF69B4",
                s: "cylinder"
            },
            "0MK": {
                c: "FF69B4",
                s: "cylinder"
            },
            ALL: {
                c: "8A2BE2",
                s: "sphere"
            },
            AFD: {
                c: "8A2BE2",
                s: "sphere"
            },
            NAA: {
                c: "8A2BE2",
                s: "cube"
            },
            SIA: {
                c: "8A2BE2",
                s: "cylinder"
            },
            SIB: {
                c: "8A2BE2",
                s: "cylinder"
            },
            AMU: {
                c: "8A2BE2",
                s: "cylinder"
            },
            X0X: {
                c: "1E90FF",
                s: "cone"
            },
            X1X: {
                c: "1E90FF",
                s: "cone"
            },
            NGC: {
                c: "1E90FF",
                s: "cylinder"
            },
            NGE: {
                c: "1E90FF",
                s: "cylinder"
            },
            "4N2": {
                c: "A0522D",
                s: "sphere"
            },
            HSQ: {
                c: "A0522D",
                s: "cube"
            },
            IDR: {
                c: "A0522D",
                s: "cone"
            },
            MUR: {
                c: "A0522D",
                s: "cylinder"
            },
            FUC: {
                c: "FF0000",
                s: "cone"
            },
            FUL: {
                c: "FF0000",
                s: "cone"
            }
        },
        this.atomColors = {
            H: this.thr(16777215),
            He: this.thr(16761035),
            HE: this.thr(16761035),
            Li: this.thr(11674146),
            LI: this.thr(11674146),
            B: this.thr(65280),
            C: this.thr(13158600),
            N: this.thr(255),
            O: this.thr(15728640),
            F: this.thr(14329120),
            Na: this.thr(255),
            NA: this.thr(255),
            Mg: this.thr(2263842),
            MG: this.thr(2263842),
            Al: this.thr(8421520),
            AL: this.thr(8421520),
            Si: this.thr(14329120),
            SI: this.thr(14329120),
            P: this.thr(16753920),
            S: this.thr(16762930),
            Cl: this.thr(65280),
            CL: this.thr(65280),
            Ca: this.thr(8421520),
            CA: this.thr(8421520),
            Ti: this.thr(8421520),
            TI: this.thr(8421520),
            Cr: this.thr(8421520),
            CR: this.thr(8421520),
            Mn: this.thr(8421520),
            MN: this.thr(8421520),
            Fe: this.thr(16753920),
            FE: this.thr(16753920),
            Ni: this.thr(10824234),
            NI: this.thr(10824234),
            Cu: this.thr(10824234),
            CU: this.thr(10824234),
            Zn: this.thr(10824234),
            ZN: this.thr(10824234),
            Br: this.thr(10824234),
            BR: this.thr(10824234),
            Ag: this.thr(8421520),
            AG: this.thr(8421520),
            I: this.thr(10494192),
            Ba: this.thr(16753920),
            BA: this.thr(16753920),
            Au: this.thr(14329120),
            AU: this.thr(14329120)
        },
        this.defaultAtomColor = this.thr(13421772),
        this.stdChainColors = [this.thr(16711935), this.thr(255), this.thr(10053171), this.thr(65433), this.thr(16750848), this.thr(16737894), this.thr(3329330), this.thr(2003199), this.thr(16416882), this.thr(16753920), this.thr(52945), this.thr(16738740), this.thr(65280), this.thr(255), this.thr(16711680), this.thr(16776960), this.thr(65535), this.thr(16711935), this.thr(3978097), this.thr(4620980), this.thr(13458524), this.thr(16770229), this.thr(11529966), this.thr(15631086), this.thr(25600), this.thr(139), this.thr(9109504), this.thr(13468991), this.thr(35723), this.thr(9699539)],
        this.backgroundColors = {
            black: this.thr(0),
            grey: this.thr(13421772),
            white: this.thr(16777215),
            transparent: this.thr(0)
        },
        this.residueColors = {
            ALA: this.thr(13158600),
            ARG: this.thr(1334015),
            ASN: this.thr(56540),
            ASP: this.thr(15075850),
            CYS: this.thr(15132160),
            GLN: this.thr(56540),
            GLU: this.thr(15075850),
            GLY: this.thr(15461355),
            HIS: this.thr(8553170),
            ILE: this.thr(1016335),
            LEU: this.thr(1016335),
            LYS: this.thr(1334015),
            MET: this.thr(15132160),
            PHE: this.thr(3289770),
            PRO: this.thr(14456450),
            SER: this.thr(16422400),
            THR: this.thr(16422400),
            TRP: this.thr(11819700),
            TYR: this.thr(3289770),
            VAL: this.thr(1016335),
            ASX: this.thr(16738740),
            GLX: this.thr(16738740),
            G: this.thr(32768),
            A: this.thr(6324479),
            T: this.thr(16744448),
            C: this.thr(16711680),
            U: this.thr(16744448),
            DG: this.thr(32768),
            DA: this.thr(6324479),
            DT: this.thr(16744448),
            DC: this.thr(16711680),
            DU: this.thr(16744448)
        },
        this.residueArea = {
            ALA: 247,
            ARG: 366,
            ASN: 290,
            ASP: 285,
            CYS: 271,
            GLN: 336,
            GLU: 325,
            GLY: 217,
            HIS: 340,
            ILE: 324,
            LEU: 328,
            LYS: 373,
            MET: 346,
            PHE: 366,
            PRO: 285,
            SER: 265,
            THR: 288,
            TRP: 414,
            TYR: 387,
            VAL: 293,
            ASX: 290,
            GLX: 336,
            G: 520,
            A: 507,
            T: 515,
            C: 467,
            U: 482,
            DG: 520,
            DA: 507,
            DT: 515,
            DC: 467,
            DU: 482
        },
        this.defaultResidueColor = this.thr(12492910),
        this.chargeColors = {
            "  G": this.thr(16711680),
            "  A": this.thr(16711680),
            "  T": this.thr(16711680),
            "  C": this.thr(16711680),
            "  U": this.thr(16711680),
            " DG": this.thr(16711680),
            " DA": this.thr(16711680),
            " DT": this.thr(16711680),
            " DC": this.thr(16711680),
            " DU": this.thr(16711680),
            G: this.thr(16711680),
            A: this.thr(16711680),
            T: this.thr(16711680),
            C: this.thr(16711680),
            U: this.thr(16711680),
            DG: this.thr(16711680),
            DA: this.thr(16711680),
            DT: this.thr(16711680),
            DC: this.thr(16711680),
            DU: this.thr(16711680),
            ARG: this.thr(255),
            LYS: this.thr(255),
            ASP: this.thr(16711680),
            GLU: this.thr(16711680),
            HIS: this.thr(8421631),
            GLY: this.thr(8947848),
            PRO: this.thr(8947848),
            ALA: this.thr(8947848),
            VAL: this.thr(8947848),
            LEU: this.thr(8947848),
            ILE: this.thr(8947848),
            PHE: this.thr(8947848),
            SER: this.thr(8947848),
            THR: this.thr(8947848),
            ASN: this.thr(8947848),
            GLN: this.thr(8947848),
            TYR: this.thr(8947848),
            MET: this.thr(8947848),
            CYS: this.thr(8947848),
            TRP: this.thr(8947848)
        },
        this.hydrophobicColors = {
            "  G": this.thr(16711680),
            "  A": this.thr(16711680),
            "  T": this.thr(16711680),
            "  C": this.thr(16711680),
            "  U": this.thr(16711680),
            " DG": this.thr(16711680),
            " DA": this.thr(16711680),
            " DT": this.thr(16711680),
            " DC": this.thr(16711680),
            " DU": this.thr(16711680),
            G: this.thr(16711680),
            A: this.thr(16711680),
            T: this.thr(16711680),
            C: this.thr(16711680),
            U: this.thr(16711680),
            DG: this.thr(16711680),
            DA: this.thr(16711680),
            DT: this.thr(16711680),
            DC: this.thr(16711680),
            DU: this.thr(16711680),
            ARG: this.thr(255),
            LYS: this.thr(255),
            ASP: this.thr(16711680),
            GLU: this.thr(16711680),
            HIS: this.thr(8421631),
            TRP: this.thr().setHSL(1 / 3, 1, .5),
            PHE: this.thr().setHSL(1 / 3, 1, .6945945945945946),
            TYR: this.thr().setHSL(1 / 3, 1, .745945945945946),
            LEU: this.thr().setHSL(1 / 3, 1, .5 + .645 / 1.85),
            ILE: this.thr().setHSL(1 / 3, 1, .5 + .77 / 1.85),
            CYS: this.thr().setHSL(1 / 3, 1, .5 + .805 / 1.85),
            MET: this.thr().setHSL(1 / 3, 1, .5 + .81 / 1.85),
            GLY: this.thr().setHSL(1 / 6, 1, .5 + .285 / .58),
            VAL: this.thr().setHSL(1 / 6, 1, .5 + .255 / .58),
            SER: this.thr().setHSL(1 / 6, 1, .8879310344827587),
            THR: this.thr().setHSL(1 / 6, 1, .8793103448275862),
            ALA: this.thr().setHSL(1 / 6, 1, .853448275862069),
            ASN: this.thr().setHSL(1 / 6, 1, .6379310344827587),
            PRO: this.thr().setHSL(1 / 6, 1, .6120689655172413),
            GLN: this.thr().setHSL(1 / 6, 1, .5)
        },
        this.sheetcolor = "green",
        this.ssColors = {
            helix: this.thr(16711680),
            sheet: this.thr(32768),
            coil: this.thr(6324479)
        },
        this.ssColors2 = {
            helix: this.thr(16711680),
            sheet: this.thr(16762880),
            coil: this.thr(6324479)
        },
        this.defaultBondColor = this.thr(12303291)
    },
    surfaces: {
        1: void 0,
        2: void 0,
        3: void 0,
        4: void 0
    },
    mapData: {},
    hasCovalentBond: function(e, t) {
        var i = this.covalentRadii[e.elem.toUpperCase()] + this.covalentRadii[t.elem.toUpperCase()];
        return e.coord.distanceToSquared(t.coord) < 1.3 * i * i
    },
    init_base: function() {
        this.structures = {},
        this.chains = {},
        this.tddomains = {},
        this.residues = {},
        this.secondaries = {},
        this.alnChains = {},
        this.chainsSeq = {},
        this.chainsColor = {},
        this.chainsGene = {},
        this.chainsAn = {},
        this.chainsAnTitle = {},
        this.alnChainsSeq = {},
        this.alnChainsAnno = {},
        this.alnChainsAnTtl = {},
        this.pickedAtomList = {},
        this.prevHighlightObjects = [],
        this.prevHighlightObjects_ghost = [],
        this.prevSurfaces = [],
        this.prevMaps = [],
        this.prevEmmaps = [],
        this.prevPhimaps = [],
        this.prevOtherMesh = [],
        this.defNames2Residues = {},
        this.defNames2Atoms = {},
        this.defNames2Descr = {},
        this.defNames2Command = {},
        this.residueId2Name = {},
        this.atoms = {},
        this.dAtoms = {},
        this.hAtoms = {},
        this.proteins = {},
        this.sidec = {},
        this.nucleotides = {},
        this.nucleotidesO3 = {},
        this.chemicals = {},
        this.ions = {},
        this.water = {},
        this.calphas = {},
        this.hbondpnts = [],
        this.saltbridgepnts = [],
        this.contactpnts = [],
        this.stabilizerpnts = [],
        this.halogenpnts = [],
        this.picationpnts = [],
        this.pistackingpnts = [],
        this.doublebonds = {},
        this.triplebonds = {},
        this.aromaticbonds = {},
        this.atomPrevColors = {},
        this.style2atoms = {},
        this.labels = {},
        this.lines = {},
        this.resids2inter = {},
        this.resids2interAll = {},
        this.rotateCount = 0,
        this.rotateCountMax = 20,
        this.commands = [],
        this.axes = [],
        this.bGlycansCartoon = !0
    },
    init: function() {
        this.init_base(),
        this.molTitle = "",
        this.ssbondpnts = {},
        this.clbondpnts = {},
        this.inputid = {
            idtype: void 0,
            id: void 0
        },
        this.biomtMatrices = [],
        this.bAssembly = !0,
        this.bDrawn = !1,
        this.bSecondaryStructure = !1,
        this.bHighlight = 1,
        this.axes = []
    },
    reinitAfterLoad: function() {
        this.dAtoms = this.cloneHash(this.atoms),
        this.hAtoms = this.cloneHash(this.atoms),
        this.prevHighlightObjects = [],
        this.prevHighlightObjects_ghost = [],
        this.prevSurfaces = [],
        this.prevMaps = [],
        this.prevEmmaps = [],
        this.prevPhimaps = [],
        this.prevOtherMesh = [],
        this.labels = {},
        this.lines = {},
        this.bAssembly = !0
    }
},
iCn3D.prototype.loadPDB = function(e, t, i, n, r) {
    var s, o, a = this, l = (a.icn3d,
    []), d = [], c = e.split("\n"), h = {}, p = {};
    if (r) {
        if (this.alertAlt) {
            for (var m = this.oriNStru + 1, u = this.structures[m - 1], f = 0, g = u ? u.length : 0; f < g; ++f) {
                for (var v in this.chains[u[f]])
                    delete this.atoms[v],
                    delete this.hAtoms[v],
                    delete this.dAtoms[v];
                delete this.chains[u[f]]
            }
            delete this.structures[m - 1]
        } else
            this.oriNStru = Object.keys(this.structures).length;
        o = this.oriNStru + 1,
        s = Object.keys(this.atoms).length
    } else
        this.init(),
        o = 1,
        s = 0;
    var b, y, C, _, S, w, A = [], x = [], k = [], D = [], O = [], R = [], T = "", E = "", I = "", H = !1, L = {}, P = {}, F = "stru", M = 0, N = "";
    for (var f in c) {
        var z = c[f]
          , q = z.substr(0, 6);
        if ("HEADER" === q)
            void 0 !== i && i || (this.bSecondaryStructure = !0),
            F = z.substr(62, 4),
            this.molTitle = "";
        else if ("TITLE " === q) {
            var j = z.substr(10);
            this.molTitle += j.trim() + " "
        } else if ("HELIX " === q) {
            this.bSecondaryStructure = !0;
            var U = " " == z.substr(19, 1) ? "A" : z.substr(19, 1)
              , B = parseInt(z.substr(21, 4))
              , G = parseInt(z.substr(33, 4));
            for (v = B; v <= G; ++v)
                V = U + "_" + v,
                D.push(V),
                v === B && O.push(V),
                v === G && R.push(V);
            l.push({
                chain: U,
                initialResidue: B,
                initialInscode: z.substr(25, 1),
                terminalResidue: G,
                terminalInscode: z.substr(37, 1)
            })
        } else if ("SHEET " === q) {
            this.bSecondaryStructure = !0;
            for (U = " " == z.substr(21, 1) ? "A" : z.substr(21, 1),
            B = parseInt(z.substr(22, 4)),
            G = parseInt(z.substr(33, 4)),
            v = B; v <= G; ++v) {
                var V = U + "_" + v;
                A.push(V),
                v === B && x.push(V),
                v === G && k.push(V)
            }
            d.push({
                chain: U,
                initialResidue: B,
                initialInscode: z.substr(26, 1),
                terminalResidue: G,
                terminalInscode: z.substr(37, 1)
            })
        } else if ("HBOND " !== q)
            if ("SSBOND" === q) {
                this.bSsbondProvided = !0;
                var W = F + "_" + (" " == z.substr(15, 1) ? "A" : z.substr(15, 1)) + "_" + z.substr(17, 4).trim()
                  , Y = F + "_" + (" " == z.substr(29, 1) ? "A" : z.substr(29, 1)) + "_" + z.substr(31, 4).trim();
                void 0 === this.ssbondpnts[F] && (this.ssbondpnts[F] = []),
                this.ssbondpnts[F].push(W),
                this.ssbondpnts[F].push(Y)
            } else if ("REMARK" === q) {
                var X = parseInt(z.substr(7, 3));
                if (-1 !== z.indexOf("1/2 of bilayer thickness:"))
                    this.halfBilayerSize = parseFloat(z.substr(z.indexOf(":") + 1).trim());
                else if (350 == X && "BIOMT" == z.substr(13, 5)) {
                    var Q = parseInt(z[18]) - 1
                      , Z = parseInt(z.substr(21, 2)) - 1;
                    null == this.biomtMatrices[Z] && (this.biomtMatrices[Z] = (new THREE.Matrix4).identity()),
                    this.biomtMatrices[Z].elements[Q] = parseFloat(z.substr(24, 9)),
                    this.biomtMatrices[Z].elements[4 + Q] = parseFloat(z.substr(34, 9)),
                    this.biomtMatrices[Z].elements[8 + Q] = parseFloat(z.substr(44, 9)),
                    this.biomtMatrices[Z].elements[12 + Q] = parseFloat(z.substr(54, 10))
                } else if (465 == X && " " == z.substr(18, 1) && " " == z.substr(20, 1) && "S" != z.substr(21, 1)) {
                    var K, J = z.substr(15, 3), ee = z.substr(19, 1), te = parseInt(z.substr(21, 5));
                    void 0 === P[K = F + "_" + ee] && (P[K] = []),
                    (ve = {}).resi = te,
                    ve.name = this.residueName2Abbr(J).toLowerCase(),
                    ee != N && (M = 0),
                    !isNaN(te) && ("" == N || ee != N || ee == N && M < te) && (P[K].push(ve),
                    M = te,
                    N = ee)
                } else
                    900 == X && void 0 === this.emd && "RELATED DB: EMDB" == z.substr(34).trim() && (this.emd = z.substr(23, 11).trim())
            } else if ("SOURCE" === q && void 0 === this.organism && "ORGANISM_COMMON" == z.substr(11, 15).trim())
                this.organism = z.substr(28).toLowerCase().trim(),
                this.organism = this.organism.substr(0, this.organism.length - 1);
            else if ("ENDMDL" === q)
                ++o;
            else if ("JRNL  " === q)
                "PMID" === z.substr(12, 4) && (this.pmid = z.substr(19).trim());
            else if ("ATOM  " === q || "HETATM" === q) {
                var ie = 1 === o ? F : F + o.toString()
                  , ne = z.substr(16, 1);
                ++s,
                L[parseInt(z.substr(6, 5))] = s;
                var re = z.substr(76, 2).trim();
                "" === re && (re = z.substr(12, 2).trim());
                var se = z.substr(12, 4).trim();
                J = z.substr(17, 3);
                " " === (ee = z.substr(21, 1)) && (ee = "A");
                var oe = z.substr(22, 5).trim();
                if (oe == (te = parseInt(oe)) && !H || (H = !0),
                i && "DUM" === J && (re = se,
                ee = "MEM",
                oe = te = 1),
                n && "DUM" === J)
                    break;
                y = (K = ie + "_" + ee) + "_" + oe,
                K !== T && (H = !1),
                b = K + "_" + te;
                V = ee + "_" + te;
                var ae = parseFloat(z.substr(30, 8))
                  , le = parseFloat(z.substr(38, 8))
                  , de = parseFloat(z.substr(46, 8))
                  , ce = new THREE.Vector3(ae,le,de)
                  , he = {
                    het: "H" === q[0],
                    serial: s,
                    name: se,
                    alt: ne,
                    resn: J,
                    structure: ie,
                    chain: ee,
                    resi: te,
                    coord: ce,
                    b: parseFloat(z.substr(60, 8)),
                    elem: re,
                    bonds: [],
                    ss: "coil",
                    ssbegin: !1,
                    ssend: !1
                };
                if (he.het || "C" !== he.name || (C = s),
                he.het || "O" !== he.name || (S = s),
                !he.het && "N" === he.name && void 0 !== _ && void 0 !== w) {
                    var pe = this.atoms[_].coord.distanceTo(this.atoms[w].coord)
                      , me = he.coord.x + (this.atoms[_].coord.x - this.atoms[w].coord.x) / pe
                      , ue = he.coord.y + (this.atoms[_].coord.y - this.atoms[w].coord.y) / pe
                      , fe = he.coord.z + (this.atoms[_].coord.z - this.atoms[w].coord.z) / pe;
                    he.hcoord = new THREE.Vector3(me,ue,fe)
                }
                this.atoms[s] = he,
                this.dAtoms[s] = 1,
                -(this.hAtoms[s] = 1) !== $.inArray(V, A) ? (this.atoms[s].ss = "sheet",
                -1 !== $.inArray(V, x) && (this.atoms[s].ssbegin = !0),
                -1 !== $.inArray(V, k) && (this.atoms[s].ssend = !0)) : -1 !== $.inArray(V, D) && (this.atoms[s].ss = "helix",
                -1 !== $.inArray(V, O) && (this.atoms[s].ssbegin = !0),
                -1 !== $.inArray(V, R) && (this.atoms[s].ssend = !0));
                var ge = "-";
                if (ge = "helix" === this.atoms[s].ss ? "H" : "sheet" === this.atoms[s].ss ? "E" : !this.atoms[s].het && this.residueColors.hasOwnProperty(this.atoms[s].resn.toUpperCase()) ? "c" : "o",
                this.secondaries[b] = ge,
                y !== I) {
                    var ve, be = this.residueName2Abbr(J);
                    if (this.residueId2Name[b] = be,
                    1 !== s && (this.residues[E] = p),
                    b !== E && (p = {}),
                    K !== T)
                        w = _ = void 0,
                        1 !== s && (void 0 === this.chains[T] && (this.chains[T] = {}),
                        this.chains[T] = this.unionHash(this.chains[T], h)),
                        h = {},
                        void 0 === this.structures[ie.toString()] && (this.structures[ie.toString()] = []),
                        this.structures[ie.toString()].push(K),
                        void 0 === this.chainsSeq[K] && (this.chainsSeq[K] = []),
                        (ve = {}).resi = te,
                        ve.name = be,
                        this.chainsSeq[K].push(ve);
                    else
                        _ = C,
                        w = S,
                        (ve = {}).resi = te,
                        ve.name = be,
                        this.chainsSeq[K].push(ve)
                }
                h[s] = 1,
                p[s] = 1,
                T = K,
                E = b,
                I = y
            } else if ("CONECT" === q) {
                var ye = parseInt(z.substr(6, 5));
                for (v = 0; v < 4; ++v) {
                    var Ce = parseInt(z.substr([11, 16, 21, 26][v], 5));
                    isNaN(Ce) || void 0 !== this.atoms[L[ye]] && this.atoms[L[ye]].bonds.push(L[Ce])
                }
            } else
                "TER" === q.substr(0, 3) && ++s
    }
    this.residues[b] = p,
    void 0 === this.chains[K] && (this.chains[K] = {}),
    this.chains[K] = this.unionHash2Atoms(this.chains[K], h),
    r || this.adjustSeq(P);
    for (var _e = Object.keys(this.structures), Se = 0, we = _e.length; Se < we; ++Se) {
        if ((ie = _e[Se]) != F && (void 0 === this.ssbondpnts[ie] && (this.ssbondpnts[ie] = []),
        void 0 !== this.ssbondpnts[F])) {
            v = 0;
            for (var Ae = this.ssbondpnts[F].length; v < Ae; ++v) {
                var xe = this.ssbondpnts[F][v]
                  , ke = xe.indexOf("_")
                  , De = ie + xe.substr(ke);
                this.ssbondpnts[ie].push(De)
            }
        }
    }
    if (!this.bSsbondProvided) {
        var Oe = {};
        for (var Re in this.chainsSeq) {
            var Te = this.chainsSeq[Re];
            for (ie = Re.substr(0, Re.indexOf("_")),
            f = 0,
            g = Te.length; f < g; ++f)
                "C" == Te[f].name && (null == Oe[ie] && (Oe[ie] = []),
                Oe[ie].push(Re + "_" + Te[f].resi))
        }
        this.setSsbond(Oe)
    }
    c = null;
    function Ee(e) {
        for (var t = Le.length, i = 0; i < t; ++i) {
            for (var n = Le[i], r = i + 1; r < t; ++r) {
                var s = Le[r];
                n.alt === s.alt && a.hasCovalentBond(n, s) && (n.bonds.push(s.serial),
                s.bonds.push(n.serial))
            }
            e && e(n)
        }
    }
    var Ie, He, Le = [], $e = new THREE.Vector3(9999,9999,9999), Pe = new THREE.Vector3(-9999,-9999,-9999), Fe = new THREE.Vector3, Me = 0, Ne = {};
    for (var f in this.atoms) {
        ce = (se = this.atoms[f]).coord;
        Fe.add(ce),
        $e.min(ce),
        Pe.max(ce),
        ++Me,
        se.het ? se.het && ("HOH" === se.resn || "WAT" === se.resn || "SOL" === se.resn ? this.water[se.serial] = 1 : -1 !== $.inArray(se.resn, this.ionsArray) || se.elem.trim() === se.resn.trim() ? this.ions[se.serial] = 1 : this.chemicals[se.serial] = 1,
        se.color = this.atomColors[se.elem]) : -1 !== $.inArray(se.resn, this.nucleotidesArray) ? (this.nucleotides[se.serial] = 1,
        "O3'" !== se.name && "O3*" !== se.name || (this.nucleotidesO3[se.serial] = 1,
        this.secondaries[se.structure + "_" + se.chain + "_" + se.resi] = "o")) : ("P" === se.elem && (Ne[se.structure + "_" + se.chain + "_" + se.resi] = 1),
        this.proteins[se.serial] = 1,
        "CA" === se.name && (this.calphas[se.serial] = 1),
        "N" !== se.name && "CA" !== se.name && "C" !== se.name && "O" !== se.name && (this.sidec[se.serial] = 1)),
        Ie === se.chain && He === se.resi || (Ee(function(e) {
            ("C" === e.name && "N" === se.name || "O3'" === e.name && "P" === se.name) && a.hasCovalentBond(e, se) && (e.bonds.push(se.serial),
            se.bonds.push(e.serial))
        }),
        Ie = se.chain,
        He = se.resi,
        Le.length = 0),
        Le.push(se)
    }
    for (De in Ne) {
        var ze = this.residues[De];
        for (s in ze) {
            (se = this.atoms[s]).het = !0,
            this.chemicals[se.serial] = 1,
            this.secondaries[De] = "o",
            delete this.proteins[se.serial],
            "CA" === se.name && delete this.calphas[se.serial],
            "N" !== se.name && "CA" !== se.name && "C" !== se.name && "O" !== se.name && delete this.sidec[se.serial]
        }
    }
    if (Ee(),
    this.pmin = $e,
    this.pmax = Pe,
    this.cnt = Me,
    this.maxD = this.pmax.distanceTo(this.pmin),
    this.center = Fe.multiplyScalar(1 / this.cnt),
    this.maxD < 5 && (this.maxD = 5),
    this.oriMaxD = this.maxD,
    this.oriCenter = this.center.clone(),
    n)
        return this.getChainCalpha(this.chains, this.atoms)
}
,
iCn3D.prototype.adjustSeq = function(e) {
    this.icn3d;
    for (var t in this.chainsSeq)
        if (void 0 !== e[t]) {
            var i, n, r, s = this.chainsSeq[t], o = e[t], a = s.length, l = o.length, d = new Array(a + l);
            for (r = n = i = 0; i < a && n < l; )
                s[i].resi <= o[n].resi ? (d[r] = s[i],
                i++) : (d[r] = o[n],
                n++),
                r++;
            if (i < a)
                for (var c = i; c < a; c++)
                    d[r] = s[c],
                    r++;
            else
                for (c = n; c < l; c++)
                    d[r] = o[c],
                    r++;
            this.chainsSeq[t] = d
        }
}
,
iCn3D.prototype.setSsbond = function(e) {
    var t = this;
    t.icn3d;
    for (var i in e)
        for (var n = e[i], r = 0, s = n.length; r < s; ++r)
            for (var o = r + 1, a = n.length; o < a; ++o) {
                var l = n[r]
                  , d = n[o]
                  , c = void 0
                  , h = void 0;
                for (var p in t.residues[l])
                    if ("S" == t.atoms[p].elem) {
                        c = t.atoms[p].coord;
                        break
                    }
                for (var p in t.residues[d])
                    if ("S" == t.atoms[p].elem) {
                        h = t.atoms[p].coord;
                        break
                    }
                if (void 0 !== c && void 0 !== h)
                    if (!(4 < Math.abs(c.x - h.x)))
                        if (!(4 < Math.abs(c.y - h.y)))
                            if (!(4 < Math.abs(c.z - h.z)))
                                (c.x - h.x) * (c.x - h.x) + (c.y - h.y) * (c.y - h.y) + (c.z - h.z) * (c.z - h.z) < 16 && (void 0 === t.ssbondpnts[i] && (t.ssbondpnts[i] = []),
                                t.ssbondpnts[i].push(l),
                                t.ssbondpnts[i].push(d))
            }
}
,
iCn3D.prototype.getChainCalpha = function(e, t, i, n) {
    this.icn3d;
    var r = {};
    for (var s in e)
        if (void 0 === n || (textArray = s.split("_"),
        textArray[0] === n)) {
            for (var o = Object.keys(e[s]), a = [], l = 0, d = 0, c = !0, h = 0, p = o.length; h < p; ++h) {
                var m = t[o[h]];
                if (this.proteins.hasOwnProperty(o[h]) && "CA" == m.name || this.nucleotides.hasOwnProperty(o[h]) && ("O3'" == m.name || "O3*" == m.name)) {
                    if (m.resi == d)
                        continue;
                    var u = 3 < m.resn.trim().length ? m.resn.trim().substr(0, 3) : m.resn.trim();
                    if (!this.chargeColors.hasOwnProperty(u))
                        continue;
                    i ? m.resi_ori : m.resi;
                    c && (c = !1),
                    a.push(m.coord.clone()),
                    ++l,
                    d = m.resi
                }
            }
            if (0 < l)
                r[t[o[0]].chain] = a
        }
    return {
        chainresiCalphaHash: r,
        center: this.center.clone()
    }
}
,
iCn3D.prototype.createSphere = function(e, t, i, n, r) {
    this.icn3d;
    void 0 === t && (t = .8),
    void 0 === i && (i = !1);
    var s = this.vdwRadii[e.elem.toUpperCase()] || t;
    i && (s = t,
    n = 1),
    this.createSphereBase(e.coord, e.color, s, n, r)
}
,
iCn3D.prototype.createSphereBase = function(e, t, i, n, r, s) {
    var o;
    this.icn3d;
    if (void 0 === n && (n = 1),
    2 === r)
        n *= 1.5,
        t = this.hColor,
        (o = new THREE.Mesh(this.sphereGeometry,new THREE.MeshPhongMaterial({
            transparent: !0,
            opacity: .5,
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            color: t
        }))).scale.x = o.scale.y = o.scale.z = i * (n || 1),
        o.position.copy(e),
        this.mdl.add(o);
    else if (1 === r)
        (o = new THREE.Mesh(this.sphereGeometry,this.matShader)).scale.x = o.scale.y = o.scale.z = i * (n || 1),
        o.position.copy(e),
        o.renderOrder = this.renderOrderPicking,
        this.mdl.add(o);
    else if (void 0 === t && (t = this.defaultAtomColor),
    (o = s ? new THREE.Mesh(this.sphereGeometry,new THREE.MeshPhongMaterial({
        transparent: !0,
        opacity: .5,
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: t
    })) : new THREE.Mesh(this.sphereGeometry,new THREE.MeshPhongMaterial({
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: t
    }))).scale.x = o.scale.y = o.scale.z = i * (n || 1),
    o.position.copy(e),
    this.bImpo && !s) {
        this.posArraySphere.push(e.x),
        this.posArraySphere.push(e.y),
        this.posArraySphere.push(e.z),
        this.colorArraySphere.push(t.r),
        this.colorArraySphere.push(t.g),
        this.colorArraySphere.push(t.b);
        var a = i * (n || 1);
        this.radiusArraySphere.push(a),
        this.cnt <= this.maxatomcnt && this.mdl_ghost.add(o)
    } else
        this.mdl.add(o);
    1 === r || 2 === r ? this.bImpo ? this.cnt <= this.maxatomcnt && this.prevHighlightObjects_ghost.push(o) : this.prevHighlightObjects.push(o) : this.bImpo ? this.cnt <= this.maxatomcnt && this.objects_ghost.push(o) : this.objects.push(o)
}
,
iCn3D.prototype.createCylinder = function(e, t, i, n, r, s, o, a) {
    var l;
    this.icn3d;
    1 === r ? ((l = new THREE.Mesh(this.cylinderGeometryOutline,this.matShader)).position.copy(e).add(t).multiplyScalar(.5),
    l.matrixAutoUpdate = !1,
    l.lookAt(t.clone().sub(e)),
    l.updateMatrix(),
    l.matrix.multiply((new THREE.Matrix4).makeScale(i, i, e.distanceTo(t))).multiply((new THREE.Matrix4).makeRotationX(.5 * Math.PI)),
    l.renderOrder = this.renderOrderPicking,
    this.mdl.add(l),
    this.prevHighlightObjects.push(l)) : (2 === r ? (l = new THREE.Mesh(this.cylinderGeometry,new THREE.MeshPhongMaterial({
        transparent: !0,
        opacity: .5,
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: n
    })),
    i *= 1.5) : l = a ? new THREE.Mesh(this.cylinderGeometry,new THREE.MeshPhongMaterial({
        transparent: !0,
        opacity: .5,
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: n
    })) : new THREE.Mesh(this.cylinderGeometry,new THREE.MeshPhongMaterial({
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: n
    })),
    l.position.copy(e).add(t).multiplyScalar(.5),
    l.matrixAutoUpdate = !1,
    l.lookAt(t.clone().sub(e)),
    l.updateMatrix(),
    l.matrix.multiply((new THREE.Matrix4).makeScale(i, i, e.distanceTo(t))).multiply((new THREE.Matrix4).makeRotationX(.5 * Math.PI)),
    this.bImpo && !a ? (this.posArray.push(e.x),
    this.posArray.push(e.y),
    this.posArray.push(e.z),
    n = n || this.thr(16777215),
    this.colorArray.push(n.r),
    this.colorArray.push(n.g),
    this.colorArray.push(n.b),
    this.pos2Array.push(t.x),
    this.pos2Array.push(t.y),
    this.pos2Array.push(t.z),
    void 0 !== s ? (this.color2Array.push(s.r),
    this.color2Array.push(s.g),
    this.color2Array.push(s.b)) : (this.color2Array.push(n.r),
    this.color2Array.push(n.g),
    this.color2Array.push(n.b)),
    this.radiusArray.push(i),
    this.cnt <= this.maxatomcnt && this.mdl_ghost.add(l)) : this.mdl.add(l),
    2 === r ? this.bImpo ? this.cnt <= this.maxatomcnt && this.prevHighlightObjects_ghost.push(l) : this.prevHighlightObjects.push(l) : this.bImpo ? this.cnt <= this.maxatomcnt && this.objects_ghost.push(l) : void 0 !== o && !o || this.objects.push(l))
}
,
iCn3D.prototype.createCylinder_base = function(e, t, i, n, r, s, o) {
    this.icn3d;
    var a = new THREE.Mesh(this.cylinderGeometry,new THREE.MeshPhongMaterial({
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: n
    }));
    return a.position.copy(e).add(t).multiplyScalar(.5),
    a.matrixAutoUpdate = !1,
    a.lookAt(t.clone().sub(e)),
    a.updateMatrix(),
    a.matrix.multiply((new THREE.Matrix4).makeScale(i, i, e.distanceTo(t))).multiply((new THREE.Matrix4).makeRotationX(.5 * Math.PI)),
    a
}
,
iCn3D.prototype.createRepresentationSub = function(e, t, i) {
    this.icn3d;
    for (var n in e) {
        var r = e[n];
        for (var s in t && t(r),
        r.bonds) {
            var o = this.atoms[r.bonds[s]];
            void 0 === o || o.serial < r.serial || o.chain === r.chain && (o.resi === r.resi || "C" === r.name && "N" === o.name || "O3'" === r.name && "P" === o.name || "O3*" === r.name && "P" === o.name || "SG" === r.name && "SG" === o.name) && i && i(r, o)
        }
    }
}
,
iCn3D.prototype.createSphereRepresentation = function(e, t, i, n, r) {
    var s = this;
    s.icn3d;
    this.createRepresentationSub(e, function(e) {
        s.createSphere(e, t, i, n, r)
    })
}
,
iCn3D.prototype.createBoxRepresentation_P_CA = function(e, t, i) {
    var n = this;
    n.icn3d;
    this.createRepresentationSub(e, function(e) {
        "CA" !== e.name && "O3'" !== e.name && "O3*" !== e.name || n.createBox(e, void 0, void 0, t, void 0, i)
    })
}
,
iCn3D.prototype.createConnCalphSidechain = function(e, t) {
    this.icn3d;
    var i = {};
    for (var n in e) {
        if (!(a = e[n]).het && a.style2 === t)
            i[o = a.structure + "_" + a.chain + "_" + a.resi] = 1
    }
    var r = []
      , s = [];
    for (var o in i) {
        var a;
        if (void 0 !== (a = this.getFirstAtomObjByName(this.residues[o], "CA"))) {
            n = 0;
            for (var l = a.bonds.length; n < l; ++n) {
                ("HA" === (d = this.atoms[a.bonds[n]]).name || "C" !== d.name && "N" !== d.name && "H" !== d.elem && d.resi == a.resi) && (r.push(a.coord),
                r.push(d.coord),
                s.push(a.color),
                s.push(d.color))
            }
        }
        if (void 0 !== (a = this.getFirstAtomObjByName(this.residues[o], "N")))
            for (n = 0,
            l = a.bonds.length; n < l; ++n) {
                var d;
                "H" === (d = this.atoms[a.bonds[n]]).name && (r.push(a.coord),
                r.push(d.coord),
                s.push(a.color),
                s.push(d.color))
            }
    }
    for (n = 0,
    l = r.length; n < l; n += 2)
        if ("ball and stick" === t || "stick" === t) {
            var c = "stick" === t ? this.cylinderRadius : .5 * this.cylinderRadius;
            this.createCylinder(r[n], r[n + 1], c, s[n + 1])
        } else if ("lines" === t) {
            var h = this.createSingleLine(r[n], r[n + 1], s[n + 1], !1, .5);
            this.mdl.add(h)
        }
}
,
iCn3D.prototype.createStickRepresentation = function(e, t, k, i, D, n) {
    var O = this
      , R = (O.icn3d,
    void 0 !== n && n ? t / O.cylinderRadius : 1);
    this.createRepresentationSub(e, function(e) {
        O.createSphere(e, t, !i, i, D)
    }, function(e, t) {
        var i = e.coord.clone().add(t.coord).multiplyScalar(.5)
          , n = e.serial + "_" + t.serial;
        if (O.doublebonds.hasOwnProperty(n)) {
            var r = new THREE.Vector3(Math.random(),Math.random(),Math.random());
            if (1 == e.bonds.length && 1 == t.bonds.length) {
                (h = t.coord.clone()).sub(e.coord);
                var s = r.clone();
                h.cross(s).normalize().multiplyScalar(.2 * R)
            } else {
                if (e.bonds.length >= t.bonds.length && 1 < e.bonds.length)
                    o = e.serial,
                    a = e.bonds[0],
                    l = e.bonds[1];
                else {
                    if (!(t.bonds.length >= e.bonds.length && 1 < t.bonds.length))
                        return void console.log("Double bond was not drawn due to the undefined cross plane");
                    o = t.serial,
                    a = t.bonds[0],
                    l = t.bonds[1]
                }
                (d = O.atoms[o].coord.clone()).sub(O.atoms[a].coord),
                (c = O.atoms[o].coord.clone()).sub(O.atoms[l].coord),
                d.cross(c),
                0 == parseInt(1e4 * d.length()) && (d = new THREE.Vector3(.2,.3,.5)),
                (h = t.coord.clone()).sub(e.coord),
                h.cross(d).normalize().multiplyScalar(.2 * R),
                0 == parseInt(1e4 * h.length()) && (d = new THREE.Vector3(.5,.3,.2),
                h.cross(d).normalize().multiplyScalar(.2 * R))
            }
            e.color === t.color ? O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord.clone().add(h), t.coord.clone().add(h), O.cylinderRadius * R * .3, e.color, D),
            O.createCylinder(e.coord.clone().sub(h), t.coord.clone().sub(h), O.cylinderRadius * R * .3, e.color, D)) : O.bImpo ? O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord.clone().add(h), t.coord.clone().add(h), O.cylinderRadius * R * .3, e.color, D, t.color),
            O.createCylinder(e.coord.clone().sub(h), t.coord.clone().sub(h), O.cylinderRadius * R * .3, e.color, D, t.color)) : O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord.clone().add(h), i.clone().add(h), O.cylinderRadius * R * .3, e.color, D),
            O.createCylinder(t.coord.clone().add(h), i.clone().add(h), O.cylinderRadius * R * .3, t.color, D),
            O.createCylinder(e.coord.clone().sub(h), i.clone().sub(h), O.cylinderRadius * R * .3, e.color, D),
            O.createCylinder(t.coord.clone().sub(h), i.clone().sub(h), O.cylinderRadius * R * .3, t.color, D))
        } else if (O.aromaticbonds.hasOwnProperty(n)) {
            var o, a, l, d, c, h;
            if (e.bonds.length > t.bonds.length && 1 < e.bonds.length)
                o = e.serial,
                a = e.bonds[0],
                l = e.bonds[1];
            else {
                if (!(1 < t.bonds.length))
                    return;
                o = t.serial,
                a = t.bonds[0],
                l = t.bonds[1]
            }
            (d = O.atoms[o].coord.clone()).sub(O.atoms[a].coord),
            (c = O.atoms[o].coord.clone()).sub(O.atoms[l].coord),
            d.cross(c),
            (h = t.coord.clone()).sub(e.coord),
            h.cross(d).normalize().multiplyScalar(.2 * R);
            for (var p = 0, m = 0, u = e.bondOrder.length; m < u; ++m)
                "1.5" === e.bondOrder[m] && e.bonds[m] !== t.serial && (p = e.bonds[m]);
            var f = "add";
            if (0 === p)
                f = "add";
            else {
                var g = e.coord.clone().add(h)
                  , v = e.coord.clone().sub(h)
                  , b = t.coord.clone().sub(g).normalize()
                  , y = O.atoms[p].coord.clone().sub(g).normalize()
                  , C = t.coord.clone().sub(v).normalize()
                  , _ = O.atoms[p].coord.clone().sub(v).normalize();
                f = Math.acos(b.dot(y)) < Math.acos(C.dot(_)) ? "sub" : "add"
            }
            if (e.color === t.color) {
                x = "add" === f ? (O.createCylinder(e.coord.clone().sub(h), t.coord.clone().sub(h), O.cylinderRadius * R * .3, e.color, D),
                A = e.coord.clone().add(h),
                t.coord.clone().add(h).sub(A).multiplyScalar(1 / 11)) : (O.createCylinder(e.coord.clone().add(h), t.coord.clone().add(h), O.cylinderRadius * R * .3, e.color, D),
                A = e.coord.clone().sub(h),
                t.coord.clone().sub(h).sub(A).multiplyScalar(1 / 11));
                for (m = 0; m <= 10; ++m)
                    if (m % 2 == 0) {
                        var S = A.clone().add(x.clone().multiplyScalar(m))
                          , w = A.clone().add(x.clone().multiplyScalar(m + 1));
                        O.createCylinder(S, w, O.cylinderRadius * R * .3, e.color, D)
                    }
            } else {
                var A, x;
                x = "add" === f ? (O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord.clone().sub(h), i.clone().sub(h), O.cylinderRadius * R * .3, e.color, D),
                O.createCylinder(t.coord.clone().sub(h), i.clone().sub(h), O.cylinderRadius * R * .3, t.color, D)),
                A = e.coord.clone().add(h),
                t.coord.clone().add(h).sub(A).multiplyScalar(1 / 11)) : (O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord.clone().add(h), i.clone().add(h), O.cylinderRadius * R * .3, e.color, D),
                O.createCylinder(t.coord.clone().add(h), i.clone().add(h), O.cylinderRadius * R * .3, t.color, D)),
                A = e.coord.clone().sub(h),
                t.coord.clone().sub(h).sub(A).multiplyScalar(1 / 11));
                for (m = 0; m <= 10; ++m)
                    if (m % 2 == 0 && O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial)) {
                        S = A.clone().add(x.clone().multiplyScalar(m)),
                        w = A.clone().add(x.clone().multiplyScalar(m + 1));
                        m < 5 ? O.createCylinder(S, w, O.cylinderRadius * R * .3, e.color, D) : O.createCylinder(S, w, O.cylinderRadius * R * .3, t.color, D)
                    }
            }
        } else if (O.triplebonds.hasOwnProperty(n)) {
            r = new THREE.Vector3(Math.random(),Math.random(),Math.random());
            (s = t.coord.clone()).sub(e.coord),
            (C = r.clone()).cross(s).normalize().multiplyScalar(.3 * R),
            e.color === t.color ? O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord, t.coord, O.cylinderRadius * R * .2, e.color, D),
            O.createCylinder(e.coord.clone().add(C), t.coord.clone().add(C), O.cylinderRadius * R * .2, e.color, D),
            O.createCylinder(e.coord.clone().sub(C), t.coord.clone().sub(C), O.cylinderRadius * R * .2, e.color, D)) : O.bImpo ? O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord, t.coord, O.cylinderRadius * R * .2, e.color, D, t.color),
            O.createCylinder(e.coord.clone().add(C), t.coord.clone().add(C), O.cylinderRadius * R * .2, e.color, D, t.color),
            O.createCylinder(e.coord.clone().sub(C), t.coord.clone().sub(C), O.cylinderRadius * R * .2, e.color, D, t.color)) : O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord, i, O.cylinderRadius * R * .2, e.color, D),
            O.createCylinder(t.coord, i, O.cylinderRadius * R * .2, t.color, D),
            O.createCylinder(e.coord.clone().add(C), i.clone().add(C), O.cylinderRadius * R * .2, e.color, D),
            O.createCylinder(t.coord.clone().add(C), i.clone().add(C), O.cylinderRadius * R * .2, t.color, D),
            O.createCylinder(e.coord.clone().sub(C), i.clone().sub(C), O.cylinderRadius * R * .2, e.color, D),
            O.createCylinder(t.coord.clone().sub(C), i.clone().sub(C), O.cylinderRadius * R * .2, t.color, D))
        } else
            e.color === t.color ? O.createCylinder(e.coord, t.coord, k, e.color, D) : O.bImpo ? O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && O.createCylinder(e.coord, t.coord, k, e.color, D, t.color) : O.dAtoms.hasOwnProperty(e.serial) && O.dAtoms.hasOwnProperty(t.serial) && (O.createCylinder(e.coord, i, k, e.color, D),
            O.createCylinder(t.coord, i, k, t.color, D))
    })
}
,
iCn3D.prototype.createLineRepresentation = function(e, t) {
    this.icn3d;
    var i, n = new THREE.Geometry;
    (this.createRepresentationSub(e, void 0, function(e, t) {
        if (e.color === t.color)
            n.vertices.push(e.coord),
            n.vertices.push(t.coord),
            n.colors.push(e.color),
            n.colors.push(t.color);
        else {
            var i = e.coord.clone().add(t.coord).multiplyScalar(.5);
            n.vertices.push(e.coord),
            n.vertices.push(i),
            n.vertices.push(t.coord),
            n.vertices.push(i),
            n.colors.push(e.color),
            n.colors.push(e.color),
            n.colors.push(t.color),
            n.colors.push(t.color)
        }
    }),
    2 !== t) ? (1 === t || (i = new THREE.LineSegments(n,new THREE.LineBasicMaterial({
        linewidth: this.linewidth,
        vertexColors: !0
    })),
    this.mdl.add(i)),
    1 === t ? this.prevHighlightObjects.push(i) : this.objects.push(i)) : 2 === t && this.createBoxRepresentation_P_CA(e, .8, t)
}
,
iCn3D.prototype.getKnot = function(e, t, i, n) {
    this.icn3d;
    return i.distanceTo(n) + t
}
,
iCn3D.prototype.getValueFromKnot = function(e, t, i, n, r, s, o, a, l) {
    this.icn3d;
    var d, c, h = (o - s) / (i - t), p = (a - o) / (n - i), m = (l - a) / (r - n), u = (i + n) * (i + n) - 4 * (t * i + n * r - t * r);
    return c = 0 == u ? d = 9999 : (d = 6 * (3 * p * i + 2 * h * r + m * i - 2 * h * i - 2 * p * r - p * n - m * i) / u,
    6 * (3 * p * n + 2 * m * t + h * i - 2 * p * t - 2 * m * n - h * n - p * i) / u),
    p * (e - i) + o + ((2 * d + c) / 6 / (i - n) * (e - i) * (e - n) * (e - n) + (2 * c + d) / 6 / (n - i) * (e - i) * (e - i) * (e - n))
}
,
iCn3D.prototype.subdivide = function(e, t, i, n, r, s, o, a) {
    this.icn3d;
    var l = []
      , d = []
      , c = []
      , h = new Array
      , p = void 0 !== s ? s.length : 0
      , m = void 0 !== o ? o.length : 0;
    p = 0 < p && Math.abs(s[0].x - e[0].x) <= 6 && Math.abs(s[0].y - e[0].y) <= 6 && Math.abs(s[0].z - e[0].z) <= 6 ? (h.push(s[0]),
    1) : 0,
    h.push(e[0]);
    for (var u = 1, f = e.length - 1; u < f; ++u) {
        var g = e[u]
          , v = e[u + 1];
        h.push(g.smoothen ? g.clone().add(v).multiplyScalar(.5) : g)
    }
    h.push(e[e.length - 1]);
    var b = 0;
    0 < m && Math.abs(o[0].x - e[e.length - 1].x) <= 6 && Math.abs(o[0].y - e[e.length - 1].y) <= 6 && Math.abs(o[0].z - e[e.length - 1].z) <= 6 && (h.push(o[0]),
    ++b),
    1 < m && Math.abs(o[0].x - o[1].x) <= 6 && Math.abs(o[0].y - o[1].y) <= 6 && Math.abs(o[0].z - o[1].z) <= 6 && (h.push(o[1]),
    ++b);
    var y = []
      , C = []
      , _ = [];
    a && (b = 0 < m ? m - 1 : 0);
    u = -1;
    for (var S, w = h.length, A = 1 / i; u <= w - 3; ++u) {
        S = u - p;
        g = h[-1 === u ? 0 : u],
        v = h[u + 1];
        var x = h[u + 2]
          , k = h[u === w - 3 ? w - 1 : u + 3]
          , D = this.getKnot(1, 0, g, v)
          , O = this.getKnot(1, D, v, x)
          , R = this.getKnot(1, O, x, k);
        +D < 1e-4 && (D = 1),
        O - D < 1e-4 && (O = D + 1),
        R - O < 1e-4 && (R = O + 1),
        -1 < u && (void 0 === n || n[S + 1]) && -1 + p <= u && u <= w - 3 - b + 1 && (l = l.concat(y),
        d = d.concat(C),
        c = c.concat(_)),
        y = [],
        C = [],
        _ = [];
        for (var T = (O - D) * A, E = 0; E < i; ++E) {
            var I = D + T * E
              , H = this.getValueFromKnot(I, 0, D, O, R, g.x, v.x, x.x, k.x)
              , L = this.getValueFromKnot(I, 0, D, O, R, g.y, v.y, x.y, k.y)
              , $ = this.getValueFromKnot(I, 0, D, O, R, g.z, v.z, x.z, k.z);
            n ? (-1 + p <= u && u <= w - 3 - b && n[S + 1] && E <= parseInt(i / 2) && (l.push(new THREE.Vector3(H,L,$)),
            d.push(n[S + 1]),
            c.push(t[S + 1])),
            -1 + p <= u && u <= w - 3 - b + 1 && n[S + 2] && E > parseInt(i / 2) && (y.push(new THREE.Vector3(H,L,$)),
            C.push(n[S + 2]),
            _.push(t[S + 2]))) : -1 + p <= u && u <= w - 3 - b && (l.push(new THREE.Vector3(H,L,$)),
            d.push(S + 1),
            c.push(t[S + 1]))
        }
    }
    n && !n[S + 1] || (l = l.concat(y),
    d = d.concat(C),
    c = c.concat(_),
    l.push(h[h.length - 1 - b]),
    d.push(h.length - 1 - b),
    c.push(t[h.length - 1 - b])),
    y = [],
    C = [],
    _ = [],
    h = [];
    var P = [];
    return P.push(l),
    P.push(d),
    P.push(c),
    P
}
,
iCn3D.prototype.createCurveSubArrow = function(e, t, i, n, r, s, o, a, l, d, c, h, p, m, u) {
    this.icn3d;
    var f = []
      , g = [];
    f.push(e),
    g.push(a),
    this.prepareStrand(f, g, t, i, n, void 0, r, s, o, l, d, !1, c, h, p, m, u),
    f = [],
    g = []
}
,
iCn3D.prototype.setCalphaDrawnCoord = function(e, t, i) {
    this.icn3d;
    var n = 0;
    if (void 0 !== i)
        for (var r = 0, s = e.length; r < s; r += t) {
            var o = i[n];
            this.atoms.hasOwnProperty(o) && (this.atoms[o].coord2 = e[r].clone()),
            ++n
        }
}
,
iCn3D.prototype.createCurveSub = function(e, t, i, n, r, s, o, a, l, d, c, h) {
    this.icn3d;
    if (0 !== e.length) {
        var p;
        if (n = n || 5,
        o)
            p = e;
        else {
            var m = this.subdivide(e, i, n, a, r, c, h, !0);
            p = m[0],
            i = m[2]
        }
        if (0 !== p.length) {
            if (this.setCalphaDrawnCoord(p, n, l),
            1 === r) {
                var u = this.coilWidth / 2;
                if (1 < p.length)
                    if (void 0 !== d) {
                        for (var f, g, v = [], b = 0, y = p.length; b < y; ++b) {
                            if ((f = d[b]) !== g && f !== g + 1 && void 0 !== g || b === y - 1) {
                                var C = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(v),v.length,u,4,!1);
                                (_ = new THREE.Mesh(C,this.matShader)).renderOrder = this.renderOrderPicking,
                                this.mdl.add(_),
                                this.prevHighlightObjects.push(_),
                                C = null,
                                v = []
                            }
                            v.push(p[b]),
                            g = f
                        }
                        v = []
                    } else {
                        var _;
                        C = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(p),p.length,u,4,!1);
                        (_ = new THREE.Mesh(C,this.matShader)).renderOrder = this.renderOrderPicking,
                        this.mdl.add(_),
                        this.prevHighlightObjects.push(_),
                        C = null
                    }
            } else {
                var S = new THREE.Geometry;
                if (2 === r && s)
                    for (b = 0; b < p.length; ++b)
                        p[b].addScalar(.6),
                        S.vertices.push(p[b]),
                        S.colors.push(this.thr(i[b]));
                else
                    for (b = 0; b < p.length; ++b)
                        S.vertices.push(p[b]),
                        S.colors.push(this.thr(i[b]));
                var w = new THREE.Line(S,new THREE.LineBasicMaterial({
                    linewidth: t,
                    vertexColors: !0
                }));
                this.mdl.add(w),
                2 === r ? this.prevHighlightObjects.push(w) : this.objects.push(w)
            }
            p = null
        }
    }
}
,
iCn3D.prototype.createCylinderCurve = function(e, t, i, n, r) {
    this.icn3d;
    var s, o, a, l, d = null;
    for (a in e)
        if (!(l = e[a]).het && -1 != t.indexOf(l.name)) {
            if (null !== d && s === l.chain && o + 1 === l.resi && Math.abs(d.coord.x - l.coord.x) < 8 && Math.abs(d.coord.y - l.coord.y) < 8 && Math.abs(d.coord.z - l.coord.z) < 8) {
                var c = d.coord.clone().add(l.coord).multiplyScalar(.5);
                if (r)
                    1 === r && (this.createCylinder(d.coord, c, i, d.color, r),
                    this.createCylinder(c, l.coord, i, l.color, r),
                    this.createSphere(l, i, !0, 1, r));
                else if (n) {
                    var h = this.createSingleLine(d.coord, c, d.color, !1);
                    this.mdl.add(h),
                    this.objects.push(h),
                    h = this.createSingleLine(c, l.coord, l.color, !1),
                    this.mdl.add(h),
                    this.objects.push(h)
                } else
                    this.createCylinder(d.coord, c, i, d.color),
                    this.createCylinder(c, l.coord, i, l.color),
                    this.createSphere(l, i, !0, 1, r)
            }
            s = (d = l).chain,
            o = l.resi,
            2 === r && this.createBox(l, void 0, void 0, void 0, void 0, r)
        }
    if (null !== d && s === l.chain && o + 1 === l.resi && Math.abs(d.coord.x - l.coord.x) < 8 && Math.abs(d.coord.y - l.coord.y) < 8 && Math.abs(d.coord.z - l.coord.z) < 8) {
        c = d.coord.add(l.coord).multiplyScalar(.5);
        if (r)
            1 === r && (this.createCylinder(d.coord, c, i, d.color, r),
            this.createCylinder(c, l.coord, i, l.color, r),
            this.createSphere(l, i, !0, 1, r));
        else if (n) {
            h = this.createSingleLine(d.coord, c, d.color, !1);
            this.mdl.add(h),
            this.objects.push(h),
            h = this.createSingleLine(c, l.coord, l.color, !1),
            this.mdl.add(h),
            this.objects.push(h)
        } else
            this.createCylinder(d.coord, c, i, d.color),
            this.createCylinder(c, l.coord, i, l.color)
    }
}
,
iCn3D.prototype.prepareStrand = function(e, t, i, n, r, s, o, a, l, d, c, h, p, m, u, f, g) {
    this.icn3d;
    if (1 !== d.length) {
        var v = n
          , b = !u
          , y = [];
        y.push(n[n.length - 2]),
        y.push(n[n.length - 1]),
        r = r || this.axisDIV;
        for (var C = 2 / (l - 1), _ = {}, S = 0, w = t.length; S < w; ++S)
            _[S] = [];
        var A = this.subdivide(d, n, r, void 0, void 0, f, g)[0];
        if (1 !== A.length) {
            var x = [];
            for (w = void (S = 0) === u || u ? d.length - 2 : d.length; S < w; ++S) {
                for (var k = 0, D = t.length; k < D; ++k)
                    _[k].push(e[k][S]);
                x.push(n[S])
            }
            if (x.push(n[S]),
            void 0 === u || u)
                for (S = 0,
                w = t.length; S < w; ++S)
                    L = C * t[S] - 1,
                    $ = A.length - 1 - r,
                    P = d.length - 2,
                    H = new THREE.Vector3(A[$].x + c[P].x * L,A[$].y + c[P].y * L,A[$].z + c[P].z * L),
                    _[S].push(H);
            var O, R = [];
            for (S = 0,
            w = t.length; S < w; ++S)
                O = this.subdivide(_[S], x, r, p, o),
                _[S] = O[0],
                n = O[2],
                0 === S && (R = O[1]);
            if (h ? b ? this.bDoublecolor ? this.createStrip(_[0], _[1], v, r, s, o, !0, void 0, m, R, f, g, d, c) : this.createStrip(_[0], _[1], n, r, s, o, !0, void 0, m, R, f, g, d, c) : this.createStrip(_[0], _[1], n, r, s, o, !0, void 0, m, R, f, g) : this.createCurveSub(_[0], i, n, r, o, a, !0, void 0, m, R, f, g),
            void 0 === u || u) {
                x = [],
                R = [];
                for (k = 0,
                D = t.length; k < D; ++k) {
                    _[k] = [];
                    for (S = r * (d.length - 2),
                    w = r * (d.length - 1); p[parseInt(S / r)] && S < w; S += r)
                        for (var T = parseInt(S / r), E = 0; E < r; ++E) {
                            L = 1.8 * (L = C * t[k] - 1) * (r - E) / r;
                            var I = parseInt(S / r);
                            (H = new THREE.Vector3(A[S + E].x + c[I].x * L,A[S + E].y + c[I].y * L,A[S + E].z + c[I].z * L)).smoothen = !0,
                            _[k].push(H),
                            x.push(y[0]),
                            0 === k && R.push(T)
                        }
                    var H, L = 0, $ = A.length - 1, P = d.length - 1;
                    (H = new THREE.Vector3(A[$].x + c[P].x * L,A[$].y + c[P].y * L,A[$].z + c[P].z * L)).smoothen = !0,
                    _[k].push(H),
                    x.push(y[1]),
                    0 === k && R.push($)
                }
                A = [],
                h ? this.createStrip(_[0], _[1], x, r, s, o, !0, void 0, void 0, R, f, g) : this.createCurveSub(_[0], i, x, r, o, a, !0, void 0, void 0, R, f, g)
            }
            for (var S in _) {
                E = 0;
                for (var F = _[S].length; E < F; ++E)
                    _[S][E] = null;
                _[S] = []
            }
            _ = {}
        }
    }
}
,
iCn3D.prototype.createStripArrow = function(e, t, i, n, r, s, o, a, l, d, c, h, p, m, u, f) {
    this.icn3d;
    var g = []
      , v = [];
    g.push(e),
    g.push(t),
    v.push(a),
    v.push(l),
    this.prepareStrand(g, v, void 0, i, n, r, s, void 0, o, d, c, !0, h, p, m, u, f),
    g = [],
    v = []
}
,
iCn3D.prototype.createStrip = function(e, t, i, n, r, s, o, a, l, d, c, h, p, m) {
    this.icn3d;
    if (!(e.length < 2)) {
        if (n = n || this.axisDIV,
        p && this.bDoublecolor && !this.bCalphaOnly) {
            var u = !1
              , f = this.subdivide(p, i, n, a, s, c, h, u);
            p = f[0],
            this.setCalphaDrawnCoord(p, n, l);
            for (var g = 0, v = m.length; g < v; ++g)
                m[g].normalize();
            m = this.subdivide(m, i, n, a, s, c, h, u)[0],
            i = f[2]
        } else {
            if (!o) {
                u = !1;
                var b = this.subdivide(e, i, n, a, s, c, h, u)
                  , y = this.subdivide(t, i, n, a, s, c, h, u);
                e = b[0],
                t = y[0],
                i = b[2]
            }
            if (e.length < 2)
                return;
            this.setCalphaDrawnCoord(e, n, l)
        }
        if (1 === s) {
            var C = this.coilWidth / 2;
            if (void 0 !== d) {
                var _, S, w = [], A = [];
                for (g = 0,
                v = e.length; g < v; ++g) {
                    if ((_ = d[g]) !== S && _ !== S + 1 && void 0 !== S || g === v - 1) {
                        var x = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(w),w.length,C,4,!1);
                        (pe = new THREE.Mesh(x,this.matShader)).renderOrder = this.renderOrderPicking,
                        this.mdl.add(pe),
                        this.prevHighlightObjects.push(pe),
                        x = null;
                        var k = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(A),A.length,C,4,!1);
                        (pe = new THREE.Mesh(k,this.matShader)).renderOrder = this.renderOrderPicking,
                        this.mdl.add(pe),
                        this.prevHighlightObjects.push(pe),
                        k = null,
                        w = [],
                        A = []
                    }
                    w.push(e[g]),
                    A.push(t[g]),
                    S = _
                }
                w = [],
                A = []
            } else {
                x = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(e),e.length,C,4,!1);
                (pe = new THREE.Mesh(x,this.matShader)).renderOrder = this.renderOrderPicking,
                this.mdl.add(pe),
                this.prevHighlightObjects.push(pe),
                x = null;
                k = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(t),t.length,C,4,!1);
                (pe = new THREE.Mesh(k,this.matShader)).renderOrder = this.renderOrderPicking,
                this.mdl.add(pe),
                this.prevHighlightObjects.push(pe),
                k = null
            }
        } else {
            if (p && this.bDoublecolor && !this.bCalphaOnly) {
                var D, O = new THREE.CatmullRomCurve3(p), R = (new THREE.Vector3,
                []), T = [], E = [], I = p.length;
                for (g = 0; g <= I; g++)
                    D = g / I,
                    R[g] = O.getTangentAt(D),
                    R[g].normalize();
                T[0] = m[0].normalize(),
                E[0] = new THREE.Vector3,
                E[0].crossVectors(R[0], T[0]);
                var H = p[I - 1].clone().sub(p[0])
                  , L = 0;
                for (g = 1; g <= I; g++)
                    T[g] = m[g - 1],
                    E[g] = new THREE.Vector3,
                    E[g].crossVectors(R[g], T[g]),
                    0 < H.dot(E[g]) && ++L;
                var $ = .5 * I < L
                  , P = {
                    steps: I,
                    extrudePath: O,
                    frames: {
                        tangents: R,
                        normals: T,
                        binormals: E
                    }
                }
                  , F = this.coilWidth
                  , M = 4.2 * F
                  , N = 1.1 * F
                  , z = new THREE.EllipseCurve(0,0,M,N,0,2 * Math.PI,!1,Math.PI)
                  , q = new THREE.Shape;
                q.curves.push(z);
                K = new THREE.ExtrudeGeometry(q,P);
                for (var j, U, B, G, V = ["a", "b", "c", "d"], W = parseInt(K.vertices.length / (I + 1)), Y = parseInt(W / 2), X = 0; X < W; X++)
                    for (var Q = 0; Q <= I; Q++) {
                        B = Q + X * (I + 1),
                        de = (de = Q == I ? i[Q - 1] : i[Q]) || G;
                        var Z = $ ? Y < X : X < Y;
                        K.colors[B] = Z ? de : this.thr(8947848),
                        G = de
                    }
                for (g = 0; g < K.faces.length; g++) {
                    U = (j = K.faces[g])instanceof THREE.Face3 ? 3 : 4;
                    for (ce = 0; ce < U; ce++)
                        B = j[V[ce]],
                        j.vertexColors[ce] = K.colors[B]
                }
                K.computeFaceNormals(),
                K.computeVertexNormals(!1)
            } else {
                for (var K, J, ee, te, ie, ne, re = (K = new THREE.Geometry).vertices, se = K.faces, g = 0, oe = e.length; g < oe; ++g)
                    re.push(ee = e[g]),
                    re.push(ee),
                    re.push(te = t[g]),
                    re.push(te),
                    g < oe - 1 && (J = t[g].clone().sub(e[g]).cross(e[g + 1].clone().sub(e[g])).normalize().multiplyScalar(r)),
                    re.push(ie = e[g].clone().add(J)),
                    re.push(ie),
                    re.push(ne = t[g].clone().add(J)),
                    re.push(ne);
                var ae = [[0, 2, -6, -8], [-4, -2, 6, 4], [7, 3, -5, -1], [-3, -7, 1, 5]]
                  , g = 1;
                for (oe = e.length; g < oe; ++g)
                    for (var le = 8 * g, de = this.thr(i[g - 1]), ce = 0; ce < 4; ++ce)
                        se.push(new THREE.Face3(le + ae[ce][0],le + ae[ce][1],le + ae[ce][2],void 0,de)),
                        se.push(new THREE.Face3(le + ae[ce][3],le + ae[ce][0],le + ae[ce][2],void 0,de));
                var he = re.length - 8;
                for (g = 0; g < 4; ++g)
                    re.push(re[2 * g]),
                    re.push(re[he + 2 * g]);
                he += 8,
                se.push(new THREE.Face3(he,he + 2,he + 6,void 0,se[0].color)),
                se.push(new THREE.Face3(he + 4,he,he + 6,void 0,se[0].color)),
                se.push(new THREE.Face3(he + 1,he + 5,he + 7,void 0,se[se.length - 3].color)),
                se.push(new THREE.Face3(he + 3,he + 1,he + 7,void 0,se[se.length - 3].color)),
                K.computeFaceNormals(),
                K.computeVertexNormals(!1)
            }
            var pe;
            2 === s ? (pe = new THREE.Mesh(K,new THREE.MeshPhongMaterial({
                transparent: !0,
                opacity: .5,
                specular: this.frac,
                shininess: 30,
                emissive: 0,
                vertexColors: THREE.FaceColors,
                side: THREE.DoubleSide
            })),
            this.mdl.add(pe),
            this.prevHighlightObjects.push(pe)) : (pe = new THREE.Mesh(K,new THREE.MeshPhongMaterial({
                specular: this.frac,
                shininess: 30,
                emissive: 0,
                vertexColors: THREE.FaceColors,
                side: THREE.DoubleSide
            })),
            this.mdl.add(pe),
            this.objects.push(pe))
        }
        t = e = null
    }
}
,
iCn3D.prototype.clamp = function(e, t, i) {
    return Math.max(t, Math.min(i, e))
}
,
iCn3D.prototype.getSSExpandedAtoms = function(e, t) {
    this.icn3d;
    var i, n, r, s, o, a, l, d, c = 0, h = Object.keys(e).length, p = this.cloneHash(e);
    for (var m in e) {
        if (i = e[m].structure + "_" + e[m].chain,
        n = parseInt(e[m].resi),
        r = e[m],
        void 0 === s && (l = e[m]),
        i !== s && void 0 !== s || n !== o && n !== o + 1 && void 0 !== o || c === h - 1) {
            i !== s && void 0 !== s || n !== o && n !== o + 1 && void 0 !== o ? d = a : c === h - 1 && (d = r);
            var u = l.resi;
            if ("coil" !== l.ss && !l.ssbegin) {
                for (var f = l.resi - 1; 0 < f; --f) {
                    var g = l.structure + "_" + l.chain + "_" + f;
                    if (!this.residues.hasOwnProperty(g))
                        break;
                    if ((y = this.getFirstCalphaAtomObj(this.residues[g])).ss === l.ss && y.ssbegin) {
                        u = y.resi;
                        break
                    }
                }
                for (f = u; f < l.resi; ++f) {
                    g = l.structure + "_" + l.chain + "_" + f;
                    p = this.unionHash(p, this.hash2Atoms(this.residues[g]))
                }
            }
            if (3 === this.pk && 1 === t && "coil" === l.ss) {
                g = l.structure + "_" + l.chain + "_" + (l.resi - 1);
                this.residues.hasOwnProperty(g) && (p = this.unionHash(p, this.hash2Atoms(this.residues[g])),
                e = this.unionHash(e, this.hash2Atoms(this.residues[g])))
            }
            var v = d.resi;
            if (void 0 !== d.ss && "coil" !== d.ss && !d.ssend && !d.notshow) {
                var b = this.getLastAtomObj(this.chains[d.structure + "_" + d.chain]).resi;
                for (f = d.resi + 1; f <= b; ++f) {
                    var y;
                    g = d.structure + "_" + d.chain + "_" + f;
                    if (!this.residues.hasOwnProperty(g))
                        break;
                    if ((y = this.getFirstCalphaAtomObj(this.residues[g])).ss === d.ss && y.ssend) {
                        v = y.resi;
                        break
                    }
                }
                for (f = d.resi + 1; f <= v; ++f) {
                    g = d.structure + "_" + d.chain + "_" + f;
                    p = this.unionHash(p, this.hash2Atoms(this.residues[g]))
                }
            }
            if (3 === this.pk && 1 === t && "coil" === d.ss) {
                g = d.structure + "_" + d.chain + "_" + (d.resi + 1);
                this.residues.hasOwnProperty(g) && (p = this.unionHash(p, this.hash2Atoms(this.residues[g])),
                e = this.unionHash(e, this.hash2Atoms(this.residues[g])))
            }
            d.notshow && (d.notshow = void 0),
            l = r
        }
        s = i,
        o = n,
        a = r,
        ++c
    }
    return p
}
,
iCn3D.prototype.createStrand = function(e, t, i, n, r, s, o, a, l) {
    var d = !!n
      , c = {};
    c = this.bAllAtoms ? e : this.getSSExpandedAtoms(e),
    2 === l && (a = n ? (n = !1,
    void (s = r = i = t = null)) : (n = !0,
    t = 2,
    s = r = i = void 0,
    this.ribbonthickness)),
    t = t || this.strandDIV,
    i = i || this.axisDIV,
    r = r || this.coilWidth,
    o = o || !1,
    s = s || this.helixSheetWidth;
    for (var h = {}, p = 0; p < t; ++p)
        h[p] = [];
    var m, u, f = [], g = [], v = [], b = [], y = [], C = null, _ = null, S = null, w = null, A = null, x = null, k = null, D = null, O = !1, R = null, T = null, E = null, I = null, H = null, L = !1, $ = !1, P = {};
    this.bCalphaOnly = this.isCalphaPhosOnly(c);
    var F = {};
    for (var M in c) {
        var N;
        F[(N = c[M]).structure + "_" + N.chain + "_" + N.resi] = 1
    }
    var z = Object.keys(F).length
      , q = 0
      , j = Object.keys(this.hAtoms).length == Object.keys(this.atoms).length
      , U = [];
    for (var M in c) {
        if (("O" === (N = c[M]).name || "CA" === N.name) && !N.het && ("CA" === N.name && (e.hasOwnProperty(M) && ("helix" !== N.ss && "sheet" !== N.ss || N.ssend || N.ssbegin) && (P[M] = N),
        C = N.coord,
        S = N.color,
        I = N.serial,
        U.push(N.serial)),
        "O" === N.name || this.bCalphaOnly && "CA" === N.name)) {
            null == C && (C = N.coord,
            S = N.color,
            I = N.serial),
            "O" === N.name && (_ = N.coord);
            var B = !0;
            if (m !== N.chain && (B = !1),
            N.ssend && "sheet" === N.ss ? L = !0 : N.ssend && "helix" === N.ss && ($ = !0),
            A) {
                1 === l || 2 === l ? y.push(this.hColor) : y.push(x),
                u = "coil" !== D && "coil" === N.ss || O && N.ssbegin || "coil" === D ? r : s;
                var G = 4;
                "O" === N.name ? (se = A.clone(),
                null != w ? se.sub(w) : (w = A.clone(),
                U.length > G + 1 ? (se = w.clone(),
                this.atoms[U[U.length - 1 - G - 1]].coord.clone().sub(se)) : se = new THREE.Vector3(Math.random(),Math.random(),Math.random()))) : this.bCalphaOnly && "CA" === N.name && (U.length > G + 1 ? (se = w.clone(),
                this.atoms[U[U.length - 1 - G - 1]].coord.clone().sub(se)) : se = new THREE.Vector3(Math.random(),Math.random(),Math.random())),
                se.normalize(),
                se.multiplyScalar(u),
                null !== k && se.dot(k) < 0 && se.negate(),
                k = se;
                for (var V = 0, W = 2 / (t - 1); V < t; ++V) {
                    var Y = W * V - 1
                      , X = new THREE.Vector3(w.x + k.x * Y,w.y + k.y * Y,w.z + k.z * Y);
                    o || "sheet" !== D || (X.smoothen = !0),
                    h[V].push(X)
                }
                f.push(w),
                g.push(k),
                e.hasOwnProperty(T) ? (v.push(E),
                b.push(H),
                0) : (v.push(0),
                b.push(0)),
                ++q
            }
            var Q = w && 6 < Math.abs(C.x - w.x) || w && 6 < Math.abs(C.y - w.y) || w && 6 < Math.abs(C.z - w.z);
            if ((N.ssbegin || N.ssend || q === z - 1 || Q) && 0 < h[0].length && B) {
                var Z = "CA"
                  , K = []
                  , J = []
                  , ee = this.atoms[T].structure + "_" + this.atoms[T].chain + "_" + (this.atoms[T].resi - 1).toString();
                K = void 0 !== (le = this.getAtomCoordFromResi(ee, Z)) ? [le] : [];
                var te = this.atoms[T].structure + "_" + this.atoms[T].chain + "_" + (this.atoms[T].resi + 1).toString()
                  , ie = this.getAtomCoordFromResi(te, Z);
                void 0 !== ie && J.push(ie);
                var ne = this.atoms[T].structure + "_" + this.atoms[T].chain + "_" + (this.atoms[T].resi + 2).toString()
                  , re = this.getAtomCoordFromResi(ne, Z);
                if (void 0 !== re && J.push(re),
                !Q) {
                    1 === l || 2 === l ? y.push(this.hColor) : y.push(x),
                    u = N.ssend && "sheet" === N.ss ? 0 : "coil" === D && N.ssbegin || O && N.ssbegin || "coil" === N.ss ? r : s;
                    var se;
                    G = 4;
                    "O" === N.name ? (se = _.clone()).sub(C) : this.bCalphaOnly && "CA" === N.name && (U.length > G ? (se = C.clone(),
                    this.atoms[U[U.length - 1 - G]].coord.clone().sub(se)) : se = new THREE.Vector3(Math.random(),Math.random(),Math.random())),
                    se.normalize(),
                    se.multiplyScalar(u),
                    null !== k && se.dot(k) < 0 && se.negate(),
                    k = se;
                    for (V = 0,
                    W = 2 / (t - 1); V < t; ++V) {
                        Y = W * V - 1,
                        X = new THREE.Vector3(C.x + k.x * Y,C.y + k.y * Y,C.z + k.z * Y);
                        o || "sheet" !== D || (X.smoothen = !0),
                        h[V].push(X)
                    }
                    R = N.serial,
                    f.push(C),
                    g.push(k),
                    e.hasOwnProperty(R) ? (v.push(N.resi),
                    b.push(I)) : (v.push(0),
                    b.push(0))
                }
                for (V = 0; !n && V < t; ++V)
                    L ? this.createCurveSubArrow(h[V], 1, y, i, l, d, t, V, f, g, v, b, !0, K, J) : $ && (j ? this.createCurveSub(h[V], 1, y, i, l, d, !1, v, b, void 0, K, J) : this.createCurveSubArrow(h[V], 1, y, i, l, d, t, V, f, g, v, b, !1, K, J));
                if (n)
                    if (L) {
                        var oe = 0
                          , ae = t - 1;
                        this.createStripArrow(h[0], h[t - 1], y, i, a, l, t, oe, ae, f, g, v, b, !0, K, J)
                    } else if ($)
                        if (j)
                            this.createStrip(h[0], h[t - 1], y, i, a, l, !1, v, b, void 0, K, J, f, g);
                        else {
                            oe = 0,
                            ae = t - 1;
                            this.createStripArrow(h[0], h[t - 1], y, i, a, l, t, oe, ae, f, g, v, b, !1, K, J)
                        }
                    else
                        2 === l && this.createStrip(h[0], h[t - 1], y, i, a, l, !1, v, b, void 0, K, J, f, g);
                for (p = 0; p < t; ++p)
                    h[p] = [];
                y = [],
                f = [],
                g = [],
                v = [],
                $ = L = !(b = [])
            }
            if (m !== N.chain && 0 < h[0].length) {
                var le;
                for (Z = "CA",
                ee = this.atoms[T].structure + "_" + this.atoms[T].chain + "_" + (this.atoms[T].resi - 1).toString(),
                K = void 0 !== (le = this.getAtomCoordFromResi(ee, Z)) ? [le] : [],
                J = [],
                V = 0; !n && V < t; ++V)
                    L ? this.createCurveSubArrow(h[V], 1, y, i, l, d, t, V, f, g, v, b, !0, K, J) : $ && (j ? this.createCurveSub(h[V], 1, y, i, l, d, !1, v, b, void 0, K, J) : this.createCurveSubArrow(h[V], 1, y, i, l, d, t, V, f, g, v, b, !1, K, J));
                if (n)
                    if (L) {
                        oe = 0,
                        ae = t - 1;
                        this.createStripArrow(h[0], h[t - 1], y, i, a, l, t, oe, ae, f, g, v, b, !0, K, J)
                    } else if ($)
                        if (j)
                            this.createStrip(h[0], h[t - 1], y, i, a, l, !1, v, b, void 0, K, J, f, g);
                        else {
                            oe = 0,
                            ae = t - 1;
                            this.createStripArrow(h[0], h[t - 1], y, i, a, l, t, oe, ae, f, g, v, b, !1, K, J)
                        }
                for (p = 0; p < t; ++p)
                    h[p] = [];
                y = [],
                f = [],
                g = [],
                v = [],
                $ = L = !(b = [])
            }
            m = N.chain,
            N.resi,
            D = N.ss,
            O = N.ssend,
            T = N.serial,
            E = N.resi,
            H = I,
            w = C,
            A = N.coord,
            x = S
        }
    }
    U = [],
    this.createTube(P, "CA", r, l),
    P = {},
    h = {}
}
,
iCn3D.prototype.createTubeSub = function(e, t, i, n, r, s, o) {
    this.icn3d;
    if (!(e.length < 2)) {
        var a, l;
        if (o) {
            var d = this.tubeDIV
              , c = 1 / d
              , h = 1 / (I = this.axisDIV)
              , p = new THREE.Geometry
              , m = (E = this.subdivide(e, t, I, void 0, void 0, r, s))[0];
            t = E[2];
            for (var u, f = new THREE.Vector3, g = 0, v = m.length; g < v; ++g) {
                var b, y, C, _ = (g - 1) * h;
                if (0 === g)
                    q = i[0];
                else if (_ % 1 == 0)
                    q = i[_];
                else {
                    var S = Math.floor(_)
                      , w = _ - S;
                    q = i[S] * w + i[S + 1] * (1 - w)
                }
                g < v - 1 ? (b = m[g].clone().sub(m[g + 1]),
                y = new THREE.Vector3(0,-b.z,b.y).normalize().multiplyScalar(q),
                C = b.clone().cross(y).normalize().multiplyScalar(q),
                f.dot(y) < 0 && (y.negate(),
                C.negate()),
                f = y,
                u = C) : (y = f,
                C = u);
                for (var A = 0; A < d; ++A) {
                    var x = 2 * Math.PI * c * A;
                    p.vertices.push(m[g].clone().add(y.clone().multiplyScalar(Math.cos(x))).add(C.clone().multiplyScalar(Math.sin(x))))
                }
            }
            var k = 0;
            for (g = 0,
            v = m.length - 1; g < v; ++g) {
                var D = this.thr(t[g])
                  , O = 0
                  , R = p.vertices[k].clone().sub(p.vertices[k + d]).lengthSq()
                  , T = p.vertices[k].clone().sub(p.vertices[k + d + 1]).lengthSq();
                T < R && (R = T,
                O = 1);
                for (A = 0; A < d; ++A)
                    p.faces.push(new THREE.Face3(k + A,k + (A + O) % d + d,k + (A + 1) % d,void 0,D)),
                    p.faces.push(new THREE.Face3(k + (A + 1) % d,k + (A + O) % d + d,k + (A + O + 1) % d + d,void 0,D));
                k += d
            }
            p.computeFaceNormals(),
            p.computeVertexNormals(!1)
        } else {
            var E, I = this.axisDIV;
            e = (E = this.subdivide(e, t, I, void 0, void 0, r, s))[0],
            t = E[2];
            var H = this.coilWidth;
            a = e.length,
            0;
            p = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(e),a,H,4,!1);
            for (var L, $, P, F, M, N = ["a", "b", "c", "d"], z = 0; z <= a; z++)
                for (var q = 0; q < 4; q++)
                    F = q + 4 * z,
                    L = (L = t[z]) || M,
                    M = p.colors[F] = L;
            for (g = 0; g < p.faces.length; g++) {
                P = ($ = p.faces[g])instanceof THREE.Face3 ? 3 : 4;
                for (A = 0; A < P; A++)
                    F = $[N[A]],
                    $.vertexColors[A] = p.colors[F]
            }
            p.computeFaceNormals(),
            p.computeVertexNormals(!1)
        }
        2 === n ? l = new THREE.Mesh(p,new THREE.MeshPhongMaterial({
            transparent: !0,
            opacity: .5,
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            vertexColors: THREE.FaceColors,
            side: THREE.DoubleSide
        })) : 1 === n ? (l = new THREE.Mesh(p,this.matShader)).renderOrder = this.renderOrderPicking : l = new THREE.Mesh(p,new THREE.MeshPhongMaterial({
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            vertexColors: THREE.FaceColors,
            side: THREE.DoubleSide
        })),
        this.mdl.add(l),
        1 === n || 2 === n ? this.prevHighlightObjects.push(l) : this.objects.push(l)
    }
}
,
iCn3D.prototype.getAtomFromResi = function(e, t) {
    this.icn3d;
    if (this.residues.hasOwnProperty(e))
        for (var i in this.residues[e])
            if (this.atoms[i].name === t && !this.atoms[i].het)
                return this.atoms[i]
}
,
iCn3D.prototype.getAtomCoordFromResi = function(e, t) {
    this.icn3d;
    var i = this.getAtomFromResi(e, t);
    if (void 0 !== i)
        return void 0 !== i.coord2 ? i.coord2 : i.coord
}
,
iCn3D.prototype.getRadius = function(e, t) {
    this.icn3d;
    return e || (0 < t.b && t.b <= 100 ? .01 * t.b : 100 < t.b ? 1 : this.coilWidth)
}
,
iCn3D.prototype.getCustomtubesize = function(e) {
    this.icn3d;
    var t = e.lastIndexOf("_")
      , i = e.substr(t + 1)
      , n = e.substr(0, t);
    return this.queryresi2score[n].hasOwnProperty(i) ? .01 * this.queryresi2score[n][i] : this.coilWidth
}
,
iCn3D.prototype.createTube = function(e, t, i, n, r, s) {
    this.icn3d;
    var o, a, l, d, c, h = [], p = [], m = [], u = [], f = [], g = 0, v = [];
    for (var b in e)
        if ((d = e[b]).name === t && !d.het) {
            if (0 == g && (l = d),
            0 < g && (o !== d.chain || 6 < Math.abs(d.coord.x - c.coord.x) || 6 < Math.abs(d.coord.y - c.coord.y) || 6 < Math.abs(d.coord.z - c.coord.z) || a + 1 !== d.resi && (3 < Math.abs(d.coord.x - c.coord.x) || 3 < Math.abs(d.coord.y - c.coord.y) || 3 < Math.abs(d.coord.z - c.coord.z)))) {
                if (2 !== n) {
                    var y = l.structure + "_" + l.chain + "_" + (l.resi - 1).toString();
                    u = void 0 !== (A = this.getAtomCoordFromResi(y, t)) ? [A] : [];
                    var C = c.structure + "_" + c.chain + "_" + (c.resi + 1).toString()
                      , _ = c.structure + "_" + c.chain + "_" + (c.resi + 2).toString();
                    if (this.residues.hasOwnProperty(C)) {
                        var S = this.getAtomFromResi(C, t);
                        void 0 !== S && S.ssbegin && (C = c.structure + "_" + c.chain + "_" + (c.resi + 2).toString(),
                        _ = c.structure + "_" + c.chain + "_" + (c.resi + 3).toString(),
                        h.push(S.coord),
                        r ? m.push(this.getCustomtubesize(C)) : m.push(this.getRadius(i, S)),
                        p.push(S.color))
                    }
                    void 0 !== (x = this.getAtomCoordFromResi(C, t)) && f.push(x),
                    void 0 !== (k = this.getAtomCoordFromResi(_, t)) && f.push(k),
                    v.push({
                        pnts: h,
                        colors: p,
                        radii: m,
                        prevone: u,
                        nexttwo: f
                    })
                }
                h = [],
                p = [],
                m = [],
                u = [],
                f = [],
                l = d,
                g = 0
            }
            if (0 == h.length) {
                y = d.structure + "_" + d.chain + "_" + (d.resi - 1).toString();
                this.residues.hasOwnProperty(y) && void 0 !== (c = this.getAtomFromResi(y, t)) && c.ssend && (h.push(c.coord),
                r ? m.push(this.getCustomtubesize(y)) : m.push(this.getRadius(i, c)),
                p.push(c.color))
            }
            var w;
            h.push(d.coord),
            w = r ? this.getCustomtubesize(d.structure + "_" + d.chain + "_" + d.resi) : this.getRadius(i, d),
            m.push(w),
            p.push(d.color),
            1 === g && (p[p.length - 2] = d.color),
            o = d.chain,
            a = d.resi;
            2 !== n || d.ssbegin || this.createBox(d, void 0, void 0, 1.2, void 0, n),
            ++g,
            c = d
        }
    if (2 !== n) {
        if (u = [],
        void 0 !== l) {
            var A;
            y = l.structure + "_" + l.chain + "_" + (l.resi - 1).toString();
            u = void 0 !== (A = this.getAtomCoordFromResi(y, t)) ? [A] : []
        }
        if (f = [],
        void 0 !== d) {
            var x;
            C = d.structure + "_" + d.chain + "_" + (d.resi + 1).toString();
            void 0 !== (x = this.getAtomCoordFromResi(C, t)) && f.push(x);
            var k;
            _ = d.structure + "_" + d.chain + "_" + (d.resi + 2).toString();
            void 0 !== (k = this.getAtomCoordFromResi(_, t)) && f.push(k)
        }
        v.push({
            pnts: h,
            colors: p,
            radii: m,
            prevone: u,
            nexttwo: f
        })
    }
    b = 0;
    for (var D = v.length; b < D; ++b) {
        h = v[b].pnts,
        p = v[b].colors,
        m = v[b].radii,
        u = v[b].prevone,
        f = v[b].nexttwo;
        this.createTubeSub(h, p, m, n, u, f, s)
    }
    v = []
}
,
iCn3D.prototype.createCylinderHelix = function(e, t, i) {
    this.icn3d;
    var n, r, s, o = null, a = {}, l = {};
    for (s in e) {
        var d = e[s];
        d.het || (("helix" !== d.ss && "sheet" !== d.ss || d.ssend || d.ssbegin) && (a[d.serial] = d),
        "sheet" === d.ss && (l[d.serial] = d),
        "CA" === d.name && ("helix" === d.ss && d.ssend && (null !== o && n === d.chain && r < d.resi && (1 === i || 2 === i ? this.createCylinder(o.coord, d.coord, t, this.hColor, i) : this.createCylinder(o.coord, d.coord, t, d.color)),
        o = null),
        null === o && "helix" === d.ss && d.ssbegin && (n = (o = d).chain,
        r = d.resi)))
    }
    1 === i || 2 === i ? (0 < Object.keys(a).length && this.createTube(a, "CA", this.coilWidth, i),
    0 < Object.keys(l).length && this.createStrand(l, void 0, void 0, !0, 0, this.helixSheetWidth, !1, 2 * this.ribbonthickness, i)) : (0 < Object.keys(a).length && this.createTube(a, "CA", this.coilWidth),
    0 < Object.keys(l).length && this.createStrand(l, void 0, void 0, !0, 0, this.helixSheetWidth, !1, 2 * this.ribbonthickness))
}
,
iCn3D.prototype.drawNucleicAcidStick = function(e, t) {
    this.icn3d;
    var i, n, r, s = null, o = null;
    for (r in e) {
        var a = e[r];
        void 0 === a || a.het || (a.resi === n && a.chain === i || (null !== s && null !== o && this.createCylinder(new THREE.Vector3(s.coord.x,s.coord.y,s.coord.z), new THREE.Vector3(o.coord.x,o.coord.y,o.coord.z), this.cylinderRadius, s.color, t),
        o = s = null),
        "O3'" !== a.name && "O3*" !== a.name || (s = a),
        "  A" === a.resn || "  G" === a.resn || " DA" === a.resn || " DG" === a.resn ? "N1" === a.name && (o = a) : "N3" === a.name && (o = a),
        n = a.resi,
        i = a.chain)
    }
    null !== s && null !== o && this.createCylinder(new THREE.Vector3(s.coord.x,s.coord.y,s.coord.z), new THREE.Vector3(o.coord.x,o.coord.y,o.coord.z), this.cylinderRadius, s.color, t)
}
,
iCn3D.prototype.isCalphaPhosOnly = function(e) {
    this.icn3d;
    var t = !1
      , i = 0
      , n = 0;
    for (var r in e) {
        if (!(i < 50))
            break;
        "CA" !== e[r].name && "P" !== e[r].name && "O3'" !== e[r].name && "O3*" !== e[r].name && ++n,
        ++i
    }
    return n < .5 * i && (t = !0),
    t
}
,
iCn3D.prototype.drawCartoonNucleicAcid = function(e, t, i, n) {
    this.icn3d;
    this.drawStrandNucleicAcid(e, 2, t, !0, void 0, i, n)
}
,
iCn3D.prototype.drawStrandNucleicAcid = function(e, t, i, n, r, s, o) {
    var a, l, d;
    this.icn3d;
    2 === o && (s = t = void 0),
    r = r || this.nucleicAcidWidth,
    i = i || this.axisDIV,
    t = t || this.nucleicAcidStrandDIV;
    var c = [];
    for (d = 0; d < t; d++)
        c[d] = [];
    var h, p, m, u = [], f = null;
    for (a in e) {
        var g = e[a];
        if (void 0 !== g && (("O3'" === g.name || "OP2" === g.name || "O3*" === g.name || "O2P" === g.name) && !g.het))
            if ("O3'" === g.name || "O3*" === g.name) {
                if (h !== g.chain || p + 1 !== g.resi) {
                    if (m && f)
                        for (l = 0; l < t; l++) {
                            var v = 2 / (t - 1) * l - 1;
                            c[l].push(new THREE.Vector3(m.x + f.x * v,m.y + f.y * v,m.z + f.z * v))
                        }
                    for (n && this.createStrip(c[0], c[1], u, i, s, o),
                    l = 0; !s && l < t; l++)
                        this.createCurveSub(c[l], 1, u, i, o);
                    for (c = [],
                    d = 0; d < t; d++)
                        c[d] = [];
                    u = [],
                    f = null
                }
                m = new THREE.Vector3(g.coord.x,g.coord.y,g.coord.z),
                h = g.chain,
                p = g.resi,
                1 === o || 2 === o ? u.push(this.hColor) : u.push(g.color)
            } else if ("OP2" === g.name || "O2P" === g.name) {
                if (!m) {
                    f = null;
                    continue
                }
                var b = new THREE.Vector3(g.coord.x,g.coord.y,g.coord.z);
                for (b.sub(m),
                b.normalize().multiplyScalar(r),
                null !== f && b.dot(f) < 0 && b.negate(),
                f = b,
                l = 0; l < t; l++) {
                    v = 2 / (t - 1) * l - 1;
                    c[l].push(new THREE.Vector3(m.x + f.x * v,m.y + f.y * v,m.z + f.z * v))
                }
                m = null
            }
    }
    if (m && f)
        for (l = 0; l < t; l++) {
            v = 2 / (t - 1) * l - 1;
            c[l].push(new THREE.Vector3(m.x + f.x * v,m.y + f.y * v,m.z + f.z * v))
        }
    for (n && this.createStrip(c[0], c[1], u, i, s, o),
    l = 0; !s && l < t; l++)
        this.createCurveSub(c[l], 1, u, i, o)
}
,
iCn3D.prototype.createSingleLine = function(e, t, i, n, r) {
    this.icn3d;
    var s, o = new THREE.Geometry;
    return s = n ? new THREE.LineDashedMaterial({
        linewidth: 1,
        color: i,
        dashSize: r,
        gapSize: .5 * r
    }) : new THREE.LineBasicMaterial({
        linewidth: 1,
        color: i
    }),
    o.vertices.push(e),
    o.vertices.push(t),
    n && o.computeLineDistances(),
    new THREE.LineSegments(o,s)
}
,
iCn3D.prototype.createBox = function(e, t, i, n, r, s) {
    this.icn3d;
    void 0 === t && (t = .8),
    void 0 === i && (i = !1),
    void 0 === n && (n = .8),
    s ? void 0 === r && (r = this.hColor) : void 0 === r && (r = e.color);
    var o = i ? t : (this.vdwRadii[e.elem.toUpperCase()] || t) * (n || 1);
    this.createBox_base(e.coord, o, r, s)
}
,
iCn3D.prototype.createBox_base = function(e, t, i, n, r, s) {
    var o;
    this.icn3d;
    (o = n || s ? new THREE.Mesh(this.boxGeometry,new THREE.MeshPhongMaterial({
        transparent: !0,
        opacity: .5,
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: i
    })) : new THREE.Mesh(this.boxGeometry,new THREE.MeshPhongMaterial({
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: i
    }))).scale.x = o.scale.y = o.scale.z = t,
    o.position.copy(e),
    this.mdl.add(o),
    n ? this.prevHighlightObjects.push(o) : r ? this.prevOtherMesh.push(o) : this.objects.push(o)
}
,
iCn3D.prototype.makeTextSprite = function(e, t) {
    this.icn3d;
    void 0 === t && (t = {});
    var i, n, r, s = t.hasOwnProperty("fontface") ? t.fontface : "Arial", o = t.hasOwnProperty("fontsize") ? t.fontsize : 18, a = t.hasOwnProperty("alpha") ? t.alpha : 1, l = !0, d = !1;
    t.hasOwnProperty("bSchematic") && t.bSchematic && (d = !0,
    o = 40),
    r = t.hasOwnProperty("backgroundColor") && void 0 !== t.backgroundColor ? (i = this.hexToRgb(t.backgroundColor, a),
    n = t.hasOwnProperty("borderColor") ? this.hexToRgb(t.borderColor, a) : {
        r: 0,
        g: 0,
        b: 0,
        a: 1
    },
    t.hasOwnProperty("borderThickness") ? t.borderThickness : 4) : (l = !1,
    n = i = void 0,
    0);
    var c = t.hasOwnProperty("textColor") && void 0 !== t.textColor ? this.hexToRgb(t.textColor, 1) : {
        r: 255,
        g: 255,
        b: 0,
        a: 1
    }
      , h = document.createElement("canvas")
      , p = h.getContext("2d");
    p.font = "Bold " + o + "px " + s;
    var m = p.measureText(e).width
      , u = m + 2 * r
      , f = o + 2 * r;
    d && (f < u ? f = u : u = f);
    var g = 3 * this.oriMaxD / 100 * this.labelScale
      , v = .8 * m / f;
    if (h.width = u,
    h.height = f,
    p.clearRect(0, 0, u, f),
    l)
        if (p.fillStyle = "rgba(" + i.r + "," + i.g + "," + i.b + "," + i.a + ")",
        p.strokeStyle = "rgba(" + n.r + "," + n.g + "," + n.b + "," + n.a + ")",
        p.lineWidth = r,
        d) {
            var b = .35 * u;
            this.circle(p, 0, 0, u, f, b)
        } else {
            b = 0;
            this.roundRect(p, 0, 0, u, f, b)
        }
    p.font = "Bold " + o + "px " + s,
    p.textAlign = "center",
    p.textBaseline = "middle",
    p.fillStyle = "rgba(" + c.r + ", " + c.g + ", " + c.b + ", 1.0)",
    p.strokeStyle = "rgba(" + c.r + ", " + c.g + ", " + c.b + ", 1.0)",
    p.fillText(e, .5 * u, .5 * f);
    var y = new THREE.Texture(h)
      , C = (y.needsUpdate = !0,
    new THREE.SpriteMaterial({
        map: y,
        depthTest: !1,
        depthWrite: !1
    }));
    C.map.minFilter = THREE.LinearFilter;
    var _ = new THREE.Sprite(C);
    return d ? _.scale.set(g, g, 1) : _.scale.set(v * g, g, 1),
    _
}
,
iCn3D.prototype.roundRect = function(e, t, i, n, r, s) {
    this.icn3d;
    e.beginPath(),
    e.moveTo(t + s, i),
    e.lineTo(t + n - s, i),
    e.quadraticCurveTo(t + n, i, t + n, i + s),
    e.lineTo(t + n, i + r - s),
    e.quadraticCurveTo(t + n, i + r, t + n - s, i + r),
    e.lineTo(t + s, i + r),
    e.quadraticCurveTo(t, i + r, t, i + r - s),
    e.lineTo(t, i + s),
    e.quadraticCurveTo(t, i, t + s, i),
    e.closePath(),
    e.fill(),
    e.stroke()
}
,
iCn3D.prototype.circle = function(e, t, i, n, r, s) {
    this.icn3d;
    e.beginPath(),
    e.arc(t + n / 2, i + r / 2, s, 0, 2 * Math.PI, !0),
    e.closePath(),
    e.fill(),
    e.stroke()
}
,
iCn3D.prototype.createLabelRepresentation = function(e) {
    this.icn3d;
    for (var t in e)
        for (var i = void 0 !== e[t] ? e[t] : [], n = 0, r = i.length; n < r; ++n) {
            var s = i[n];
            0 == s.size && (s.size = void 0),
            0 == s.color && (s.color = void 0),
            0 == s.background && (s.background = void 0);
            var o, a = void 0 !== s.size ? s.size : this.LABELSIZE, l = void 0 !== s.color ? s.color : "#ffff00", d = void 0 !== s.background ? s.background : "#cccccc", c = void 0 !== s.alpha ? s.alpha : 1;
            d = s.background,
            void 0 !== l && void 0 !== d && l.toLowerCase() === d.toLowerCase() && (l = "#888888"),
            (o = void 0 !== s.bSchematic && s.bSchematic || 1 === s.text.length ? this.makeTextSprite(s.text, {
                fontsize: parseInt(a),
                textColor: l,
                borderColor: d,
                backgroundColor: d,
                alpha: c,
                bSchematic: 1
            }) : this.makeTextSprite(s.text, {
                fontsize: parseInt(a),
                textColor: l,
                borderColor: d,
                backgroundColor: d,
                alpha: c,
                bSchematic: 0
            })).position.set(s.position.x, s.position.y, s.position.z),
            this.mdl.add(o)
        }
}
,
iCn3D.prototype.setAtmClr = function(e, t) {
    for (var i in e) {
        var n = this.atoms[i];
        n.color = this.thr().setHex(t),
        this.atomPrevColors[i] = n.color
    }
}
,
iCn3D.prototype.updateChainsColor = function(e) {
    var t = e.structure + "_" + e.chain;
    void 0 !== this.chainsColor[t] && (this.chainsColor[t] = e.color)
}
,
iCn3D.prototype.setMmdbChainColor = function(e) {
    var t, i = void 0 === e ? this.hAtoms : e;
    for (var n in this.applyOriginalColor(this.hash2Atoms(i)),
    t = this.unionHash(t, this.chemicals),
    t = this.unionHash(t, this.ions)) {
        var r = this.atoms[n];
        r.color = this.atomColors[r.elem] || this.defaultAtomColor,
        this.atomPrevColors[n] = r.color
    }
}
,
iCn3D.prototype.setConservationColor = function(e, t) {
    for (var i in this.setMmdbChainColor(e),
    this.alnChainsSeq)
        for (var n = this.alnChainsSeq[i], r = 0, s = n.length; r < s; ++r) {
            var o = i + "_" + n[r].resi;
            for (var a in this.residues[o])
                if (e.hasOwnProperty(a)) {
                    var l = t ? this.thr(n[r].color) : this.thr(n[r].color2);
                    this.atoms[a].color = l,
                    this.atomPrevColors[a] = l
                }
        }
}
,
iCn3D.prototype.setColorByOptions = function(e, t, i) {
    if (void 0 !== e)
        if (i)
            for (var n in t) {
                var r = this.atoms[n];
                this.atomPrevColors[n] = r.color
            }
        else if (0 === e.color.indexOf("#"))
            for (var n in t) {
                (r = this.atoms[n]).color = this.thr().setStyle(e.color.toLowerCase()),
                this.atomPrevColors[n] = r.color
            }
        else {
            var o, a, l, d, c;
            switch (e.color.toLowerCase()) {
            case "spectrum":
                for (var n in a = o = 0,
                t) {
                    (r = this.atoms[n]).het || ++a
                }
                for (var n in l = 1 < a ? 1 / (a - 1) : 1,
                t) {
                    (r = this.atoms[n]).color = r.het ? this.atomColors[r.elem] || this.defaultAtomColor : this.thr().setHSL(.75 * (1 - o++ * l), 1, .45),
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "chain":
                if (void 0 !== this.chainsColor && 0 < Object.keys(this.chainsColor).length)
                    this.setMmdbChainColor();
                else {
                    var h = -1
                      , p = ""
                      , m = this.stdChainColors.length;
                    for (var n in t) {
                        (r = this.atoms[n]).chain != p && (++h,
                        h %= m),
                        r.het ? r.color = this.atomColors[r.elem] : (r.color = this.stdChainColors[h],
                        0 < Object.keys(this.chainsColor).length && this.updateChainsColor(r)),
                        this.atomPrevColors[n] = r.color,
                        p = r.chain
                    }
                }
                break;
            case "domain":
                a = o = 0;
                var u = Object.keys(this.tddomains);
                l = 1 < (a = u.length) ? 1 / (a - 1) : 1;
                n = 0;
                for (var f = u.length; n < f; ++n) {
                    var g = this.thr().setHSL(.75 * (1 - o++ * l), 1, .45);
                    for (var v in this.tddomains[u[n]])
                        for (var b in this.residues[v]) {
                            (r = this.atoms[b]).color = g,
                            this.atomPrevColors[b] = r.color
                        }
                }
                break;
            case "secondary structure green":
                for (var n in this.sheetcolor = "green",
                t) {
                    (r = this.atoms[n]).color = r.het ? this.atomColors[r.elem] || this.defaultAtomColor : this.ssColors[r.ss] || this.thr(16711935),
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "secondary structure yellow":
            case "secondary structure":
                for (var n in this.sheetcolor = "yellow",
                t) {
                    (r = this.atoms[n]).color = r.het ? this.atomColors[r.elem] || this.defaultAtomColor : this.ssColors2[r.ss] || this.thr(16711935),
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "secondary structure spectrum":
                a = o = 0;
                var y, C, _ = [], S = [], w = -9999;
                for (var n in t)
                    if (this.proteins.hasOwnProperty(n)) {
                        r = this.atoms[n];
                        -9999 == w && (y = parseInt(n)),
                        -9999 != w && (r.ss != C.ss || 1 < Math.abs(r.resi - C.resi) || r.ssbegin && C.ssend) && ("coil" == C.ss ? S.push([y, w]) : _.push([y, w]),
                        y = n),
                        w = parseInt(n),
                        C = r
                    }
                "coil" == C.ss ? S.push([y, w]) : _.push([y, w]),
                l = 1 < (a = _.length) ? 1 / (a - 1) : 1;
                for (n = 0,
                f = _.length; n < f; ++n)
                    for (g = this.thr().setHSL(.75 * (1 - o++ * l), 1, .45),
                    b = _[n][0]; b <= _[n][1]; ++b) {
                        (r = this.atoms[b]).color = g,
                        this.atomPrevColors[b] = r.color
                    }
                for (g = this.ssColors2.coil,
                n = 0,
                f = S.length; n < f; ++n)
                    for (b = S[n][0]; b <= S[n][1]; ++b) {
                        (r = this.atoms[b]).color = g,
                        this.atomPrevColors[b] = r.color
                    }
                break;
            case "residue":
                for (var n in t) {
                    (r = this.atoms[n]).color = r.het ? this.atomColors[r.elem] || this.defaultAtomColor : this.residueColors[r.resn] || this.defaultResidueColor,
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "residue custom":
                for (var n in t) {
                    (r = this.atoms[n]).color = r.het ? this.atomColors[r.elem] || this.defaultAtomColor : this.customResidueColors[r.resn] || this.defaultResidueColor,
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "align custom":
                middB = 50;
                for (var b in t) {
                    var A = this.atoms[b].structure + "_" + this.atoms[b].chain;
                    if (void 0 !== this.queryresi2score && this.queryresi2score.hasOwnProperty(A)) {
                        var x = this.atoms[b].resi;
                        if (this.queryresi2score[A].hasOwnProperty(x))
                            100 < (R = this.queryresi2score[A][x]) && (R = 100),
                            g = R < middB ? this.thr().setRGB(1 - (s = .02 * (middB - R)), 1 - s, 1) : this.thr().setRGB(1, 1 - (s = .02 * (R - middB)), 1 - s);
                        else
                            g = this.defaultAtomColor;
                        this.atoms[b].color = g,
                        this.atomPrevColors[b] = g
                    }
                }
                break;
            case "charge":
                for (var n in t) {
                    (r = this.atoms[n]).color = r.het ? this.defaultAtomColor : this.chargeColors[r.resn] || this.defaultResidueColor,
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "hydrophobic":
                for (var n in t) {
                    (r = this.atoms[n]).color = r.het ? this.defaultAtomColor : this.hydrophobicColors[r.resn] || this.defaultResidueColor,
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "atom":
                for (var n in t) {
                    (r = this.atoms[n]).color = this.atomColors[r.elem] || this.defaultAtomColor,
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "b factor":
                for (var n in this.middB = 50,
                this.spanBinv1 = .02,
                this.spanBinv2 = .02,
                t) {
                    if (void 0 === (r = this.atoms[n]).b || 0 == parseInt(1e3 * r.b))
                        r.color = this.thr().setRGB(0, 1, 0);
                    else
                        100 < (R = r.b) && (R = 100),
                        r.color = R < this.middB ? this.thr().setRGB(1 - (s = (this.middB - R) * this.spanBinv1), 1 - s, 1) : this.thr().setRGB(1, 1 - (s = (R - this.middB) * this.spanBinv2), 1 - s);
                    this.bOpm && "DUM" == r.resn && (r.color = this.atomColors[r.elem]),
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "b factor percentile":
                if (c = -(d = 1e3),
                !this.bfactorArray) {
                    for (var n in this.bfactorArray = [],
                    this.atoms) {
                        d > (r = this.atoms[n]).b && (d = r.b),
                        c < r.b && (c = r.b),
                        this.bfactorArray.push(r.b)
                    }
                    this.bfactorArray.sort(function(e, t) {
                        return e - t
                    })
                }
                var k = this.bfactorArray.length;
                for (var n in t) {
                    if (void 0 === (r = this.atoms[n]).b || 0 == parseInt(1e3 * r.b) || 0 == this.bfactorArray.length)
                        r.color = this.thr().setRGB(0, 1, 0);
                    else {
                        var D = this.bfactorArray.indexOf(r.b) / k;
                        r.color = D < .5 ? this.thr().setRGB(2 * D, 2 * D, 1) : this.thr().setRGB(1, 2 * (1 - D), 2 * (1 - D))
                    }
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "area":
                if (void 0 === this.resid2area) {
                    var O = this.cloneHash(this.hAtoms);
                    this.hAtoms = this.cloneHash(this.atoms),
                    this.bCalcArea = !0,
                    this.opts.surface = "solvent accessible surface",
                    this.applySurfaceOptions(),
                    this.bCalcArea = !1,
                    this.hAtoms = this.cloneHash(O)
                }
                for (var n in middB = void 0 !== this.midpercent ? this.midpercent : 35,
                this.spanBinv1 = .02,
                this.spanBinv2 = .02,
                t) {
                    var R;
                    v = (r = this.atoms[n]).structure + "_" + r.chain + "_" + r.resi + "_" + r.resn;
                    100 < (R = this.residueArea.hasOwnProperty(r.resn) ? this.resid2area[v] / this.residueArea[r.resn] * 100 : middB) && (R = 100),
                    r.color = R < middB ? this.thr().setRGB(1 - (s = (middB - R) * this.spanBinv1), 1 - s, 1) : this.thr().setRGB(1, 1 - (s = (R - middB) * this.spanBinv2), 1 - s),
                    this.bOpm && "DUM" == r.resn && (r.color = this.atomColors[r.elem]),
                    this.atomPrevColors[n] = r.color
                }
                break;
            case "identity":
            case "conserved":
                this.setConservationColor(t, !0);
                break;
            case "conservation":
                this.setConservationColor(t, !1);
                break;
            case "white":
                this.setAtmClr(t, 16777215);
                break;
            case "grey":
                this.setAtmClr(t, 8947848);
                break;
            case "red":
                this.setAtmClr(t, 16711680);
                break;
            case "green":
                this.setAtmClr(t, 65280);
                break;
            case "blue":
                this.setAtmClr(t, 255);
                break;
            case "magenta":
                this.setAtmClr(t, 16711935);
                break;
            case "yellow":
                this.setAtmClr(t, 16776960);
                break;
            case "cyan":
                this.setAtmClr(t, 65535);
                break;
            case "custom":
                break;
            default:
                for (var n in t) {
                    (r = this.atoms[n]).color = this.thr().setStyle("#" + e.color.toLowerCase()),
                    this.atomPrevColors[n] = r.color
                }
            }
        }
}
,
iCn3D.prototype.applyDisplayOptions = function(e, t, i) {
    this.icn3d;
    void 0 === e && (e = this.opts);
    var n = {}
      , r = {}
      , s = {};
    if (1 === i && Object.keys(t).length < Object.keys(this.atoms).length) {
        for (var o in s = this.hash2Atoms(t),
        n = this.getResiduesFromAtoms(t)) {
            var a = (u = o).lastIndexOf("_")
              , l = o.substr(0, a + 1)
              , d = parseInt(o.substr(a + 1))
              , c = l + (d - 1).toString()
              , h = l + (d + 1).toString();
            n.hasOwnProperty(c) || n.hasOwnProperty(c) || (r[o] = 1)
        }
        if (1 === Object.keys(s).length && 1 < Object.keys(this.residues[u]).length && "sphere" !== s[Object.keys(s)[0]].style && "dot" !== s[Object.keys(s)[0]].style) {
            if (void 0 === this.bCid || !this.bCid)
                for (var o in s) {
                    var p = s[o]
                      , m = 1;
                    this.createBox(p, void 0, void 0, m, void 0, i)
                }
        } else
            for (var u in r) {
                var f = this.getFirstCalphaAtomObj(this.residues[u]);
                c = (p = f).structure + "_" + p.chain + "_" + parseInt(p.resi - 1),
                h = p.structure + "_" + p.chain + "_" + parseInt(p.resi + 1);
                if ("cylinder and plate" === p.style && "helix" === p.ss)
                    for (var o in this.residues[u]) {
                        p = this.atoms[o],
                        m = 1;
                        this.createBox(p, void 0, void 0, m, void 0, i)
                    }
                else if ("ribbon" === p.style && "coil" === p.ss || "strand" === p.style && "coil" === p.ss || "o3 trace" === p.style || "schematic" === p.style || "c alpha trace" === p.style || "b factor tube" === p.style || "cylinder and plate" === p.style && "helix" !== p.ss) {
                    if (void 0 !== f && void 0 !== f.style2 && "nothing" !== f.style2)
                        continue;
                    if (!(y = !1) && this.residues.hasOwnProperty(h)) {
                        var g = Object.keys(this.residues[h])[0]
                          , v = this.hash2Atoms(this.residues[h])[g];
                        if (p.style === v.style && !v.ssbegin || v.ssbegin) {
                            var b = this.residues[h];
                            if (t = this.unionHash(t, b),
                            y = !0,
                            v.ssbegin)
                                for (var o in b)
                                    this.atoms[o].notshow = !0
                        }
                    }
                    if (!y && this.residues.hasOwnProperty(c)) {
                        g = Object.keys(this.residues[c])[0],
                        v = this.hash2Atoms(this.residues[c])[g];
                        p.style === v.style && (t = this.unionHash(t, this.residues[c]),
                        y = !0)
                    }
                } else if ("ribbon" === p.style && "coil" !== p.ss && p.ssend || "strand" === p.style && "coil" !== p.ss && p.ssend) {
                    if (void 0 !== f && void 0 !== f.style2 && "nothing" !== f.style2)
                        continue;
                    var y;
                    if (!(y = !1) && this.residues.hasOwnProperty(h)) {
                        g = Object.keys(this.residues[h])[0],
                        v = this.hash2Atoms(this.residues[h])[g];
                        t = this.unionHash(t, this.residues[h]),
                        y = !0
                    }
                }
            }
        s = {}
    }
    this.setStyle2Atoms(t),
    this.bAllAtoms = !1,
    t && void 0 !== t && (this.bAllAtoms = Object.keys(t).length === Object.keys(this.atoms).length);
    var C = .5 * this.cylinderRadius;
    void 0 !== this.labels && delete this.labels.schematic;
    var _ = !1;
    if (i) {
        var S = this.getResiduesFromCalphaAtoms(this.hAtoms)
          , w = this.intHash(this.hAtoms, this.proteins);
        n = this.getResiduesFromAtoms(w);
        Object.keys(n) > Object.keys(S) && (_ = !0)
    }
    for (var A in this.style2atoms) {
        var x = this.style2atoms[A]
          , k = this.isCalphaPhosOnly(this.hash2Atoms(x));
        if ("ribbon" !== A || i && (!i || _))
            if ("strand" !== A || i && (!i || _))
                if ("cylinder and plate" !== A || i && (!i || _))
                    if ("nucleotide cartoon" === A)
                        k ? this.createCylinderCurve(this.hash2Atoms(x), ["P"], this.traceRadius, !1, i) : (this.drawCartoonNucleicAcid(this.hash2Atoms(x), null, this.ribbonthickness, i),
                        2 !== i && this.drawNucleicAcidStick(this.hash2Atoms(x), i));
                    else if ("o3 trace" === A)
                        k ? this.createCylinderCurve(this.hash2Atoms(x), ["P"], this.traceRadius, !1, i) : this.createCylinderCurve(this.hash2Atoms(x), ["O3'", "O3*"], this.traceRadius, !1, i);
                    else if ("schematic" === A) {
                        var D = this.getFirstAtomObj(x);
                        this.chemicals.hasOwnProperty(D.serial) ? (this.addNonCarbonAtomLabels(this.hash2Atoms(x)),
                        bSchematic = !0,
                        this.createStickRepresentation(this.hash2Atoms(x), C, C, void 0, i, bSchematic)) : (this.addResiudeLabels(this.hash2Atoms(x), !0),
                        k ? this.createCylinderCurve(this.hash2Atoms(x), ["P"], this.traceRadius, !1, i) : this.createCylinderCurve(this.hash2Atoms(x), ["O3'", "O3*"], this.traceRadius, !1, i),
                        this.createCylinderCurve(this.hash2Atoms(x), ["CA"], this.traceRadius, !1, i))
                    } else
                        "c alpha trace" === A ? this.createCylinderCurve(this.hash2Atoms(x), ["CA"], this.traceRadius, !1, i) : "b factor tube" === A ? this.createTube(this.hash2Atoms(x), "CA", null, i, !1, !0) : "custom tube" === A ? this.createTube(this.hash2Atoms(x), "CA", null, i, !0, !0) : "lines" === A ? (1 === i ? this.createStickRepresentation(this.hash2Atoms(x), this.hlLineRadius, this.hlLineRadius, void 0, i) : this.createLineRepresentation(this.hash2Atoms(x), i),
                        this.createConnCalphSidechain(this.hash2Atoms(x), A)) : "stick" === A ? (this.createStickRepresentation(this.hash2Atoms(x), this.cylinderRadius, this.cylinderRadius, void 0, i, void 0),
                        this.createConnCalphSidechain(this.hash2Atoms(x), A)) : "backbone" === A ? (x = this.selectMainChainSubset(x),
                        this.createStickRepresentation(this.hash2Atoms(x), this.cylinderRadius, this.cylinderRadius, void 0, i, void 0)) : "ball and stick" === A ? (this.createStickRepresentation(this.hash2Atoms(x), this.cylinderRadius, .5 * this.cylinderRadius, this.dotSphereScale, i, void 0),
                        this.createConnCalphSidechain(this.hash2Atoms(x), A)) : "sphere" === A ? this.createSphereRepresentation(this.hash2Atoms(x), this.sphereRadius, void 0, void 0, i) : "dot" === A && this.createSphereRepresentation(this.hash2Atoms(x), this.sphereRadius, !1, this.dotSphereScale, i);
                else
                    this.createCylinderHelix(this.hash2Atoms(x), this.cylinderHelixRadius, i);
            else
                this.createStrand(this.hash2Atoms(x), null, null, null, null, null, !1, void 0, i);
        else
            this.createStrand(this.hash2Atoms(x), 2, void 0, !0, void 0, void 0, !1, this.ribbonthickness, i)
    }
    this.cnt > this.maxmaxatomcnt && this.init_base(),
    void 0 !== this.labels && 0 < Object.keys(this.labels).length && (this.hideLabels(),
    this.createLabelRepresentation(this.labels))
}
,
iCn3D.prototype.hideLabels = function() {
    this.icn3d;
    if (void 0 !== this.mdl)
        for (var e = 0, t = this.mdl.children.length; e < t; ++e) {
            var i = this.mdl.children[e];
            void 0 !== i && "Sprite" === i.type && this.mdl.remove(i)
        }
}
,
iCn3D.prototype.setStyle2Atoms = function(e) {
    for (var t in this.style2atoms = {},
    e)
        void 0 === this.style2atoms[this.atoms[t].style] && (this.style2atoms[this.atoms[t].style] = {}),
        this.style2atoms[this.atoms[t].style][t] = 1,
        void 0 !== this.atoms[t].style2 && "nothing" !== this.atoms[t].style2 && (void 0 === this.style2atoms[this.atoms[t].style2] && (this.style2atoms[this.atoms[t].style2] = {}),
        this.style2atoms[this.atoms[t].style2][t] = 1)
}
,
iCn3D.prototype.setAtomStyleByOptions = function(e) {
    if (void 0 === e && (e = this.opts),
    void 0 !== e.proteins)
        for (var t in this.intHash(this.hAtoms, this.proteins))
            this.atoms[t].style = e.proteins.toLowerCase();
    if (void 0 !== e.sidec && "nothing" !== e.sidec)
        for (var t in this.intHash(this.hAtoms, this.sidec))
            this.atoms[t].style2 = e.sidec.toLowerCase();
    if (void 0 !== e.chemicals)
        for (var t in this.intHash(this.hAtoms, this.chemicals))
            this.atoms[t].style = e.chemicals.toLowerCase();
    if (void 0 !== e.ions)
        for (var t in this.intHash(this.hAtoms, this.ions))
            this.atoms[t].style = e.ions.toLowerCase();
    if (void 0 !== e.water)
        for (var t in this.intHash(this.hAtoms, this.water))
            this.atoms[t].style = e.water.toLowerCase();
    if (void 0 !== e.nucleotides)
        for (var t in this.intHash(this.hAtoms, this.nucleotides))
            this.atoms[t].style = e.nucleotides.toLowerCase()
}
,
iCn3D.prototype.rebuildSceneBase = function(e) {
    this.icn3d;
    if (jQuery.extend(this.opts, e),
    this.cam_z = 2 * this.maxD,
    void 0 !== this.scene)
        for (var t = this.scene.children.length - 1; 0 <= t; t--) {
            var i = this.scene.children[t];
            this.scene.remove(i)
        }
    else
        this.scene = new THREE.Scene;
    if (void 0 !== this.scene_ghost)
        for (t = this.scene_ghost.children.length - 1; 0 <= t; t--) {
            i = this.scene_ghost.children[t];
            this.scene_ghost.remove(i)
        }
    else
        this.scene_ghost = new THREE.Scene;
    this.directionalLight = new THREE.DirectionalLight(16777215,1),
    this.directionalLight2 = new THREE.DirectionalLight(16777215,.4),
    this.directionalLight3 = new THREE.DirectionalLight(16777215,.2),
    0 < this.cam_z ? (this.directionalLight.position.set(0, 1, 1),
    this.directionalLight2.position.set(0, -1, 1),
    this.directionalLight3.position.set(0, 1, -1),
    this.lightPos = new THREE.Vector3(0,1,1),
    this.lightPos2 = new THREE.Vector3(0,-1,1),
    this.lightPos3 = new THREE.Vector3(0,1,-1)) : (this.directionalLight.position.set(0, 1, -1),
    this.directionalLight2.position.set(0, -1, -1),
    this.directionalLight3.position.set(0, 1, 1),
    this.lightPos = new THREE.Vector3(0,1,-1),
    this.lightPos2 = new THREE.Vector3(0,-1,-1),
    this.lightPos3 = new THREE.Vector3(0,1,1));
    var n = new THREE.AmbientLight(4210752);
    this.scene.add(this.directionalLight),
    this.scene.add(n),
    this.mdl = new THREE.Object3D,
    this.mdlImpostor = new THREE.Object3D,
    this.scene.add(this.mdl),
    this.scene.add(this.mdlImpostor),
    this.mdl_ghost = new THREE.Object3D,
    this.scene_ghost.add(this.mdl_ghost),
    this.objects = [],
    this.objects_ghost = [],
    this.raycaster = new THREE.Raycaster,
    this.projector = new THREE.Projector,
    this.mouse = new THREE.Vector2;
    var r = this.backgroundColors[this.opts.background.toLowerCase()];
    "transparent" === this.opts.background.toLowerCase() ? this.renderer.setClearColor(r, 0) : this.renderer.setClearColor(r, 1),
    this.perspectiveCamera = new THREE.PerspectiveCamera(20,this.container.whratio,.1,1e4),
    this.perspectiveCamera.position.set(0, 0, this.cam_z),
    this.perspectiveCamera.lookAt(new THREE.Vector3(0,0,0)),
    this.orthographicCamera = new THREE.OrthographicCamera,
    this.orthographicCamera.position.set(0, 0, this.cam_z),
    this.orthographicCamera.lookAt(new THREE.Vector3(0,0,0)),
    this.cams = {
        perspective: this.perspectiveCamera,
        orthographic: this.orthographicCamera
    }
}
,
iCn3D.prototype.setCamera = function() {
    if (this.bControlGl) {
        window.cam = this.cams[this.opts.camera.toLowerCase()];
        var e = this.maxD;
        if (window.cam === this.perspectiveCamera)
            (t = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt) ? window.camMaxDFactor = 1 : void 0 !== window.camMaxDFactorFog ? window.camMaxDFactor = window.camMaxDFactorFog : window.camMaxDFactor = 2,
            0 < window.cam_z ? window.cam.position.z = e * window.camMaxDFactor : window.cam.position.z = -e * window.camMaxDFactor,
            "yes" === this.opts.slab ? t ? window.cam.near = .1 : void 0 !== window.camMaxDFactorFog ? window.cam.near = e * window.camMaxDFactorFog - 10 : window.cam.near = e * window.camMaxDFactor : window.cam.near = .1,
            window.cam.far = 1e4,
            this.bControlGl ? window.controls = new THREE.TrackballControls(window.cam,void 0,void 0) : this.controls = new THREE.TrackballControls(this.cam,document.getElementById(this.id),this);
        else
            window.cam === this.orthographicCamera && (void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > 10 * this.maxatomcnt ? window.cam.right = this.maxD / 2 * 1.5 : window.cam.right = this.maxD / 2 * 2.5,
            window.cam.left = -window.cam.right,
            window.cam.top = window.cam.right / this.container.whratio,
            window.cam.bottom = -window.cam.right / this.container.whratio,
            "yes" === this.opts.slab ? window.cam.near = 2 * this.maxD : window.cam.near = 0,
            window.cam.far = 1e4,
            this.bControlGl ? window.controls = new THREE.OrthographicTrackballControls(window.cam,void 0,void 0) : this.controls = new THREE.OrthographicTrackballControls(this.cam,document.getElementById(this.id),this));
        window.cam.updateProjectionMatrix()
    }
    this.cam = this.cams[this.opts.camera.toLowerCase()];
    var t;
    e = this.maxD;
    this.cam === this.perspectiveCamera ? ((t = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt) ? this.camMaxDFactor = 1 : void 0 !== this.camMaxDFactorFog ? this.camMaxDFactor = this.camMaxDFactorFog : this.camMaxDFactor = 2,
    0 < this.cam_z ? this.cam.position.z = e * this.camMaxDFactor : this.cam.position.z = -e * this.camMaxDFactor,
    "yes" === this.opts.slab ? t ? this.cam.near = .1 : void 0 !== this.camMaxDFactorFog ? this.cam.near = e * this.camMaxDFactorFog - 10 : this.cam.near = e * this.camMaxDFactor : this.cam.near = .1,
    this.cam.far = 1e4,
    this.bControlGl ? window.controls = new THREE.TrackballControls(this.cam,void 0,void 0) : this.controls = new THREE.TrackballControls(this.cam,document.getElementById(this.id),this)) : this.cam === this.orthographicCamera && (void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > 10 * this.maxatomcnt ? this.cam.right = this.maxD / 2 * 1.5 : this.cam.right = this.maxD / 2 * 2.5,
    this.cam.left = -this.cam.right,
    this.cam.top = this.cam.right / this.container.whratio,
    this.cam.bottom = -this.cam.right / this.container.whratio,
    "yes" === this.opts.slab ? this.cam.near = 2 * this.maxD : this.cam.near = 0,
    this.cam.far = 1e4,
    this.bControlGl ? window.controls = new THREE.OrthographicTrackballControls(this.cam,void 0,void 0) : this.controls = new THREE.OrthographicTrackballControls(this.cam,document.getElementById(this.id),this));
    this.cam.updateProjectionMatrix()
}
,
iCn3D.prototype.render = function() {
    var e = this.bControlGl ? window.cam : this.cam
      , t = new THREE.Quaternion;
    t.setFromUnitVectors(new THREE.Vector3(0,0,this.cam_z).normalize(), e.position.clone().normalize()),
    this.directionalLight.position.copy(this.lightPos.clone().applyQuaternion(t).normalize()),
    this.directionalLight2.position.copy(this.lightPos2.clone().applyQuaternion(t).normalize()),
    this.directionalLight3.position.copy(this.lightPos3.clone().applyQuaternion(t).normalize()),
    this.renderer.gammaInput = !0,
    this.renderer.gammaOutput = !0,
    this.renderer.setPixelRatio(window.devicePixelRatio),
    this.scene && this.renderer.render(this.scene, e)
}
,
iCn3D.prototype.clearImpostors = function() {
    this.posArray = [],
    this.colorArray = [],
    this.pos2Array = [],
    this.color2Array = [],
    this.radiusArray = [],
    this.posArraySphere = [],
    this.colorArraySphere = [],
    this.radiusArraySphere = []
}
,
iCn3D.prototype.applyTransformation = function(e, t, i) {
    var n = {
        update: !1
    };
    n._zoomFactor = e,
    n.mouseChange = new THREE.Vector2,
    n.mouseChange.copy(t),
    n.quaternion = new THREE.Quaternion,
    n.quaternion.copy(i),
    this.bControlGl ? window.controls.update(n) : this.controls.update(n)
}
,
iCn3D.prototype.applyCenterOptions = function(e) {
    var t;
    switch (void 0 === e && (e = this.opts),
    e.rotationcenter.toLowerCase()) {
    case "molecule center":
        void 0 !== this.center && this.setRotationCenter(this.center);
        break;
    case "pick center":
        void 0 !== this.pAtom && this.setRotationCenter(this.pAtom.coord);
        break;
    case "display center":
        t = this.centerAtoms(this.dAtoms).center,
        this.setRotationCenter(t);
        break;
    case "highlight center":
        t = this.centerAtoms(this.hAtoms).center,
        this.setRotationCenter(t)
    }
}
,
iCn3D.prototype.setRotationCenter = function(e) {
    this.setCenter(e)
}
,
iCn3D.prototype.applyOriginalColor = function(e) {
    for (var t in void 0 === e && (e = this.atoms),
    e) {
        var i = e[t]
          , n = i.structure + "_" + i.chain;
        this.chainsColor.hasOwnProperty(n) ? i.color = this.chainsColor[n] : i.color = this.atomColors[i.elem],
        this.atomPrevColors[t] = i.color
    }
}
,
iCn3D.prototype.onBeforeRender = function(e, t, i, n, r) {
    var s = r.uniforms
      , o = [];
    if (s.objectId && (s.objectId.value = SupportsReadPixelsFloat ? this.id : this.id / 255,
    o.push("objectId")),
    (s.modelViewMatrixInverse || s.modelViewMatrixInverseTranspose || s.modelViewProjectionMatrix || s.modelViewProjectionMatrixInverse) && this.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, this.matrixWorld),
    s.modelViewMatrixInverse && (s.modelViewMatrixInverse.value.getInverse(this.modelViewMatrix),
    o.push("modelViewMatrixInverse")),
    s.modelViewMatrixInverseTranspose && (s.modelViewMatrixInverse ? s.modelViewMatrixInverseTranspose.value.copy(s.modelViewMatrixInverse.value).transpose() : s.modelViewMatrixInverseTranspose.value.getInverse(this.modelViewMatrix).transpose(),
    o.push("modelViewMatrixInverseTranspose")),
    s.modelViewProjectionMatrix && (i.updateProjectionMatrix(),
    s.modelViewProjectionMatrix.value.multiplyMatrices(i.projectionMatrix, this.modelViewMatrix),
    o.push("modelViewProjectionMatrix")),
    s.modelViewProjectionMatrixInverse) {
        var a = new THREE.Matrix4;
        s.modelViewProjectionMatrix ? a.copy(s.modelViewProjectionMatrix.value) : (i.updateProjectionMatrix(),
        a.multiplyMatrices(i.projectionMatrix, this.modelViewMatrix)),
        s.modelViewProjectionMatrixInverse.value.getInverse(a),
        o.push("modelViewProjectionMatrixInverse")
    }
    if (s.projectionMatrix && (i.updateProjectionMatrix(),
    s.projectionMatrix.value.copy(i.projectionMatrix),
    o.push("projectionMatrix")),
    s.projectionMatrixInverse && (i.updateProjectionMatrix(),
    s.projectionMatrixInverse.value.getInverse(i.projectionMatrix),
    o.push("projectionMatrixInverse")),
    o.length) {
        var l = e.properties.get(r);
        if (l.program) {
            var d = e.getContext()
              , c = l.program;
            d.useProgram(c.program);
            var h = c.getUniforms();
            o.forEach(function(e) {
                h.setValue(d, e, s[e].value)
            })
        }
    }
}
,
iCn3D.prototype.setParametersForShader = function(e) {
    this.icn3d;
    var t, i = this.backgroundColors[this.opts.background.toLowerCase()], n = 2.5 * this.maxD, r = 4 * this.maxD, s = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt;
    "yes" === this.opts.slab ? s ? t = .1 : void 0 !== this.camMaxDFactorFog ? (t = this.maxD * this.camMaxDFactorFog - 10,
    n = 2.5 * this.maxD - t < 0 ? 0 : 2.5 * this.maxD - t,
    r = 4 * this.maxD - t) : t = this.maxD * this.camMaxDFactor : t = .1;
    var o = void 0 !== e ? e : 1;
    this.uniforms = THREE.UniformsUtils.merge([THREE.UniformsLib.common, {
        modelViewMatrix: {
            value: new THREE.Matrix4
        },
        modelViewMatrixInverse: {
            value: new THREE.Matrix4
        },
        modelViewMatrixInverseTranspose: {
            value: new THREE.Matrix4
        },
        modelViewProjectionMatrix: {
            value: new THREE.Matrix4
        },
        modelViewProjectionMatrixInverse: {
            value: new THREE.Matrix4
        },
        projectionMatrix: {
            value: new THREE.Matrix4
        },
        projectionMatrixInverse: {
            value: new THREE.Matrix4
        },
        diffuse: {
            type: "v3",
            value: [1, 1, 1]
        },
        emissive: {
            type: "v3",
            value: [0, 0, 0]
        },
        roughness: {
            type: "f",
            value: .5
        },
        metalness: {
            type: "f",
            value: .3
        },
        opacity: {
            type: "f",
            value: o
        },
        nearClip: {
            type: "f",
            value: t
        },
        ortho: {
            type: "f",
            value: 0
        },
        shrink: {
            type: "f",
            value: .13
        },
        fogColor: {
            type: "v3",
            value: [i.r, i.g, i.b]
        },
        fogNear: {
            type: "f",
            value: n
        },
        fogFar: {
            type: "f",
            value: r
        },
        fogDensity: {
            type: "f",
            value: 2
        }
    }, THREE.UniformsLib.ambient, THREE.UniformsLib.lights]),
    this.defines = {
        USE_COLOR: 1,
        NEAR_CLIP: 1,
        CAP: 1
    },
    "yes" !== this.opts.fog || s || (this.defines.USE_FOG = 1,
    "orthographic" === this.opts.camera && (this.defines.FOG_EXP2 = 1)),
    this.bExtFragDepth && (this.defines.USE_LOGDEPTHBUF_EXT = 1)
}
,
iCn3D.prototype.drawImpostorShader = function() {
    this.icn3d;
    this.setParametersForShader(),
    this.createImpostorShaderSphere("SphereImpostor"),
    this.createImpostorShaderCylinder("CylinderImpostor")
}
,
iCn3D.prototype.getShader = function(e) {
    this.icn3d;
    var t = $NGL_shaderTextHash[e];
    return t = t.replace(/#include\s+(\S+)/gim, function(e, t) {
        var i;
        return THREE.ShaderChunk.hasOwnProperty(t) && (i = THREE.ShaderChunk[t]),
        i || ""
    })
}
,
iCn3D.prototype.createImpostorShaderBase = function(e, t, i, n, r, s, o, a, l) {
    var d = this
      , c = (d.icn3d,
    new THREE.ShaderMaterial({
        defines: d.defines,
        uniforms: d.uniforms,
        vertexShader: d.getShader(e + ".vert"),
        fragmentShader: d.getShader(e + ".frag"),
        depthTest: !0,
        depthWrite: !0,
        needsUpdate: !0,
        lights: !0
    }));
    c.extensions.fragDepth = !0,
    "CylinderImpostor" == e ? this.CylinderImpostorMaterial = c : "SphereImpostor" == e && (this.SphereImpostorMaterial = c);
    for (var h, p, m = s * o, u = s * a, f = new (65535 < m ? Uint32Array : Uint16Array)(u), g = 0; g < s; g++) {
        h = g * a,
        p = g * o,
        f.set(i, h);
        for (var v = 0; v < a; ++v)
            f[h + v] += p
    }
    var b = new THREE.BufferGeometry;
    f && (b.setIndex(new THREE.BufferAttribute(f,1)),
    b.getIndex().setDynamic(!0));
    var y = {
        f: 1,
        v2: 2,
        v3: 3,
        c: 3
    };
    for (var C in r) {
        var _, S = r[C];
        _ = new Float32Array(m * y[S.type]),
        b.addAttribute(C, new THREE.BufferAttribute(_,y[S.type]).setDynamic(!0))
    }
    var w, A, x, k, D, O = b.attributes;
    for (var C in n) {
        w = n[C],
        A = (S = O[C]).itemSize,
        x = S.array;
        for (var R = 0; R < s; ++R) {
            k = (u = R * A) * o;
            for (var T = 0; T < o; ++T) {
                D = k + A * T;
                for (var E = 0; E < A; ++E)
                    x[D + E] = w[u + E]
            }
        }
        S.needsUpdate = !0
    }
    var I = b.attributes.mapping.array;
    for (g = 0; g < s; g++)
        I.set(t, g * l * o);
    var H = new THREE.Mesh(b,c);
    H.frustumCulled = !1,
    H.scale.x = H.scale.y = H.scale.z = 1,
    "CylinderImpostor" == e ? H.type = "Cylinder" : "SphereImpostor" == e && (H.type = "Sphere"),
    H.onBeforeRender = this.onBeforeRender,
    this.mdlImpostor.add(H)
}
,
iCn3D.prototype.createImpostorShaderCylinder = function(e) {
    var t = this
      , i = (t.icn3d,
    new Float32Array(t.posArray))
      , n = new Float32Array(t.colorArray)
      , r = new Float32Array(t.pos2Array)
      , s = new Float32Array(t.color2Array)
      , o = new Float32Array(t.radiusArray)
      , a = new Float32Array([-1, 1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, -1, 1])
      , l = new Uint16Array([0, 1, 2, 1, 4, 2, 2, 4, 3, 4, 5, 3])
      , d = i.length / 3
      , c = {
        position1: i,
        color: n,
        position2: r,
        color2: s,
        radius: o
    }
      , h = {
        position1: {
            type: "v3",
            value: null
        },
        color: {
            type: "v3",
            value: null
        },
        position2: {
            type: "v3",
            value: null
        },
        color2: {
            type: "v3",
            value: null
        },
        radius: {
            type: "f",
            value: null
        },
        mapping: {
            type: "v3",
            value: null
        }
    };
    this.createImpostorShaderBase(e, a, l, c, h, d, 6, 12, 3),
    o = s = r = n = i = c = null,
    t.posArray = [],
    t.colorArray = [],
    t.pos2Array = [],
    t.color2Array = [],
    t.radiusArray = []
}
,
iCn3D.prototype.createImpostorShaderSphere = function(e) {
    var t = this
      , i = (t.icn3d,
    new Float32Array(t.posArraySphere))
      , n = new Float32Array(t.colorArraySphere)
      , r = new Float32Array(t.radiusArraySphere)
      , s = new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1])
      , o = new Uint16Array([0, 1, 2, 1, 3, 2])
      , a = i.length / 3
      , l = {
        position: i,
        color: n,
        radius: r
    }
      , d = {
        position: {
            type: "v3",
            value: null
        },
        color: {
            type: "v3",
            value: null
        },
        radius: {
            type: "f",
            value: null
        },
        mapping: {
            type: "v2",
            value: null
        }
    };
    this.createImpostorShaderBase(e, s, o, l, d, a, 4, 6, 2),
    r = n = i = l = null,
    t.posArraySphere = [],
    t.colorArraySphere = [],
    t.radiusArraySphere = []
}
,
iCn3D.prototype.positionFromGeometry = function(e) {
    this.icn3d;
    for (var t, i, n = e.geometry, r = n.vertices, s = e.position, o = e.scale, a = e.matrix, l = r.length, d = [], c = 0; c < l; c++)
        t = 3 * c,
        i = "SphereGeometry" == n.type || "BoxGeometry" == n.type ? r[c].clone().multiply(o).add(s) : "CylinderGeometry" == n.type ? r[c].clone().applyMatrix4(a) : r[c],
        d[0 + t] = i.x,
        d[1 + t] = i.y,
        d[2 + t] = i.z;
    return d
}
,
iCn3D.prototype.colorFromGeometry = function(e) {
    this.icn3d;
    var t = e.geometry
      , i = this.thr(1, 1, 1);
    "SphereGeometry" != t.type && "BoxGeometry" != t.type && "CylinderGeometry" != t.type || void 0 !== e.material && (i = e.material.color);
    for (var n, r, s, o, a, l = t.faces, d = (t.vertices.length,
    t.type,
    l.length), c = [], h = 0; h < d; h++)
        r = l[h],
        a = "Surface" == t.type ? (s = r.vertexColors[0],
        o = r.vertexColors[1],
        r.vertexColors[2]) : "SphereGeometry" == t.type || "BoxGeometry" == t.type || "CylinderGeometry" == t.type ? o = s = i : (s = r.color,
        o = r.color,
        r.color),
        c[(n = 3 * r.a) + 0] = s.r,
        c[n + 1] = s.g,
        c[n + 2] = s.b,
        c[(n = 3 * r.b) + 0] = o.r,
        c[n + 1] = o.g,
        c[n + 2] = o.b,
        c[(n = 3 * r.c) + 0] = a.r,
        c[n + 1] = a.g,
        c[n + 2] = a.b;
    return c
}
,
iCn3D.prototype.indexFromGeometry = function(e) {
    this.icn3d;
    for (var t, i, n = e.geometry.faces, r = n.length, s = [], o = 0; o < r; o++)
        t = 3 * o,
        i = n[o],
        s[0 + t] = i.a,
        s[1 + t] = i.b,
        s[2 + t] = i.c;
    return s
}
,
iCn3D.prototype.normalFromGeometry = function(e) {
    this.icn3d;
    for (var t, i, n, r, s, o, a = e.geometry, l = a.faces, d = (a.vertices.length,
    l.length), c = [], h = 0; h < d; h++)
        r = (n = (i = l[h]).vertexNormals)[0],
        s = n[1],
        o = n[2],
        c[(t = 3 * i.a) + 0] = r.x,
        c[t + 1] = r.y,
        c[t + 2] = r.z,
        c[(t = 3 * i.b) + 0] = s.x,
        c[t + 1] = s.y,
        c[t + 2] = s.z,
        c[(t = 3 * i.c) + 0] = o.x,
        c[t + 1] = o.y,
        c[t + 2] = o.z;
    return c
}
,
iCn3D.prototype.hashvalue2array = function(e) {
    this.icn3d;
    var t = [];
    for (var i in e)
        t.push(e[i]);
    return t
}
,
iCn3D.prototype.drawSymmetryMates = function() {
    this.icn3d;
    this.bInstanced && Object.keys(this.atoms).length * this.biomtMatrices.length > this.maxatomcnt ? this.drawSymmetryMatesInstancing() : this.drawSymmetryMatesNoInstancing()
}
,
iCn3D.prototype.applyMat = function(e, t, i) {
    this.icn3d;
    if (void 0 === this.rmsd_supr)
        void 0 === i ? e.applyMatrix(t) : i && e.applyMatrix4(t);
    else {
        var n = this.rmsd_supr.rot
          , r = this.rmsd_supr.trans1
          , s = this.rmsd_supr.trans2
          , o = new THREE.Matrix4;
        o.set(n[0], n[1], n[2], 0, n[3], n[4], n[5], 0, n[6], n[7], n[8], 0, 0, 0, 0, 1);
        var a = new THREE.Matrix4;
        a.getInverse(o);
        var l = new THREE.Matrix4;
        void 0 === i ? (l.makeTranslation(-s.x, -s.y, -s.z),
        e.applyMatrix(l),
        e.applyMatrix(a),
        l.makeTranslation(r.x, r.y, r.z),
        e.applyMatrix(l),
        e.applyMatrix(t),
        l.makeTranslation(-r.x, -r.y, -r.z),
        e.applyMatrix(l),
        e.applyMatrix(o),
        l.makeTranslation(s.x, s.y, s.z),
        e.applyMatrix(l)) : i && (l.makeTranslation(-s.x, -s.y, -s.z),
        e.applyMatrix4(l),
        e.applyMatrix4(a),
        l.makeTranslation(r.x, r.y, r.z),
        e.applyMatrix4(l),
        e.applyMatrix4(t),
        l.makeTranslation(-r.x, -r.y, -r.z),
        e.applyMatrix4(l),
        e.applyMatrix4(o),
        l.makeTranslation(s.x, s.y, s.z),
        e.applyMatrix4(l))
    }
}
,
iCn3D.prototype.drawSymmetryMatesNoInstancing = function() {
    this.icn3d;
    if (void 0 !== this.biomtMatrices && 0 != this.biomtMatrices.length) {
        var e = 1
          , t = this.center.clone()
          , i = new THREE.Matrix4;
        i.identity();
        for (var n = new THREE.Object3D, r = new THREE.Object3D, s = new THREE.Object3D, o = 0; o < this.biomtMatrices.length; o++) {
            var a = this.biomtMatrices[o];
            if (void 0 !== a && !a.equals(i)) {
                var l;
                if (void 0 !== this.mdl && (l = this.mdl.clone(),
                this.applyMat(l, a),
                n.add(l)),
                void 0 !== this.mdlImpostor) {
                    l = this.mdlImpostor.clone(),
                    this.applyMat(l, a);
                    for (var d = l.children.length - 1; 0 <= d; d--) {
                        l.children[d].onBeforeRender = this.onBeforeRender
                    }
                    r.add(l)
                }
                void 0 !== this.mdl_ghost && (l = this.mdl_ghost.clone(),
                this.applyMat(l, a),
                s.add(l));
                var c = this.center.clone();
                this.applyMat(c, a, !0),
                t.add(c),
                ++e
            }
        }
        this.mdl.add(n),
        this.mdlImpostor.add(r),
        this.mdl_ghost.add(s),
        void 0 !== this.bSetInstancing && this.bSetInstancing ? (this.maxD = this.maxDAssembly,
        this.center = this.centerAssembly.clone()) : (this.maxD *= Math.sqrt(e),
        this.center = t.multiplyScalar(1 / e),
        this.maxDAssembly = this.maxD,
        this.centerAssembly = this.center.clone()),
        this.setCenter(this.center),
        this.setCamera(),
        this.bSetInstancing = !0
    }
}
,
iCn3D.prototype.createInstancedGeometry = function(e) {
    this.icn3d;
    var t = e.geometry
      , i = new THREE.InstancedBufferGeometry
      , n = []
      , r = []
      , s = []
      , o = []
      , a = []
      , l = []
      , d = []
      , c = [];
    if (t.vertices && t.faces) {
        this.instancedMaterial = this.getInstancedMaterial("Instancing");
        var h = this.positionFromGeometry(e)
          , p = this.normalFromGeometry(e)
          , m = this.colorFromGeometry(e)
          , u = this.indexFromGeometry(e);
        n = n.concat(h),
        r = r.concat(p),
        s = s.concat(m),
        o = o.concat(u);
        for (var f = [], g = "CylinderGeometry" == t.type ? 1 : 0, v = 0, b = n.length / 3; v < b; ++v)
            f.push(g);
        i.addAttribute("position", new THREE.BufferAttribute(new Float32Array(n),3)),
        i.addAttribute("normal", new THREE.BufferAttribute(new Float32Array(r),3)),
        i.addAttribute("color", new THREE.BufferAttribute(new Float32Array(s),3)),
        i.addAttribute("cylinder", new THREE.BufferAttribute(new Float32Array(f),1)),
        i.setIndex(new THREE.BufferAttribute(new Uint32Array(o),1)),
        u = m = p = h = null
    } else if (this.bImpo && void 0 !== t.attributes.color2) {
        this.instancedMaterial = this.getInstancedMaterial("CylinderInstancing");
        h = this.hashvalue2array(t.attributes.position1.array),
        m = this.hashvalue2array(t.attributes.color.array);
        var y = this.hashvalue2array(t.attributes.position2.array)
          , C = this.hashvalue2array(t.attributes.color2.array)
          , _ = (u = this.hashvalue2array(t.index.array),
        this.hashvalue2array(t.attributes.radius.array))
          , S = this.hashvalue2array(t.attributes.mapping.array);
        n = n.concat(h),
        s = s.concat(m),
        d = d.concat(y),
        c = c.concat(C),
        o = o.concat(u),
        a = a.concat(_),
        l = l.concat(S),
        i.addAttribute("position1", new THREE.BufferAttribute(new Float32Array(n),3)),
        i.addAttribute("color", new THREE.BufferAttribute(new Float32Array(s),3)),
        i.addAttribute("position2", new THREE.BufferAttribute(new Float32Array(d),3)),
        i.addAttribute("color2", new THREE.BufferAttribute(new Float32Array(c),3)),
        i.addAttribute("radius", new THREE.BufferAttribute(new Float32Array(a),1)),
        i.addAttribute("mapping", new THREE.BufferAttribute(new Float32Array(l),3)),
        i.setIndex(new THREE.BufferAttribute(new Uint32Array(o),1)),
        S = _ = u = C = y = m = h = null
    } else if (this.bImpo && void 0 !== t.attributes.color) {
        this.instancedMaterial = this.getInstancedMaterial("SphereInstancing");
        h = this.hashvalue2array(t.attributes.position.array),
        m = this.hashvalue2array(t.attributes.color.array),
        u = this.hashvalue2array(t.index.array),
        _ = this.hashvalue2array(t.attributes.radius.array),
        S = this.hashvalue2array(t.attributes.mapping.array);
        n = n.concat(h),
        s = s.concat(m),
        o = o.concat(u),
        a = a.concat(_),
        l = l.concat(S),
        i.addAttribute("position", new THREE.BufferAttribute(new Float32Array(n),3)),
        i.addAttribute("color", new THREE.BufferAttribute(new Float32Array(s),3)),
        i.addAttribute("radius", new THREE.BufferAttribute(new Float32Array(a),1)),
        i.addAttribute("mapping", new THREE.BufferAttribute(new Float32Array(l),2)),
        i.setIndex(new THREE.BufferAttribute(new Uint32Array(o),1)),
        S = _ = u = m = h = null
    }
    c = d = l = a = o = s = r = n = null;
    var w = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements1),4)
      , A = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements2),4)
      , x = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements3),4)
      , k = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements4),4);
    return i.addAttribute("matrix1", w),
    i.addAttribute("matrix2", A),
    i.addAttribute("matrix3", x),
    i.addAttribute("matrix4", k),
    i
}
,
iCn3D.prototype.getInstancedMaterial = function(e) {
    this.icn3d;
    var t = new THREE.ShaderMaterial({
        defines: this.defines,
        uniforms: this.uniforms,
        vertexShader: this.getShader(e + ".vert"),
        fragmentShader: this.getShader(e + ".frag"),
        depthTest: !0,
        depthWrite: !0,
        needsUpdate: !0,
        lights: !0
    });
    return t.extensions.fragDepth = !0,
    t.extensions.derivatives = "#extension GL_OES_standard_derivatives : enable",
    t
}
,
iCn3D.prototype.createInstancedMesh = function(e) {
    this.icn3d;
    for (var t = 0, i = e.children.length; t < i; ++t) {
        var n = e.children[t];
        if ("Sprite" !== n.type) {
            var r = this.createInstancedGeometry(n)
              , s = new THREE.Mesh(r,this.instancedMaterial);
            s.onBeforeRender = this.onBeforeRender,
            s.frustumCulled = !1,
            r = null,
            e.add(s)
        }
    }
}
,
iCn3D.prototype.drawSymmetryMatesInstancing = function() {
    this.icn3d;
    if (void 0 !== this.biomtMatrices && 0 != this.biomtMatrices.length) {
        var e = 1
          , t = this.center.clone();
        if (this.setParametersForShader(),
        void 0 === this.bSetInstancing || !this.bSetInstancing) {
            this.matricesElements1 = [],
            this.matricesElements2 = [],
            this.matricesElements3 = [],
            this.matricesElements4 = [];
            var i = new THREE.Matrix4;
            i.identity();
            for (var n = 0; n < this.biomtMatrices.length; n++) {
                var r = this.biomtMatrices[n];
                if (void 0 !== r) {
                    var s = r.toArray();
                    if (!r.equals(i)) {
                        this.matricesElements1.push(s[0], s[1], s[2], s[3]),
                        this.matricesElements2.push(s[4], s[5], s[6], s[7]),
                        this.matricesElements3.push(s[8], s[9], s[10], s[11]),
                        this.matricesElements4.push(s[12], s[13], s[14], s[15]);
                        var o = this.center.clone();
                        o.applyMatrix4(r),
                        t.add(o),
                        ++e
                    }
                }
            }
        }
        this.createInstancedMesh(this.mdl),
        this.createInstancedMesh(this.mdlImpostor),
        void 0 !== this.bSetInstancing && this.bSetInstancing ? (this.maxD = this.maxDAssembly,
        this.center = this.centerAssembly.clone()) : (this.maxD *= Math.sqrt(e),
        this.center = t.multiplyScalar(1 / e),
        this.maxDAssembly = this.maxD,
        this.centerAssembly = this.center.clone()),
        this.setCenter(this.center),
        this.setCamera(),
        this.bSetInstancing = !0
    }
}
,
iCn3D.prototype.cloneHash = function(e) {
    this.icn3d;
    var t = {};
    for (var i in e)
        t[i] = e[i];
    return t
}
,
iCn3D.prototype.residueName2Abbr = function(e) {
    this.icn3d;
    var t = e.indexOf(" ");
    switch (0 < t && (e = e.substr(0, t)),
    e) {
    case "  A":
        return "A";
    case "  C":
        return "C";
    case "  G":
        return "G";
    case "  T":
        return "T";
    case "  U":
        return "U";
    case "  I":
        return "I";
    case " DA":
        return "A";
    case " DC":
        return "C";
    case " DG":
        return "G";
    case " DT":
        return "T";
    case " DU":
        return "U";
    case " DI":
        return "I";
    case "DA":
        return "A";
    case "DC":
        return "C";
    case "DG":
        return "G";
    case "DT":
        return "T";
    case "DU":
        return "U";
    case "DI":
        return "I";
    case "ALA":
        return "A";
    case "ARG":
        return "R";
    case "ASN":
        return "N";
    case "ASP":
        return "D";
    case "CYS":
        return "C";
    case "GLU":
        return "E";
    case "GLN":
        return "Q";
    case "GLY":
        return "G";
    case "HIS":
        return "H";
    case "ILE":
        return "I";
    case "LEU":
        return "L";
    case "LYS":
        return "K";
    case "MET":
        return "M";
    case "PHE":
        return "F";
    case "PRO":
        return "P";
    case "SER":
        return "S";
    case "THR":
        return "T";
    case "TRP":
        return "W";
    case "TYR":
        return "Y";
    case "VAL":
        return "V";
    case "SEC":
        return "U";
    case "HOH":
    case "WAT":
        return "O";
    default:
        return e.trim()
    }
}
,
iCn3D.prototype.residueAbbr2Name = function(e) {
    this.icn3d;
    if (1 < e.length)
        return e;
    switch (e) {
    case "A":
        return "ALA";
    case "R":
        return "ARG";
    case "N":
        return "ASN";
    case "D":
        return "ASP";
    case "C":
        return "CYS";
    case "E":
        return "GLU";
    case "Q":
        return "GLN";
    case "G":
        return "GLY";
    case "H":
        return "HIS";
    case "I":
        return "ILE";
    case "L":
        return "LEU";
    case "K":
        return "LYS";
    case "M":
        return "MET";
    case "F":
        return "PHE";
    case "P":
        return "PRO";
    case "S":
        return "SER";
    case "T":
        return "THR";
    case "W":
        return "TRP";
    case "Y":
        return "TYR";
    case "V":
        return "VAL";
    case "O":
        return "HOH";
    default:
        return e.trim()
    }
}
,
iCn3D.prototype.intHash = function(e, t) {
    this.icn3d;
    var i = {};
    if (Object.keys(e).length < Object.keys(t).length)
        for (var n in e)
            void 0 !== t && t[n] && (i[n] = e[n]);
    else
        for (var n in t)
            void 0 !== e && e[n] && (i[n] = t[n]);
    return i
}
,
iCn3D.prototype.exclHash = function(e, t) {
    this.icn3d;
    for (var i in e)
        void 0 !== t && t[i] && delete e[i];
    return e
}
,
iCn3D.prototype.unionHash = function(e, t) {
    this.icn3d;
    return this.unionHashInPlace(e, t)
}
,
iCn3D.prototype.unionHashInPlace = function(e, t) {
    this.icn3d;
    return void 0 === e && (e = {}),
    void 0 === t && (t = {}),
    jQuery.extend(e, t),
    e
}
,
iCn3D.prototype.unionHashNotInPlace = function(e, t) {
    this.icn3d;
    return jQuery.extend({}, e, t)
}
,
iCn3D.prototype.intHash2Atoms = function(e, t) {
    this.icn3d;
    return this.hash2Atoms(this.intHash(e, t))
}
,
iCn3D.prototype.exclHash2Atoms = function(e, t) {
    this.icn3d;
    return this.hash2Atoms(this.exclHash(e, t))
}
,
iCn3D.prototype.unionHash2Atoms = function(e, t) {
    this.icn3d;
    return this.hash2Atoms(this.unionHash(e, t))
}
,
iCn3D.prototype.hash2Atoms = function(e) {
    this.icn3d;
    var t = {};
    for (var i in e)
        t[i] = this.atoms[i];
    return t
}
,
iCn3D.prototype.exportCanvas = function() {
    this.icn3d;
    this.bRender && this.render(),
    window.open(this.renderer.domElement.toDataURL("image/png"))
}
,
iCn3D.prototype.zoomIn = function(e) {
    this.icn3d;
    var t = {};
    t._zoomFactor = 1 - e,
    t.update = !0,
    this.bControlGl ? window.controls.update(t) : this.controls.update(t),
    this.bRender && this.render()
}
,
iCn3D.prototype.zoomOut = function(e) {
    this.icn3d;
    var t = {};
    t._zoomFactor = 1 + e,
    t.update = !0,
    this.bControlGl ? window.controls.update(t) : this.controls.update(t),
    this.bRender && this.render()
}
,
iCn3D.prototype.rotateLeft = function(e) {
    this.icn3d;
    var t = new THREE.Vector3(0,1,0)
      , i = -e / 180 * Math.PI;
    this.bControlGl ? t.applyQuaternion(window.cam.quaternion).normalize() : t.applyQuaternion(this.cam.quaternion).normalize();
    var n = new THREE.Quaternion;
    n.setFromAxisAngle(t, -i);
    var r = {};
    r.quaternion = n,
    r.update = !0,
    this.bControlGl ? window.controls.update(r) : this.controls.update(r),
    this.bRender && this.render()
}
,
iCn3D.prototype.rotateRight = function(e) {
    this.icn3d;
    var t = new THREE.Vector3(0,1,0)
      , i = e / 180 * Math.PI;
    this.bControlGl ? t.applyQuaternion(window.cam.quaternion).normalize() : t.applyQuaternion(this.cam.quaternion).normalize();
    var n = new THREE.Quaternion;
    n.setFromAxisAngle(t, -i);
    var r = {};
    r.quaternion = n,
    r.update = !0,
    this.bControlGl ? window.controls.update(r) : this.controls.update(r),
    this.bRender && this.render()
}
,
iCn3D.prototype.rotateUp = function(e) {
    this.icn3d;
    this.rotate_base(-e)
}
,
iCn3D.prototype.rotateDown = function(e) {
    this.icn3d;
    this.rotate_base(e)
}
,
iCn3D.prototype.rotate_base = function(e) {
    this.icn3d;
    var t = new THREE.Vector3(1,0,0)
      , i = e / 180 * Math.PI;
    this.bControlGl ? t.applyQuaternion(window.cam.quaternion).normalize() : t.applyQuaternion(this.cam.quaternion).normalize();
    var n = new THREE.Quaternion;
    n.setFromAxisAngle(t, -i);
    var r = {};
    r.quaternion = n,
    r.update = !0,
    this.bControlGl ? window.controls.update(r) : this.controls.update(r),
    this.bRender && this.render()
}
,
iCn3D.prototype.translateLeft = function(e) {
    this.icn3d;
    this.translate_base(-e, 0)
}
,
iCn3D.prototype.translateRight = function(e) {
    this.icn3d;
    this.translate_base(e, 0)
}
,
iCn3D.prototype.translateUp = function(e) {
    this.icn3d;
    this.translate_base(0, -e)
}
,
iCn3D.prototype.translateDown = function(e) {
    this.icn3d;
    this.translate_base(0, e)
}
,
iCn3D.prototype.translate_base = function(e, t) {
    this.icn3d;
    var i = new THREE.Vector2(0,0);
    i.x += e / 100,
    i.y += t / 100;
    var n = {};
    n.mouseChange = i,
    n.update = !0,
    this.bControlGl ? window.controls.update(n) : this.controls.update(n),
    this.bRender && this.render()
}
,
iCn3D.prototype.select3ddomainFromAtom = function(e) {
    this.icn3d;
    var t, i = e.structure + "_" + e.chain, n = i + "_" + e.resi;
    for (var r in this.tddomains) {
        var s = r.indexOf("_3d_domain");
        if (r.substr(0, s) == i && -1 !== Object.keys(this.tddomains[r]).indexOf(n)) {
            t = r;
            break
        }
    }
    var o = {};
    for (var n in this.tddomains[t])
        o = this.unionHash(o, this.residues[n]);
    return o
}
,
iCn3D.prototype.showPickingHilight = function(e) {
    this.icn3d;
    if (this.bShift || this.bCtrl || this.removeHlObjects(),
    this.pickedAtomList = {},
    1 === this.pk)
        this.pickedAtomList[e.serial] = 1;
    else if (2 === this.pk) {
        var t = e.structure + "_" + e.chain + "_" + e.resi;
        this.pickedAtomList = this.residues[t]
    } else if (3 === this.pk)
        this.pickedAtomList = this.selectStrandHelixFromAtom(e);
    else if (4 === this.pk)
        this.pickedAtomList = this.select3ddomainFromAtom(e);
    else if (5 === this.pk) {
        var i = e.structure + "_" + e.chain;
        this.pickedAtomList = this.chains[i]
    }
    0 === this.pk ? this.bShowHighlight = !1 : this.bShowHighlight = !0;
    var n = Object.keys(this.hAtoms).length == Object.keys(this.atoms).length ? {} : this.intHash(this.hAtoms, this.pickedAtomList)
      , r = Object.keys(n).length;
    if (this.bShift || this.bCtrl)
        if (this.bShift) {
            if (void 0 === this.prevPickedAtomList)
                this.hAtoms = this.unionHash(this.hAtoms, this.pickedAtomList);
            else {
                var s = this.getFirstAtomObj(this.prevPickedAtomList)
                  , o = this.getFirstAtomObj(this.pickedAtomList);
                if (s.structure + "_" + s.chain != o.structure + "_" + o.chain)
                    this.hAtoms = this.unionHash(this.hAtoms, this.pickedAtomList);
                else {
                    var a;
                    a = this.unionHash(a, this.prevPickedAtomList),
                    a = this.unionHash(a, this.pickedAtomList);
                    for (var l = this.getFirstAtomObj(a), d = this.getLastAtomObj(a), c = l.serial; c <= d.serial; ++c)
                        this.hAtoms[c] = 1
                }
            }
            this.prevPickedAtomList = this.cloneHash(this.pickedAtomList)
        } else
            this.bCtrl && (this.hAtoms = 0 < r ? this.exclHash(this.hAtoms, this.pickedAtomList) : this.unionHash(this.hAtoms, this.pickedAtomList));
    else
        this.hAtoms = this.cloneHash(this.pickedAtomList);
    this.removeHlObjects(),
    this.addHlObjects()
}
,
iCn3D.prototype.showPicking = function(e, t, i) {
    this.icn3d;
    this.showPickingBase(e, t, i)
}
,
iCn3D.prototype.showPickingBase = function(e, t, i) {
    this.icn3d;
    void 0 === t && void 0 === i && this.showPickingHilight(e)
}
,
iCn3D.prototype.removeHlObjects = function() {
    this.icn3d;
    for (var e in this.prevHighlightObjects)
        this.mdl.remove(this.prevHighlightObjects[e]);
    for (var e in this.prevHighlightObjects = [],
    this.prevHighlightObjects_ghost)
        this.mdl.remove(this.prevHighlightObjects_ghost[e]);
    this.prevHighlightObjects_ghost = []
}
,
iCn3D.prototype.addHlObjects = function(e, t, i) {
    this.icn3d;
    void 0 === e && (e = this.hColor),
    void 0 === i && (i = this.hAtoms),
    this.applyDisplayOptions(this.opts, this.intHash(i, this.dAtoms), this.bHighlight),
    (t || this.bRender) && this.render()
}
,
iCn3D.prototype.resetOrientation = function() {
    this.icn3d;
    var e = !1;
    if (0 < this.commands.length) {
        var t = this.commands[0].split("|||");
        if (2 == t.length) {
            var i = JSON.parse(t[1]);
            this._zoomFactor = i.factor,
            this.mouseChange.x = i.mouseChange.x,
            this.mouseChange.y = i.mouseChange.y,
            this.quaternion._x = i.quaternion._x,
            this.quaternion._y = i.quaternion._y,
            this.quaternion._z = i.quaternion._z,
            this.quaternion._w = i.quaternion._w,
            e = !0
        }
    }
    e || (this._zoomFactor = 1,
    this.mouseChange = new THREE.Vector2(0,0),
    this.quaternion = new THREE.Quaternion(0,0,0,1)),
    this.maxD = this.oriMaxD,
    this.center = this.oriCenter.clone(),
    "show" == this.ori_chemicalbinding ? this.bSkipChemicalbinding = !1 : "hide" == this.ori_chemicalbinding && (this.bSkipChemicalbinding = !0)
}
,
iCn3D.prototype.getAtomsFromPosition = function(e, t) {
    var i;
    this.icn3d;
    for (i in null == t && (t = 1),
    this.dAtoms) {
        var n = this.atoms[i];
        if (this.ions.hasOwnProperty(i) && "sphere" === this.opts.ions) {
            var r = this.vdwRadii[n.elem.toUpperCase()];
            if (Math.abs(n.coord.x - e.x) - r > t)
                continue;
            if (Math.abs(n.coord.y - e.y) - r > t)
                continue;
            if (Math.abs(n.coord.z - e.z) - r > t)
                continue
        } else {
            if (n.coord.x < e.x - t || n.coord.x > e.x + t)
                continue;
            if (n.coord.y < e.y - t || n.coord.y > e.y + t)
                continue;
            if (n.coord.z < e.z - t || n.coord.z > e.z + t)
                continue
        }
        return n
    }
    return null
}
,
iCn3D.prototype.getFirstAtomObj = function(e) {
    this.icn3d;
    if (void 0 !== e && 0 !== Object.keys(e).length) {
        var t = Object.keys(e)[0];
        return this.atoms[t]
    }
}
,
iCn3D.prototype.getFirstCalphaAtomObj = function(e) {
    this.icn3d;
    if (void 0 !== e && 0 !== Object.keys(e).length) {
        var t;
        for (var i in e)
            if ("CA" == this.atoms[i].name) {
                t = i;
                break
            }
        return void 0 !== t ? this.atoms[t] : this.getFirstAtomObj(e)
    }
}
,
iCn3D.prototype.getFirstAtomObjByName = function(e, t) {
    var i;
    this.icn3d;
    if (void 0 === e || 0 === Object.keys(e).length)
        return this.atoms[0];
    for (var n in e)
        if (this.atoms[n].name == t) {
            i = n;
            break
        }
    return void 0 !== i ? this.atoms[i] : void 0
}
,
iCn3D.prototype.getLastAtomObj = function(e) {
    this.icn3d;
    if (void 0 === e || 0 === Object.keys(e).length)
        return this.atoms[0];
    var t = Object.keys(e)
      , i = t[t.length - 1];
    return this.atoms[i]
}
,
iCn3D.prototype.hexToRgb = function(e, t) {
    this.icn3d;
    var i = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
    return i ? {
        r: parseInt(i[1], 16),
        g: parseInt(i[2], 16),
        b: parseInt(i[3], 16),
        a: t
    } : null
}
,
iCn3D.prototype.selectStrandHelixFromAtom = function(e) {
    this.icn3d;
    var t = e
      , i = e
      , n = {}
      , r = t.resi;
    if (!t.ssbegin) {
        for (var s = t.resi - 1; 0 < s; --s) {
            var o = t.structure + "_" + t.chain + "_" + s;
            if (!this.residues.hasOwnProperty(o))
                break;
            if (r = (e = this.getFirstCalphaAtomObj(this.residues[o])).resi,
            "coil" !== t.ss && e.ss === t.ss && e.ssbegin || "coil" === t.ss && e.ss !== t.ss) {
                "coil" === t.ss && e.ss !== t.ss && (r = e.resi + 1);
                break
            }
        }
        for (s = r; s <= t.resi; ++s) {
            o = t.structure + "_" + t.chain + "_" + s;
            n = this.unionHash(n, this.hash2Atoms(this.residues[o]))
        }
    }
    var a = i.resi
      , l = this.getLastAtomObj(this.chains[i.structure + "_" + i.chain]).resi;
    for (s = i.resi + 1; s <= l; ++s) {
        o = i.structure + "_" + i.chain + "_" + s;
        if (!this.residues.hasOwnProperty(o))
            break;
        if (a = (e = this.getFirstCalphaAtomObj(this.residues[o])).resi,
        "coil" !== i.ss && e.ss === i.ss && e.ssend || "coil" === i.ss && e.ss !== i.ss) {
            "coil" === i.ss && e.ss !== i.ss && (a = e.resi - 1);
            break
        }
    }
    for (s = i.resi + 1; s <= a; ++s) {
        o = i.structure + "_" + i.chain + "_" + s;
        n = this.unionHash(n, this.hash2Atoms(this.residues[o]))
    }
    return n
}
,
iCn3D.prototype.addNonCarbonAtomLabels = function(e) {
    this.icn3d;
    var t = this.intHash(this.hAtoms, e);
    for (var i in void 0 === this.labels.schematic && (this.labels.schematic = []),
    t) {
        var n = this.atoms[i];
        if (this.residues.hasOwnProperty(n.structure + "_" + n.chain + "_" + n.resi) && "C" !== n.elem) {
            var r = {};
            r.position = n.coord,
            r.bSchematic = 1,
            r.text = n.elem,
            r.size = 18,
            r.color = "#" + n.color.getHexString(),
            r.background = "#FFFFFF",
            this.labels.schematic.push(r)
        }
    }
    this.removeHlObjects()
}
,
iCn3D.prototype.addResiudeLabels = function(e, t, i, n) {
    this.icn3d;
    void 0 === i && (i = 1);
    var r = this.intHash(this.hAtoms, e);
    t ? void 0 === this.labels.schematic && (this.labels.schematic = []) : void 0 === this.labels.residue && (this.labels.residue = []);
    var s = "";
    for (var o in r) {
        var a = this.atoms[o]
          , l = {}
          , d = a.structure + "_" + a.chain + "_" + a.resi;
        if (!a.het && ("CA" === a.name || "O3'" === a.name || "O3*" === a.name) || this.water.hasOwnProperty(a.serial) || this.ions.hasOwnProperty(a.serial) || this.chemicals.hasOwnProperty(a.serial) && d !== s) {
            l.position = a.coord,
            l.bSchematic = 0,
            t && (l.bSchematic = 1),
            l.text = this.residueName2Abbr(a.resn),
            n && (l.text += a.resi),
            l.size = 18;
            var c = a.color.getHexString().toUpperCase();
            l.color = "CCCCCC" === c || "C8C8C8" === c ? "#888888" : "#" + c,
            l.background = "#CCCCCC",
            t ? this.labels.schematic.push(l) : this.labels.residue.push(l)
        }
        s = d
    }
    this.removeHlObjects()
}
,
iCn3D.prototype.addAtomLabels = function(e) {
    this.icn3d;
    var t = this.intHash(this.hAtoms, e);
    for (var i in t = this.intHash(this.dAtoms, t),
    void 0 === this.labels.residue && (this.labels.residue = []),
    t) {
        var n = this.atoms[i]
          , r = {};
        r.position = n.coord,
        r.bSchematic = 0,
        r.text = n.name,
        r.size = 18;
        var s = n.color.getHexString().toUpperCase();
        r.color = "CCCCCC" === s || "C8C8C8" === s ? "#888888" : "#" + s,
        r.background = "#CCCCCC",
        this.labels.residue.push(r)
    }
    this.removeHlObjects()
}
,
iCn3D.prototype.setCenter = function(e) {
    this.icn3d;
    this.mdl.position.set(0, 0, 0),
    this.mdlImpostor.position.set(0, 0, 0),
    this.mdl_ghost.position.set(0, 0, 0),
    this.mdl.position.sub(e),
    this.mdlImpostor.position.sub(e),
    this.mdl_ghost.position.sub(e)
}
,
iCn3D.prototype.getResiduesFromAtoms = function(e) {
    this.icn3d;
    var t = {};
    for (var i in e) {
        t[this.atoms[i].structure + "_" + this.atoms[i].chain + "_" + this.atoms[i].resi] = 1
    }
    return t
}
,
iCn3D.prototype.getResiduesFromCalphaAtoms = function(e) {
    this.icn3d;
    var t = {};
    for (var i in e) {
        if ("CA" == this.atoms[i].name && this.proteins.hasOwnProperty(i) || !this.proteins.hasOwnProperty(i))
            t[this.atoms[i].structure + "_" + this.atoms[i].chain + "_" + this.atoms[i].resi] = 1
    }
    return t
}
,
iCn3D.prototype.selectMainChainSubset = function(e) {
    this.icn3d;
    var t = ["C1'", "C1*", "C2'", "C2*", "C3'", "C3*", "C4'", "C4*", "C5'", "C5*", "O3'", "O3*", "O4'", "O4*", "O5'", "O5*", "P", "OP1", "O1P", "OP2", "O2P"]
      , i = {};
    for (var n in e)
        (this.proteins.hasOwnProperty(n) && ("N" === this.atoms[n].name || "C" === this.atoms[n].name || "O" === this.atoms[n].name || "CA" === this.atoms[n].name && "C" === this.atoms[n].elem) || this.nucleotides.hasOwnProperty(n) && -1 !== t.indexOf(this.atoms[n].name)) && (i[n] = 1);
    return i
}
,
iCn3D.prototype.transformMemPro = function(e, t, i, n) {
    this.icn3d;
    var r = e.clone();
    r.sub(i);
    var s = r.x * t[0] + r.y * t[1] + r.z * t[2] + n.x
      , o = r.x * t[3] + r.y * t[4] + r.z * t[5] + n.y
      , a = r.x * t[6] + r.y * t[7] + r.z * t[8] + n.z;
    return r.x = s,
    r.y = o,
    r.z = a,
    r
}
,
function(e) {
    "use strict";
    var r = e.HTMLCanvasElement && e.HTMLCanvasElement.prototype
      , c = e.Blob && function() {
        try {
            return Boolean(new Blob)
        } catch (e) {
            return !1
        }
    }()
      , h = c && e.Uint8Array && function() {
        try {
            return 100 === new Blob([new Uint8Array(100)]).size
        } catch (e) {
            return !1
        }
    }()
      , p = e.BlobBuilder || e.WebKitBlobBuilder || e.MozBlobBuilder || e.MSBlobBuilder
      , m = /^data:((.*?)(;charset=.*?)?)(;base64)?,/
      , s = (c || p) && e.atob && e.ArrayBuffer && e.Uint8Array && function(e) {
        var t, i, n, r, s, o, a, l, d;
        if (!(t = e.match(m)))
            throw new Error("invalid data URI");
        for (i = t[2] ? t[1] : "text/plain" + (t[3] || ";charset=US-ASCII"),
        n = !!t[4],
        r = e.slice(t[0].length),
        s = (n ? atob : decodeURIComponent)(r),
        o = new ArrayBuffer(s.length),
        a = new Uint8Array(o),
        l = 0; l < s.length; l += 1)
            a[l] = s.charCodeAt(l);
        return c ? new Blob([h ? a : o],{
            type: i
        }) : ((d = new p).append(o),
        d.getBlob(i))
    }
    ;
    e.HTMLCanvasElement && !r.toBlob && (r.mozGetAsFile ? r.toBlob = function(e, t, i) {
        var n = this;
        setTimeout(function() {
            i && r.toDataURL && s ? e(s(n.toDataURL(t, i))) : e(n.mozGetAsFile("blob", t))
        })
    }
    : r.toDataURL && s && (r.toBlob = function(e, t, i) {
        var n = this;
        setTimeout(function() {
            e(s(n.toDataURL(t, i)))
        })
    }
    )),
    "function" == typeof define && define.amd ? define(function() {
        return s
    }) : "object" == typeof module && module.exports ? module.exports = s : e.dataURLtoBlob = s
}(window);
var saveAs = function(a) {
    "use strict";
    if (!(void 0 === a || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
        var e = a.document
          , l = function() {
            return a.URL || a.webkitURL || a
        }
          , d = e.createElementNS("http://www.w3.org/1999/xhtml", "a")
          , c = "download"in d
          , h = /constructor/i.test(a.HTMLElement) || a.safari
          , p = /CriOS\/[\d]+/.test(navigator.userAgent)
          , m = a.setImmediate || a.setTimeout
          , u = function(e) {
            m(function() {
                throw e
            }, 0)
        }
          , f = function(e) {
            setTimeout(function() {
                "string" == typeof e ? l().revokeObjectURL(e) : e.remove()
            }, 4e4)
        }
          , g = function(e) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob([String.fromCharCode(65279), e],{
                type: e.type
            }) : e
        }
          , n = function(e, i, t) {
            t || (e = g(e));
            function n() {
                !function(e, t, i) {
                    for (var n = (t = [].concat(t)).length; n--; ) {
                        var r = e["on" + t[n]];
                        if ("function" == typeof r)
                            try {
                                r.call(e, i || e)
                            } catch (e) {
                                u(e)
                            }
                    }
                }(s, "writestart progress write writeend".split(" "))
            }
            var r, s = this, o = "application/octet-stream" === (e ? e.type : void 0);
            if (s.readyState = s.INIT,
            c)
                return r = r || l().createObjectURL(e),
                void m(function() {
                    var e, t;
                    d.href = r,
                    d.download = i,
                    e = d,
                    t = new MouseEvent("click"),
                    e.dispatchEvent(t),
                    n(),
                    f(r),
                    s.readyState = s.DONE
                }, 0);
            !function() {
                if ((p || o && h) && a.FileReader) {
                    var t = new FileReader;
                    return t.onloadend = function() {
                        var e = p ? t.result : t.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                        a.open(e, "_blank") || (a.location.href = e),
                        e = void 0,
                        s.readyState = s.DONE,
                        n()
                    }
                    ,
                    t.readAsDataURL(e),
                    s.readyState = s.INIT
                }
                (r = r || l().createObjectURL(e),
                o) ? a.location.href = r : a.open(r, "_blank") || (a.location.href = r);
                s.readyState = s.DONE,
                n(),
                f(r)
            }()
        }
          , t = n.prototype;
        return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e, t, i) {
            return t = t || e.name || "download",
            i || (e = g(e)),
            navigator.msSaveOrOpenBlob(e, t)
        }
        : (t.abort = function() {}
        ,
        t.readyState = t.INIT = 0,
        t.WRITING = 1,
        t.DONE = 2,
        t.error = t.onwritestart = t.onprogress = t.onwrite = t.onabort = t.onerror = t.onwriteend = null,
        function(e, t, i) {
            return new n(e,t || e.name || "download",i)
        }
        )
    }
}("undefined" != typeof self && self || "undefined" != typeof window && window || this)
  , $3Dmol = $3Dmol || {};
$3Dmol.MarchingCubeInitializer = function() {
    this.icn3d;
    var e = {};
    e.march = function(e, d, t, i) {
        var n = !!i.fulltable
          , c = i.hasOwnProperty("origin") && i.origin.hasOwnProperty("x") ? i.origin : {
            x: 0,
            y: 0,
            z: 0
        }
          , h = !!i.voxel
          , p = i.matrix
          , r = i.nX || 0
          , m = i.nY || 0
          , u = i.nZ || 0
          , s = i.scale || 1
          , f = null;
        f = i.unitCube ? i.unitCube : {
            x: s,
            y: s,
            z: s
        };
        var o, a, g = new Int32Array(r * m * u);
        for (o = 0,
        a = g.length; o < a; ++o)
            g[o] = -1;
        function l(e, t, i, n, r, s) {
            var o = {
                x: 0,
                y: 0,
                z: 0
            }
              , a = r;
            !(n & 1 << r) && n & 1 << s && (a = s),
            1 & a && i++,
            2 & a && t++,
            4 & a && e++,
            p ? o = {
                x: (o = (o = new THREE.Vector3(e,t,i)).applyMatrix4(p)).x,
                y: o.y,
                z: o.z
            } : (o.x = c.x + f.x * e,
            o.y = c.y + f.y * t,
            o.z = c.z + f.z * i);
            var l = (m * e + t) * u + i;
            return h ? (d.push(o),
            d.length - 1) : (g[l] < 0 && (g[l] = d.length,
            d.push(o)),
            g[l])
        }
        var v = new Int32Array(12)
          , b = n ? I : T
          , y = n ? H : E;
        for (o = 0; o < r - 1; ++o)
            for (var C = 0; C < m - 1; ++C)
                for (var _ = 0; _ < u - 1; ++_) {
                    for (var S = 0, w = 0; w < 8; ++w) {
                        S |= !!(2 & e[(m * (o + ((4 & w) >> 2)) + C + ((2 & w) >> 1)) * u + _ + (1 & w)]) << w
                    }
                    if (0 !== S && 255 !== S) {
                        var A = b[S];
                        if (0 !== A) {
                            var x = y[S];
                            1 & A && (v[0] = l(o, C, _, S, 0, 1)),
                            2 & A && (v[1] = l(o, C, _, S, 1, 3)),
                            4 & A && (v[2] = l(o, C, _, S, 3, 2)),
                            8 & A && (v[3] = l(o, C, _, S, 2, 0)),
                            16 & A && (v[4] = l(o, C, _, S, 4, 5)),
                            32 & A && (v[5] = l(o, C, _, S, 5, 7)),
                            64 & A && (v[6] = l(o, C, _, S, 7, 6)),
                            128 & A && (v[7] = l(o, C, _, S, 6, 4)),
                            256 & A && (v[8] = l(o, C, _, S, 0, 4)),
                            512 & A && (v[9] = l(o, C, _, S, 1, 5)),
                            1024 & A && (v[10] = l(o, C, _, S, 3, 7)),
                            2048 & A && (v[11] = l(o, C, _, S, 2, 6));
                            for (var k = 0; k < x.length; k += 3) {
                                var D = v[x[k]]
                                  , O = v[x[k + 1]]
                                  , R = v[x[k + 2]];
                                h && 3 <= k && (d.push(d[D]),
                                D = d.length - 1,
                                d.push(d[O]),
                                O = d.length - 1,
                                d.push(d[R]),
                                R = d.length - 1),
                                t.push(D),
                                t.push(O),
                                t.push(R)
                            }
                        }
                    }
                }
    }
    ,
    e.laplacianSmooth = function(e, t, i) {
        var n, r, s, o, a, l = new Array(t.length);
        for (n = 0,
        r = t.length; n < r; n++)
            l[n] = {
                x: 0,
                y: 0,
                z: 0
            };
        var d, c = new Array(20);
        for (n = 0; n < 20; n++)
            c[n] = new Array(t.length);
        for (n = 0,
        r = t.length; n < r; n++)
            c[0][n] = 0;
        for (n = 0,
        r = i.length / 3; n < r; n++) {
            var h = 3 * n
              , p = 3 * n + 1
              , m = 3 * n + 2;
            for (d = !0,
            o = c[s = 0][i[h]]; s < o; s++)
                if (i[p] == c[s + 1][i[h]]) {
                    d = !1;
                    break
                }
            for (d && (c[0][i[h]]++,
            c[c[0][i[h]]][i[h]] = i[p]),
            d = !0,
            o = c[s = 0][i[h]]; s < o; s++)
                if (i[m] == c[s + 1][i[h]]) {
                    d = !1;
                    break
                }
            for (d && (c[0][i[h]]++,
            c[c[0][i[h]]][i[h]] = i[m]),
            d = !0,
            o = c[s = 0][i[p]]; s < o; s++)
                if (i[h] == c[s + 1][i[p]]) {
                    d = !1;
                    break
                }
            for (d && (c[0][i[p]]++,
            c[c[0][i[p]]][i[p]] = i[h]),
            d = !0,
            o = c[s = 0][i[p]]; s < o; s++)
                if (i[m] == c[s + 1][i[p]]) {
                    d = !1;
                    break
                }
            for (d && (c[0][i[p]]++,
            c[c[0][i[p]]][i[p]] = i[m]),
            d = !0,
            s = 0; s < c[0][i[m]]; s++)
                if (i[h] == c[s + 1][i[m]]) {
                    d = !1;
                    break
                }
            for (d && (c[0][i[m]]++,
            c[c[0][i[m]]][i[m]] = i[h]),
            d = !0,
            o = c[s = 0][i[m]]; s < o; s++)
                if (i[p] == c[s + 1][i[m]]) {
                    d = !1;
                    break
                }
            d && (c[0][i[m]]++,
            c[c[0][i[m]]][i[m]] = i[p])
        }
        for (a = 0; a < e; a++) {
            for (n = 0,
            r = t.length; n < r; n++)
                if (c[0][n] < 3)
                    l[n].x = t[n].x,
                    l[n].y = t[n].y,
                    l[n].z = t[n].z;
                else if (3 == c[0][n] || 4 == c[0][n]) {
                    for (l[n].x = 0,
                    l[n].y = 0,
                    o = c[s = l[n].z = 0][n]; s < o; s++)
                        l[n].x += t[c[s + 1][n]].x,
                        l[n].y += t[c[s + 1][n]].y,
                        l[n].z += t[c[s + 1][n]].z;
                    l[n].x += .5 * t[n].x,
                    l[n].y += .5 * t[n].y,
                    l[n].z += .5 * t[n].z,
                    l[n].x /= .5 + c[0][n],
                    l[n].y /= .5 + c[0][n],
                    l[n].z /= .5 + c[0][n]
                } else {
                    for (l[n].x = 0,
                    l[n].y = 0,
                    o = c[s = l[n].z = 0][n]; s < o; s++)
                        l[n].x += t[c[s + 1][n]].x,
                        l[n].y += t[c[s + 1][n]].y,
                        l[n].z += t[c[s + 1][n]].z;
                    l[n].x += +t[n].x,
                    l[n].y += +t[n].y,
                    l[n].z += +t[n].z,
                    l[n].x /= 1 + c[0][n],
                    l[n].y /= 1 + c[0][n],
                    l[n].z /= 1 + c[0][n]
                }
            for (n = 0,
            r = t.length; n < r; n++)
                t[n].x = l[n].x,
                t[n].y = l[n].y,
                t[n].z = l[n].z
        }
    }
    ,
    e.edgeTable = [0, 0, 0, 0, 0, 0, 0, 2816, 0, 0, 0, 1792, 0, 3328, 3584, 3840, 0, 0, 0, 138, 0, 21, 0, 134, 0, 0, 0, 652, 0, 2067, 3865, 3600, 0, 0, 0, 42, 0, 0, 0, 294, 0, 0, 21, 28, 0, 3875, 1049, 3360, 0, 168, 162, 170, 0, 645, 2475, 2210, 0, 687, 293, 172, 4010, 3747, 3497, 3232, 0, 0, 0, 0, 0, 69, 0, 900, 0, 0, 0, 1792, 138, 131, 1608, 1920, 0, 81, 0, 2074, 84, 85, 84, 86, 0, 81, 0, 3676, 330, 1105, 1881, 1616, 0, 0, 0, 42, 0, 69, 0, 502, 0, 0, 21, 3580, 138, 2035, 1273, 1520, 2816, 104, 2337, 106, 840, 581, 367, 102, 2816, 3695, 3429, 3180, 1898, 1635, 1385, 1120, 0, 0, 0, 0, 0, 0, 0, 3910, 0, 0, 69, 588, 42, 2083, 41, 2880, 0, 0, 0, 1722, 0, 2293, 4095, 3830, 0, 255, 757, 764, 2538, 2291, 3065, 2800, 0, 0, 81, 338, 0, 3925, 1119, 3414, 84, 855, 85, 340, 2130, 2899, 89, 2384, 1792, 712, 194, 1162, 4036, 3781, 3535, 3270, 708, 719, 197, 204, 3018, 2755, 2505, 2240, 0, 0, 0, 0, 168, 420, 168, 1958, 162, 162, 676, 2988, 170, 163, 680, 928, 3328, 3096, 3328, 3642, 52, 53, 1855, 1590, 2340, 2111, 2869, 2620, 298, 51, 825, 560, 3584, 3584, 3090, 3482, 1668, 1941, 1183, 1430, 146, 2975, 2069, 2460, 154, 915, 153, 400, 3840, 3592, 3329, 3082, 1796, 1541, 1295, 1030, 2818, 2575, 2309, 2060, 778, 515, 265, 0];
    var T = new Uint32Array(e.edgeTable)
      , E = e.triTable = [[], [], [], [], [], [], [], [11, 9, 8], [], [], [], [8, 10, 9], [], [10, 8, 11], [9, 11, 10], [8, 10, 9, 8, 11, 10], [], [], [], [1, 7, 3], [], [4, 2, 0], [], [2, 1, 7], [], [], [], [2, 7, 3, 2, 9, 7], [], [1, 4, 11, 1, 0, 4], [3, 8, 0, 11, 9, 4, 11, 10, 9], [4, 11, 9, 11, 10, 9], [], [], [], [5, 3, 1], [], [], [], [2, 5, 8, 2, 1, 5], [], [], [2, 4, 0], [3, 2, 4], [], [0, 9, 1, 8, 10, 5, 8, 11, 10], [3, 4, 0, 3, 10, 4], [5, 8, 10, 8, 11, 10], [], [3, 5, 7], [7, 1, 5], [1, 7, 3, 1, 5, 7], [], [9, 2, 0, 9, 7, 2], [0, 3, 8, 1, 7, 11, 1, 5, 7], [11, 1, 7, 1, 5, 7], [], [9, 1, 0, 5, 3, 2, 5, 7, 3], [8, 2, 5, 8, 0, 2], [2, 5, 3, 5, 7, 3], [3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5], [9, 1, 0, 10, 7, 11, 10, 5, 7], [3, 8, 0, 7, 10, 5, 7, 11, 10], [11, 5, 7, 11, 10, 5], [], [], [], [], [], [0, 6, 2], [], [7, 2, 9, 7, 9, 8], [], [], [], [8, 10, 9], [7, 1, 3], [7, 1, 0], [6, 9, 3, 6, 10, 9], [7, 10, 8, 10, 9, 8], [], [6, 0, 4], [], [11, 1, 4, 11, 3, 1], [2, 4, 6], [2, 0, 4, 2, 4, 6], [2, 4, 6], [1, 4, 2, 4, 6, 2], [], [6, 0, 4], [], [2, 11, 3, 6, 9, 4, 6, 10, 9], [8, 6, 1, 8, 1, 3], [10, 0, 6, 0, 4, 6], [8, 0, 3, 9, 6, 10, 9, 4, 6], [10, 4, 6, 10, 9, 4], [], [], [], [5, 3, 1], [], [0, 6, 2], [], [7, 4, 8, 5, 2, 1, 5, 6, 2], [], [], [2, 4, 0], [7, 4, 8, 2, 11, 3, 10, 5, 6], [7, 1, 3], [5, 6, 10, 0, 9, 1, 8, 7, 4], [5, 6, 10, 7, 0, 3, 7, 4, 0], [10, 5, 6, 4, 8, 7], [9, 11, 8], [3, 5, 6], [0, 5, 11, 0, 11, 8], [6, 3, 5, 3, 1, 5], [3, 9, 6, 3, 8, 9], [9, 6, 0, 6, 2, 0], [0, 3, 8, 2, 5, 6, 2, 1, 5], [1, 6, 2, 1, 5, 6], [9, 11, 8], [1, 0, 9, 6, 10, 5, 11, 3, 2], [6, 10, 5, 2, 8, 0, 2, 11, 8], [3, 2, 11, 10, 5, 6], [10, 5, 6, 9, 3, 8, 9, 1, 3], [0, 9, 1, 5, 6, 10], [8, 0, 3, 10, 5, 6], [10, 5, 6], [], [], [], [], [], [], [], [1, 10, 2, 9, 11, 6, 9, 8, 11], [], [], [6, 0, 2], [3, 6, 9, 3, 2, 6], [3, 5, 1], [0, 5, 1, 0, 11, 5], [0, 3, 5], [6, 9, 11, 9, 8, 11], [], [], [], [4, 5, 9, 7, 1, 10, 7, 3, 1], [], [11, 6, 7, 2, 4, 5, 2, 0, 4], [11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5], [6, 7, 11, 1, 10, 2, 9, 4, 5], [], [4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2], [9, 4, 5, 0, 6, 7, 0, 2, 6], [4, 5, 9, 6, 3, 2, 6, 7, 3], [6, 7, 11, 5, 3, 8, 5, 1, 3], [6, 7, 11, 4, 1, 0, 4, 5, 1], [4, 5, 9, 3, 8, 0, 11, 6, 7], [9, 4, 5, 7, 11, 6], [], [], [0, 6, 4], [8, 6, 4, 8, 1, 6], [], [0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6], [10, 2, 1, 6, 0, 3, 6, 4, 0], [10, 2, 1, 11, 4, 8, 11, 6, 4], [4, 2, 6], [1, 0, 9, 2, 4, 8, 2, 6, 4], [2, 4, 0, 2, 6, 4], [8, 2, 4, 2, 6, 4], [11, 4, 1, 11, 6, 4], [0, 9, 1, 4, 11, 6, 4, 8, 11], [3, 6, 0, 6, 4, 0], [8, 6, 4, 8, 11, 6], [10, 8, 9], [6, 3, 9, 6, 7, 3], [6, 7, 1], [10, 7, 1, 7, 3, 1], [7, 11, 6, 8, 10, 2, 8, 9, 10], [11, 6, 7, 10, 0, 9, 10, 2, 0], [2, 1, 10, 7, 11, 6, 8, 0, 3], [1, 10, 2, 6, 7, 11], [7, 2, 6, 7, 9, 2], [1, 0, 9, 3, 6, 7, 3, 2, 6], [7, 0, 6, 0, 2, 6], [2, 7, 3, 2, 6, 7], [7, 11, 6, 3, 9, 1, 3, 8, 9], [9, 1, 0, 11, 6, 7], [0, 3, 8, 11, 6, 7], [11, 6, 7], [], [], [], [], [5, 3, 7], [8, 5, 2, 8, 7, 5], [5, 3, 7], [1, 10, 2, 5, 8, 7, 5, 9, 8], [1, 7, 5], [1, 7, 5], [9, 2, 7, 9, 7, 5], [11, 3, 2, 8, 5, 9, 8, 7, 5], [1, 3, 7, 1, 7, 5], [0, 7, 1, 7, 5, 1], [9, 3, 5, 3, 7, 5], [9, 7, 5, 9, 8, 7], [8, 10, 11], [3, 4, 10, 3, 10, 11], [8, 10, 11], [5, 9, 4, 1, 11, 3, 1, 10, 11], [2, 4, 5], [5, 2, 4, 2, 0, 4], [0, 3, 8, 5, 9, 4, 10, 2, 1], [2, 1, 10, 9, 4, 5], [2, 8, 5, 2, 11, 8], [3, 2, 11, 1, 4, 5, 1, 0, 4], [9, 4, 5, 8, 2, 11, 8, 0, 2], [11, 3, 2, 9, 4, 5], [8, 5, 3, 5, 1, 3], [5, 0, 4, 5, 1, 0], [3, 8, 0, 4, 5, 9], [9, 4, 5], [11, 9, 10], [11, 9, 10], [1, 11, 4, 1, 10, 11], [8, 7, 4, 11, 1, 10, 11, 3, 1], [2, 7, 9, 2, 9, 10], [4, 8, 7, 0, 10, 2, 0, 9, 10], [2, 1, 10, 0, 7, 4, 0, 3, 7], [10, 2, 1, 8, 7, 4], [1, 7, 4], [3, 2, 11, 4, 8, 7, 9, 1, 0], [11, 4, 2, 4, 0, 2], [2, 11, 3, 7, 4, 8], [4, 1, 7, 1, 3, 7], [1, 0, 9, 8, 7, 4], [3, 4, 0, 3, 7, 4], [8, 7, 4], [8, 9, 10, 8, 10, 11], [3, 9, 11, 9, 10, 11], [0, 10, 8, 10, 11, 8], [10, 3, 1, 10, 11, 3], [2, 8, 10, 8, 9, 10], [9, 2, 0, 9, 10, 2], [8, 0, 3, 1, 10, 2], [10, 2, 1], [1, 11, 9, 11, 8, 9], [11, 3, 2, 0, 9, 1], [11, 0, 2, 11, 8, 0], [11, 3, 2], [8, 1, 3, 8, 9, 1], [9, 1, 0], [8, 0, 3], []]
      , I = [0, 265, 515, 778, 2060, 2309, 2575, 2822, 1030, 1295, 1541, 1804, 3082, 3331, 3593, 3840, 400, 153, 915, 666, 2460, 2197, 2975, 2710, 1430, 1183, 1941, 1692, 3482, 3219, 3993, 3728, 560, 825, 51, 314, 2620, 2869, 2111, 2358, 1590, 1855, 1077, 1340, 3642, 3891, 3129, 3376, 928, 681, 419, 170, 2988, 2725, 2479, 2214, 1958, 1711, 1445, 1196, 4010, 3747, 3497, 3232, 2240, 2505, 2755, 3018, 204, 453, 719, 966, 3270, 3535, 3781, 4044, 1226, 1475, 1737, 1984, 2384, 2137, 2899, 2650, 348, 85, 863, 598, 3414, 3167, 3925, 3676, 1370, 1107, 1881, 1616, 2800, 3065, 2291, 2554, 764, 1013, 255, 502, 3830, 4095, 3317, 3580, 1786, 2035, 1273, 1520, 2912, 2665, 2403, 2154, 876, 613, 367, 102, 3942, 3695, 3429, 3180, 1898, 1635, 1385, 1120, 1120, 1385, 1635, 1898, 3180, 3429, 3695, 3942, 102, 367, 613, 876, 2154, 2403, 2665, 2912, 1520, 1273, 2035, 1786, 3580, 3317, 4095, 3830, 502, 255, 1013, 764, 2554, 2291, 3065, 2800, 1616, 1881, 1107, 1370, 3676, 3925, 3167, 3414, 598, 863, 85, 348, 2650, 2899, 2137, 2384, 1984, 1737, 1475, 1226, 4044, 3781, 3535, 3270, 966, 719, 453, 204, 3018, 2755, 2505, 2240, 3232, 3497, 3747, 4010, 1196, 1445, 1711, 1958, 2214, 2479, 2725, 2988, 170, 419, 681, 928, 3376, 3129, 3891, 3642, 1340, 1077, 1855, 1590, 2358, 2111, 2869, 2620, 314, 51, 825, 560, 3728, 3993, 3219, 3482, 1692, 1941, 1183, 1430, 2710, 2975, 2197, 2460, 666, 915, 153, 400, 3840, 3593, 3331, 3082, 1804, 1541, 1295, 1030, 2822, 2575, 2309, 2060, 778, 515, 265, 0]
      , H = [[], [8, 3, 0], [9, 0, 1], [8, 3, 1, 8, 1, 9], [11, 2, 3], [11, 2, 0, 11, 0, 8], [11, 2, 3, 0, 1, 9], [2, 1, 11, 1, 9, 11, 11, 9, 8], [10, 1, 2], [8, 3, 0, 1, 2, 10], [9, 0, 2, 9, 2, 10], [3, 2, 8, 2, 10, 8, 8, 10, 9], [10, 1, 3, 10, 3, 11], [1, 0, 10, 0, 8, 10, 10, 8, 11], [0, 3, 9, 3, 11, 9, 9, 11, 10], [8, 10, 9, 8, 11, 10], [8, 4, 7], [3, 0, 4, 3, 4, 7], [1, 9, 0, 8, 4, 7], [9, 4, 1, 4, 7, 1, 1, 7, 3], [2, 3, 11, 7, 8, 4], [7, 11, 4, 11, 2, 4, 4, 2, 0], [3, 11, 2, 4, 7, 8, 9, 0, 1], [2, 7, 11, 2, 1, 7, 1, 4, 7, 1, 9, 4], [10, 1, 2, 8, 4, 7], [2, 10, 1, 0, 4, 7, 0, 7, 3], [4, 7, 8, 0, 2, 10, 0, 10, 9], [2, 7, 3, 2, 9, 7, 7, 9, 4, 2, 10, 9], [8, 4, 7, 11, 10, 1, 11, 1, 3], [11, 4, 7, 1, 4, 11, 1, 11, 10, 1, 0, 4], [3, 8, 0, 7, 11, 4, 11, 9, 4, 11, 10, 9], [7, 11, 4, 4, 11, 9, 11, 10, 9], [9, 5, 4], [3, 0, 8, 4, 9, 5], [5, 4, 0, 5, 0, 1], [4, 8, 5, 8, 3, 5, 5, 3, 1], [11, 2, 3, 9, 5, 4], [9, 5, 4, 8, 11, 2, 8, 2, 0], [3, 11, 2, 1, 5, 4, 1, 4, 0], [8, 5, 4, 2, 5, 8, 2, 8, 11, 2, 1, 5], [2, 10, 1, 9, 5, 4], [0, 8, 3, 5, 4, 9, 10, 1, 2], [10, 5, 2, 5, 4, 2, 2, 4, 0], [3, 4, 8, 3, 2, 4, 2, 5, 4, 2, 10, 5], [5, 4, 9, 1, 3, 11, 1, 11, 10], [0, 9, 1, 4, 8, 5, 8, 10, 5, 8, 11, 10], [3, 4, 0, 3, 10, 4, 4, 10, 5, 3, 11, 10], [4, 8, 5, 5, 8, 10, 8, 11, 10], [9, 5, 7, 9, 7, 8], [0, 9, 3, 9, 5, 3, 3, 5, 7], [8, 0, 7, 0, 1, 7, 7, 1, 5], [1, 7, 3, 1, 5, 7], [11, 2, 3, 8, 9, 5, 8, 5, 7], [9, 2, 0, 9, 7, 2, 2, 7, 11, 9, 5, 7], [0, 3, 8, 2, 1, 11, 1, 7, 11, 1, 5, 7], [2, 1, 11, 11, 1, 7, 1, 5, 7], [1, 2, 10, 5, 7, 8, 5, 8, 9], [9, 1, 0, 10, 5, 2, 5, 3, 2, 5, 7, 3], [5, 2, 10, 8, 2, 5, 8, 5, 7, 8, 0, 2], [10, 5, 2, 2, 5, 3, 5, 7, 3], [3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5], [9, 1, 0, 10, 7, 11, 10, 5, 7], [3, 8, 0, 7, 10, 5, 7, 11, 10], [11, 5, 7, 11, 10, 5], [11, 7, 6], [0, 8, 3, 11, 7, 6], [9, 0, 1, 11, 7, 6], [7, 6, 11, 3, 1, 9, 3, 9, 8], [2, 3, 7, 2, 7, 6], [8, 7, 0, 7, 6, 0, 0, 6, 2], [1, 9, 0, 3, 7, 6, 3, 6, 2], [7, 6, 2, 7, 2, 9, 2, 1, 9, 7, 9, 8], [1, 2, 10, 6, 11, 7], [2, 10, 1, 7, 6, 11, 8, 3, 0], [11, 7, 6, 10, 9, 0, 10, 0, 2], [7, 6, 11, 3, 2, 8, 8, 2, 10, 8, 10, 9], [6, 10, 7, 10, 1, 7, 7, 1, 3], [6, 10, 1, 6, 1, 7, 7, 1, 0, 7, 0, 8], [9, 0, 3, 6, 9, 3, 6, 10, 9, 6, 3, 7], [6, 10, 7, 7, 10, 8, 10, 9, 8], [8, 4, 6, 8, 6, 11], [11, 3, 6, 3, 0, 6, 6, 0, 4], [0, 1, 9, 4, 6, 11, 4, 11, 8], [1, 9, 4, 11, 1, 4, 11, 3, 1, 11, 4, 6], [3, 8, 2, 8, 4, 2, 2, 4, 6], [2, 0, 4, 2, 4, 6], [1, 9, 0, 3, 8, 2, 2, 8, 4, 2, 4, 6], [9, 4, 1, 1, 4, 2, 4, 6, 2], [10, 1, 2, 11, 8, 4, 11, 4, 6], [10, 1, 2, 11, 3, 6, 6, 3, 0, 6, 0, 4], [0, 2, 10, 0, 10, 9, 4, 11, 8, 4, 6, 11], [2, 11, 3, 6, 9, 4, 6, 10, 9], [8, 4, 6, 8, 6, 1, 6, 10, 1, 8, 1, 3], [1, 0, 10, 10, 0, 6, 0, 4, 6], [8, 0, 3, 9, 6, 10, 9, 4, 6], [10, 4, 6, 10, 9, 4], [9, 5, 4, 7, 6, 11], [4, 9, 5, 3, 0, 8, 11, 7, 6], [6, 11, 7, 4, 0, 1, 4, 1, 5], [6, 11, 7, 4, 8, 5, 5, 8, 3, 5, 3, 1], [4, 9, 5, 6, 2, 3, 6, 3, 7], [9, 5, 4, 8, 7, 0, 0, 7, 6, 0, 6, 2], [4, 0, 1, 4, 1, 5, 6, 3, 7, 6, 2, 3], [7, 4, 8, 5, 2, 1, 5, 6, 2], [6, 11, 7, 1, 2, 10, 9, 5, 4], [11, 7, 6, 8, 3, 0, 1, 2, 10, 9, 5, 4], [11, 7, 6, 10, 5, 2, 2, 5, 4, 2, 4, 0], [7, 4, 8, 2, 11, 3, 10, 5, 6], [4, 9, 5, 6, 10, 7, 7, 10, 1, 7, 1, 3], [5, 6, 10, 0, 9, 1, 8, 7, 4], [5, 6, 10, 7, 0, 3, 7, 4, 0], [10, 5, 6, 4, 8, 7], [5, 6, 9, 6, 11, 9, 9, 11, 8], [0, 9, 5, 0, 5, 3, 3, 5, 6, 3, 6, 11], [0, 1, 5, 0, 5, 11, 5, 6, 11, 0, 11, 8], [11, 3, 6, 6, 3, 5, 3, 1, 5], [9, 5, 6, 3, 9, 6, 3, 8, 9, 3, 6, 2], [5, 6, 9, 9, 6, 0, 6, 2, 0], [0, 3, 8, 2, 5, 6, 2, 1, 5], [1, 6, 2, 1, 5, 6], [1, 2, 10, 5, 6, 9, 9, 6, 11, 9, 11, 8], [1, 0, 9, 6, 10, 5, 11, 3, 2], [6, 10, 5, 2, 8, 0, 2, 11, 8], [3, 2, 11, 10, 5, 6], [10, 5, 6, 9, 3, 8, 9, 1, 3], [0, 9, 1, 5, 6, 10], [8, 0, 3, 10, 5, 6], [10, 5, 6], [10, 6, 5], [8, 3, 0, 10, 6, 5], [0, 1, 9, 5, 10, 6], [10, 6, 5, 9, 8, 3, 9, 3, 1], [3, 11, 2, 10, 6, 5], [6, 5, 10, 2, 0, 8, 2, 8, 11], [1, 9, 0, 6, 5, 10, 11, 2, 3], [1, 10, 2, 5, 9, 6, 9, 11, 6, 9, 8, 11], [1, 2, 6, 1, 6, 5], [0, 8, 3, 2, 6, 5, 2, 5, 1], [5, 9, 6, 9, 0, 6, 6, 0, 2], [9, 6, 5, 3, 6, 9, 3, 9, 8, 3, 2, 6], [11, 6, 3, 6, 5, 3, 3, 5, 1], [0, 5, 1, 0, 11, 5, 5, 11, 6, 0, 8, 11], [0, 5, 9, 0, 3, 5, 3, 6, 5, 3, 11, 6], [5, 9, 6, 6, 9, 11, 9, 8, 11], [10, 6, 5, 4, 7, 8], [5, 10, 6, 7, 3, 0, 7, 0, 4], [5, 10, 6, 0, 1, 9, 8, 4, 7], [4, 5, 9, 6, 7, 10, 7, 1, 10, 7, 3, 1], [7, 8, 4, 2, 3, 11, 10, 6, 5], [11, 6, 7, 10, 2, 5, 2, 4, 5, 2, 0, 4], [11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5], [6, 7, 11, 1, 10, 2, 9, 4, 5], [7, 8, 4, 5, 1, 2, 5, 2, 6], [4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2], [9, 4, 5, 8, 0, 7, 0, 6, 7, 0, 2, 6], [4, 5, 9, 6, 3, 2, 6, 7, 3], [6, 7, 11, 4, 5, 8, 5, 3, 8, 5, 1, 3], [6, 7, 11, 4, 1, 0, 4, 5, 1], [4, 5, 9, 3, 8, 0, 11, 6, 7], [9, 4, 5, 7, 11, 6], [10, 6, 4, 10, 4, 9], [8, 3, 0, 9, 10, 6, 9, 6, 4], [1, 10, 0, 10, 6, 0, 0, 6, 4], [8, 6, 4, 8, 1, 6, 6, 1, 10, 8, 3, 1], [2, 3, 11, 6, 4, 9, 6, 9, 10], [0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6], [10, 2, 1, 11, 6, 3, 6, 0, 3, 6, 4, 0], [10, 2, 1, 11, 4, 8, 11, 6, 4], [9, 1, 4, 1, 2, 4, 4, 2, 6], [1, 0, 9, 3, 2, 8, 2, 4, 8, 2, 6, 4], [2, 4, 0, 2, 6, 4], [3, 2, 8, 8, 2, 4, 2, 6, 4], [1, 4, 9, 11, 4, 1, 11, 1, 3, 11, 6, 4], [0, 9, 1, 4, 11, 6, 4, 8, 11], [11, 6, 3, 3, 6, 0, 6, 4, 0], [8, 6, 4, 8, 11, 6], [6, 7, 10, 7, 8, 10, 10, 8, 9], [9, 3, 0, 6, 3, 9, 6, 9, 10, 6, 7, 3], [6, 1, 10, 6, 7, 1, 7, 0, 1, 7, 8, 0], [6, 7, 10, 10, 7, 1, 7, 3, 1], [7, 11, 6, 3, 8, 2, 8, 10, 2, 8, 9, 10], [11, 6, 7, 10, 0, 9, 10, 2, 0], [2, 1, 10, 7, 11, 6, 8, 0, 3], [1, 10, 2, 6, 7, 11], [7, 2, 6, 7, 9, 2, 2, 9, 1, 7, 8, 9], [1, 0, 9, 3, 6, 7, 3, 2, 6], [8, 0, 7, 7, 0, 6, 0, 2, 6], [2, 7, 3, 2, 6, 7], [7, 11, 6, 3, 9, 1, 3, 8, 9], [9, 1, 0, 11, 6, 7], [0, 3, 8, 11, 6, 7], [11, 6, 7], [11, 7, 5, 11, 5, 10], [3, 0, 8, 7, 5, 10, 7, 10, 11], [9, 0, 1, 10, 11, 7, 10, 7, 5], [3, 1, 9, 3, 9, 8, 7, 10, 11, 7, 5, 10], [10, 2, 5, 2, 3, 5, 5, 3, 7], [5, 10, 2, 8, 5, 2, 8, 7, 5, 8, 2, 0], [9, 0, 1, 10, 2, 5, 5, 2, 3, 5, 3, 7], [1, 10, 2, 5, 8, 7, 5, 9, 8], [2, 11, 1, 11, 7, 1, 1, 7, 5], [0, 8, 3, 2, 11, 1, 1, 11, 7, 1, 7, 5], [9, 0, 2, 9, 2, 7, 2, 11, 7, 9, 7, 5], [11, 3, 2, 8, 5, 9, 8, 7, 5], [1, 3, 7, 1, 7, 5], [8, 7, 0, 0, 7, 1, 7, 5, 1], [0, 3, 9, 9, 3, 5, 3, 7, 5], [9, 7, 5, 9, 8, 7], [4, 5, 8, 5, 10, 8, 8, 10, 11], [3, 0, 4, 3, 4, 10, 4, 5, 10, 3, 10, 11], [0, 1, 9, 4, 5, 8, 8, 5, 10, 8, 10, 11], [5, 9, 4, 1, 11, 3, 1, 10, 11], [3, 8, 4, 3, 4, 2, 2, 4, 5, 2, 5, 10], [10, 2, 5, 5, 2, 4, 2, 0, 4], [0, 3, 8, 5, 9, 4, 10, 2, 1], [2, 1, 10, 9, 4, 5], [8, 4, 5, 2, 8, 5, 2, 11, 8, 2, 5, 1], [3, 2, 11, 1, 4, 5, 1, 0, 4], [9, 4, 5, 8, 2, 11, 8, 0, 2], [11, 3, 2, 9, 4, 5], [4, 5, 8, 8, 5, 3, 5, 1, 3], [5, 0, 4, 5, 1, 0], [3, 8, 0, 4, 5, 9], [9, 4, 5], [7, 4, 11, 4, 9, 11, 11, 9, 10], [3, 0, 8, 7, 4, 11, 11, 4, 9, 11, 9, 10], [11, 7, 4, 1, 11, 4, 1, 10, 11, 1, 4, 0], [8, 7, 4, 11, 1, 10, 11, 3, 1], [2, 3, 7, 2, 7, 9, 7, 4, 9, 2, 9, 10], [4, 8, 7, 0, 10, 2, 0, 9, 10], [2, 1, 10, 0, 7, 4, 0, 3, 7], [10, 2, 1, 8, 7, 4], [2, 11, 7, 2, 7, 1, 1, 7, 4, 1, 4, 9], [3, 2, 11, 4, 8, 7, 9, 1, 0], [7, 4, 11, 11, 4, 2, 4, 0, 2], [2, 11, 3, 7, 4, 8], [9, 1, 4, 4, 1, 7, 1, 3, 7], [1, 0, 9, 8, 7, 4], [3, 4, 0, 3, 7, 4], [8, 7, 4], [8, 9, 10, 8, 10, 11], [0, 9, 3, 3, 9, 11, 9, 10, 11], [1, 10, 0, 0, 10, 8, 10, 11, 8], [10, 3, 1, 10, 11, 3], [3, 8, 2, 2, 8, 10, 8, 9, 10], [9, 2, 0, 9, 10, 2], [8, 0, 3, 1, 10, 2], [10, 2, 1], [2, 11, 1, 1, 11, 9, 11, 8, 9], [11, 3, 2, 0, 9, 1], [11, 0, 2, 11, 8, 0], [11, 3, 2], [8, 1, 3, 8, 9, 1], [9, 1, 0], [8, 0, 3], []];
    return e
}
,
$3Dmol.MarchingCube = $3Dmol.MarchingCubeInitializer(),
"undefined" == typeof console && (console = {
    log: function() {}
}),
$3Dmol.ProteinSurface = function(m) {
    function D(e) {
        return e.elem && void 0 !== c[e.elem.toUpperCase()] ? e.elem : "X"
    }
    var U, B, R, T, G = {}, V = null, W = 0, Y = 0, X = 0, u = 1.4, O = 2, Q = {}, Z = 0, K = 0, J = 0, f = 0, ee = null, te = null, ie = null, g = 0, v = 0, b = 0, y = 0, C = 0, _ = 0, E = !1, I = {}, c = {
        H: 1.2,
        LI: 1.82,
        Na: 2.27,
        K: 2.75,
        C: 1.7,
        N: 1.55,
        O: 1.52,
        F: 1.47,
        P: 1.8,
        S: 1.8,
        CL: 1.75,
        BR: 1.85,
        SE: 1.9,
        ZN: 1.39,
        CU: 1.4,
        NI: 1.63,
        X: 2
    }, H = {}, L = {}, S = [new Int32Array([1, 0, 0]), new Int32Array([-1, 0, 0]), new Int32Array([0, 1, 0]), new Int32Array([0, -1, 0]), new Int32Array([0, 0, 1]), new Int32Array([0, 0, -1]), new Int32Array([1, 1, 0]), new Int32Array([1, -1, 0]), new Int32Array([-1, 1, 0]), new Int32Array([-1, -1, 0]), new Int32Array([1, 0, 1]), new Int32Array([1, 0, -1]), new Int32Array([-1, 0, 1]), new Int32Array([-1, 0, -1]), new Int32Array([0, 1, 1]), new Int32Array([0, 1, -1]), new Int32Array([0, -1, 1]), new Int32Array([0, -1, -1]), new Int32Array([1, 1, 1]), new Int32Array([1, 1, -1]), new Int32Array([1, -1, 1]), new Int32Array([-1, 1, 1]), new Int32Array([1, -1, -1]), new Int32Array([-1, -1, 1]), new Int32Array([-1, 1, -1]), new Int32Array([-1, -1, -1])];
    this.getFacesAndVertices = function() {
        var e, t, i = T;
        for (e = 0,
        t = i.length; e < t; e++)
            i[e].x = i[e].x / O - W,
            i[e].y = i[e].y / O - Y,
            i[e].z = i[e].z / O - X;
        var n = [];
        for (e = 0,
        t = R.length; e < t; e += 3) {
            var r = R[e]
              , s = R[e + 1]
              , o = R[e + 2]
              , a = i[r].atomid
              , l = i[s].atomid
              , d = i[o].atomid;
            I[a] && I[l] && I[d] && r !== s && s !== o && r !== o && n.push({
                a: r,
                b: s,
                c: o
            })
        }
        return V = ie = te = ee = null,
        {
            vertices: i,
            faces: n
        }
    }
    ,
    this.initparm = function(e, t, n, r, s, o, a, l, d) {
        for (U = s,
        G = o,
        B = l,
        E = n,
        i = 0,
        il = r.length; i < il; i++)
            I[r[i]] = 1;
        var c = 1 / O * 5.5;
        g = e[0][0],
        y = e[1][0],
        v = e[0][1],
        C = e[1][1],
        b = e[0][2],
        _ = e[1][2],
        t ? (g -= u + c,
        v -= u + c,
        b -= u + c,
        y += u + c,
        C += u + c,
        _ += u + c) : (g -= c,
        v -= c,
        b -= c,
        y += c,
        C += c,
        _ += c),
        g = Math.floor(g * O) / O,
        v = Math.floor(v * O) / O,
        b = Math.floor(b * O) / O,
        y = Math.ceil(y * O) / O,
        C = Math.ceil(C * O) / O,
        _ = Math.ceil(_ * O) / O,
        W = -g,
        Y = -v,
        X = -b;
        var h = 129
          , p = y - g;
        p < C - v && (p = C - v),
        p < _ - b && (p = _ - b),
        O = (h - 1) / p,
        O = 2,
        (E || m < 2 * p) && (h = Math.floor(m),
        O = (m - 1) / p),
        J = Math.ceil(O * (y - g)) + 1,
        K = Math.ceil(O * (C - v)) + 1,
        Z = Math.ceil(O * (_ - b)) + 1,
        Q.x = (J - 1) / (y - g),
        Q.y = (K - 1) / (C - v),
        Q.z = (Z - 1) / (_ - b),
        this.boundingatom(t),
        f = u * O,
        ee = new Uint8Array(J * K * Z),
        te = new Float64Array(J * K * Z),
        ie = new Int32Array(J * K * Z),
        V = []
    }
    ,
    this.boundingatom = function(e) {
        var t, i, n, r, s = [];
        for (var o in c)
            if (c.hasOwnProperty(o)) {
                var a = c[o];
                s[o] = e ? (a + u) * O + .5 : a * O + .5,
                n = s[o] * s[o],
                L[o] = Math.floor(s[o]) + 1,
                H[o] = new Int32Array(L[o] * L[o]);
                for (var l = r = 0; l < L[o]; l++)
                    for (var d = 0; d < L[o]; d++)
                        n < (t = l * l + d * d) ? H[o][r] = -1 : (i = Math.sqrt(n - t),
                        H[o][r] = Math.floor(i)),
                        r++
            }
    }
    ,
    this.fillvoxels = function(e, t) {
        var i, n;
        for (i = 0,
        n = ee.length; i < n; i++)
            ee[i] = 0,
            te[i] = -1,
            ie[i] = -1,
            V[i] = new THREE.Color;
        for (i in t) {
            var r = e[t[i]];
            void 0 !== r && "DUM" !== r.resn && this.fillAtom(r, e)
        }
        if (G) {
            var s = U.xExtent - 1
              , o = U.yExtent - 1
              , a = U.zExtent - 1
              , l = Math.floor(.5 + s) + 1
              , d = Math.floor(.5 + o) + 1
              , c = Math.floor(.5 + a) + 1
              , h = d * c
              , p = c
              , m = new Float32Array(l * d * c);
            for (i = 0; i < l; ++i)
                for (j = 0; j < d; ++j)
                    for (k = 0; k < c; ++k) {
                        var u, f = i * h + j * p + k;
                        "phi" == U.filetype ? u = k * h + j * p + i : "cube" == U.filetype && (u = i * h + j * p + k),
                        u < G.length && (m[f] = G[u])
                    }
            var g = K * Z
              , v = Z;
            for (i = 0; i < J; ++i)
                for (j = 0; j < K; ++j)
                    for (k = 0; k < Z; ++k) {
                        var b = i / Q.x - W
                          , y = j / Q.y - Y
                          , C = k / Q.z - X
                          , _ = new THREE.Vector3(b,y,C);
                        _.sub(U.ori).multiplyScalar(U.scale);
                        var S = Math.floor(_.x)
                          , w = Math.ceil(_.x)
                          , A = Math.floor(_.y)
                          , x = Math.ceil(_.y)
                          , D = Math.floor(_.z)
                          , O = Math.ceil(_.z);
                        w == S && (w = S + 1),
                        x == A && (x = A + 1),
                        O == D && (O = D + 1),
                        l < w && (w = l),
                        d < x && (x = d),
                        c < O && (O = c);
                        var R, T = m[S * h + A * p + D], E = m[w * h + A * p + D], I = m[S * h + x * p + D], H = m[S * h + A * p + O], L = m[w * h + x * p + D], $ = m[S * h + x * p + O], P = m[w * h + A * p + O], F = m[w * h + x * p + O], M = _.x - S, N = _.y - A, z = _.z - D, q = ((T * (1 - M) + E * M) * (1 - N) + (I * (1 - M) + L * M) * N) * (1 - z) + ((H * (1 - M) + P * M) * (1 - N) + ($ * (1 - M) + F * M) * N) * z;
                        B < q && (q = B),
                        q < -B && (q = -B),
                        R = 0 < q ? (q /= +B,
                        new THREE.Color(1 - q,1 - q,1)) : (q /= -1 * B,
                        new THREE.Color(1,1 - q,1 - q));
                        f = i * g + j * v + k;
                        V[f] = R
                    }
        }
        for (i = 0,
        n = ee.length; i < n; i++)
            1 & ee[i] && (ee[i] |= 2)
    }
    ,
    this.fillAtom = function(e, t) {
        var i, n, r, s, o, a, l, d, c, h, p, m, u, f, g, v, b, y, C;
        i = Math.floor(.5 + O * (e.coord.x + W)),
        n = Math.floor(.5 + O * (e.coord.y + Y)),
        r = Math.floor(.5 + O * (e.coord.z + X));
        var _ = D(e)
          , S = 0
          , w = K * Z;
        for (h = 0,
        C = L[_]; h < C; h++)
            for (p = 0; p < C; p++) {
                if (-1 != H[_][S])
                    for (v = -1; v < 2; v++)
                        for (b = -1; b < 2; b++)
                            for (y = -1; y < 2; y++)
                                if (0 !== v && 0 !== b && 0 !== y)
                                    for (l = v * h,
                                    c = y * p,
                                    m = 0; m <= H[_][S]; m++)
                                        if (f = n + (d = m * b),
                                        g = r + c,
                                        !((u = i + l) < 0 || f < 0 || g < 0 || J <= u || K <= f || Z <= g)) {
                                            var A = u * w + f * Z + g;
                                            if (1 & ee[A]) {
                                                var x = t[ie[A]];
                                                x.serial != e.serial && l * l + d * d + c * c < (s = i + l - Math.floor(.5 + O * (x.x + W))) * s + (o = n + d - Math.floor(.5 + O * (x.y + Y))) * o + (a = r + c - Math.floor(.5 + O * (x.z + X))) * a && (ie[A] = e.serial)
                                            } else
                                                ee[A] |= 1,
                                                ie[A] = e.serial
                                        }
                S++
            }
    }
    ,
    this.fillvoxelswaals = function(e, t) {
        var i, n;
        for (i = 0,
        n = ee.length; i < n; i++)
            ee[i] &= -3;
        for (i in t) {
            var r = e[t[i]];
            void 0 !== r && this.fillAtomWaals(r, e)
        }
    }
    ,
    this.fillAtomWaals = function(e, t) {
        var i, n, r, s, o, a, l, d, c, h, p, m, u, f, g, v, b, y, C, _ = 0;
        i = Math.floor(.5 + O * (e.coord.x + W)),
        n = Math.floor(.5 + O * (e.coord.y + Y)),
        r = Math.floor(.5 + O * (e.coord.z + X));
        var S = D(e)
          , w = K * Z;
        for (u = 0,
        C = L[S]; u < C; u++)
            for (f = 0; f < C; f++) {
                if (-1 != H[S][_])
                    for (v = -1; v < 2; v++)
                        for (b = -1; b < 2; b++)
                            for (y = -1; y < 2; y++)
                                if (0 !== v && 0 !== b && 0 !== y)
                                    for (l = v * u,
                                    c = y * f,
                                    g = 0; g <= H[S][_]; g++)
                                        if (p = n + (d = g * b),
                                        m = r + c,
                                        !((h = i + l) < 0 || p < 0 || m < 0 || J <= h || K <= p || Z <= m)) {
                                            var A = h * w + p * Z + m;
                                            if (2 & ee[A]) {
                                                var x = t[ie[A]];
                                                x.serial != e.serial && l * l + d * d + c * c < (s = i + l - Math.floor(.5 + O * (x.x + W))) * s + (o = n + d - Math.floor(.5 + O * (x.y + Y))) * o + (a = r + c - Math.floor(.5 + O * (x.z + X))) * a && (ie[A] = e.serial)
                                            } else
                                                ee[A] |= 2,
                                                ie[A] = e.serial
                                        }
                _++
            }
    }
    ,
    this.buildboundary = function() {
        for (var e = K * Z, t = 0; t < J; t++)
            for (var i = 0; i < Z; i++)
                for (var n = 0; n < K; n++) {
                    var r = t * e + n * Z + i;
                    if (1 & ee[r])
                        for (var s = 0; s < 26; ) {
                            var o = t + S[s][0]
                              , a = i + S[s][2]
                              , l = n + S[s][1];
                            if (-1 < o && o < J && -1 < l && l < K && -1 < a && a < Z && !(1 & ee[o * e + l * Z + a])) {
                                ee[r] |= 4;
                                break
                            }
                            s++
                        }
                }
    }
    ;
    function w(e, s, o) {
        var a = new Int32Array(e * s * o * 3);
        this.set = function(e, t, i, n) {
            var r = 3 * ((e * s + t) * o + i);
            a[r] = n.ix,
            a[1 + r] = n.iy,
            a[2 + r] = n.iz
        }
        ,
        this.get = function(e, t, i) {
            var n = 3 * ((e * s + t) * o + i);
            return {
                ix: a[n],
                iy: a[1 + n],
                iz: a[2 + n]
            }
        }
    }
    this.fastdistancemap = function() {
        var e, t, i, n, r, s = new w(J,K,Z), o = K * Z, a = f * f, l = [], d = [];
        for (e = 0; e < J; e++)
            for (t = 0; t < K; t++)
                for (i = 0; i < Z; i++)
                    if (ee[r = e * o + t * Z + i] &= -3,
                    1 & ee[r] && 4 & ee[r]) {
                        var c = {
                            ix: e,
                            iy: t,
                            iz: i
                        };
                        s.set(e, t, i, c),
                        l.push(c),
                        te[r] = 0,
                        ee[r] |= 2,
                        ee[r] &= -5
                    }
        do {
            for (d = this.fastoneshell(l, s),
            l = [],
            e = 0,
            n = d.length; e < n; e++)
                r = o * d[e].ix + Z * d[e].iy + d[e].iz,
                ee[r] &= -5,
                te[r] <= 1.0404 * a && l.push({
                    ix: d[e].ix,
                    iy: d[e].iy,
                    iz: d[e].iz
                })
        } while (0 !== l.length);l = [],
        d = [],
        s = null;
        var h = O - .5;
        h < 0 && (h = 0);
        var p = a - .5 / (.1 + h);
        for (e = 0; e < J; e++)
            for (t = 0; t < K; t++)
                for (i = 0; i < Z; i++)
                    ee[r = e * o + t * Z + i] &= -5,
                    1 & ee[r] && (2 & ee[r] && !(2 & ee[r] && te[r] >= p) || (ee[r] |= 4))
    }
    ,
    this.fastoneshell = function(e, t) {
        var i, n, r, s, o, a, l, d, c, h, p, m, u = [];
        if (0 === e.length)
            return u;
        var f = {
            ix: -1,
            iy: -1,
            iz: -1
        }
          , g = K * Z;
        for (l = 0,
        c = e.length; l < c; l++)
            for (i = e[l].ix,
            n = e[l].iy,
            r = e[l].iz,
            p = t.get(i, n, r),
            d = 0; d < 6; d++)
                f.ix = i + S[d][0],
                f.iy = n + S[d][1],
                f.iz = r + S[d][2],
                f.ix < J && -1 < f.ix && f.iy < K && -1 < f.iy && f.iz < Z && -1 < f.iz && (m = f.ix * g + Z * f.iy + f.iz,
                1 & ee[m] && !(2 & ee[m]) ? (t.set(f.ix, f.iy, r + S[d][2], p),
                h = (s = f.ix - p.ix) * s + (o = f.iy - p.iy) * o + (a = f.iz - p.iz) * a,
                te[m] = h,
                ee[m] |= 2,
                ee[m] |= 4,
                u.push({
                    ix: f.ix,
                    iy: f.iy,
                    iz: f.iz
                })) : 1 & ee[m] && 2 & ee[m] && (h = (s = f.ix - p.ix) * s + (o = f.iy - p.iy) * o + (a = f.iz - p.iz) * a) < te[m] && (t.set(f.ix, f.iy, f.iz, p),
                te[m] = h,
                4 & ee[m] || (ee[m] |= 4,
                u.push({
                    ix: f.ix,
                    iy: f.iy,
                    iz: f.iz
                }))));
        for (l = 0,
        c = e.length; l < c; l++)
            for (i = e[l].ix,
            n = e[l].iy,
            r = e[l].iz,
            p = t.get(i, n, r),
            d = 6; d < 18; d++)
                f.ix = i + S[d][0],
                f.iy = n + S[d][1],
                f.iz = r + S[d][2],
                f.ix < J && -1 < f.ix && f.iy < K && -1 < f.iy && f.iz < Z && -1 < f.iz && (m = f.ix * g + Z * f.iy + f.iz,
                1 & ee[m] && !(2 & ee[m]) ? (t.set(f.ix, f.iy, r + S[d][2], p),
                h = (s = f.ix - p.ix) * s + (o = f.iy - p.iy) * o + (a = f.iz - p.iz) * a,
                te[m] = h,
                ee[m] |= 2,
                ee[m] |= 4,
                u.push({
                    ix: f.ix,
                    iy: f.iy,
                    iz: f.iz
                })) : 1 & ee[m] && 2 & ee[m] && (h = (s = f.ix - p.ix) * s + (o = f.iy - p.iy) * o + (a = f.iz - p.iz) * a) < te[m] && (t.set(f.ix, f.iy, f.iz, p),
                te[m] = h,
                4 & ee[m] || (ee[m] |= 4,
                u.push({
                    ix: f.ix,
                    iy: f.iy,
                    iz: f.iz
                }))));
        for (l = 0,
        c = e.length; l < c; l++)
            for (i = e[l].ix,
            n = e[l].iy,
            r = e[l].iz,
            p = t.get(i, n, r),
            d = 18; d < 26; d++)
                f.ix = i + S[d][0],
                f.iy = n + S[d][1],
                f.iz = r + S[d][2],
                f.ix < J && -1 < f.ix && f.iy < K && -1 < f.iy && f.iz < Z && -1 < f.iz && (m = f.ix * g + Z * f.iy + f.iz,
                1 & ee[m] && !(2 & ee[m]) ? (t.set(f.ix, f.iy, r + S[d][2], p),
                h = (s = f.ix - p.ix) * s + (o = f.iy - p.iy) * o + (a = f.iz - p.iz) * a,
                te[m] = h,
                ee[m] |= 2,
                ee[m] |= 4,
                u.push({
                    ix: f.ix,
                    iy: f.iy,
                    iz: f.iz
                })) : 1 & ee[m] && 2 & ee[m] && (h = (s = f.ix - p.ix) * s + (o = f.iy - p.iy) * o + (a = f.iz - p.iz) * a) < te[m] && (t.set(f.ix, f.iy, f.iz, p),
                te[m] = h,
                4 & ee[m] || (ee[m] |= 4,
                u.push({
                    ix: f.ix,
                    iy: f.iy,
                    iz: f.iz
                }))));
        return u
    }
    ,
    this.marchingcubeinit = function(e) {
        for (var t = 0, i = ee.length; t < i; t++)
            1 == e ? ee[t] &= -5 : 4 == e ? (ee[t] &= -3,
            4 & ee[t] && (ee[t] |= 2),
            ee[t] &= -5) : 2 == e ? 4 & ee[t] && 2 & ee[t] ? ee[t] &= -5 : 4 & ee[t] && !(2 & ee[t]) && (ee[t] |= 2) : 3 == e && (ee[t] &= -5)
    }
    ;
    this.marchingcube = function(e) {
        this.marchingcubeinit(e),
        T = [],
        R = [],
        $3Dmol.MarchingCube.march(ee, T, R, {
            smooth: 1,
            nX: J,
            nY: K,
            nZ: Z
        });
        for (var t = K * Z, i = 0, n = T.length; i < n; i++)
            T[i].atomid = ie[T[i].x * t + Z * T[i].y + T[i].z],
            G && (T[i].color = V[T[i].x * t + Z * T[i].y + T[i].z]);
        var r, s, o = 0;
        if (E) {
            var a = {};
            r = {};
            i = 0;
            for (var l = R.length; i < l; i += 3) {
                var d = R[i]
                  , c = R[i + 1]
                  , h = R[i + 2];
                if (d != c && c != h && d != h) {
                    var p = Math.min(d, c, h)
                      , m = Math.max(d, c, h)
                      , u = p + "_" + (d + c + h - p - m) + "_" + m;
                    if (!a.hasOwnProperty(u)) {
                        a[u] = 1;
                        var f = T[d].atomid
                          , g = T[c].atomid
                          , v = T[h].atomid;
                        if (I[f] && I[g] && I[v]) {
                            var b = T[d]
                              , y = T[c]
                              , C = T[h]
                              , _ = (b.x - y.x) * (b.x - y.x) + (b.y - y.y) * (b.y - y.y) + (b.z - y.z) * (b.z - y.z)
                              , S = (b.x - C.x) * (b.x - C.x) + (b.y - C.y) * (b.y - C.y) + (b.z - C.z) * (b.z - C.z)
                              , w = (C.x - y.x) * (C.x - y.x) + (C.y - y.y) * (C.y - y.y) + (C.z - y.z) * (C.z - y.z)
                              , A = Math.min(_, S, w)
                              , x = Math.max(_, S, w)
                              , k = _ + S + w - A - x
                              , D = 0
                              , O = (D = 0 == parseInt(100 * (x - A)) ? .433 * A : 0 == parseInt(100 * (k - A)) ? .5 * A : .707 * A) / 3;
                            void 0 === r[f] ? r[f] = O : r[f] += O,
                            void 0 === r[g] ? r[g] = O : r[g] += O,
                            void 0 === r[v] ? r[v] = O : r[v] += O,
                            o += D
                        }
                    }
                }
            }
            o = o / (s = Math.max(Q.x, Q.y, Q.z)) / s
        }
        return E || $3Dmol.MarchingCube.laplacianSmooth(1, T, R),
        {
            area: o,
            serial2area: r,
            scaleFactor: s
        }
    }
}
,
$3Dmol.SetupSurface = function(e) {
    this.icn3d;
    var t = e.threshbox
      , i = new $3Dmol.ProteinSurface(t);
    i.initparm(e.extent, 1 !== e.type, e.bCalcArea, e.atomsToShow, e.header, e.data, e.matrix, e.isovalue, e.loadPhiFrom),
    i.fillvoxels(e.allatoms, e.extendedAtoms),
    i.buildboundary(),
    2 === e.type && (i.fastdistancemap(),
    i.boundingatom(!1),
    i.fillvoxelswaals(e.allatoms, e.extendedAtoms));
    var n = i.marchingcube();
    i.vpBits = null,
    i.vpDistance = null,
    i.vpAtomID = null;
    var r = i.getFacesAndVertices(e.atomsToShow);
    return r.area = n.area,
    r.serial2area = n.serial2area,
    r.scaleFactor = n.scaleFactor,
    i.faces = null,
    i.verts = null,
    r
}
,
"undefined" == typeof console && (console = {
    log: function() {}
}),
$3Dmol.ElectronMap = function(e) {
    var U, B, G, V, W, Y, X, h, p, Q = 1.5, Z = {}, K = 2, J = 0, ee = 0, te = 0, ie = null, ne = null, u = 0, f = 0, g = 0, v = 0, b = 0, y = 0, d = [new Int32Array([1, 0, 0]), new Int32Array([-1, 0, 0]), new Int32Array([0, 1, 0]), new Int32Array([0, -1, 0]), new Int32Array([0, 0, 1]), new Int32Array([0, 0, -1]), new Int32Array([1, 1, 0]), new Int32Array([1, -1, 0]), new Int32Array([-1, 1, 0]), new Int32Array([-1, -1, 0]), new Int32Array([1, 0, 1]), new Int32Array([1, 0, -1]), new Int32Array([-1, 0, 1]), new Int32Array([-1, 0, -1]), new Int32Array([0, 1, 1]), new Int32Array([0, 1, -1]), new Int32Array([0, -1, 1]), new Int32Array([0, -1, -1]), new Int32Array([1, 1, 1]), new Int32Array([1, 1, -1]), new Int32Array([1, -1, 1]), new Int32Array([-1, 1, 1]), new Int32Array([1, -1, -1]), new Int32Array([-1, -1, 1]), new Int32Array([-1, 1, -1]), new Int32Array([-1, -1, -1])];
    this.getFacesAndVertices = function(e, t) {
        var i, n, r = {};
        for (i = 0,
        n = t.length; i < n; i++)
            r[t[i]] = 1;
        var s = p;
        for (i = 0,
        n = s.length; i < n; i++) {
            var o;
            o = "phi" == V ? new THREE.Vector3(s[i].x,s[i].y,s[i].z).multiplyScalar(1 / G.scale).applyMatrix4(U) : new THREE.Vector3(s[i].x,s[i].y,s[i].z).applyMatrix4(U),
            s[i].x = o.x,
            s[i].y = o.y,
            s[i].z = o.z
        }
        var a = [];
        for (i = 0,
        n = h.length; i < n; i += 3) {
            var l = h[i]
              , d = h[i + 1]
              , c = h[i + 2];
            l !== d && d !== c && l !== c && a.push({
                a: l,
                b: d,
                c: c
            })
        }
        return ne = ie = null,
        {
            vertices: s,
            faces: a
        }
    }
    ,
    this.initparm = function(e, t, i, n, r, s, o, a, l, d, c, h, p) {
        Y = h,
        X = p,
        Q = void 0 !== (G = e).max ? G.min + (G.max - G.min) * n / 100 : void 0 !== G.mean ? G.mean + G.sigma * n : n,
        Z = t,
        U = i,
        B = s,
        V = d,
        W = c,
        u = 0,
        v = G.xExtent - 1,
        f = 0,
        b = G.yExtent - 1,
        g = 0,
        y = G.zExtent - 1,
        0;
        var m = v - u;
        m < b - f && (m = b - f),
        m < y - g && (m = y - g),
        K = 1;
        te = Math.floor(.5 + K * (v - u)) + 1,
        ee = Math.floor(.5 + K * (b - f)) + 1,
        J = Math.floor(.5 + K * (y - g)) + 1,
        ie = new Uint8Array(te * ee * J),
        ne = new Uint8Array(te * ee * J)
    }
    ,
    this.transformMemPro = function(e, t, i, n) {
        var r = e.clone();
        r.sub(i);
        var s = r.x * t[0] + r.y * t[1] + r.z * t[2] + n.x
          , o = r.x * t[3] + r.y * t[4] + r.z * t[5] + n.y
          , a = r.x * t[6] + r.y * t[7] + r.z * t[8] + n.z;
        return r.x = s,
        r.y = o,
        r.z = a,
        r
    }
    ,
    this.fillvoxels = function(e, t) {
        var i, n, r, s, o, a;
        for (i = 0,
        s = ie.length; i < s; i++)
            ie[i] = 0,
            ne[i] = 0;
        var l = ee * J
          , d = J;
        if ("phi" != V || G.bSurface) {
            var c = (new THREE.Matrix4).getInverse(U)
              , h = [];
            B = parseInt(B);
            var p, m, u, f = new Array(9);
            if (void 0 !== W && void 0 !== W.rot) {
                p = W.rot,
                m = W.trans1,
                u = W.trans2;
                var g = new THREE.Matrix3
                  , v = new THREE.Matrix3;
                g.set(p[0], p[1], p[2], p[3], p[4], p[5], p[6], p[7], p[8]),
                v.getInverse(g),
                f[0] = v.elements[0],
                f[1] = v.elements[3],
                f[2] = v.elements[6],
                f[3] = v.elements[1],
                f[4] = v.elements[4],
                f[5] = v.elements[7],
                f[6] = v.elements[2],
                f[7] = v.elements[5],
                f[8] = v.elements[8]
            }
            if ("phi" == V && G.bSurface) {
                var b = new Float32Array(te * ee * J);
                for (i = 0; i < te; ++i)
                    for (n = 0; n < ee; ++n)
                        for (r = 0; r < J; ++r) {
                            j = i * l + n * d + r;
                            "phi" == G.filetype ? q = r * l + n * d + i : "cube" == G.filetype && (q = i * l + n * d + r),
                            q < Z.length && (b[j] = Z[q])
                        }
                for (var y in t) {
                    if ("DUM" !== (z = e[t[y]]).resn) {
                        var C = z.coord.clone();
                        if ("delphi" != Y)
                            if (void 0 !== W && void 0 !== W.rot)
                                C = this.transformMemPro(z.coord, f, u, m).applyMatrix4(c);
                            else
                                C = z.coord.clone().applyMatrix4(c);
                        C.sub(G.ori).multiplyScalar(G.scale);
                        var _ = Math.floor(C.x)
                          , S = Math.ceil(C.x)
                          , w = Math.floor(C.y)
                          , A = Math.ceil(C.y)
                          , x = Math.floor(C.z)
                          , k = Math.ceil(C.z);
                        S == _ && (S = _ + 1),
                        A == w && (A = w + 1),
                        k == x && (k = x + 1),
                        te < S && (S = te),
                        ee < A && (A = ee),
                        J < k && (k = J);
                        var D, O = b[_ * l + w * d + x], R = b[S * l + w * d + x], T = b[_ * l + A * d + x], E = b[_ * l + w * d + k], I = b[S * l + A * d + x], H = b[_ * l + A * d + k], L = b[S * l + w * d + k], $ = b[S * l + A * d + k], P = C.x - _, F = C.y - w, M = C.z - x, N = ((O * (1 - P) + R * P) * (1 - F) + (T * (1 - P) + I * P) * F) * (1 - M) + ((E * (1 - P) + L * P) * (1 - F) + (H * (1 - P) + $ * P) * F) * M;
                        Q < N && (N = Q),
                        N < -Q && (N = -Q),
                        D = 0 < N ? (N /= +Q,
                        new THREE.Color(1 - N,1 - N,1)) : (N /= -1 * Q,
                        new THREE.Color(1,1 - N,1 - N)),
                        X.atoms[t[y]].color = D,
                        X.atomPrevColors[t[y]] = D
                    }
                }
            } else {
                for (var y in t) {
                    var z;
                    if ("DUM" !== (z = e[t[y]]).resn) {
                        if (void 0 !== W && void 0 !== W.rot)
                            C = this.transformMemPro(z.coord, f, u, m).applyMatrix4(c);
                        else
                            C = z.coord.clone().applyMatrix4(c);
                        for (i = Math.floor(C.x) - B,
                        s = Math.ceil(C.x) + B; i <= s; ++i)
                            if (!(i < 0 || i > G.xExtent * K - 1))
                                for (n = Math.floor(C.y) - B,
                                o = Math.ceil(C.y) + B; n <= o; ++n)
                                    if (!(n < 0 || n > G.yExtent * K - 1))
                                        for (r = Math.floor(C.z) - B,
                                        a = Math.ceil(C.z) + B; r <= a; ++r)
                                            if (!(r < 0 || r > G.zExtent * K - 1)) {
                                                j = i * l + n * d + r;
                                                h.push(j)
                                            }
                    }
                }
                for (i = 0,
                s = h.length; i < s; ++i) {
                    j = h[i];
                    "2fofc" == V ? ie[j] = Z[j] >= Q ? 1 : 0 : "fofc" == V ? (ie[j] = Z[j] >= Q || Z[j] <= -Q ? 1 : 0,
                    ne[j] = 0 <= Z[j] ? 1 : 0) : "em" == V && (ie[j] = Z[j] >= Q ? 1 : 0)
                }
            }
        } else
            for (i = 0; i < te; ++i)
                for (n = 0; n < ee; ++n)
                    for (r = 0; r < J; ++r) {
                        var q, j = i * l + n * d + r;
                        "phi" == G.filetype ? q = r * l + n * d + i : "cube" == G.filetype && (q = i * l + n * d + r),
                        q < Z.length && (ie[j] = Z[q] >= Q || Z[q] <= -Q ? 1 : 0,
                        ne[j] = 0 <= Z[q] ? 1 : 0)
                    }
        for (i = 0,
        s = ie.length; i < s; i++)
            1 & ie[i] && (ie[i] |= 2)
    }
    ,
    this.buildboundary = function() {
        var e, t, i, n = ee * J;
        for (e = 0; e < te; e++)
            for (t = 0; t < J; t++)
                for (i = 0; i < ee; i++) {
                    var r = e * n + i * J + t;
                    if (1 & ie[r])
                        for (var s = 0; s < 26; ) {
                            var o = e + d[s][0]
                              , a = t + d[s][2]
                              , l = i + d[s][1];
                            if (-1 < o && o < te && -1 < l && l < ee && -1 < a && a < J && !(1 & ie[o * n + l * J + a])) {
                                ie[r] |= 4;
                                break
                            }
                            s++
                        }
                }
    }
    ,
    this.marchingcubeinit = function(e) {
        for (var t = 0, i = ie.length; t < i; t++)
            1 == e ? ie[t] &= -5 : 4 == e ? (ie[t] &= -3,
            4 & ie[t] && (ie[t] |= 2),
            ie[t] &= -5) : 2 == e ? 4 & ie[t] && 2 & ie[t] ? ie[t] &= -5 : 4 & ie[t] && !(2 & ie[t]) && (ie[t] |= 2) : ie[t] &= -5
    }
    ;
    this.marchingcube = function(e) {
        this.marchingcubeinit(e),
        p = [],
        h = [],
        $3Dmol.MarchingCube.march(ie, p, h, {
            smooth: 1,
            nX: te,
            nY: ee,
            nZ: J
        });
        for (var t = ee * J, i = 0, n = p.length; i < n; i++)
            p[i].atomid = ne[p[i].x * t + J * p[i].y + p[i].z];
        $3Dmol.MarchingCube.laplacianSmooth(1, p, h)
    }
}
,
$3Dmol.SetupMap = function(e) {
    "use strict";
    var t, i = new $3Dmol.ElectronMap;
    return i.initparm(e.header, e.data, e.matrix, e.isovalue, e.center, e.maxdist, e.pmin, e.pmax, e.water, e.type, e.rmsd_supr, e.loadPhiFrom, e.icn3d),
    i.fillvoxels(e.allatoms, e.extendedAtoms),
    e.header.bSurface || i.buildboundary(),
    e.header.bSurface || i.marchingcube(),
    i.vpBits = null,
    i.vpAtomID = null,
    e.header.bSurface || (t = i.getFacesAndVertices(e.allatoms, e.atomsToShow)),
    i.faces = null,
    i.verts = null,
    t
}
,
iCn3D.prototype.getRmsdSupr = function(e, t, i) {
    this.icn3d;
    var n, r, s, o, a, l, d, c, h, p, m, u, f = new Array(9), g = new THREE.Vector3, v = new THREE.Vector3, b = [], y = [], C = new Array(3), _ = new Array(3), S = new Array(3), w = new Array(3), A = new Array(3), x = new Array(3);
    if (n = 0,
    i <= 1)
        return {
            rot: void 0,
            trans1: void 0,
            trans2: void 0,
            rmsd: 999
        };
    for (r = 0; r < i; r++)
        b.push(e[r]),
        y.push(t[r]),
        g.add(e[r]),
        v.add(t[r]);
    g.multiplyScalar(1 / i),
    v.multiplyScalar(1 / i);
    var k = g
      , D = v;
    for (r = 0; r < i; r++)
        b[r].sub(g),
        y[r].sub(v);
    for (l = d = r = 0; r < i; r++)
        l += b[r].x * b[r].x + b[r].y * b[r].y + b[r].z * b[r].z,
        d += y[r].x * y[r].x + y[r].y * y[r].y + y[r].z * y[r].z;
    l /= i,
    d /= i;
    var O = new Array(9);
    for (r = 0; r < 9; ++r)
        O[r] = 0;
    for (r = 0; r < i; r++)
        O[0] += b[r].x * y[r].x,
        O[1] += b[r].x * y[r].y,
        O[2] += b[r].x * y[r].z,
        O[3] += b[r].y * y[r].x,
        O[4] += b[r].y * y[r].y,
        O[5] += b[r].y * y[r].z,
        O[6] += b[r].z * y[r].x,
        O[7] += b[r].z * y[r].y,
        O[8] += b[r].z * y[r].z;
    for (r = 0; r < 9; ++r)
        O[r] /= i;
    var R = this.getEigenVectors(O);
    return s = R.k,
    C = R.h1,
    _ = R.h2,
    S = R.h3,
    w = R.k1,
    A = R.k2,
    x = R.k3,
    c = R.d1,
    h = R.d2,
    p = R.d3,
    o = R.flag,
    u = R.s,
    1 != s ? (n = 100,
    f[0] = 1,
    f[1] = 0,
    f[2] = 0,
    f[3] = 0,
    f[4] = 1,
    f[5] = 0,
    f[6] = 0,
    f[7] = 0,
    f[8] = 1,
    {
        rot: f,
        trans1: k,
        trans2: D,
        rmsd: n
    }) : (1 == o ? (w[0] = O[0] * C[0] + O[3] * C[1] + O[6] * C[2],
    w[1] = O[1] * C[0] + O[4] * C[1] + O[7] * C[2],
    w[2] = O[2] * C[0] + O[5] * C[1] + O[8] * C[2],
    a = Math.sqrt(c),
    w[0] /= a,
    w[1] /= a,
    w[2] /= a,
    A[0] = O[0] * _[0] + O[3] * _[1] + O[6] * _[2],
    A[1] = O[1] * _[0] + O[4] * _[1] + O[7] * _[2],
    A[2] = O[2] * _[0] + O[5] * _[1] + O[8] * _[2],
    a = Math.sqrt(h),
    A[0] /= a,
    A[1] /= a,
    A[2] /= a,
    x[0] = O[0] * S[0] + O[3] * S[1] + O[6] * S[2],
    x[1] = O[1] * S[0] + O[4] * S[1] + O[7] * S[2],
    x[2] = O[2] * S[0] + O[5] * S[1] + O[8] * S[2],
    a = Math.sqrt(p),
    x[0] /= a,
    x[1] /= a,
    x[2] /= a) : 2 == o && (C[0] = O[0] * w[0] + O[1] * w[1] + O[2] * w[2],
    C[1] = O[3] * w[0] + O[4] * w[1] + O[5] * w[2],
    C[2] = O[6] * w[0] + O[7] * w[1] + O[8] * w[2],
    a = Math.sqrt(c),
    C[0] /= a,
    C[1] /= a,
    C[2] /= a,
    _[0] = O[0] * A[0] + O[1] * A[1] + O[2] * A[2],
    _[1] = O[3] * A[0] + O[4] * A[1] + O[5] * A[2],
    _[2] = O[6] * A[0] + O[7] * A[1] + O[8] * A[2],
    a = Math.sqrt(h),
    _[0] /= a,
    _[1] /= a,
    _[2] /= a,
    S[0] = O[0] * x[0] + O[1] * x[1] + O[2] * x[2],
    S[1] = O[3] * x[0] + O[4] * x[1] + O[5] * x[2],
    S[2] = O[6] * x[0] + O[7] * x[1] + O[8] * x[2],
    a = Math.sqrt(p),
    S[0] /= a,
    S[1] /= a,
    S[2] /= a),
    0 < u ? (f[0] = w[0] * C[0] + A[0] * _[0] + x[0] * S[0],
    f[1] = w[0] * C[1] + A[0] * _[1] + x[0] * S[1],
    f[2] = w[0] * C[2] + A[0] * _[2] + x[0] * S[2],
    f[3] = w[1] * C[0] + A[1] * _[0] + x[1] * S[0],
    f[4] = w[1] * C[1] + A[1] * _[1] + x[1] * S[1],
    f[5] = w[1] * C[2] + A[1] * _[2] + x[1] * S[2],
    f[6] = w[2] * C[0] + A[2] * _[0] + x[2] * S[0],
    f[7] = w[2] * C[1] + A[2] * _[1] + x[2] * S[1],
    f[8] = w[2] * C[2] + A[2] * _[2] + x[2] * S[2]) : (f[0] = w[0] * C[0] + A[0] * _[0] - x[0] * S[0],
    f[1] = w[0] * C[1] + A[0] * _[1] - x[0] * S[1],
    f[2] = w[0] * C[2] + A[0] * _[2] - x[0] * S[2],
    f[3] = w[1] * C[0] + A[1] * _[0] - x[1] * S[0],
    f[4] = w[1] * C[1] + A[1] * _[1] - x[1] * S[1],
    f[5] = w[1] * C[2] + A[1] * _[2] - x[1] * S[2],
    f[6] = w[2] * C[0] + A[2] * _[0] - x[2] * S[0],
    f[7] = w[2] * C[1] + A[2] * _[1] - x[2] * S[1],
    f[8] = w[2] * C[2] + A[2] * _[2] - x[2] * S[2]),
    {
        rot: f,
        trans1: k,
        trans2: D,
        rmsd: n = 0 < (m = l + d - 2 * ((c = Math.sqrt(c)) + (h = Math.sqrt(h)) + u * (p = Math.sqrt(p)))) ? Math.sqrt(m) : void 0
    })
}
,
iCn3D.prototype.eigen_values = function(e) {
    var t, i, n, r, s, o, a, l, d, c, h, p, m, u, f, g, v, b, y, C;
    this.icn3d;
    (t = e[0],
    i = e[1],
    n = e[2],
    r = e[3],
    s = e[4],
    o = e[5],
    a = e[6],
    l = e[7],
    (f = .25 * (u = (c = -(t + s + (d = e[8]))) * c * c / 13.5 - c * (h = t * s + (t + s) * d - o * l - i * r - n * a) / 3 + (p = -t * s * d + t * o * l + i * r * d - i * o * a - n * r * l + n * s * a)) * u + (m = -c * c / 3 + h) * m * m / 27) < 0) ? (y = Math.sqrt(.25 * u * u - f),
    C = Math.acos(-.5 * u / y),
    g = 2 * Math.cbrt(y) * Math.cos(C / 3)) : g = Math.cbrt(-.5 * u + Math.sqrt(f)) + Math.cbrt(-.5 * u - Math.sqrt(f));
    return p /= -(g -= c / 3),
    (v = .5 * (-(c += g) + Math.sqrt(c * c - 4 * p))) < (b = .5 * (-c - Math.sqrt(c * c - 4 * p))) && (f = b,
    v = b = v),
    g < v && (f = v,
    v = g,
    g = f),
    v < b && (f = b,
    v = b = v),
    {
        d1: g,
        d2: v,
        d3: b
    }
}
,
iCn3D.prototype.null_basis = function(e, t, i, n, r) {
    var s, o, a, l, d, c, h, p, m, u, f, g, v, b, y, C, _;
    this.icn3d;
    if (a = e[0],
    l = e[1],
    d = e[2],
    c = e[3],
    h = e[4],
    p = e[5],
    m = e[6],
    u = e[7],
    f = e[8],
    _ = Math.abs(a),
    Math.abs(l) > _ && (_ = Math.abs(l)),
    Math.abs(d) > _ && (_ = Math.abs(d)),
    Math.abs(c) > _ && (_ = Math.abs(c)),
    Math.abs(h) > _ && (_ = Math.abs(h)),
    Math.abs(p) > _ && (_ = Math.abs(p)),
    Math.abs(m) > _ && (_ = Math.abs(m)),
    Math.abs(u) > _ && (_ = Math.abs(u)),
    Math.abs(f) > _ && (_ = Math.abs(f)),
    _ < 1e-10)
        return k0 = 3,
        {
            k: k0,
            v1: t,
            v2: i,
            v3: n
        };
    if (o = 0,
    a /= _,
    l /= _,
    d /= _,
    c /= _,
    h /= _,
    p /= _,
    m /= _,
    u /= _,
    f /= _,
    Math.abs(a) < r && Math.abs(c) < r && Math.abs(m) < r)
        s = 1,
        t[0] = 1,
        t[1] = 0,
        t[2] = 0,
        Math.abs(l) < r && Math.abs(h) < r && Math.abs(u) < r ? (s = 2,
        i[0] = 0,
        i[1] = 1,
        i[2] = 0,
        Math.abs(d) < r && Math.abs(p) < r && Math.abs(f) < r && (s = 3,
        n[0] = 0,
        n[1] = 0,
        n[2] = 1)) : (_ = Math.abs(l),
        Math.abs(h) > _ && (C = a,
        a = c,
        c = C,
        C = l,
        l = h,
        h = C,
        C = d,
        d = p,
        p = C,
        _ = Math.abs(l)),
        Math.abs(u) > _ && (C = a,
        a = m,
        m = C,
        C = l,
        l = u,
        u = C,
        C = d,
        d = f,
        f = C),
        b = p - h * d / l,
        y = f - u * d / l,
        Math.abs(b) < r && Math.abs(y) < r && (s = 2,
        i[0] = 0,
        i[1] = -d / l,
        o = i[2] = 1));
    else if (_ = Math.abs(a),
    Math.abs(l) > _ && (C = a,
    a = c,
    c = C,
    C = l,
    l = h,
    h = C,
    C = d,
    d = p,
    p = C,
    _ = Math.abs(a)),
    Math.abs(d) > _ && (C = a,
    a = m,
    m = C,
    C = l,
    l = u,
    u = C,
    C = d,
    d = f,
    f = C),
    g = h - c * l / a,
    v = p - c * d / a,
    b = u - m * l / a,
    y = f - m * d / a,
    Math.abs(g) < r && Math.abs(b) < r)
        s = 1,
        t[0] = -l / a,
        t[1] = 1,
        t[2] = 0,
        Math.abs(v) < r && Math.abs(y) < r && (s = 2,
        i[0] = -d / a,
        i[1] = 0,
        i[2] = 1,
        o = 2);
    else {
        if (Math.abs(g) < Math.abs(b) && (C = g,
        g = b,
        b = C,
        C = v,
        v = y,
        y = C),
        !(Math.abs(y - v * b / g) < r))
            return t[k0 = 0] = 0,
            t[1] = 0,
            t[2] = 0,
            {
                k: k0,
                v1: t,
                v2: i,
                v3: n
            };
        s = 1,
        t[0] = l / a * (v / g) - d / a,
        t[1] = -v / g,
        t[2] = 1,
        o = 3
    }
    return k0 = s,
    0 < o && (1 == o ? (a = i[0],
    l = i[1],
    d = i[2],
    C = Math.sqrt(a * a + l * l + d * d),
    i[0] = a / C,
    i[1] = l / C,
    i[2] = d / C) : 2 == o ? (a = t[0],
    l = t[1],
    d = t[2],
    C = a * (c = i[0]) + l * (h = i[1]) + d * (p = i[2]),
    Math.abs(C) >= r && (i[0] = a + C * c,
    i[1] = l + C * h,
    i[2] = d + C * p,
    c = i[0],
    h = i[1],
    p = i[2]),
    C = Math.sqrt(a * a + l * l + d * d),
    t[0] = a / C,
    t[1] = l / C,
    t[2] = d / C,
    C = Math.sqrt(c * c + h * h + p * p),
    i[0] = c / C,
    i[1] = h / C,
    i[2] = p / C) : (a = t[0],
    l = t[1],
    d = t[2],
    C = Math.sqrt(a * a + l * l + d * d),
    t[0] = a / C,
    t[1] = l / C,
    t[2] = d / C)),
    {
        k: k0,
        v1: t,
        v2: i,
        v3: n
    }
}
,
iCn3D.prototype.getEigenForSelection = function(e, t) {
    this.icn3d;
    var i, n = new THREE.Vector3, r = [];
    for (i = 0; i < t; i++)
        r.push(e[i]),
        n.add(e[i]);
    for (n.multiplyScalar(1 / t),
    i = 0; i < t; i++)
        r[i].sub(n);
    var s = new Array(9);
    for (i = 0; i < 9; ++i)
        s[i] = 0;
    for (i = 0; i < t; i++)
        s[0] += r[i].x * r[i].x,
        s[1] += r[i].x * r[i].y,
        s[2] += r[i].x * r[i].z,
        s[3] += r[i].y * r[i].x,
        s[4] += r[i].y * r[i].y,
        s[5] += r[i].y * r[i].z,
        s[6] += r[i].z * r[i].x,
        s[7] += r[i].z * r[i].y,
        s[8] += r[i].z * r[i].z;
    for (i = 0; i < 9; ++i)
        s[i] /= t;
    return this.getEigenVectors(s, !0)
}
,
iCn3D.prototype.getEigenVectors = function(e, t) {
    var n, r, s, o, a, l, d, c = this, h = (c.icn3d,
    1e-10), p = new Array(9), m = new Array(3), u = new Array(3), f = new Array(3), g = new Array(3), v = new Array(3), b = new Array(3);
    s = e[0] * (e[4] * e[8] - e[5] * e[7]),
    s -= e[1] * (e[3] * e[8] - e[5] * e[6]),
    d = (s += e[2] * (e[3] * e[7] - e[4] * e[6])) < 0 ? -1 : 1;
    var y = new Array(3)
      , C = new Array(3);
    for (i = 0; i < 3; ++i)
        y[i] = new THREE.Vector3,
        C[i] = new THREE.Vector3;
    y[0].x = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
    y[0].y = e[0] * e[3] + e[1] * e[4] + e[2] * e[5],
    y[0].z = e[0] * e[6] + e[1] * e[7] + e[2] * e[8],
    y[1].x = y[0].y,
    y[1].y = e[3] * e[3] + e[4] * e[4] + e[5] * e[5],
    y[1].z = e[3] * e[6] + e[4] * e[7] + e[5] * e[8],
    y[2].x = y[0].z,
    y[2].y = y[1].z,
    y[2].z = e[6] * e[6] + e[7] * e[7] + e[8] * e[8],
    C[0].x = e[0] * e[0] + e[3] * e[3] + e[6] * e[6],
    C[0].y = e[0] * e[1] + e[3] * e[4] + e[6] * e[7],
    C[0].z = e[0] * e[2] + e[3] * e[5] + e[6] * e[8],
    C[1].x = C[0].y,
    C[1].y = e[1] * e[1] + e[4] * e[4] + e[7] * e[7],
    C[1].z = e[1] * e[2] + e[4] * e[5] + e[7] * e[8],
    C[2].x = C[0].z,
    C[2].y = C[1].z,
    C[2].z = e[2] * e[2] + e[5] * e[5] + e[8] * e[8],
    p[0] = y[0].x,
    p[1] = y[0].y,
    p[2] = y[0].z,
    p[3] = y[1].x,
    p[4] = y[1].y,
    p[5] = y[1].z,
    p[6] = y[2].x,
    p[7] = y[2].y,
    p[8] = y[2].z;
    var _ = c.eigen_values(p);
    o = _.d1,
    a = _.d2,
    l = _.d3,
    r = 1,
    p[0] -= o,
    p[4] -= o,
    p[8] -= o;
    var S = c.null_basis(p, m, u, f, h);
    return n = S.k,
    m = S.v1,
    u = S.v2,
    f = S.v3,
    t || (1 == n && (p[0] += o - a,
    p[4] += o - a,
    p[8] += o - a,
    n = (S = c.null_basis(p, u, f, m, h)).k,
    u = S.v1,
    f = S.v2,
    m = S.v3,
    1 == n && (p[0] += a - l,
    p[4] += a - l,
    p[8] += a - l,
    n = (S = c.null_basis(p, f, m, u, h)).k,
    f = S.v1,
    m = S.v2,
    u = S.v3)),
    1 != n && (p[0] = C[0].x,
    p[1] = C[0].y,
    p[2] = C[0].z,
    p[3] = C[1].x,
    p[4] = C[1].y,
    p[5] = C[1].z,
    p[6] = C[2].x,
    p[7] = C[2].y,
    p[8] = C[2].z,
    r = 2,
    p[0] -= o,
    p[4] -= o,
    p[8] -= o,
    n = (S = c.null_basis(p, g, v, b, h)).k,
    g = S.v1,
    v = S.v2,
    b = S.v3,
    1 == n && (p[0] += o - a,
    p[4] += o - a,
    p[8] += o - a,
    n = (S = c.null_basis(p, v, b, g, h)).k,
    v = S.v1,
    b = S.v2,
    g = S.v3,
    1 == n && (p[0] += a - l,
    p[4] += a - l,
    p[8] += a - l,
    n = (S = c.null_basis(p, b, g, v, h)).k,
    b = S.v1,
    g = S.v2,
    v = S.v3)))),
    {
        k: n,
        h1: m,
        h2: u,
        h3: f,
        k1: g,
        k2: v,
        k3: b,
        d1: o,
        d2: a,
        d3: l,
        flag: r,
        s: d
    }
}
,
iCn3D.prototype.createSurfaceRepresentation = function(e, n, t, i) {
    var c = this;
    c.icn3d;
    if (0 != Object.keys(e).length) {
        var r;
        null == i && (i = 1),
        this.opacity = i;
        var s, o = this.getExtent(e), a = [];
        if (this.bConsiderNeighbors)
            s = this.unionHash(s, e),
            s = this.unionHash(s, this.getAtomsWithinAtom(this.atoms, e, 5)),
            a = Object.keys(s);
        else
            a = Object.keys(e);
        var l, d = !(10 == parseInt(10 * i) || t || this.bInstanced && Object.keys(this.atoms).length * this.biomtMatrices.length > this.maxatomcnt), h = {
            allatoms: this.atoms,
            atomsToShow: Object.keys(e),
            extendedAtoms: a,
            water: this.water,
            center: this.center,
            maxdist: 1,
            pmin: this.pmin,
            pmax: this.pmax,
            rmsd_supr: this.rmsd_supr
        };
        if (11 == n)
            h.header = c.mapData.header2,
            h.data = c.mapData.data2,
            h.matrix = c.mapData.matrix2,
            h.isovalue = c.mapData.sigma2,
            h.type = "2fofc",
            l = $3Dmol.SetupMap(h);
        else if (12 == n)
            h.header = c.mapData.header,
            h.data = c.mapData.data,
            h.matrix = c.mapData.matrix,
            h.isovalue = c.mapData.sigma,
            h.type = "fofc",
            l = $3Dmol.SetupMap(h);
        else if (13 == n)
            h.maxdist = 3,
            h.header = c.mapData.headerEm,
            h.data = c.mapData.dataEm,
            h.matrix = c.mapData.matrixEm,
            h.isovalue = c.mapData.sigmaEm,
            h.type = "em",
            l = $3Dmol.SetupMap(h);
        else if (14 == n)
            h.header = c.mapData.headerPhi,
            h.data = c.mapData.dataPhi,
            h.matrix = c.mapData.matrixPhi,
            h.isovalue = c.mapData.contourPhi,
            h.type = "phi",
            h.loadPhiFrom = c.loadPhiFrom,
            l = $3Dmol.SetupMap(h);
        else {
            var p = this.exclHash(e, this.water);
            a = Object.keys(p);
            var m = n;
            21 == m ? m = 1 : 22 == m ? m = 2 : 23 == m && (m = 3),
            (h = {
                extent: o,
                allatoms: this.atoms,
                atomsToShow: Object.keys(p),
                extendedAtoms: a,
                type: m,
                threshbox: d ? 60 : this.threshbox,
                bCalcArea: this.bCalcArea
            }).header = c.mapData.headerPhi,
            h.data = c.mapData.dataPhi,
            h.matrix = c.mapData.matrixPhi,
            h.isovalue = c.mapData.contourPhi,
            h.loadPhiFrom = c.loadPhiFrom,
            l = $3Dmol.SetupSurface(h)
        }
        if (this.bCalcArea) {
            this.areavalue = l.area.toFixed(2);
            var u = l.serial2area
              , f = l.scaleFactor * l.scaleFactor;
            this.resid2area = {};
            var g = {}
              , v = {};
            for (var b in u) {
                var y = this.atoms[b]
                  , C = y.structure + "_" + y.chain + "_" + y.resi + "_" + y.resn;
                g[y.structure] = 1,
                v[y.structure + "_" + y.chain] = 1,
                void 0 === this.resid2area[C] ? this.resid2area[C] = u[b] : this.resid2area[C] += u[b]
            }
            var _ = '<table border="1" cellpadding="10" cellspacing="0">'
              , S = 1 < Object.keys(g).length ? "<th>Structure</th>" : ""
              , w = 1 < Object.keys(v).length ? "<th>Chain</th>" : "";
            for (var C in _ += "<tr>" + S + w + "<th>Residue</th><th>Number</th><th>SASA (&#8491;<sup>2</sup>)</th><th>Percent Out</th><th>In/Out</th></tr>",
            this.resid2area) {
                var A = []
                  , x = C.indexOf("_")
                  , k = C.lastIndexOf("_");
                A.push(C.substr(0, x)),
                A.push(C.substr(x + 1, k - x - 1)),
                A.push(C.substr(k + 1)),
                S = 1 < Object.keys(g).length ? "<td>" + A[0] + "</td>" : "",
                w = 1 < Object.keys(v).length ? "<td>" + A[1] + "</td>" : "";
                var D = ""
                  , O = "";
                if (this.resid2area[C] = (this.resid2area[C] / f).toFixed(2),
                this.residueArea.hasOwnProperty(A[3])) {
                    100 < (O = parseInt(this.resid2area[C] / this.residueArea[A[3]] * 100)) && (O = 100),
                    50 <= O && (D = "out"),
                    O < 20 && (D = "in")
                }
                _ += '<tr align="center">' + S + w + "<td>" + A[3] + '</td><td align="right">' + A[2] + '</td><td align="right">' + this.resid2area[C] + '</td><td align="right">' + O + "%</td><td>" + D + "</td></tr>"
            }
            return _ += "</table>",
            void (this.areahtml = _)
        }
        var R, T, E, I = l.vertices, H = l.faces, L = this.thr("#00FFFF"), $ = this.thr("#00FF00"), P = this.thr("#ff0000"), F = this.thr("#00FFFF"), M = this.thr("#0000FF"), N = this.thr("#FF0000");
        11 != n && 12 != n && 13 != n && 14 != n || void 0 === this.rmsd_supr || void 0 === this.rmsd_supr.rot || (R = c.rmsd_supr.rot,
        T = c.rmsd_supr.trans1,
        E = c.rmsd_supr.trans2);
        var z = (11 == n || 12 == n || 13 == n || 14 == n && "delphi" != c.loadPhiFrom) && void 0 !== c.rmsd_supr && void 0 !== c.rmsd_supr.rot;
        if ((r = new THREE.Geometry).vertices = I.map(function(e) {
            var t = new THREE.Vector3(e.x,e.y,e.z);
            return z && (t = c.transformMemPro(t, R, T, E)),
            t.atomid = e.atomid,
            t.color = e.color,
            t
        }),
        r.faces = H.map(function(i) {
            var e = ["a", "b", "c"].map(function(e) {
                if (11 == n)
                    return L;
                if (12 == n)
                    return r.vertices[i[e]].atomid ? $ : P;
                if (13 == n)
                    return F;
                if (14 == n)
                    return r.vertices[i[e]].atomid ? M : N;
                if (21 == n || 22 == n || 23 == n)
                    return r.vertices[i[e]].color;
                var t = r.vertices[i[e]].atomid;
                return c.atoms[t].color
            });
            return new THREE.Face3(i.a,i.b,i.c,void 0,e)
        }),
        r.computeVertexNormals(!0),
        r.colorsNeedUpdate = !0,
        r.normalsNeedUpdate = !0,
        r.type = "Surface",
        d) {
            for (var q = JSON.parse(JSON.stringify(r)).data.normals, j = {}, U = (b = 0,
            H.length); b < U; ++b) {
                var B = H[b].a
                  , G = H[b].b
                  , V = H[b].c;
                void 0 === j[B] && (j[B] = []),
                j[B].push(G),
                j[B].push(V)
            }
            for (var B in j) {
                var W = new THREE.Geometry;
                W.vertices = [],
                W.faces = [];
                var Y = j[B];
                for (b = 0,
                U = Y.length; b < U; b += 2) {
                    G = Y[b],
                    V = Y[b + 1];
                    W.vertices.push(new THREE.Vector3(I[B].x,I[B].y,I[B].z)),
                    W.vertices.push(new THREE.Vector3(I[G].x,I[G].y,I[G].z)),
                    W.vertices.push(new THREE.Vector3(I[V].x,I[V].y,I[V].z));
                    var X = [];
                    X.push(c.atoms[I[B].atomid].color),
                    X.push(c.atoms[I[G].atomid].color),
                    X.push(c.atoms[I[V].atomid].color);
                    var Q = [];
                    Q.push(q[B]),
                    Q.push(q[G]),
                    Q.push(q[V]);
                    var Z = b / 2 * 3;
                    W.faces.push(new THREE.Face3(Z,1 + Z,2 + Z,Q,X))
                }
                W.colorsNeedUpdate = !0,
                W.type = "Surface";
                var K, J = new THREE.Mesh(W,new THREE.MeshPhongMaterial({
                    specular: this.frac,
                    shininess: 10,
                    emissive: 0,
                    vertexColors: THREE.VertexColors,
                    wireframe: t,
                    opacity: i,
                    transparent: !0,
                    side: THREE.DoubleSide
                })), ee = new THREE.Vector3(0,0,0);
                for (b = 0,
                U = J.geometry.vertices.length; b < U; ++b)
                    ee = ee.add(J.geometry.vertices[b]);
                K = c.bControlGl ? ee.multiplyScalar(1 / J.geometry.vertices.length).sub(c.oriCenter).applyMatrix4(window.cam.matrixWorldInverse) : ee.multiplyScalar(1 / J.geometry.vertices.length).sub(c.oriCenter).applyMatrix4(c.cam.matrixWorldInverse),
                J.renderOrder = 0 < c.cam_z ? -parseInt(K.z) : parseInt(K.z),
                J.onBeforeRender = function(e, t, i, n, r, s) {
                    for (var o, a = new THREE.Vector3(0,0,0), l = 0, d = this.geometry.vertices.length; l < d; ++l)
                        a = a.add(this.geometry.vertices[l]);
                    o = c.bControlGl ? a.multiplyScalar(1 / this.geometry.vertices.length).sub(c.oriCenter).applyMatrix4(window.cam.matrixWorldInverse) : a.multiplyScalar(1 / this.geometry.vertices.length).sub(c.oriCenter).applyMatrix4(c.cam.matrixWorldInverse),
                    this.renderOrder = 0 < c.cam_z ? -parseInt(o.z) : parseInt(o.z)
                }
                ,
                c.mdl.add(J),
                11 == n || 12 == n ? this.prevMaps.push(J) : 13 == n ? this.prevEmmaps.push(J) : 14 == n ? this.prevPhimaps.push(J) : this.prevSurfaces.push(J)
            }
        } else {
            (J = new THREE.Mesh(r,new THREE.MeshPhongMaterial({
                specular: this.frac,
                shininess: 10,
                emissive: 0,
                vertexColors: THREE.VertexColors,
                wireframe: t,
                opacity: i,
                transparent: !0,
                side: THREE.DoubleSide
            }))).renderOrder = -2,
            c.mdl.add(J),
            11 == n || 12 == n ? this.prevMaps.push(J) : 13 == n ? this.prevEmmaps.push(J) : 14 == n ? this.prevPhimaps.push(J) : this.prevSurfaces.push(J)
        }
        r = H = I = l = null
    }
}
,
iCn3D.prototype.buildAxes = function(e, t, i, n, r, s) {
    this.icn3d,
    new THREE.Object3D;
    var o = 0
      , a = 0
      , l = 0;
    s ? (o = t.x,
    a = t.y,
    l = t.z) : (o -= .3 * e,
    a -= .3 * e);
    var d, c, h, p, m, u, f = new THREE.Vector3(o,a,l), g = e / 10, v = e / 100, b = axisLenY = axisLenZ = g;
    s && (d = i.clone().sub(t),
    c = n.clone().sub(t),
    h = r.clone().sub(t),
    b = d.length(),
    axisLenY = c.length(),
    axisLenZ = h.length(),
    (v = b / 100) < .4 && (v = .4)),
    u = s ? (p = this.createCylinder_base(t, i, v, this.thr(16711680)),
    m = this.createCylinder_base(t, n, v, this.thr(65280)),
    this.createCylinder_base(t, r, v, this.thr(255))) : (p = this.createCylinder_base(new THREE.Vector3(o,a,l), new THREE.Vector3(o + b,a,l), v, this.thr(16711680)),
    m = this.createCylinder_base(new THREE.Vector3(o,a,l), new THREE.Vector3(o,a + axisLenY,l), v, this.thr(65280)),
    this.createCylinder_base(new THREE.Vector3(o,a,l), new THREE.Vector3(o,a,l + axisLenZ), v, this.thr(255))),
    this.mdl.add(p),
    this.mdl.add(m),
    this.mdl.add(u);
    var y = s ? d.normalize() : new THREE.Vector3(1,0,0)
      , C = s ? i : new THREE.Vector3(f.x + g,f.y,f.z)
      , _ = this.createArrow(y, C, b, 16711680, 4 * v, 4 * v);
    this.mdl.add(_);
    var S = s ? c.normalize() : new THREE.Vector3(0,1,0)
      , w = s ? n : new THREE.Vector3(f.x,f.y + g,f.z)
      , A = this.createArrow(S, w, axisLenY, 65280, 4 * v, 4 * v);
    this.mdl.add(A);
    var x = s ? h.normalize() : new THREE.Vector3(0,0,1)
      , k = s ? r : new THREE.Vector3(f.x,f.y,f.z + g)
      , D = this.createArrow(x, k, axisLenZ, 255, 4 * v, 4 * v);
    this.mdl.add(D)
}
,
iCn3D.prototype.createArrow = function(e, t, i, n, r, s, o) {
    this.icn3d;
    var a, l = new THREE.CylinderBufferGeometry(0,.5,1,32,1);
    l.translate(0, .5, 0),
    a = o ? new THREE.MeshPhongMaterial({
        transparent: !0,
        opacity: .5,
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: n
    }) : new THREE.MeshPhongMaterial({
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        side: THREE.DoubleSide,
        color: n
    });
    var d = new THREE.Mesh(l,a)
      , c = new THREE.Quaternion;
    if (.99999 < e.y)
        c.set(0, 0, 0, 1);
    else if (e.y < -.99999)
        c.set(1, 0, 0, 0);
    else {
        var h = new THREE.Vector3;
        h.set(e.z, 0, -e.x).normalize();
        var p = Math.acos(e.y);
        c.setFromAxisAngle(h, p)
    }
    return d.applyQuaternion(c),
    d.scale.set(s, r, s),
    d.position.copy(t),
    d
}
,
iCn3D.prototype.createLines = function(e) {
    this.icn3d;
    if (void 0 !== e)
        for (var t in e)
            for (var i = e[t], n = 0, r = i.length; n < r; ++n) {
                var s = i[n]
                  , o = s.position1
                  , a = s.position2
                  , l = !!s.dashed && s.dashed
                  , d = this.lineRadius
                  , c = "#" + s.color.replace(/\#/g, "")
                  , h = this.thr(c);
                if (l)
                    for (var p, m, u = o.distanceTo(a), f = parseInt(u / .3), g = a.clone().sub(o).multiplyScalar(.3 / u), v = 0; v < f; ++v)
                        v % 2 == 1 && (p = o.clone().add(g.clone().multiplyScalar(v)),
                        m = o.clone().add(g.clone().multiplyScalar(v + 1)),
                        "stabilizer" == t ? this.createBrick(p, m, d, h) : this.createCylinder(p, m, d, h));
                else
                    "stabilizer" == t ? this.createBrick(o, a, d, h) : this.createCylinder(o, a, d, h)
            }
}
,
iCn3D.prototype.createBrick = function(e, t, i, n) {
    this.icn3d;
    var r = new THREE.CylinderGeometry(1,1,1,4,1)
      , s = new THREE.Mesh(r,new THREE.MeshPhongMaterial({
        specular: this.frac,
        shininess: 30,
        emissive: 0,
        color: n
    }));
    s.position.copy(e).add(t).multiplyScalar(.5),
    s.matrixAutoUpdate = !1,
    s.lookAt(t.clone().sub(e)),
    s.updateMatrix(),
    s.matrix.multiply((new THREE.Matrix4).makeScale(i, i, e.distanceTo(t))).multiply((new THREE.Matrix4).makeRotationX(.5 * Math.PI)),
    this.mdl.add(s)
}
,
iCn3D.prototype.applySymmetry = function(e, t) {
    var i = this
      , n = (i.icn3d,
    t ? this.symdHash[e] : this.symmetryHash[e])
      , r = e.substr(0, 1)
      , s = parseInt(e.substring(1, e.indexOf(" ")))
      , o = 2 * this.cylinderRadius * this.oriMaxD / 150
      , a = this.cylinderRadius * this.oriMaxD / 150;
    "I" == r && (o *= 2,
    a *= 2);
    for (var l = [], d = 0, c = n.length; d < c; ++d) {
        var h = n[d][0]
          , p = n[d][1]
          , m = n[d][2]
          , u = n[d][3]
          , f = n[d][4]
          , g = n[d][5];
        if (i.createCylinder(h, p, o, m, 0),
        "C" == r || "D" == r && f == s) {
            var v = {}
              , b = (Object.keys(this.chains).length,
            !1);
            if (t && Object.keys(this.hAtoms).length < Object.keys(this.atoms).length) {
                var y = {};
                for (var C in this.hAtoms) {
                    y[S = (L = this.atoms[C]).structure + "_" + L.chain] = 1
                }
                1 < Object.keys(y).length && (b = !0)
            }
            if (!t || b) {
                var _ = Object.keys(this.structures)[0] + "_" + g;
                if (this.chains.hasOwnProperty(_) || (_ = Object.keys(this.structures)[0] + "_" + g.toLowerCase()),
                !this.chains.hasOwnProperty(_))
                    for (var S in _ = Object.keys(this.chains)[0],
                    this.chains) {
                        var w = Object.keys(this.chains[S])[0];
                        if (this.proteins.hasOwnProperty(w)) {
                            _ = S;
                            break
                        }
                    }
                v = this.chains[_]
            } else {
                var A, x = parseInt(Object.keys(this.hAtoms).length / f), k = 0;
                for (var C in this.hAtoms)
                    if (v[C] = 1,
                    A = C,
                    x < ++k)
                        break;
                var D = this.atoms[A].structure + "_" + this.atoms[A].chain + "_" + this.atoms[A].resi;
                v = this.unionHash(v, this.residues[D])
            }
            var O = h.clone().add(p).multiplyScalar(.5)
              , R = new THREE.Vector3
              , T = (x = 0,
            p.clone().sub(h).normalize())
              , E = new THREE.Vector3(0,0,1)
              , I = new THREE.Quaternion;
            I.setFromUnitVectors(T, E);
            var H = -9999;
            for (var C in v) {
                var L, $ = (L = this.atoms[C]).coord.clone();
                R.add($),
                $.sub(O).applyQuaternion(I);
                var P = $.x * $.x + $.y * $.y;
                H < P && (H = P),
                ++x
            }
            var F = R.multiplyScalar(1 / x)
              , M = new THREE.Line3(h,p)
              , N = new THREE.Vector3;
            M.closestPointToPoint(F, !0, N);
            var z, q, j, U, B = Math.sqrt(H), G = F.clone().sub(N).normalize().multiplyScalar(B), V = O.clone().add(h.clone().sub(O).multiplyScalar(.83)).add(G), W = O.clone().add(p.clone().sub(O).multiplyScalar(.83)).add(G), Y = 2 * Math.PI / s;
            for (k = 0; k < s; ++k) {
                var X = (.5 + k) * Y
                  , Q = V.clone().sub(h);
                Q.applyAxisAngle(T, X).add(h);
                var Z = W.clone().sub(h);
                Z.applyAxisAngle(T, X).add(h),
                i.createCylinder(Q, Z, a, u, 0),
                i.createSphereBase(Q, u, a, 1, 0),
                i.createSphereBase(Z, u, a, 1, 0),
                0 == k ? (z = Q,
                q = Z) : (i.createCylinder(Q, j, a, u, 0),
                i.createCylinder(Z, U, a, u, 0)),
                j = Q,
                U = Z
            }
            i.createCylinder(z, j, a, u, 0),
            i.createCylinder(q, U, a, u, 0)
        } else
            ("T" == r && 3 == f || "O" == r && 4 == f || "I" == r && 5 == f) && (l.push(h),
            l.push(p))
    }
    if ("T" == r) {
        var K = l[0];
        i.createSphereBase(K, u, a, 1, 0);
        var J, ee, te, ie = K.distanceTo(l[2]);
        ee = ie < (oe = K.distanceTo(l[3])) ? (J = ie,
        l[3]) : (J = oe,
        l[2]),
        i.createSphereBase(ee, u, a, 1, 0),
        i.createCylinder(K, ee, a, u, 0);
        for (d = 4,
        c = l.length; d < c; ++d) {
            var ne = l[d];
            J < K.distanceTo(ne) && (i.createSphereBase(ne, u, a, 1, 0),
            i.createCylinder(K, ne, a, u, 0),
            i.createCylinder(ee, ne, a, u, 0),
            void 0 !== te && i.createCylinder(l[te], ne, a, u, 0),
            te = d)
        }
    } else if ("O" == r)
        for (d = 0,
        c = l.length; d < c; d += 2) {
            K = l[d],
            ne = l[d + 1];
            i.createSphereBase(K, u, a, 1, 0),
            i.createSphereBase(ne, u, a, 1, 0);
            k = d + 2;
            for (var re = l.length; k < re; ++k) {
                var se = l[k];
                i.createSphereBase(se, u, a, 1, 0),
                i.createCylinder(K, se, a, u, 0),
                i.createCylinder(ne, se, a, u, 0)
            }
        }
    else if ("I" == r)
        for (d = 0,
        c = l.length; d < c; d += 2) {
            K = l[d],
            ne = l[d + 1];
            i.createSphereBase(K, u, a, 1, 0),
            i.createSphereBase(ne, u, a, 1, 0);
            for (k = d + 2,
            re = l.length; k < re; k += 2) {
                se = l[k];
                var oe, ae, le, de = l[k + 1];
                le = (oe = K.distanceTo(se)) < K.distanceTo(de) ? (ae = se,
                de) : (ae = de,
                se),
                i.createSphereBase(ae, u, a, 1, 0),
                i.createSphereBase(le, u, a, 1, 0),
                i.createCylinder(K, ae, a, u, 0),
                i.createCylinder(ne, le, a, u, 0)
            }
        }
}
,
iCn3D.prototype.applyPrevColor = function() {
    this.icn3d;
    for (var e in this.atoms) {
        this.atoms[e].color = this.atomPrevColors[e]
    }
}
,
iCn3D.prototype.applyChemicalbindingOptions = function(e) {
    this.icn3d;
    if (void 0 === e && (e = this.opts),
    "show" === e.chemicalbinding) {
        var t;
        void 0 !== this.chemicals && 0 < Object.keys(this.chemicals).length && (t = this.hash2Atoms(this.chemicals));
        if (void 0 !== t) {
            var i = this.getAtomsWithinAtom(this.atoms, t, 4);
            this.opts.hbonds = "yes",
            0 < Object.keys(i).length && this.calculateChemicalHbonds(t, i, parseFloat(3.5)),
            this.bSetFog || this.zoominSelection(this.unionHash(t, i))
        }
    } else
        "hide" === e.chemicalbinding && (this.hideHbonds(),
        this.bSetFog || this.zoominSelection(this.atoms))
}
,
iCn3D.prototype.hideHbonds = function() {
    this.icn3d;
    for (var e in this.opts.hbonds = "no",
    void 0 === this.lines && (this.lines = {}),
    this.lines.hbond = [],
    this.hbondpnts = [],
    this.atoms)
        this.atoms[e].style2 = "nothing";
    for (var e in this.sidec)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}
,
iCn3D.prototype.hideSaltbridge = function() {
    this.icn3d;
    for (var e in this.opts.saltbridge = "no",
    void 0 === this.lines && (this.lines = {}),
    this.lines.saltbridge = [],
    this.saltbridgepnts = [],
    this.atoms)
        this.atoms[e].style2 = "nothing";
    for (var e in this.sidec)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}
,
iCn3D.prototype.hideContact = function() {
    this.icn3d;
    for (var e in this.opts.contact = "no",
    void 0 === this.lines && (this.lines = {}),
    this.lines.contact = [],
    this.contactpnts = [],
    this.atoms)
        this.atoms[e].style2 = "nothing";
    for (var e in this.sidec)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}
,
iCn3D.prototype.hideHalogenPi = function() {
    this.icn3d;
    for (var e in this.opts.halogen = "no",
    this.opts["pi-cation"] = "no",
    this.opts["pi-stacking"] = "no",
    void 0 === this.lines && (this.lines = {}),
    this.lines.halogen = [],
    this.lines["pi-cation"] = [],
    this.lines["pi-stacking"] = [],
    this.halogenpnts = [],
    this.picationpnts = [],
    this.pistackingpnts = [],
    this.atoms)
        this.atoms[e].style2 = "nothing";
    for (var e in this.sidec)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water)
        this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}
,
iCn3D.prototype.applySsbondsOptions = function(e) {
    this.icn3d;
    if (void 0 === e && (e = this.opts),
    "yes" === e.ssbonds.toLowerCase() && void 0 !== this.ssbondpnts) {
        var t, i, n = this.thr(16776960), r = Object.keys(this.structures);
        i = this.bAlternate ? (t = this.ALTERNATE_STRUCTURE,
        this.ALTERNATE_STRUCTURE + 1) : (t = 0,
        r.length),
        this.lines.ssbond = [];
        for (var s = t, o = i; s < o; ++s) {
            var a = r[s];
            if (void 0 !== this.ssbondpnts[a])
                for (var l = Math.floor(this.ssbondpnts[a].length / 2) - 1; 0 <= l; l--) {
                    var d = this.ssbondpnts[a][2 * l]
                      , c = this.ssbondpnts[a][2 * l + 1]
                      , h = {
                        color: "#FFFF00",
                        dashed: !0
                    }
                      , p = []
                      , m = []
                      , u = []
                      , f = []
                      , g = !1
                      , v = !1;
                    for (var b in this.residues[d])
                        "SG" === this.atoms[b].name && (u.push(this.atoms[b].coord),
                        p.push(this.atoms[b].serial),
                        g = !0);
                    if (!g)
                        for (var b in this.residues[d])
                            if ("CA" === this.atoms[b].name) {
                                u.push(this.atoms[b].coord),
                                p.push(this.atoms[b].serial),
                                v = g = !0;
                                break
                            }
                    for (var b in g = !1,
                    this.residues[c])
                        "SG" === this.atoms[b].name && (f.push(this.atoms[b].coord),
                        m.push(this.atoms[b].serial),
                        g = !0);
                    if (!g)
                        for (var b in this.residues[c])
                            if ("CA" === this.atoms[b].name) {
                                f.push(this.atoms[b].coord),
                                m.push(this.atoms[b].serial),
                                v = g = !0;
                                break
                            }
                    for (var y = v ? 7 : 3, C = !1, _ = 0, S = u.length; _ < S; ++_)
                        for (var w = 0, A = f.length; w < A; ++w)
                            if (u[_].distanceTo(f[w]) < y) {
                                C = !0,
                                h.serial1 = p[_],
                                h.position1 = u[_],
                                h.serial2 = m[w],
                                h.position2 = f[w];
                                break
                            }
                    if (void 0 === h.serial1 || void 0 === h.serial2 || this.dAtoms.hasOwnProperty(h.serial1) || this.dAtoms.hasOwnProperty(h.serial2))
                        if (C) {
                            var x, k, D, O = this.atoms[h.serial1].bonds.indexOf(h.serial2);
                            -1 != O && (x = this.atoms[h.serial1].bonds.slice(0, O),
                            k = this.atoms[h.serial1].bonds.slice(O + 1),
                            this.atoms[h.serial1].bonds = x.concat(k)),
                            -1 != (O = this.atoms[h.serial2].bonds.indexOf(h.serial1)) && (x = this.atoms[h.serial2].bonds.slice(0, O),
                            k = this.atoms[h.serial2].bonds.slice(O + 1),
                            this.atoms[h.serial2].bonds = x.concat(k)),
                            this.lines.ssbond.push(h),
                            this.createCylinder(h.position1, h.position2, this.cylinderRadius, n),
                            D = this.unionHash(D, this.residues[d]),
                            D = this.unionHash(D, this.residues[c]);
                            var R = this.intHash(D, this.sidec);
                            for (var b in R)
                                this.atoms[b].style2 = "stick"
                        } else
                            this.ssbondpnts[a].splice(2 * l, 2)
                }
        }
    }
}
,
iCn3D.prototype.applyClbondsOptions = function(e) {
    var t = this;
    t.icn3d;
    if (void 0 === e && (e = this.opts),
    t.bCalcCrossLink || (this.clbondpnts = {},
    t.clbondResid2serial = {},
    t.applyClbondsOptions_base("chemical"),
    t.applyClbondsOptions_base("all"),
    t.bCalcCrossLink = !0),
    "yes" === e.clbonds.toLowerCase() && "nothing" !== e.chemicals) {
        var i = this.thr(25600);
        if (this.lines.clbond = [],
        t.residuesHashClbonds = {},
        t.structures)
            for (var n = Object.keys(t.structures), r = 0, s = n.length; r < s; ++r) {
                var o = n[r];
                if (t.clbondpnts[o])
                    for (var a = 0, l = t.clbondpnts[o].length; a < l; a += 2) {
                        var d = t.clbondpnts[o][a]
                          , c = t.clbondpnts[o][a + 1]
                          , h = {
                            color: "#006400",
                            dashed: !1
                        };
                        if (h.serial1 = t.clbondResid2serial[d + "," + c],
                        h.serial2 = t.clbondResid2serial[c + "," + d],
                        t.dAtoms.hasOwnProperty(h.serial1) && t.dAtoms.hasOwnProperty(h.serial2)) {
                            h.position1 = t.atoms[h.serial1].coord,
                            h.position2 = t.atoms[h.serial2].coord,
                            this.lines.clbond.push(h),
                            this.createCylinder(h.position1, h.position2, this.cylinderRadius, i);
                            var p = {};
                            p = this.unionHash(p, this.residues[d]),
                            p = this.unionHash(p, this.residues[c]);
                            var m = this.intHash(p, this.sidec);
                            for (var u in m)
                                this.atoms[u].style2 = "stick";
                            t.residuesHashClbonds[d] = 1,
                            t.residuesHashClbonds[c] = 1
                        }
                    }
            }
    }
    return t.residuesHashClbonds
}
,
iCn3D.prototype.applyClbondsOptions_base = function(e) {
    var t = this;
    t.icn3d;
    for (var i in t.chemicals) {
        var n = t.atoms[i]
          , r = n.structure + "_" + n.chain + "_" + n.resi;
        for (var s in n.bonds) {
            var o = t.atoms[n.bonds[s]];
            if (void 0 !== o && (o.chain !== n.chain || o.resi !== n.resi)) {
                var a = o.structure + "_" + o.chain + "_" + o.resi;
                if ("chemical" != e || o.het) {
                    if ("chemical" == e)
                        continue;
                    void 0 === t.clbondpnts[n.structure] && (t.clbondpnts[n.structure] = []),
                    t.clbondpnts[n.structure].push(r),
                    t.clbondpnts[o.structure].push(a),
                    t.clbondResid2serial[r + "," + a] = n.serial,
                    t.clbondResid2serial[a + "," + r] = o.serial
                }
            }
        }
    }
}
,
iCn3D.prototype.applyMapOptions = function(e) {
    var t, i;
    this.icn3d;
    switch (void 0 === e && (e = this.opts),
    e.mapwireframe) {
    case "yes":
        e.mapwireframe = !0;
        break;
    case "no":
        e.mapwireframe = !1
    }
    switch (t = this.intHash(this.dAtoms, this.hAtoms),
    i = this.hash2Atoms(t),
    e.map.toLowerCase()) {
    case "2fofc":
        this.createSurfaceRepresentation(i, 11, e.mapwireframe);
        break;
    case "fofc":
        this.createSurfaceRepresentation(i, 12, e.mapwireframe);
        break;
    case "nothing":
        this.removeMaps()
    }
}
,
iCn3D.prototype.applyEmmapOptions = function(e) {
    var t, i;
    this.icn3d;
    switch (void 0 === e && (e = this.opts),
    e.emmapwireframe) {
    case "yes":
        e.emmapwireframe = !0;
        break;
    case "no":
        e.emmapwireframe = !1
    }
    switch (t = this.intHash(this.dAtoms, this.hAtoms),
    i = this.hash2Atoms(t),
    e.emmap.toLowerCase()) {
    case "em":
        this.createSurfaceRepresentation(i, 13, e.emmapwireframe);
        break;
    case "nothing":
        this.removeEmmaps()
    }
}
,
iCn3D.prototype.applyPhimapOptions = function(e) {
    var t, i;
    this.icn3d;
    switch (void 0 === e && (e = this.opts),
    e.phimapwireframe) {
    case "yes":
        e.phimapwireframe = !0;
        break;
    case "no":
        e.phimapwireframe = !1
    }
    switch (t = this.intHash(this.dAtoms, this.hAtoms),
    i = this.hash2Atoms(t),
    e.phimap.toLowerCase()) {
    case "phi":
        this.createSurfaceRepresentation(i, 14, e.phimapwireframe);
        break;
    case "nothing":
        this.removePhimaps()
    }
}
,
iCn3D.prototype.applyphisurfaceOptions = function(e) {
    var t, i;
    this.icn3d;
    switch (void 0 === e && (e = this.opts),
    this.phisurfwf) {
    case "yes":
        e.phisurfwf = !0;
        break;
    case "no":
        e.phisurfwf = !1
    }
    switch (e.phisurfop = parseFloat(this.phisurfop),
    t = this.intHash(this.dAtoms, this.hAtoms),
    "nothing" === e.water && (t = this.exclHash(t, this.water)),
    i = this.hash2Atoms(t),
    e.phisurface.toLowerCase()) {
    case "phi":
        this.createSurfaceRepresentation(i, parseInt(this.phisurftype), e.phisurfwf, e.phisurfop);
        break;
    case "nothing":
        this.removeSurfaces()
    }
}
,
iCn3D.prototype.setFog = function(e) {
    this.icn3d;
    var t = this.backgroundColors[this.opts.background.toLowerCase()];
    if (e) {
        var i = this.centerAtoms(this.hAtoms);
        this.maxD = i.maxD,
        this.maxD < 5 && (this.maxD = 5)
    }
    var n = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt;
    "yes" === this.opts.fog ? "perspective" === this.opts.camera ? n ? (this.scene.fog = void 0,
    this.bSetFog = !1) : (this.scene.fog = new THREE.Fog(t,2.5 * this.maxD,4 * this.maxD),
    this.bSetFog = !0,
    this.camMaxDFactorFog = 3) : "orthographic" === this.opts.camera && (this.scene.fog = void 0,
    this.bSetFog = !1) : (this.scene.fog = void 0,
    this.bSetFog = !1),
    e && !n && this.zoominSelection()
}
,
iCn3D.prototype.alternateStructures = function() {
    this.icn3d;
    var e = Object.keys(this.hAtoms).length
      , t = Object.keys(this.atoms).length;
    this.dAtoms = {};
    for (var i = Object.keys(this.structures), n = 0, r = i.length; n < r; ++n) {
        var s = i[n];
        if (n > this.ALTERNATE_STRUCTURE || this.ALTERNATE_STRUCTURE === r - 1 && 0 === n) {
            for (var o in this.structures[s]) {
                var a = this.structures[s][o];
                this.dAtoms = this.unionHash(this.dAtoms, this.chains[a])
            }
            this.ALTERNATE_STRUCTURE = n;
            break
        }
    }
    e < t && (this.dAtoms = this.intHash(this.dAtoms, this.hAtoms),
    this.bShowHighlight = !1,
    this.opts.rotationcenter = "highlight center"),
    this.removeSurfaces(),
    this.applySurfaceOptions(),
    this.removeMaps(),
    this.applyMapOptions(),
    this.removeEmmaps(),
    this.applyEmmapOptions(),
    this.removePhimaps(),
    this.axes = [],
    this.pc1 && this.setPc1Axes(),
    this.draw(),
    this.bShowHighlight = !0,
    this.opts.rotationcenter = "molecule center"
}
,
iCn3D.prototype.updateStabilizer = function() {
    this.icn3d;
    if (this.stabilizerpnts = [],
    void 0 !== this.pairArray)
        for (var e = 0, t = this.pairArray.length; e < t; e += 2) {
            var i = this.getResidueRepPos(this.pairArray[e])
              , n = this.getResidueRepPos(this.pairArray[e + 1]);
            this.stabilizerpnts.push(i),
            this.stabilizerpnts.push(n)
        }
}
,
iCn3D.prototype.getResidueRepPos = function(e) {
    this.icn3d;
    var t, i = this.atoms[e], n = i.structure + "_" + i.chain + "_" + i.resi;
    if (this.proteins.hasOwnProperty(e) || this.nucleotides.hasOwnProperty(e))
        for (var r in this.residues[n]) {
            var s = this.atoms[r];
            if ("N3" === s.name) {
                t = this.atoms[r].coord;
                break
            }
            if ("CA" === s.name && "coil" == s.ss) {
                t = this.atoms[r].coord;
                break
            }
            if ("CA" === s.name && ("helix" == s.ss || "sheet" == s.ss)) {
                t = void 0 !== this.atoms[r].coord2 ? this.atoms[r].coord2 : this.atoms[r].coord;
                break
            }
        }
    else
        t = i.coord;
    return void 0 === t && (t = i.coord),
    t
}
,
iCn3D.prototype.applySurfaceOptions = function(e) {
    var t, i;
    this.icn3d;
    switch (void 0 === e && (e = this.opts),
    e.wireframe) {
    case "yes":
        e.wireframe = !0;
        break;
    case "no":
        e.wireframe = !1
    }
    switch (e.opacity = parseFloat(e.opacity),
    t = this.intHash(this.dAtoms, this.hAtoms),
    "nothing" === e.water && (t = this.exclHash(t, this.water)),
    i = this.hash2Atoms(t),
    e.surface.toLowerCase()) {
    case "van der waals surface":
        this.createSurfaceRepresentation(i, 1, e.wireframe, e.opacity);
        break;
    case "solvent accessible surface":
        this.createSurfaceRepresentation(i, 3, e.wireframe, e.opacity);
        break;
    case "molecular surface":
        this.createSurfaceRepresentation(i, 2, e.wireframe, e.opacity);
        break;
    case "van der waals surface with context":
        this.createSurfaceRepresentation(i, 1, e.wireframe, e.opacity);
        break;
    case "solvent accessible surface with context":
        this.createSurfaceRepresentation(i, 3, e.wireframe, e.opacity);
        break;
    case "molecular surface with context":
        this.createSurfaceRepresentation(i, 2, e.wireframe, e.opacity);
        break;
    case "nothing":
        this.removeSurfaces()
    }
}
,
iCn3D.prototype.setHbondsContacts = function(e, t) {
    this.icn3d;
    var i = t
      , n = "hbond" == t ? "hbonds" : t;
    if (this.lines[i] = [],
    "yes" === e[n].toLowerCase()) {
        var r, s;
        "hbond" == t ? (s = this.hbondpnts,
        r = "#0F0") : "saltbridge" == t ? (s = this.saltbridgepnts,
        r = "#0FF") : "contact" == t ? (s = this.contactpnts,
        r = "#222") : "halogen" == t ? (s = this.halogenpnts,
        r = "#F0F") : "pi-cation" == t ? (s = this.picationpnts,
        r = "#F00") : "pi-stacking" == t && (s = this.pistackingpnts,
        r = "#00F");
        for (var o = 0, a = Math.floor(s.length / 2); o < a; o++) {
            var l = {};
            l.position1 = s[2 * o].coord,
            l.serial1 = s[2 * o].serial,
            l.position2 = s[2 * o + 1].coord,
            l.serial2 = s[2 * o + 1].serial,
            l.color = r,
            l.dashed = !0,
            (void 0 === l.serial1 || void 0 === l.serial2 || this.dAtoms.hasOwnProperty(l.serial1) || this.dAtoms.hasOwnProperty(l.serial2)) && this.lines[i].push(l)
        }
    }
}
,
iCn3D.prototype.showGlycans = function() {
    this.icn3d;
    var e = {}
      , t = this.dAtoms;
    for (var i in t) {
        var n = this.atoms[i];
        n.het && -1 != this.glycanHash.hasOwnProperty(n.resn) && (void 0 === e[n.resn] && (e[n.resn] = {}),
        "Misc" != n.chain && (e[n.resn][n.structure + "_" + n.chain + "_" + n.resi] = 1))
    }
    for (var r = Object.keys(e), s = (i = 0,
    r.length); i < s; ++i) {
        var o = r[i];
        if (this.glycanHash.hasOwnProperty(o)) {
            var a = this.glycanHash[o].s
              , l = new THREE.Color("#" + this.glycanHash[o].c);
            resiArray = Object.keys(e[o]);
            for (var d = 0, c = resiArray.length; d < c; ++d) {
                var h = this.centerAtoms(this.residues[resiArray[d]])
                  , p = h.center
                  , m = .5 * h.maxD * .6;
                if ("cube" == a)
                    this.createBox_base(p, m, l, !1, !1, !0);
                else if ("sphere" == a)
                    this.createSphereBase(p, l, m, 1, !1, !0);
                else if ("cone" == a) {
                    var u = new THREE.Vector3(0,0,1)
                      , f = this.createArrow(u, new THREE.Vector3(0,0,-1 * m).add(p), 0, l, 2 * m, 2 * m, !0);
                    this.mdl.add(f),
                    this.objects.push(f)
                } else if ("cylinder" == a) {
                    var g = new THREE.Vector3(0,0,m).add(p)
                      , v = new THREE.Vector3(0,0,-1 * m).add(p);
                    this.createCylinder(g, v, m, l, !1, l, !1, !0)
                }
            }
        }
    }
}
,
iCn3D.prototype.applyOtherOptions = function(e) {
    this.icn3d;
    if (void 0 === e && (e = this.opts),
    this.setHbondsContacts(e, "contact"),
    this.setHbondsContacts(e, "halogen"),
    this.setHbondsContacts(e, "pi-cation"),
    this.setHbondsContacts(e, "pi-stacking"),
    this.setHbondsContacts(e, "hbond"),
    this.setHbondsContacts(e, "saltbridge"),
    void 0 !== this.pairArray && 0 < this.pairArray.length) {
        this.updateStabilizer();
        var t = this.stabilizerpnts;
        this.lines.stabilizer = [];
        for (var i = 0, n = Math.floor(t.length / 2); i < n; i++) {
            var r = {};
            r.position1 = t[2 * i],
            r.position2 = t[2 * i + 1],
            r.color = "#FFFFFF",
            r.dashed = !1,
            this.lines.stabilizer.push(r)
        }
    }
    if (this.createLines(this.lines),
    void 0 !== this.prevMaps) {
        i = 0;
        for (var s = this.prevMaps.length; i < s; ++i)
            this.mdl.add(this.prevMaps[i])
    }
    if (void 0 !== this.prevEmmaps)
        for (i = 0,
        s = this.prevEmmaps.length; i < s; ++i)
            this.mdl.add(this.prevEmmaps[i]);
    if (void 0 !== this.prevPhimaps)
        for (i = 0,
        s = this.prevPhimaps.length; i < s; ++i)
            this.mdl.add(this.prevPhimaps[i]);
    if (void 0 !== this.prevSurfaces)
        for (i = 0,
        s = this.prevSurfaces.length; i < s; ++i)
            this.mdl.add(this.prevSurfaces[i]);
    if (void 0 !== this.symmetryHash && void 0 !== this.symmetrytitle && this.applySymmetry(this.symmetrytitle),
    void 0 !== this.symdHash && void 0 !== this.symdtitle) {
        this.applySymmetry(this.symdtitle, !0)
    }
    if (void 0 !== this.prevOtherMesh)
        for (i = 0,
        s = this.prevOtherMesh.length; i < s; ++i)
            this.mdl.add(this.prevOtherMesh[i]);
    switch (this.bGlycansCartoon && !this.bAlternate && this.showGlycans(),
    this.applyCenterOptions(e),
    this.buildAllAxes(void 0, !0),
    e.axis.toLowerCase()) {
    case "yes":
        this.axis = !0,
        this.buildAxes(this.maxD / 2);
        break;
    case "no":
        this.axis = !1
    }
    switch (e.pk.toLowerCase()) {
    case "atom":
        this.pk = 1;
        break;
    case "no":
        this.pk = 0;
        break;
    case "residue":
        this.pk = 2;
        break;
    case "strand":
        this.pk = 3
    }
}
,
iCn3D.prototype.buildAllAxes = function(e, t) {
    this.icn3d;
    if (this.pc1)
        for (var i = 0, n = this.axes.length; i < n; ++i) {
            var r = this.axes[i][0]
              , s = this.axes[i][1]
              , o = this.axes[i][2]
              , a = this.axes[i][3];
            this.buildAxes(e, r, s, o, a, t)
        }
}
,
iCn3D.prototype.rebuildScene = function(e) {
    this.icn3d;
    void 0 === e && (e = this.opts),
    this.rebuildSceneBase(e),
    this.setFog(),
    this.setCamera(),
    void 0 !== this.bSkipChemicalbinding && this.bSkipChemicalbinding || this.applyChemicalbindingOptions(),
    this.bSkipChemicalbinding = !0,
    "show" === e.chemicalbinding && (this.opts.hbonds = "yes"),
    this.applySsbondsOptions(),
    this.applyClbondsOptions(),
    this.applyDisplayOptions(this.opts, this.dAtoms),
    this.applyOtherOptions(),
    this.scene_ghost.updateMatrixWorld(!0)
}
,
iCn3D.prototype.draw = function() {
    this.icn3d;
    this.rebuildScene(),
    this.bImpo && this.drawImpostorShader(),
    this.applyPrevColor(),
    void 0 !== this.biomtMatrices && 1 < this.biomtMatrices.length && (this.bAssembly ? this.drawSymmetryMates() : this.centerSelection());
    var e = void 0 !== this.hAtoms ? Object.keys(this.hAtoms).length : 0;
    0 < e && e < Object.keys(this.dAtoms).length && (this.removeHlObjects(),
    void 0 !== this.bShowHighlight && !this.bShowHighlight || this.addHlObjects()),
    !0 === this.bRender && ((this.bInitial || $("#" + this.pre + "wait").is(":visible")) && ($("#" + this.pre + "wait") && $("#" + this.pre + "wait").hide(),
    $("#" + this.pre + "canvas") && $("#" + this.pre + "canvas").show(),
    $("#" + this.pre + "cmdlog") && $("#" + this.pre + "cmdlog").show()),
    this.applyTransformation(this._zoomFactor, this.mouseChange, this.quaternion),
    this.render()),
    this.clearImpostors()
}
,
iCn3D.prototype.isHbondDonorAcceptor = function(e) {
    this.icn3d;
    if ("N" == e.name && !e.het || "N" == e.elem && "Arg" == e.resn || "N" == e.elem && "Asn" == e.resn || "N" == e.elem && "Gln" == e.resn || "N" == e.elem && "Lys" == e.resn || "N" == e.elem && "Trp" == e.resn)
        return "donor";
    if ("O" == e.name && !e.het || "S" == e.elem && "Met" == e.resn || "O" == e.elem && "Asn" == e.resn || "O" == e.elem && "Asp" == e.resn || "O" == e.elem && "Gln" == e.resn || "O" == e.elem && "Glu" == e.resn)
        return "acceptor";
    if ("S" == e.elem && "Cys" == e.resn || "N" == e.elem && "His" == e.resn || "O" == e.elem && "Ser" == e.resn || "O" == e.elem && "Thr" == e.resn || "O" == e.elem && "Tyr" == e.resn)
        return "both";
    if ("Pro" == e.resn)
        return "none";
    if ("N" == e.elem) {
        if ("Asn" == e.resn || "Gln" == e.resn)
            return "both";
        for (var t = 0, i = 0, n = 0, r = e.bonds.length; n < r; ++n)
            "H" == this.atoms[e.bonds[n]].elem && ++t;
        if (2 == t)
            return "donor";
        for (var s = t = 0, o = e.bonds.length; s < o; ++s) {
            var a = this.atoms[e.bonds[s]];
            if ("H" != a.elem) {
                ++t;
                for (var l = 0, d = a.bonds.length; l < d; ++l)
                    "N" == this.atoms[a.bonds[l]].elem && ++i
            }
        }
        return 1 == t ? "donor" : 2 == t ? 1 < i ? "ring" : "donor" : "none"
    }
    if ("O" == e.elem && 1 == e.bonds.length) {
        if ("Asn" == e.resn || "Gln" == e.resn)
            return "both";
        for (n = 0,
        r = e.bonds.length; n < r; ++n)
            if ("H" == this.atoms[e.bonds[n]].elem)
                return "donor";
        var c = this.atoms[e.bonds[0]];
        for (t = 0,
        n = 0,
        r = c.bonds.length; n < r; ++n)
            "O" != this.atoms[c.bonds[n]].elem && "N" != this.atoms[c.bonds[n]].elem && "S" != this.atoms[c.bonds[n]].elem || ++t;
        return 2 <= t ? "acceptor" : "both"
    }
    if ("O" != e.elem || 2 != e.bonds.length)
        return "both";
    for (n = 0,
    r = e.bonds.length; n < r; ++n)
        if ("H" == this.atoms[e.bonds[n]].elem)
            return "donor";
    return "acceptor"
}
,
iCn3D.prototype.calcAngles = function(e, t) {
    this.icn3d;
    var i = []
      , n = new THREE.Vector3
      , r = new THREE.Vector3;
    n.subVectors(t.coord, e.coord);
    for (var s = 0, o = e.bonds.length; s < o; ++s)
        "H" != this.atoms[e.bonds[s]].elem && (r.subVectors(this.atoms[e.bonds[s]].coord, e.coord),
        i.push(n.angleTo(r)));
    return i
}
,
iCn3D.prototype.calcPlaneAngle = function(e, t) {
    this.icn3d;
    var i = e
      , n = new THREE.Vector3;
    n.subVectors(t.coord, e.coord);
    for (var r = [new THREE.Vector3, new THREE.Vector3], s = 0, o = 0, a = e.bonds.length; o < a && !(1 < s); ++o)
        "H" != this.atoms[e.bonds[o]].elem && (i = this.atoms[e.bonds[o]],
        r[s++].subVectors(this.atoms[e.bonds[o]].coord, e.coord));
    if (1 === s)
        for (o = 0,
        a = i.bonds.length; o < a && !(1 < s); ++o)
            "H" != this.atoms[i.bonds[o]].elem && this.atoms[i.bonds[o]].serial != e.serial && r[s++].subVectors(this.atoms[i.bonds[o]].coord, e.coord);
    if (2 === s) {
        var l = r[0].cross(r[1]);
        return Math.abs(Math.PI / 2 - l.angleTo(n))
    }
}
,
iCn3D.prototype.isValidHbond = function(e, t, i) {
    this.icn3d;
    var n, r, s = this.isHbondDonorAcceptor(e), o = this.isHbondDonorAcceptor(t), a = 50 * Math.PI / 180, l = 50 * Math.PI / 180, d = 90 * Math.PI / 180, c = 30 * Math.PI / 180;
    if ("donor" == s && ("acceptor" == o || "both" == o || "ring" == o) || "acceptor" == o && ("donor" == s || "both" == s || "ring" == s))
        n = e,
        r = t;
    else if ("acceptor" == s && ("donor" == o || "both" == o || "ring" == o) || "donor" == o && ("acceptor" == s || "both" == s || "ring" == s))
        r = e,
        n = t;
    else {
        if ("both" != s && "ring" != s || "both" != o && "ring" != o)
            return !1;
        n = e,
        r = t,
        this.nucleotides.hasOwnProperty(e.serial) && this.nucleotides.hasOwnProperty(t.serial) && ("ring" == s || "ring" == o) || (e.het || t.het) && "ring" == s && "ring" == o || (c = 90 * Math.PI / 180)
    }
    for (var h = this.calcAngles(n, r), p = 90 * Math.PI / 180, m = 0, u = h.length; m < u; ++m)
        if (Math.abs(p - h[m]) > l)
            return !1;
    var f = this.calcPlaneAngle(n, r);
    if (void 0 !== f && c < f)
        return !1;
    var g = this.calcAngles(r, n)
      , v = 90 * Math.PI / 180;
    for (m = 0,
    u = g.length; m < u; ++m)
        if (Math.abs(v - g[m]) > a)
            return !1;
    var b = this.calcPlaneAngle(r, n);
    return !(void 0 !== b && d < b)
}
,
iCn3D.prototype.calculateChemicalHbonds = function(e, t, i, n, r, s) {
    var o = this;
    o.icn3d;
    if (0 !== Object.keys(e).length && 0 !== Object.keys(t).length) {
        o.resid2Residhash = {};
        var a, l = {}, d = i * i;
        for (var c in e) {
            var h = e[c]
              , p = n ? "LYS" === h.resn && "N" === h.elem && "N" !== h.name || "ARG" === h.resn && ("NH1" === h.name || "NH2" === h.name) || ("GLU" === h.resn || "ASP" === h.resn) && "O" === h.elem && "O" !== h.name || h.het && ("N" === h.elem || "O" === h.elem || "S" === h.elem) : "N" === h.elem || "O" === h.elem || "S" === h.elem && (h.het || "Cys" === h.resn || "Met" === h.resn);
            (p = this.bOpm ? p && "DUM" !== h.resn : p) && (l[(a = h.structure + "_" + h.chain + "_" + h.resi) + "_" + h.name] = h)
        }
        var m = {}
          , u = {}
          , f = -27.888
          , g = {};
        for (var c in t) {
            h = t[c],
            p = n ? "LYS" === h.resn && "N" === h.elem && "N" !== h.name || "ARG" === h.resn && ("NH1" === h.name || "NH2" === h.name) || ("GLU" === h.resn || "ASP" === h.resn) && "O" === h.elem && "O" !== h.name || h.het && ("N" === h.elem || "O" === h.elem || "S" === h.elem) : "N" === h.elem || "O" === h.elem || "S" === h.elem && (h.het || "Cys" === h.resn || "Met" === h.resn);
            if (p = this.bOpm ? p && "DUM" !== h.resn : p) {
                a = h.structure + "_" + h.chain + "_" + h.resi,
                h.name;
                var v = h.resn + " $" + h.structure + "." + h.chain + ":" + h.resi + "@" + h.name;
                for (var b in void 0 === o.resid2Residhash[v] && (o.resid2Residhash[v] = {}),
                l)
                    if ((!n || ("LYS" !== h.resn && "ARG" !== h.resn || "LYS" !== l[b].resn && "ARG" !== l[b].resn) && ("GLU" !== h.resn && "ASP" !== h.resn || "GLU" !== l[b].resn && "ASP" !== l[b].resn)) && (o.crossstrucinter || h.structure == l[b].structure) && a != b.substr(0, b.lastIndexOf("_"))) {
                        var y = Math.abs(h.coord.x - l[b].coord.x);
                        if (!(i < y)) {
                            var C = Math.abs(h.coord.y - l[b].coord.y);
                            if (!(i < C)) {
                                var _ = Math.abs(h.coord.z - l[b].coord.z);
                                if (!(i < _)) {
                                    var S = y * y + C * C + _ * _;
                                    if (!(d < S)) {
                                        if (!this.proteins.hasOwnProperty(h.serial) || !this.proteins.hasOwnProperty(l[b].serial) || "N" !== h.name && "O" !== h.name || "O" !== l[b].name && "N" !== l[b].name) {
                                            if (!this.isValidHbond(h, l[b], i))
                                                continue
                                        } else {
                                            if (h.name === l[b].name)
                                                continue;
                                            if (h.structure == l[b].structure && h.chain == l[b].chain && Math.abs(h.resi - l[b].resi) <= 1)
                                                continue;
                                            var w, A = "N" === h.name ? h : l[b], x = "O" === h.name ? h : l[b];
                                            if ("Pro" === A.resn)
                                                continue;
                                            if (void 0 === A.hcoord) {
                                                if (!this.isValidHbond(h, l[b], i))
                                                    continue
                                            } else {
                                                var k, D = A.hcoord, O = A.coord, R = x.structure + "_" + x.chain + "_" + x.resi;
                                                for (var T in this.residues[R])
                                                    if ("C" === this.atoms[T].name) {
                                                        k = this.atoms[T];
                                                        break
                                                    }
                                                var E = k.coord
                                                  , I = x.coord
                                                  , H = D.distanceTo(I)
                                                  , L = D.distanceTo(E)
                                                  , $ = O.distanceTo(E)
                                                  , P = O.distanceTo(I);
                                                if (w = H < .5 || L < .5 || $ < .5 || P < .5 ? -9.9 : f / H - f / L + f / $ - f / P,
                                                "helix" == h.ss && "helix" == l[b].ss && -.5 < w)
                                                    continue
                                            }
                                        }
                                        if (!(2 < g[h.serial] || 2 < g[l[b].serial])) {
                                            void 0 === g[h.serial] ? g[h.serial] = 1 : ++g[h.serial],
                                            void 0 === g[l[b].serial] ? g[l[b].serial] = 1 : ++g[l[b].serial],
                                            "graph" !== r && (n ? (this.saltbridgepnts.push({
                                                serial: h.serial,
                                                coord: h.coord
                                            }),
                                            this.saltbridgepnts.push({
                                                serial: l[b].serial,
                                                coord: l[b].coord
                                            })) : (this.hbondpnts.push({
                                                serial: h.serial,
                                                coord: h.coord
                                            }),
                                            this.hbondpnts.push({
                                                serial: l[b].serial,
                                                coord: l[b].coord
                                            })));
                                            var F = l[b].structure + "_" + l[b].chain + "_" + l[b].resi;
                                            m = this.unionHash(m, this.residues[a]),
                                            m = this.unionHash(m, this.residues[F]),
                                            u[a] = 1,
                                            u[F] = 1;
                                            var M = l[b].resn + " $" + l[b].structure + "." + l[b].chain + ":" + l[b].resi + "@" + l[b].name
                                              , N = a + "_" + h.resn + "," + F + "_" + l[b].resn;
                                            void 0 !== o.resids2interAll[N] && void 0 !== o.resids2interAll[N].ionic && o.resids2interAll[N].ionic.hasOwnProperty(v + "," + M) || (o.resid2Residhash[v][M] = S.toFixed(1),
                                            s || (void 0 === o.resids2inter[N] && (o.resids2inter[N] = {}),
                                            void 0 === o.resids2inter[N].hbond && (o.resids2inter[N].hbond = {}),
                                            o.resids2inter[N].hbond[v + "," + M] = S.toFixed(1)),
                                            void 0 === o.resids2interAll[N] && (o.resids2interAll[N] = {}),
                                            void 0 === o.resids2interAll[N].hbond && (o.resids2interAll[N].hbond = {}),
                                            o.resids2interAll[N].hbond[v + "," + M] = S.toFixed(1))
                                        }
                                    }
                                }
                            }
                        }
                    }
            }
        }
        var z = Object.keys(u);
        if ("graph" !== r) {
            c = 0;
            for (var q = z.length; c < q; ++c)
                for (var b in this.residues[z[c]])
                    this.atoms[b].style2 = "stick"
        }
        return m
    }
}
,
iCn3D.prototype.calculateIonicInteractions = function(e, t, i, n, r, s) {
    var o = this;
    o.icn3d;
    if (0 !== Object.keys(e).length && 0 !== Object.keys(t).length) {
        o.resid2Residhash = {};
        var a, l, d = {}, c = {}, h = i * i;
        for (var p in e) {
            if (!("ARG" === (_ = e[p]).resn && "NH2" === _.name || "GLU" === _.resn && "OE2" === _.name || "ASP" === _.resn && "OD2" === _.name)) {
                var m = ("LYS" === _.resn || "HIS" === _.resn) && "N" === _.elem && "N" !== _.name || "ARG" === _.resn && ("NH1" === _.name || "NH2" === _.name) || _.het && -1 !== o.cationsTrimArray.indexOf(_.elem) || _.het && "N" === _.elem && 1 == _.bonds.length
                  , u = void 0;
                if (_.het && "O" === _.elem && 1 == _.bonds.length)
                    for (var f = o.atoms[_.bonds[0]], g = 0; g < f.bonds.length; ++g) {
                        var v = f.bonds[g];
                        if ("O" == o.atoms[v].elem && v != _.serial) {
                            u = !0;
                            break
                        }
                    }
                var b = "GLU" === _.resn && ("OE1" === _.name || "OE2" === _.name) || "ASP" === _.resn && ("OD1" === _.name || "OD2" === _.name) || -1 !== o.nucleotidesArray.indexOf(_.resn) && ("OP1" === _.name || "OP2" === _.name || "O1P" === _.name || "O2P" === _.name) || _.het && -1 !== o.anionsTrimArray.indexOf(_.elem) || u;
                m = this.bOpm ? m && "DUM" !== _.resn : m,
                b = this.bOpm ? b && "DUM" !== _.resn : b,
                (m || b) && (l = (a = _.structure + "_" + _.chain + "_" + _.resi) + "_" + _.name,
                m && (d[l] = _),
                b && (c[l] = _))
            }
        }
        var y = {}
          , C = {};
        for (var p in t) {
            var _;
            if (!("ARG" === (_ = t[p]).resn && "NH2" === _.name || "GLU" === _.resn && "OE2" === _.name || "ASP" === _.resn && "OD2" === _.name)) {
                m = ("LYS" === _.resn || "HIS" === _.resn) && "N" === _.elem && "N" !== _.name || "ARG" === _.resn && ("NH1" === _.name || "NH2" === _.name) || _.het && -1 !== o.cationsTrimArray.indexOf(_.elem),
                b = "GLU" === _.resn && ("OE1" === _.name || "OE2" === _.name) || "ASP" === _.resn && ("OD1" === _.name || "OD2" === _.name) || -1 !== o.nucleotidesArray.indexOf(_.resn) && ("OP1" === _.name || "OP2" === _.name || "O1P" === _.name || "O2P" === _.name) || _.het && -1 !== o.anionsTrimArray.indexOf(_.elem);
                m = this.bOpm ? m && "DUM" !== _.resn : m,
                b = this.bOpm ? b && "DUM" !== _.resn : b;
                if (m || b) {
                    l = (a = _.structure + "_" + _.chain + "_" + _.resi) + "_" + _.name;
                    var S = _.resn + " $" + _.structure + "." + _.chain + ":" + _.resi + "@" + _.name;
                    void 0 === o.resid2Residhash[S] && (o.resid2Residhash[S] = {});
                    var w = {};
                    m ? w = c : b && (w = d);
                    var A = void 0
                      , x = _.structure + "_" + _.chain + "_" + _.resi;
                    m && "ARG" === _.resn && "NH1" === _.name ? A = this.getFirstAtomObjByName(this.residues[x], "NH2") : b && "GLU" === _.resn && "OE1" === _.name ? A = this.getFirstAtomObjByName(this.residues[x], "OE2") : b && "ASP" === _.resn && "OD1" === _.name && (A = this.getFirstAtomObjByName(this.residues[x], "OD2"));
                    var k = void 0 === A ? _.coord : _.coord.clone().add(A.coord).multiplyScalar(.5);
                    for (var g in w)
                        if (a != g.substr(0, g.lastIndexOf("_")) && (o.crossstrucinter || _.structure == w[g].structure)) {
                            var D = void 0
                              , O = w[g].structure + "_" + w[g].chain + "_" + w[g].resi;
                            b && "ARG" === w[g].resn && "NH1" === w[g].name ? D = this.getFirstAtomObjByName(this.residues[O], "NH2") : m && "GLU" === w[g].resn && "OE1" === w[g].name ? D = this.getFirstAtomObjByName(this.residues[O], "OE2") : m && "ASP" === w[g].resn && "OD1" === w[g].name && (D = this.getFirstAtomObjByName(this.residues[O], "OD2"));
                            var R = void 0 === D ? w[g].coord : w[g].coord.clone().add(D.coord).multiplyScalar(.5)
                              , T = Math.abs(k.x - R.x);
                            if (!(i < T)) {
                                var E = Math.abs(k.y - R.y);
                                if (!(i < E)) {
                                    var I = Math.abs(k.z - R.z);
                                    if (!(i < I)) {
                                        var H = T * T + E * E + I * I;
                                        if (!(h < H)) {
                                            "graph" !== r && (this.saltbridgepnts.push({
                                                serial: _.serial,
                                                coord: k
                                            }),
                                            this.saltbridgepnts.push({
                                                serial: w[g].serial,
                                                coord: R
                                            }));
                                            var L = w[g].structure + "_" + w[g].chain + "_" + w[g].resi;
                                            y = this.unionHash(y, this.residues[a]),
                                            y = this.unionHash(y, this.residues[L]),
                                            C[a] = 1,
                                            C[L] = 1;
                                            var $ = w[g].resn + " $" + w[g].structure + "." + w[g].chain + ":" + w[g].resi + "@" + w[g].name;
                                            o.resid2Residhash[S][$] = H.toFixed(1);
                                            var P = a + "_" + _.resn + "," + L + "_" + w[g].resn;
                                            s || (void 0 === o.resids2inter[P] && (o.resids2inter[P] = {}),
                                            void 0 === o.resids2inter[P].ionic && (o.resids2inter[P].ionic = {}),
                                            o.resids2inter[P].ionic[S + "," + $] = H.toFixed(1)),
                                            void 0 === o.resids2interAll[P] && (o.resids2interAll[P] = {}),
                                            void 0 === o.resids2interAll[P].ionic && (o.resids2interAll[P].ionic = {}),
                                            o.resids2interAll[P].ionic[S + "," + $] = H.toFixed(1)
                                        }
                                    }
                                }
                            }
                        }
                }
            }
        }
        var F = Object.keys(C);
        if ("graph" !== r) {
            p = 0;
            for (var M = F.length; p < M; ++p)
                for (var g in this.residues[F[p]])
                    this.atoms[g].style2 = "stick",
                    o.ions.hasOwnProperty(g) && (this.atoms[g].style2 = "sphere")
        }
        return y
    }
}
,
iCn3D.prototype.getHalogenDonar = function(e) {
    this.icn3d;
    var t = {};
    "CL" !== e.elem && "BR" !== e.elem && "I" !== e.elem || (t[e.structure + "_" + e.chain + "_" + e.resi + "_" + e.name] = e);
    return t
}
,
iCn3D.prototype.getHalogenAcceptor = function(e) {
    this.icn3d;
    var t = {}
      , i = "N" === e.elem || "O" === e.elem || "S" === e.elem;
    (i = this.bOpm ? i && "DUM" !== e.resn : i) && (t[e.structure + "_" + e.chain + "_" + e.resi + "_" + e.name] = e);
    return t
}
,
iCn3D.prototype.getPi = function(e, t) {
    this.icn3d;
    var i = {}
      , n = e.structure + "_" + e.chain + "_" + e.resi
      , r = e.het || -1 !== $.inArray(e.resn, this.nucleotidesArray) || "PHE" === e.resn || "TYR" === e.resn || "TRP" === e.resn;
    if (t && (r = r || "HIS" === e.resn),
    r && !this.processedRes.hasOwnProperty(n)) {
        if (e.het) {
            var s = this.getAromaticPisLigand(n);
            i = this.unionHash(i, s)
        } else {
            var o = void 0
              , a = void 0
              , l = void 0;
            void 0 !== (l = -1 !== $.inArray(e.resn, this.nucleotidesArray) ? this.getAromaticRings(e.resn, n, "nucleotide") : this.getAromaticRings(e.resn, n, "protein")) && (o = l.piPosArray,
            a = l.normalArray);
            for (var d = 0, c = o.length; d < c; ++d)
                i[n + "_pi" + d] = {
                    resn: e.resn,
                    name: "pi" + d,
                    coord: o[d],
                    serial: e.serial,
                    structure: e.structure,
                    chain: e.chain,
                    resi: e.resi,
                    normal: a[d]
                }
        }
        this.processedRes[n] = 1
    }
    return i
}
,
iCn3D.prototype.getCation = function(e) {
    this.icn3d;
    var t = {};
    if ("ARG" !== e.resn || "NH2" !== e.name) {
        var i = "LYS" === e.resn && "N" === e.elem && "N" !== e.name || "ARG" === e.resn && ("NH1" === e.name || "NH2" === e.name) || e.het && -1 !== this.cationsTrimArray.indexOf(e.elem) || e.het && "N" === e.elem && 1 == e.bonds.length;
        if (i = this.bOpm ? i && "DUM" !== e.resn : i)
            t[e.structure + "_" + e.chain + "_" + e.resi + "_" + e.name] = e;
        return t
    }
}
,
iCn3D.prototype.calculateHalogenPiInteractions = function(e, t, i, n, r, s) {
    this.icn3d;
    if (0 !== Object.keys(e).length && 0 !== Object.keys(t).length) {
        var o = {}
          , a = {}
          , l = {}
          , d = {};
        if ("halogen" == r) {
            for (var c in e) {
                var h = e[c];
                o = this.unionHash(o, this.getHalogenDonar(h)),
                l = this.unionHash(l, this.getHalogenAcceptor(h))
            }
            for (var c in t) {
                h = t[c];
                d = this.unionHash(d, this.getHalogenDonar(h)),
                a = this.unionHash(a, this.getHalogenAcceptor(h))
            }
        } else if ("pi-cation" == r) {
            for (var c in this.processedRes = {},
            e) {
                h = e[c];
                o = this.unionHash(o, this.getPi(h, !1)),
                l = this.unionHash(l, this.getCation(h))
            }
            for (var c in this.processedRes = {},
            t) {
                h = t[c];
                d = this.unionHash(d, this.getPi(h, !1)),
                a = this.unionHash(a, this.getCation(h))
            }
        } else if ("pi-stacking" == r) {
            for (var c in this.processedRes = {},
            e) {
                h = e[c];
                o = this.unionHash(o, this.getPi(h, !0))
            }
            for (var c in this.processedRes = {},
            t) {
                h = t[c];
                a = this.unionHash(a, this.getPi(h, !0))
            }
        }
        var p = {}
          , m = {};
        this.resid2Residhash = {};
        var u = i * i;
        for (var c in o) {
            var f = (S = o[c]).resn + " $" + S.structure + "." + S.chain + ":" + S.resi + "@" + S.name;
            for (var g in void 0 === this.resid2Residhash[f] && (this.resid2Residhash[f] = {}),
            a) {
                var v = a[g];
                if ((this.crossstrucinter || S.structure == v.structure) && c.substr(0, c.lastIndexOf("_")) != g.substr(0, g.lastIndexOf("_"))) {
                    if ("pi-cation" == r && "ARG" === v.resn && "NH1" === v.name) {
                        var b = v.structure + "_" + v.chain + "_" + v.resi
                          , y = this.getFirstAtomObjByName(this.residues[b], "NH2")
                          , C = v.coord.clone().add(y.coord).multiplyScalar(.5);
                        (v = this.cloneHash(v)).coord = C
                    }
                    if ("pi-stacking" == r && void 0 !== S.normal && void 0 !== v.normal) {
                        var _ = Math.abs(S.normal.dot(v.normal));
                        if (.5 < _ && _ < .866)
                            continue
                    }
                    this.getHalogenPiInteractions(S, v, n, r, i, u, f, s) && (p = this.unionHash(p, this.residues[S.structure + "_" + S.chain + "_" + S.resi]),
                    p = this.unionHash(p, this.residues[v.structure + "_" + v.chain + "_" + v.resi]),
                    m[S.structure + "_" + S.chain + "_" + S.resi] = 1,
                    m[v.structure + "_" + v.chain + "_" + v.resi] = 1)
                }
            }
        }
        for (var c in l) {
            var S;
            f = (S = l[c]).resn + " $" + S.structure + "." + S.chain + ":" + S.resi + "@" + S.name;
            if (void 0 === this.resid2Residhash[f] && (this.resid2Residhash[f] = {}),
            "pi-cation" == r && "ARG" === S.resn && "NH1" === S.name) {
                var w = S.structure + "_" + S.chain + "_" + S.resi;
                y = this.getFirstAtomObjByName(this.residues[w], "NH2"),
                C = S.coord.clone().add(y.coord).multiplyScalar(.5);
                (S = this.cloneHash(S)).coord = C
            }
            for (var g in d) {
                v = d[g];
                if (this.crossstrucinter || S.structure == v.structure)
                    if (c.substr(0, c.lastIndexOf("_")) != g.substr(0, g.lastIndexOf("_")))
                        this.getHalogenPiInteractions(S, v, n, r, i, u, f, s) && (p = this.unionHash(p, this.residues[S.structure + "_" + S.chain + "_" + S.resi]),
                        p = this.unionHash(p, this.residues[v.structure + "_" + v.chain + "_" + v.resi]),
                        m[S.structure + "_" + S.chain + "_" + S.resi] = 1,
                        m[v.structure + "_" + v.chain + "_" + v.resi] = 1)
            }
        }
        var A = Object.keys(m);
        if ("graph" !== n) {
            c = 0;
            for (var x = A.length; c < x; ++c)
                for (var g in this.residues[A[c]])
                    this.atoms[g].style2 = "stick",
                    this.ions.hasOwnProperty(g) && (this.atoms[g].style2 = "sphere")
        }
        return p
    }
}
,
iCn3D.prototype.getHalogenPiInteractions = function(e, t, i, n, r, s, o, a) {
    var l = this
      , d = (l.icn3d,
    Math.abs(e.coord.x - t.coord.x));
    if (r < d)
        return !1;
    var c = Math.abs(e.coord.y - t.coord.y);
    if (r < c)
        return !1;
    var h = Math.abs(e.coord.z - t.coord.z);
    if (r < h)
        return !1;
    var p = d * d + c * c + h * h;
    if (s < p)
        return !1;
    "graph" !== i && ("halogen" == n ? (this.halogenpnts.push({
        serial: e.serial,
        coord: e.coord
    }),
    this.halogenpnts.push({
        serial: t.serial,
        coord: t.coord
    })) : "pi-cation" == n ? (this.picationpnts.push({
        serial: e.serial,
        coord: e.coord
    }),
    this.picationpnts.push({
        serial: t.serial,
        coord: t.coord
    })) : "pi-stacking" == n && (this.pistackingpnts.push({
        serial: e.serial,
        coord: e.coord
    }),
    this.pistackingpnts.push({
        serial: t.serial,
        coord: t.coord
    })));
    var m = t.resn + " $" + t.structure + "." + t.chain + ":" + t.resi + "@" + t.name;
    l.resid2Residhash[o][m] = p.toFixed(1);
    var u = e.structure + "_" + e.chain + "_" + e.resi + "_" + e.resn + "," + t.structure + "_" + t.chain + "_" + t.resi + "_" + t.resn;
    return a || (void 0 === l.resids2inter[u] && (l.resids2inter[u] = {}),
    void 0 === l.resids2inter[u][n] && (l.resids2inter[u][n] = {}),
    l.resids2inter[u][n][o + "," + m] = p.toFixed(1)),
    void 0 === l.resids2interAll[u] && (l.resids2interAll[u] = {}),
    void 0 === l.resids2interAll[u][n] && (l.resids2interAll[u][n] = {}),
    l.resids2interAll[u][n][o + "," + m] = p.toFixed(1),
    !0
}
,
iCn3D.prototype.getChainsFromAtoms = function(e) {
    this.icn3d;
    var t = {};
    for (var i in e) {
        var n = this.atoms[i];
        t[n.structure + "_" + n.chain] = 1
    }
    return t
}
,
iCn3D.prototype.getNeighboringAtoms = function(e, t, i) {
    this.icn3d;
    var n = this.getExtent(t)
      , r = (n[2][0] - n[0][0]) * (n[2][0] - n[0][0]) + (n[2][1] - n[0][1]) * (n[2][1] - n[0][1]) + (n[2][2] - n[0][2]) * (n[2][2] - n[0][2])
      , s = (n[2][0] - n[1][0]) * (n[2][0] - n[1][0]) + (n[2][1] - n[1][1]) * (n[2][1] - n[1][1]) + (n[2][2] - n[1][2]) * (n[2][2] - n[1][2])
      , o = s < r ? r : s
      , a = Math.sqrt(o)
      , l = (a + i) * (a + i)
      , d = {};
    for (var c in e) {
        var h = this.atoms[c];
        if (!(h.serial in t))
            if (!this.bOpm || "DUM" !== h.resn)
                if (!(h.coord.x < n[0][0] - i || h.coord.x > n[1][0] + i))
                    if (!(h.coord.y < n[0][1] - i || h.coord.y > n[1][1] + i))
                        if (!(h.coord.z < n[0][2] - i || h.coord.z > n[1][2] + i))
                            (h.coord.x - n[2][0]) * (h.coord.x - n[2][0]) + (h.coord.y - n[2][1]) * (h.coord.y - n[2][1]) + (h.coord.z - n[2][2]) * (h.coord.z - n[2][2]) < l && (d[h.serial] = h)
    }
    return d
}
,
iCn3D.prototype.getAtomsWithinAtom = function(e, t, i, n, r, s) {
    var o = this
      , a = (o.icn3d,
    this.getNeighboringAtoms(e, t, i));
    n && (o.resid2Residhash = {});
    var l = {};
    for (var d in t) {
        var c = o.atoms[d]
          , h = void 0
          , p = void 0
          , m = c.structure + "_" + c.chain + "_" + c.resi;
        for (var u in o.residues[m])
            if ("CA" === o.atoms[u].name && "C" === o.atoms[u].elem || "O3'" === o.atoms[u].name || "O3*" === o.atoms[u].name) {
                h = o.atoms[u];
                break
            }
        void 0 === h && (h = c),
        n && (p = c.resn + " $" + c.structure + "." + c.chain + ":" + c.resi,
        void 0 === o.resid2Residhash[p] && (o.resid2Residhash[p] = {}));
        var f = c.structure + "_" + c.chain + "_" + c.resi;
        for (var g in a) {
            var v = a[g];
            if ((o.crossstrucinter || c.structure == v.structure) && !(v.serial in t || this.bOpm && "DUM" === v.resn)) {
                var b = v.coord.distanceTo(c.coord);
                if (b < i) {
                    l[v.serial] = v;
                    var y = void 0
                      , C = void 0;
                    r && (l[c.serial] = c);
                    var _ = v.structure + "_" + v.chain + "_" + v.resi;
                    for (var u in o.residues[_])
                        if ("CA" === o.atoms[u].name && "C" === o.atoms[u].elem || "O3'" === o.atoms[u].name || "O3*" === o.atoms[u].name) {
                            y = o.atoms[u];
                            break
                        }
                    if (void 0 === y && (y = v),
                    r && (this.contactpnts.push({
                        serial: y.serial,
                        coord: y.coord
                    }),
                    this.contactpnts.push({
                        serial: h.serial,
                        coord: h.coord
                    })),
                    n) {
                        var S = v.structure + "_" + v.chain + "_" + v.resi;
                        C = v.resn + " $" + v.structure + "." + v.chain + ":" + v.resi;
                        var w = b.toFixed(1)
                          , A = y.coord.distanceTo(h.coord).toFixed(1)
                          , x = f + "_" + c.resn + "," + S + "_" + v.resn
                          , k = p + "," + C;
                        if ((void 0 === o.resids2interAll[x] || void 0 === o.resids2interAll[x].contact || !o.resids2interAll[x].contact.hasOwnProperty(k) || void 0 !== o.resids2interAll[x].hbond && !o.resids2interAll[x].hbond.hasOwnProperty(k) || void 0 !== o.resids2interAll[x].ionic && !o.resids2interAll[x].ionic.hasOwnProperty(k) || void 0 !== o.resids2interAll[x].halogen && !o.resids2interAll[x].halogen.hasOwnProperty(k) || void 0 !== o.resids2interAll[x]["pi-cation"] && !o.resids2interAll[x]["pi-cation"].hasOwnProperty(k) || void 0 !== o.resids2interAll[x]["pi-stacking"] && !o.resids2interAll[x]["pi-stacking"].hasOwnProperty(k)) && (void 0 === o.resid2Residhash[p][C] || w < o.resid2Residhash[p][C].split("_")[0])) {
                            var D = void 0 === o.resid2Residhash[p][C] ? 1 : parseInt(o.resid2Residhash[p][C].split("_")[4]) + 1;
                            o.resid2Residhash[p][C] = w + "_" + A + "_" + c.name + "_" + v.name + "_" + D,
                            s || (void 0 === o.resids2inter[x] && (o.resids2inter[x] = {}),
                            void 0 === o.resids2inter[x].contact && (o.resids2inter[x].contact = {}),
                            o.resids2inter[x].contact[p + "," + C] = w + "_" + A + "_" + c.name + "_" + v.name + "_" + D),
                            void 0 === o.resids2interAll[x] && (o.resids2interAll[x] = {}),
                            void 0 === o.resids2interAll[x].contact && (o.resids2interAll[x].contact = {}),
                            o.resids2interAll[x].contact[p + "," + C] = w + "_" + A + "_" + c.name + "_" + v.name + "_" + D
                        }
                    }
                }
            }
        }
    }
    return l
}
,
iCn3D.prototype.getExtent = function(e) {
    var t, i, n, r, s, o, a, l, d, c, h;
    this.icn3d;
    for (h in t = i = n = 9999,
    r = s = o = -9999,
    a = l = d = c = 0,
    e) {
        var p = this.atoms[h];
        c++,
        a += p.coord.x,
        l += p.coord.y,
        d += p.coord.z,
        t = t < p.coord.x ? t : p.coord.x,
        i = i < p.coord.y ? i : p.coord.y,
        n = n < p.coord.z ? n : p.coord.z,
        r = r > p.coord.x ? r : p.coord.x,
        s = s > p.coord.y ? s : p.coord.y,
        o = o > p.coord.z ? o : p.coord.z
    }
    return [[t, i, n], [r, s, o], [a / c, l / c, d / c]]
}
,
iCn3D.prototype.centerAtoms = function(e) {
    this.icn3d;
    var t = new THREE.Vector3(9999,9999,9999)
      , i = new THREE.Vector3(-9999,-9999,-9999)
      , n = new THREE.Vector3
      , r = 0;
    for (var s in e) {
        var o = this.atoms[s].coord;
        n.add(o),
        t.min(o),
        i.max(o),
        ++r
    }
    var a = i.distanceTo(t);
    return {
        center: n.multiplyScalar(1 / r),
        maxD: a,
        pmin: t,
        pmax: i
    }
}
,
iCn3D.prototype.removeSurfaces = function() {
    this.icn3d;
    for (var e = 0, t = this.prevSurfaces.length; e < t; ++e)
        this.mdl.remove(this.prevSurfaces[e]);
    this.prevSurfaces = []
}
,
iCn3D.prototype.removeLastSurface = function() {
    this.icn3d;
    0 < this.prevSurfaces.length && (this.mdl.remove(this.prevSurfaces[this.prevSurfaces.length - 1]),
    this.prevSurfaces.slice(this.prevSurfaces.length - 1, 1))
}
,
iCn3D.prototype.removeMaps = function() {
    this.icn3d;
    for (var e = 0, t = this.prevMaps.length; e < t; ++e)
        this.mdl.remove(this.prevMaps[e]);
    this.prevMaps = []
}
,
iCn3D.prototype.removeEmmaps = function() {
    this.icn3d;
    for (var e = 0, t = this.prevEmmaps.length; e < t; ++e)
        this.mdl.remove(this.prevEmmaps[e]);
    this.prevEmmaps = []
}
,
iCn3D.prototype.removePhimaps = function() {
    this.icn3d;
    for (var e = 0, t = this.prevPhimaps.length; e < t; ++e)
        this.mdl.remove(this.prevPhimaps[e]);
    this.prevPhimaps = []
}
,
iCn3D.prototype.removeLastMap = function() {
    this.icn3d;
    0 < this.prevMaps.length && (this.mdl.remove(this.prevMaps[this.prevMaps.length - 1]),
    this.prevMaps.slice(this.prevMaps.length - 1, 1))
}
,
iCn3D.prototype.removeLastEmmap = function() {
    this.icn3d;
    0 < this.prevEmmaps.length && (this.mdl.remove(this.prevEmmaps[this.prevEmmaps.length - 1]),
    this.prevEmmaps.slice(this.prevEmmaps.length - 1, 1))
}
,
iCn3D.prototype.removeLastPhimap = function() {
    this.icn3d;
    0 < this.prevPhimaps.length && (this.mdl.remove(this.prevPhimaps[this.prevPhimaps.length - 1]),
    this.prevPhimaps.slice(this.prevPhimaps.length - 1, 1))
}
,
iCn3D.prototype.zoominSelection = function(e) {
    this.icn3d;
    var t = {};
    if (t._zoomFactor = 1 / this._zoomFactor,
    t.update = !0,
    this.bControlGl ? window.controls.update(t) : this.controls.update(t),
    void 0 === e && (e = this.hash2Atoms(this.hAtoms)),
    1 < Object.keys(e).length) {
        var i = this.centerAtoms(e);
        this.maxD = i.maxD,
        this.maxD < 5 && (this.maxD = 5),
        this.center = i.center,
        this.setCenter(this.center),
        this.setCamera()
    }
}
,
iCn3D.prototype.centerSelection = function(e) {
    this.icn3d;
    if (this.opts.rotationcenter = "highlight center",
    void 0 === e && (e = this.hash2Atoms(this.hAtoms)),
    this._zoomFactor = 1,
    this.mouseChange = new THREE.Vector2(0,0),
    this.quaternion = new THREE.Quaternion(0,0,0,1),
    1 < Object.keys(e).length) {
        var t = this.centerAtoms(e);
        this.center = t.center,
        this.setCenter(this.center),
        this.setCamera()
    }
}
,
iCn3D.prototype.getRingNormal = function(e) {
    this.icn3d;
    if (!(e.length < 3)) {
        var t = e[0].clone().sub(e[1])
          , i = e[1].clone().sub(e[2]);
        return t.cross(i).normalize()
    }
}
,
iCn3D.prototype.getAromaticRings = function(e, t, i) {
    this.icn3d;
    var n = []
      , r = []
      , s = []
      , o = [];
    if ("nucleotide" == i) {
        var a = new THREE.Vector3
          , l = new THREE.Vector3;
        if ("A" == e.trim().toUpperCase() || "DA" == e.trim().toUpperCase() || "G" == e.trim().toUpperCase() || "DG" == e.trim().toUpperCase()) {
            for (var d in this.residues[t]) {
                "N1" == (c = this.atoms[d]).name || "C2" == c.name || "N3" == c.name || "C6" == c.name ? (a.add(c.coord),
                s.push(c.coord)) : "C4" == c.name || "C5" == c.name ? (a.add(c.coord),
                l.add(c.coord),
                s.push(c.coord),
                o.push(c.coord)) : "N7" != c.name && "C8" != c.name && "N9" != c.name || (l.add(c.coord),
                o.push(c.coord))
            }
            6 == s.length && (a.multiplyScalar(1 / 6),
            n.push(a),
            r.push(this.getRingNormal(s))),
            5 == o.length && (l.multiplyScalar(.2),
            n.push(l),
            r.push(this.getRingNormal(o)))
        } else if ("C" == e.trim().toUpperCase() || "DC" == e.trim().toUpperCase() || "T" == e.trim().toUpperCase() || "DT" == e.trim().toUpperCase() || "U" == e.trim().toUpperCase() || "DU" == e.trim().toUpperCase()) {
            for (var d in this.residues[t]) {
                "N1" == (c = this.atoms[d]).name || "C2" == c.name || "N3" == c.name || "C6" == c.name ? (a.add(c.coord),
                s.push(c.coord)) : "C4" != c.name && "C5" != c.name || (a.add(c.coord),
                s.push(c.coord))
            }
            6 == s.length && (a.multiplyScalar(1 / 6),
            n.push(a),
            r.push(this.getRingNormal(s)))
        }
    } else if ("protein" == i) {
        a = new THREE.Vector3,
        l = new THREE.Vector3;
        if ("PHE" == e.toUpperCase() || "TYR" == e.toUpperCase()) {
            for (var d in this.residues[t]) {
                "CG" != (c = this.atoms[d]).name && "CD1" != c.name && "CE1" != c.name && "CZ" != c.name && "CE2" != c.name && "CD2" != c.name || (a.add(c.coord),
                s.push(c.coord))
            }
            6 == s.length && (a.multiplyScalar(1 / 6),
            n.push(a),
            r.push(this.getRingNormal(s)))
        } else if ("HIS" == e.toUpperCase()) {
            for (var d in this.residues[t]) {
                "CG" != (c = this.atoms[d]).name && "ND1" != c.name && "CE1" != c.name && "NE2" != c.name && "CD2" != c.name || (a.add(c.coord),
                s.push(c.coord))
            }
            5 == s.length && (a.multiplyScalar(.2),
            n.push(a),
            r.push(this.getRingNormal(s)))
        } else if ("TRP" == e.toUpperCase()) {
            for (var d in this.residues[t]) {
                var c;
                "CE2" == (c = this.atoms[d]).name || "CH2" == c.name || "CZ3" == c.name || "CE3" == c.name ? (a.add(c.coord),
                s.push(c.coord)) : "CD2" == c.name || "CE2" == c.name ? (a.add(c.coord),
                l.add(c.coord),
                s.push(c.coord),
                o.push(c.coord)) : "CG" != c.name && "CD1" != c.name && "NE1" != c.name || (l.add(c.coord),
                o.push(c.coord))
            }
            6 == s.length && (a.multiplyScalar(1 / 6),
            n.push(a),
            r.push(this.getRingNormal(s))),
            5 == o.length && (l.multiplyScalar(.2),
            n.push(l),
            r.push(this.getRingNormal(o)))
        }
    }
    return {
        piPosArray: n,
        normalArray: r
    }
}
,
iCn3D.prototype.dfs_cycle = function(e, t, i) {
    var n = this;
    n.icn3d;
    if (2 == n.ring_color[e])
        return i;
    if (1 == n.ring_color[e]) {
        i++;
        var r = t;
        for (n.ring_mark[r] = i; r != e; )
            r = n.ring_par[r],
            n.ring_mark[r] = i;
        return i
    }
    if (n.ring_par[e] = t,
    n.ring_color[e] = 1,
    void 0 !== this.atoms[e])
        for (var s = 0, o = this.atoms[e].bonds.length; s < o; ++s) {
            var a = this.atoms[e].bonds[s];
            a != n.ring_par[e] && (i = this.dfs_cycle(a, e, i))
        }
    return n.ring_color[e] = 2,
    i
}
,
iCn3D.prototype.getAromaticPisLigand = function(e) {
    this.icn3d;
    var t = {}
      , i = Object.keys(this.residues[e])
      , n = i.length;
    this.ring_color = {},
    this.ring_par = {},
    this.ring_mark = {};
    var r = 0;
    r = this.dfs_cycle(i[1], i[0], r);
    for (var s = {}, o = 0; o < n; o++) {
        var a = i[o];
        0 != this.ring_mark[a] && (void 0 === s[this.ring_mark[a]] && (s[this.ring_mark[a]] = []),
        s[this.ring_mark[a]].push(a))
    }
    for (o = 1; o <= r; o++) {
        var l = new THREE.Vector3
          , d = 0
          , c = [];
        if (s.hasOwnProperty(o))
            for (var h = 0, p = s[o].length; h < p; ++h)
                a = s[o][h],
                l.add(this.atoms[a].coord),
                c.push(this.atoms[a].coord),
                ++d;
        if (5 == d || 6 == d) {
            var m = c[0].clone().sub(c[1]).normalize()
              , u = c[1].clone().sub(c[2]).normalize()
              , f = c[2].clone().sub(c[3]).normalize()
              , g = m.cross(u).normalize()
              , v = g.dot(f);
            if (Math.abs(v) < .017) {
                l.multiplyScalar(1 / d);
                var b = this.atoms[a];
                t[e + "_pi" + a] = {
                    resn: b.resn,
                    name: "pi" + a,
                    coord: l,
                    serial: b.serial,
                    structure: b.structure,
                    chain: b.chain,
                    resi: b.resi,
                    normal: g
                }
            }
        }
    }
    return t
}
,
iCn3D.prototype.setPc1Axes = function() {
    this.icn3d;
    var e = this.intHash(this.hAtoms, this.dAtoms)
      , t = []
      , i = ""
      , n = Object.keys(e).length < 100;
    for (var r in e) {
        var s = (b = this.atoms[r]).structure + "_" + b.chain + "_" + b.resi;
        !n && s == i || t.push(b.coord.clone())
    }
    var o = this.getEigenForSelection(t, t.length)
      , a = new THREE.Vector3(o.h1[0],o.h1[1],o.h1[2]);
    if (0 == o.k && this.bRender)
        alert("Can't determine the first principal component. Please select a subset and try it again.");
    else {
        var l, d, c = this.centerAtoms(e), h = c.maxD, p = c.center, m = p.clone().add(a.normalize().multiplyScalar(.5 * h)), u = p.clone().multiplyScalar(2).sub(m), f = new THREE.Line3(u,m), g = 0, v = 0;
        for (var r in i = "",
        e) {
            var b;
            s = (b = this.atoms[r]).structure + "_" + b.chain + "_" + b.resi;
            if (n || s != i) {
                var y = new THREE.Vector3;
                f.closestPointToPoint(b.coord, !1, y);
                var C = y.distanceTo(b.coord);
                g < C && (l = b.coord,
                d = y,
                g = C);
                var _ = y.distanceTo(p);
                v < _ && (v = _)
            }
        }
        var S = p.clone().add(a.normalize().multiplyScalar(v));
        centerTrans = p.clone().sub(d);
        var w = l.clone().add(centerTrans)
          , A = new THREE.Vector3
          , x = w.clone().sub(p);
        A.crossVectors(S.clone().sub(p), x).normalize(),
        A.multiplyScalar(x.length()),
        positionZ = p.clone().add(A),
        this.buildAxes(void 0, p, S, w, positionZ, !0);
        var k = [p, S, w, positionZ];
        this.axes.push(k),
        this.draw()
    }
}
,
$.ui.dialog.prototype._makeDraggableBase || ($.ui.dialog.prototype._makeDraggableBase = $.ui.dialog.prototype._makeDraggable,
$.ui.dialog.prototype._makeDraggable = function() {
    this._makeDraggableBase(),
    this.uiDialog.draggable("option", "containment", !1)
}
),
$.ajaxTransport("+binary", function(d, e, t) {
    if (window.FormData && (d.dataType && "binary" == d.dataType || d.data && (window.ArrayBuffer && d.data instanceof ArrayBuffer || window.Blob && d.data instanceof Blob)))
        return {
            send: function(e, t) {
                var i = new XMLHttpRequest
                  , n = d.url
                  , r = d.type
                  , s = d.async || !0
                  , o = d.responseType || "blob"
                  , a = d.data || null;
                for (var l in i.addEventListener("load", function() {
                    var e = {};
                    e[d.dataType] = i.response,
                    t(i.status, i.statusText, e, i.getAllResponseHeaders())
                }),
                i.open(r, n, s),
                e)
                    i.setRequestHeader(l, e[l]);
                i.responseType = o,
                i.send(a)
            },
            abort: function() {
                t.abort()
            }
        }
});
var iCn3DUI = function(e) {
    var t = this;
    t.icn3d;
    this.REVISION = "2.22.1",
    t.bFullUi = !0,
    t.cfg = e,
    t.divid = t.cfg.divid,
    t.pre = t.divid + "_",
    void 0 === t.cfg.command && (t.cfg.command = ""),
    void 0 === t.cfg.width && (t.cfg.width = "100%"),
    void 0 === t.cfg.height && (t.cfg.height = "100%"),
    void 0 === t.cfg.resize && (t.cfg.resize = !0),
    void 0 === t.cfg.showmenu && (t.cfg.showmenu = !0),
    void 0 === t.cfg.showtitle && (t.cfg.showtitle = !0),
    void 0 === t.cfg.showcommand && (t.cfg.showcommand = !0),
    void 0 === t.cfg.simplemenu && (t.cfg.simplemenu = !1),
    void 0 === t.cfg.mobilemenu && (t.cfg.mobilemenu = !1),
    void 0 === t.cfg.closepopup && (t.cfg.closepopup = !1),
    void 0 === t.cfg.showanno && (t.cfg.showanno = !1),
    void 0 === t.cfg.showseq && (t.cfg.showseq = !1),
    void 0 === t.cfg.showalignseq && (t.cfg.showalignseq = !1),
    void 0 === t.cfg.show2d && (t.cfg.show2d = !1),
    void 0 === t.cfg.showsets && (t.cfg.showsets = !1),
    void 0 === t.cfg.rotate && (t.cfg.rotate = "right"),
    t.inputid = "",
    t.setOperation = "or",
    t.currSelectedSets = [],
    t.WIDTH = 400,
    t.HEIGHT = 400,
    t.RESIDUE_WIDTH = 10,
    t.isMobile() || t.cfg.mobilemenu ? t.MENU_HEIGHT = 0 : t.MENU_HEIGHT = 40,
    t.LOG_HEIGHT = 40,
    t.MENU_WIDTH = 750,
    t.LESSWIDTH = 20,
    t.LESSWIDTH_RESIZE = 20,
    t.LESSHEIGHT = 20,
    t.ROT_DIR = "right",
    t.bHideSelection = !0,
    t.CMD_HEIGHT = .8 * t.LOG_HEIGHT,
    t.EXTRAHEIGHT = t.MENU_HEIGHT + t.CMD_HEIGHT,
    null != t.cfg.showmenu && 0 == t.cfg.showmenu && (t.EXTRAHEIGHT -= t.MENU_HEIGHT),
    null != t.cfg.showcommand && 0 == t.cfg.showcommand && (t.EXTRAHEIGHT -= t.CMD_HEIGHT),
    t.GREY8 = "#888888",
    t.GREYB = "#BBBBBB",
    t.GREYC = "#CCCCCC",
    t.GREYD = "#DDDDDD",
    t.ORANGE = "#FFA500",
    t.cmd2menu = {},
    t.ssValue = 3,
    t.coilValue = 3,
    t.contactValue = 11,
    t.contactInsideValue = 12,
    t.hbondValue = 13,
    t.hbondInsideValue = 14,
    t.ssbondValue = 4,
    t.ionicValue = 5,
    t.ionicInsideValue = 6,
    t.clbondValue = 15,
    t.halogenValue = 17,
    t.halogenInsideValue = 18,
    t.picationValue = 19,
    t.picationInsideValue = 20,
    t.pistackingValue = 21,
    t.pistackingInsideValue = 22,
    t.contactColor = "888",
    t.contactInsideColor = "FFF",
    t.hbondColor = "0F0",
    t.hbondInsideColor = "FFF",
    t.ssbondColor = "FFA500",
    t.ionicColor = "0FF",
    t.ionicInsideColor = "FFF",
    t.clbondColor = "006400",
    t.halogenColor = "F0F",
    t.halogenInsideColor = "FFF",
    t.picationColor = "F00",
    t.picationInsideColor = "FFF",
    t.pistackingColor = "00F",
    t.pistackingInsideColor = "FFF",
    t.hideedges = 1,
    t.force = 4,
    t.baseUrl = "https://www.ncbi.nlm.nih.gov/Structure/",
    t.divStr = "<div id='" + t.pre,
    t.divNowrapStr = "<div style='white-space:nowrap'>",
    t.spanNowrapStr = "<span style='white-space:nowrap'>",
    t.inputTextStr = "<input type='text' ",
    t.inputFileStr = "<input type='file' ",
    t.inputRadioStr = "<input type='radio' ",
    t.inputCheckStr = "<input type='checkbox' ",
    t.buttonStr = "<button id='" + t.pre,
    t.postfix = "2",
    t.space2 = "&nbsp;&nbsp;",
    t.space3 = t.space2 + "&nbsp;",
    t.space4 = t.space2 + t.space2,
    t.closeAc = {
        collapsible: !0,
        active: !1
    },
    t.b62ResArray = ["A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V", "B", "Z", "X", "*"],
    t.b62Matrix = [[4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, -2, -1, 0, -4], [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, 0, -1, -4], [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 3, 0, -1, -4], [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 4, 1, -1, -4], [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -3, -2, -4], [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0, 3, -1, -4], [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1, -4], [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1, -4], [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0, 0, -1, -4], [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, -3, -1, -4], [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, -4, -3, -1, -4], [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0, 1, -1, -4], [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, -1, -1, -4], [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, -3, -3, -1, -4], [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -1, -2, -4], [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0, 0, 0, -4], [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, 0, -4], [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, -4, -3, -2, -4], [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, -3, -2, -1, -4], [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, -2, -1, -4], [-2, -1, 3, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3, -3, 4, 1, -1, -4], [-1, 0, 0, 1, -3, 3, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1, -4], [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, 0, 0, -2, -1, -1, -1, -1, -1, -4], [-4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 1]],
    t.opts = {},
    t.opts.camera = "perspective",
    t.opts.background = "transparent",
    t.opts.color = "chain",
    t.opts.proteins = "ribbon",
    t.opts.sidec = "nothing",
    t.opts.nucleotides = "nucleotide cartoon",
    t.opts.surface = "nothing",
    t.opts.opacity = "1.0",
    t.opts.wireframe = "no",
    t.opts.map = "nothing",
    t.opts.mapwireframe = "yes",
    t.opts.emmap = "nothing",
    t.opts.emmapwireframe = "yes",
    t.opts.phimap = "nothing",
    t.opts.phimapwireframe = "yes",
    t.opts.phisurface = "nothing",
    t.opts.phisurftype = "nothing",
    t.opts.phisurfop = "1.0",
    t.opts.phisurfwf = "yes",
    t.opts.chemicals = "stick",
    t.opts.water = "nothing",
    t.opts.ions = "sphere",
    t.opts.hbonds = "no",
    t.opts.saltbridge = "no",
    t.opts.contact = "no",
    t.opts.halogen = "no",
    t.opts["pi-cation"] = "no",
    t.opts["pi-stacking"] = "no",
    t.opts.ssbonds = "yes",
    t.opts.clbonds = "yes",
    t.opts.rotationcenter = "molecule center",
    t.opts.axis = "no",
    t.opts.fog = "no",
    t.opts.slab = "no",
    t.opts.pk = "residue",
    t.opts.chemicalbinding = "hide",
    void 0 !== t.cfg.align && (t.opts.color = "identity"),
    void 0 !== t.cfg.chainalign && (t.opts.color = "identity"),
    void 0 !== t.cfg.blast_rep_id && (t.opts.color = "conservation"),
    void 0 !== t.cfg.cid && (t.opts.color = "atom"),
    void 0 !== t.cfg.options && jQuery.extend(t.opts, t.cfg.options),
    t.init(),
    t.modifyIcn3d()
};
if (iCn3DUI.prototype = {
    constructor: iCn3DUI,
    init: function() {
        var e = this;
        e.icn3d;
        e.bSelectResidue = !1,
        e.bSelectAlignResidue = !1,
        e.selectedResidues = {},
        e.bAnnoShown = !1,
        e.bSetChainsAdvancedMenu = !1,
        e.b2DShown = !1,
        e.bCrashed = !1,
        e.prevCommands = "",
        e.bAddCommands = !0,
        e.bAddLogs = !0,
        e.bNotLoadStructure = !1,
        $("#" + e.pre + "dl_annotations").html(""),
        $("#" + e.pre + "dl_2ddgm").html("")
    },
    modifyIcn3d: function() {
        this.modifyIcn3dshowPicking(),
        this.modifyAlternateWrapper()
    },
    switchHighlightLevelUp: function() {
        var e = this.icn3d;
        if (e.bShift || e.bCtrl || e.removeHlObjects(),
        void 0 !== e.pickedAtomList && 0 !== Object.keys(e.pickedAtomList).length || (e.pickedAtomList = e.cloneHash(e.hAtoms)),
        0 === Object.keys(e.pickedAtomList).length && (e.pickedAtomList = e.dAtoms),
        1 === e.highlightlevel) {
            e.highlightlevel = 2;
            var t = e.getFirstAtomObj(e.pickedAtomList);
            e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.residues[t.structure + "_" + t.chain + "_" + t.resi]) : e.hAtoms = e.cloneHash(e.residues[t.structure + "_" + t.chain + "_" + t.resi])
        } else if (2 === e.highlightlevel) {
            e.highlightlevel = 3;
            t = e.getFirstAtomObj(e.pickedAtomList);
            e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.selectStrandHelixFromAtom(t)) : e.hAtoms = e.cloneHash(e.selectStrandHelixFromAtom(t))
        } else if (3 === e.highlightlevel) {
            var i;
            if (void 0 !== this.cfg.mmdbid || void 0 !== this.cfg.gi) {
                e.highlightlevel = 4;
                t = e.getFirstAtomObj(e.pickedAtomList);
                i = e.select3ddomainFromAtom(t),
                e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, i) : e.hAtoms = e.cloneHash(i)
            }
            if (void 0 === this.cfg.mmdbid && void 0 === this.cfg.gi || 0 == Object.keys(i).length) {
                e.highlightlevel = 5;
                t = e.getFirstAtomObj(e.pickedAtomList);
                e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.chains[t.structure + "_" + t.chain]) : e.hAtoms = e.cloneHash(e.chains[t.structure + "_" + t.chain])
            }
        } else if (4 === e.highlightlevel) {
            e.highlightlevel = 5;
            t = e.getFirstAtomObj(e.pickedAtomList);
            e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.chains[t.structure + "_" + t.chain]) : e.hAtoms = e.cloneHash(e.chains[t.structure + "_" + t.chain])
        } else if (5 === e.highlightlevel || 6 === e.highlightlevel) {
            e.highlightlevel = 6;
            t = e.getFirstAtomObj(e.pickedAtomList);
            e.bShift || e.bCtrl || (e.hAtoms = {});
            for (var n = e.structures[t.structure], r = 0, s = n.length; r < s; ++r)
                e.hAtoms = e.unionHash(e.hAtoms, e.chains[n[r]])
        }
        e.addHlObjects(),
        this.updateHlAll()
    },
    switchHighlightLevelDown: function() {
        var e = this.icn3d;
        if (e.removeHlObjects(),
        void 0 !== e.pickedAtomList && 0 !== Object.keys(e.pickedAtomList).length || (e.pickedAtomList = e.cloneHash(e.hAtoms)),
        2 !== e.highlightlevel && 1 !== e.highlightlevel || 1 !== Object.keys(e.pickedAtomList).length) {
            if (3 === e.highlightlevel) {
                var t = {};
                for (var i in e.pickedAtomList)
                    residueid = e.atoms[i].structure + "_" + e.atoms[i].chain + "_" + e.atoms[i].resi,
                    t[residueid] = 1;
                if (1 === Object.keys(t).length) {
                    e.highlightlevel = 2;
                    var n = e.getFirstAtomObj(e.pickedAtomList);
                    e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.residues[n.structure + "_" + n.chain + "_" + n.resi]) : e.hAtoms = e.cloneHash(e.residues[n.structure + "_" + n.chain + "_" + n.resi])
                }
            } else if (4 === e.highlightlevel) {
                e.highlightlevel = 3;
                n = e.getFirstAtomObj(e.pickedAtomList);
                e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.selectStrandHelixFromAtom(n)) : e.hAtoms = e.cloneHash(e.selectStrandHelixFromAtom(n))
            } else if (5 === e.highlightlevel) {
                var r;
                if (void 0 !== this.cfg.mmdbid || void 0 !== this.cfg.gi) {
                    e.highlightlevel = 4;
                    n = e.getFirstAtomObj(e.pickedAtomList);
                    r = e.select3ddomainFromAtom(n),
                    e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, r) : e.hAtoms = e.cloneHash(r)
                }
                if (void 0 === this.cfg.mmdbid && void 0 === this.cfg.gi || 0 == Object.keys(r).length) {
                    e.highlightlevel = 3;
                    n = e.getFirstAtomObj(e.pickedAtomList);
                    e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.selectStrandHelixFromAtom(n)) : e.hAtoms = e.cloneHash(e.selectStrandHelixFromAtom(n))
                }
            } else if (6 === e.highlightlevel) {
                e.highlightlevel = 5;
                n = e.getFirstAtomObj(e.pickedAtomList);
                e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.chains[n.structure + "_" + n.chain]) : e.hAtoms = e.cloneHash(e.chains[n.structure + "_" + n.chain])
            }
        } else
            e.highlightlevel = 1,
            e.hAtoms = e.cloneHash(e.pickedAtomList),
            e.bShift || e.bCtrl ? e.hAtoms = e.unionHash(e.hAtoms, e.pickedAtomList) : e.hAtoms = e.cloneHash(e.pickedAtomList);
        e.addHlObjects(),
        this.updateHlAll()
    },
    switchHighlightLevel: function() {
        var i = this;
        i.icn3d;
        $(document).bind("keydown", function(e) {
            var t = i.icn3d;
            38 === e.keyCode ? (e.preventDefault(),
            0 != Object.keys(t.pickedAtomList).length && t.hAtoms.hasOwnProperty(t.getFirstAtomObj(t.pickedAtomList).serial) || (t.pickedAtomList = t.cloneHash(t.hAtoms)),
            i.switchHighlightLevelUp(),
            i.setLogCmd("highlight level up", !0)) : 40 === e.keyCode && (e.preventDefault(),
            0 != Object.keys(t.pickedAtomList).length && t.hAtoms.hasOwnProperty(t.getFirstAtomObj(t.pickedAtomList).serial) || (t.pickedAtomList = t.cloneHash(t.hAtoms)),
            i.switchHighlightLevelDown(),
            i.setLogCmd("highlight level down", !0))
        })
    },
    allCustomEvents: function() {
        this.icn3d
    },
    setCustomDialogs: function() {
        this.icn3d;
        return ""
    },
    modifyAlternateWrapper: function() {
        var t = this;
        iCn3D.prototype.alternateWrapper = function() {
            t = t.setIcn3dui(this.id),
            this.bAlternate = !0,
            this.alternateStructures(),
            this.bAlternate = !1;
            var e = Object.keys(this.structures);
            t.setLogCmd("select $" + e[this.ALTERNATE_STRUCTURE] + " | name stru" + this.ALTERNATE_STRUCTURE, !0),
            t.setLogCmd("show selection", !0)
        }
    },
    modifyIcn3dshowPicking: function() {
        var s = this;
        iCn3D.prototype.rayCaster = function(e, t) {
            s = s.setIcn3dui(this.id),
            this.rayCasterBase(e, t)
        }
        ,
        iCn3D.prototype.showPicking = function(e, t, i) {
            if (void 0 !== (s = s.setIcn3dui(this.id)).cfg.cid && 0 != this.pk && (this.pk = 1),
            s.icn3d.highlightlevel = this.pk,
            this.showPickingBase(e, t, i),
            0 != this.pk)
                if (void 0 !== t && void 0 !== i) {
                    null != s.cfg.showmenu && 1 == s.cfg.showmenu && (i += s.MENU_HEIGHT);
                    var n = 1 == this.pk ? e.resn + e.resi + "@" + e.name : e.resn + e.resi;
                    void 0 !== this.structures && 1 < Object.keys(this.structures).length ? (n = e.structure + "_" + e.chain + " " + n,
                    $("#" + s.pre + "popup").css("width", "140px")) : $("#" + s.pre + "popup").css("width", "80px"),
                    $("#" + s.pre + "popup").html(n),
                    $("#" + s.pre + "popup").css("top", i).css("left", t + 20).show()
                } else {
                    s.updateHlAll();
                    var r = {};
                    r.factor = this._zoomFactor,
                    r.mouseChange = this.mouseChange,
                    r.quaternion = {},
                    r.quaternion._x = parseFloat(this.quaternion._x).toPrecision(5),
                    r.quaternion._y = parseFloat(this.quaternion._y).toPrecision(5),
                    r.quaternion._z = parseFloat(this.quaternion._z).toPrecision(5),
                    r.quaternion._w = parseFloat(this.quaternion._w).toPrecision(5),
                    s.bAddCommands && (this.commands.push("pickatom " + e.serial + "|||" + s.getTransformationStr(r)),
                    this.optsHistory.push(this.cloneHash(this.opts)),
                    this.optsHistory[this.optsHistory.length - 1].hlatomcount = Object.keys(this.hAtoms).length,
                    s.isSessionStorageSupported() && s.saveCommandsToSession(),
                    s.STATENUMBER = this.commands.length),
                    this.logs.push("pickatom " + e.serial + " (chain: " + e.structure + "_" + e.chain + ", residue: " + e.resn + ", number: " + e.resi + ", atom: " + e.name + ")"),
                    $("#" + s.pre + "logtext").length && $("#" + s.pre + "logtext").val("> " + this.logs.join("\n> ") + "\n> ").scrollTop($("#" + s.pre + "logtext")[0].scrollHeight),
                    s.bSphereCalc = !1,
                    s.bHbondCalc = !1
                }
        }
    },
    show3DStructure: function() {
        var p = this;
        return p.deferred = $.Deferred(function() {
            p.setViewerWidthHeight();
            var e = "<label class='icn3d-switch'><input id='" + p.pre + "modeswitch' type='checkbox'><div class='icn3d-slider icn3d-round' style='width:34px; height:18px; margin: 6px 0px 0px 3px;' title='Left (\"All atoms\"): Style and color menu options will be applied to all atoms in the structure&#13;Right (\"Selection\"): Style and color menu options will be applied only to selected atoms'></div></label>"
              , t = "<span id='" + p.pre + "modeall' title='Style and color menu options will be applied to all atoms in the structure'>All atoms&nbsp;&nbsp;</span><span id='" + p.pre + "modeselection' class='icn3d-modeselection' style='display:none;' title='Style and color menu options will be applied only to selected atoms'>Selection&nbsp;&nbsp;</span></div></div></td>";
            p.isMobile() || p.cfg.mobilemenu ? p.setTopMenusHtmlMobile(p.divid, e, t) : p.setTopMenusHtml(p.divid, e, t),
            p.isSessionStorageSupported() && p.getCommandsBeforeCrash();
            var i = p.WIDTH
              , n = p.HEIGHT;
            p.oriWidth = i,
            p.oriHeight = n,
            p.allEventFunctions(),
            p.allCustomEvents();
            var r = 0;
            null != p.cfg.showmenu && !p.cfg.showmenu || (r += p.MENU_HEIGHT),
            null != p.cfg.showcommand && !p.cfg.showcommand || (r += p.CMD_HEIGHT),
            null != p.cfg.showmenu && 0 == p.cfg.showmenu ? p.hideMenu() : p.showMenu(),
            null != p.cfg.showtitle && 0 == p.cfg.showtitle ? $("#" + p.pre + "title").hide() : $("#" + p.pre + "title").show(),
            $("#" + p.pre + "viewer").width(i).height(parseInt(n) + r),
            $("#" + p.pre + "canvas").width(i).height(parseInt(n)),
            $("#" + p.pre + "canvas").resizable({
                resize: function(e, t) {
                    p.WIDTH = $("#" + p.pre + "canvas").width(),
                    p.HEIGHT = $("#" + p.pre + "canvas").height(),
                    void 0 === p.icn3d || p.icn3d.bFullscreen || p.resizeCanvas(p.WIDTH, p.HEIGHT, !0)
                }
            }),
            p.icn3d = new iCn3D(p.pre + "canvas");
            var s = p.icn3d;
            if (p.cfg.replay ? (p.bReplay = 1,
            $("#" + p.pre + "replay").show()) : (p.bReplay = 0,
            $("#" + p.pre + "replay").hide()),
            p.isMobile() && (s.threshbox = 60),
            p.cfg.controlGl && (s.bControlGl = !0,
            s.container = s.bControlGl ? $(document) : $("#" + s.id)),
            s.setControl(),
            p.handleContextLost(),
            s.setWidthHeight(i, n),
            s.ori_chemicalbinding = p.opts.chemicalbinding,
            void 0 !== p.cfg.bCalphaOnly && (s.bCalphaOnly = p.cfg.bCalphaOnly),
            s.opts = s.cloneHash(p.opts),
            p.STATENUMBER = s.commands.length,
            p.isSessionStorageSupported() && p.bCrashed) {
                p.bCrashed = !1;
                var o = p.commandsBeforeCrash.split("|||")[0]
                  , a = o.substr(o.lastIndexOf(" ") + 1);
                if (a === p.cfg.mmtfid || a === p.cfg.pdbid || a === p.cfg.opmid || a === p.cfg.mmdbid || a === p.cfg.gi || a === p.cfg.blast_rep_id || a === p.cfg.cid || a === p.cfg.mmcifid || a === p.cfg.align || a === p.cfg.chainalign)
                    return void p.loadScript(p.commandsBeforeCrash, !0)
            }
            if (s.molTitle = "",
            p.loadCmd,
            void 0 !== p.cfg.url) {
                var l = p.cfg.url.split("|")
                  , d = l[0]
                  , c = l[1];
                s.molTitle = "",
                p.inputid = c,
                p.loadCmd = "load url " + c + " | type " + d,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadUrl(c, d)
            } else if (void 0 !== p.cfg.mmtfid)
                p.inputid = p.cfg.mmtfid,
                p.loadCmd = "load mmtf " + p.cfg.mmtfid,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadMmtf(p.cfg.mmtfid);
            else if (void 0 !== p.cfg.pdbid)
                p.inputid = p.cfg.pdbid,
                p.loadCmd = "load pdb " + p.cfg.pdbid,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadPdb(p.cfg.pdbid);
            else if (void 0 !== p.cfg.opmid)
                p.inputid = p.cfg.opmid,
                p.loadCmd = "load opm " + p.cfg.opmid,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadOpm(p.cfg.opmid);
            else if (void 0 !== p.cfg.mmdbid)
                p.inputid = p.cfg.mmdbid,
                p.loadCmd = "load mmdb " + p.cfg.mmdbid + " | parameters " + p.cfg.inpara,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadMmdb(p.cfg.mmdbid);
            else if (void 0 !== p.cfg.gi)
                p.loadCmd = "load gi " + p.cfg.gi,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadGi(p.cfg.gi);
            else if (void 0 !== p.cfg.blast_rep_id)
                if ("Query" !== p.cfg.query_id.substr(0, 5) && void 0 === p.cfg.rid)
                    p.inputid = p.cfg.query_id + "_" + p.cfg.blast_rep_id,
                    p.loadCmd = "load seq_struct_ids " + p.cfg.query_id + "," + p.cfg.blast_rep_id,
                    p.setLogCmd(p.loadCmd, !0),
                    p.downloadBlast_rep_id(p.cfg.query_id + "," + p.cfg.blast_rep_id);
                else if (void 0 !== p.cfg.rid) {
                    c = "https://blast.ncbi.nlm.nih.gov/Blast.cgi?RESULTS_FILE=on&FORMAT_TYPE=JSON2_S&FORMAT_OBJECT=Alignment&CMD=Get&RID=" + p.cfg.rid;
                    $.ajax({
                        url: c,
                        dataType: "json",
                        tryCount: 0,
                        retryLimit: 1,
                        success: function(e) {
                            for (var t = 0, i = e.BlastOutput2.length; t < i; ++t)
                                if (e.BlastOutput2[t].report.results.search.query_id == p.cfg.query_id) {
                                    for (var n = e.BlastOutput2[t].report.results.search.hits, r = void 0, s = 0, o = n.length; s < o; ++s) {
                                        for (var a = n[s], l = !1, d = 0, c = a.description.length; d < c; ++d) {
                                            if (a.description[d].accession == p.cfg.blast_rep_id) {
                                                l = !0;
                                                break
                                            }
                                        }
                                        if (l) {
                                            r = (r = a.hsps[0].qseq).replace(/-/g, "");
                                            break
                                        }
                                    }
                                    void 0 !== r && (p.cfg.query_id = r),
                                    p.inputid = p.cfg.query_id + "_" + p.cfg.blast_rep_id,
                                    p.loadCmd = "load seq_struct_ids " + p.cfg.query_id + "," + p.cfg.blast_rep_id,
                                    p.setLogCmd(p.loadCmd, !0),
                                    p.downloadBlast_rep_id(p.cfg.query_id + "," + p.cfg.blast_rep_id);
                                    break
                                }
                        },
                        error: function(e, t, i) {
                            this.tryCount++,
                            this.tryCount <= this.retryLimit ? $.ajax(this) : alert("The RID " + p.cfg.rid + " may have expired...")
                        }
                    })
                } else
                    alert('BLAST "RID" is a required parameter...');
            else if (void 0 !== p.cfg.cid) {
                p.inputid = p.cfg.cid;
                c = "https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/" + p.inputid + "/description/jsonp";
                $.ajax({
                    url: c,
                    dataType: "jsonp",
                    tryCount: 0,
                    retryLimit: 1,
                    success: function(e) {
                        void 0 !== e.InformationList && void 0 !== e.InformationList.Information && (s.molTitle = e.InformationList.Information[0].Title)
                    },
                    error: function(e, t, i) {
                        this.tryCount++,
                        this.tryCount <= this.retryLimit && $.ajax(this)
                    }
                }),
                p.loadCmd = "load cid " + p.cfg.cid,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadCid(p.cfg.cid)
            } else if (void 0 !== p.cfg.mmcifid)
                p.inputid = p.cfg.mmcifid,
                p.loadCmd = "load mmcif " + p.cfg.mmcifid,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadMmcif(p.cfg.mmcifid);
            else if (void 0 !== p.cfg.align) {
                var h = p.cfg.align.split(",");
                6 === h.length ? p.inputid = h[0] + "_" + h[3] : 2 === h.length && (p.inputid = h[0] + "_" + h[1]),
                p.loadCmd = "load alignment " + p.cfg.align + " | parameters " + p.cfg.inpara,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadAlignment(p.cfg.align)
            } else
                void 0 !== p.cfg.chainalign ? (s.bChainAlign = !0,
                p.inputid = p.cfg.chainalign,
                p.loadCmd = "load chainalignment " + p.cfg.chainalign + " | parameters " + p.cfg.inpara,
                p.setLogCmd(p.loadCmd, !0),
                p.downloadChainAlignment(p.cfg.chainalign)) : void 0 !== p.cfg.command && "" !== p.cfg.command ? (-1 !== p.cfg.command.indexOf("url=") && (p.bInputUrlfile = !0),
                p.loadScript(p.cfg.command)) : p.openDlg("dl_mmdbid", "Please input MMDB or PDB ID")
        }),
        p.deferred.promise()
    },
    hideMenu: function() {
        this.icn3d;
        void 0 !== $("#" + this.pre + "mnlist")[0] && ($("#" + this.pre + "mnlist")[0].style.display = "none"),
        void 0 !== $("#" + this.pre + "mnLogSection")[0] && ($("#" + this.pre + "mnLogSection")[0].style.display = "none"),
        void 0 !== $("#" + this.pre + "cmdlog")[0] && ($("#" + this.pre + "cmdlog")[0].style.display = "none"),
        $("#" + this.pre + "title")[0].style.margin = "10px 0 0 10px"
    },
    showMenu: function() {
        this.icn3d;
        void 0 !== $("#" + this.pre + "mnlist")[0] && ($("#" + this.pre + "mnlist")[0].style.display = "block"),
        void 0 !== $("#" + this.pre + "mnLogSection")[0] && ($("#" + this.pre + "mnLogSection")[0].style.display = "block"),
        void 0 !== $("#" + this.pre + "cmdlog")[0] && ($("#" + this.pre + "cmdlog")[0].style.display = "block")
    },
    saveSelectionIfSelected: function(e, t) {
        this.icn3d;
        if (this.bSelectResidue || this.bSelectAlignResidue) {
            var i = $("#" + this.pre + "seq_command_name2").val().replace(/\s+/g, "_");
            "" === i && (i = $("#" + this.pre + "alignseq_command_name").val().replace(/\s+/g, "_")),
            "" !== i && this.saveSelection(i, i),
            this.bSelectResidue = !1,
            this.bSelectAlignResidue = !1
        }
    },
    updateGraphCOlor: function() {
        var e = this
          , t = e.icn3d;
        if (void 0 !== e.graphStr) {
            var i = JSON.parse(e.graphStr)
              , n = {};
            for (var r in t.residues) {
                var s = t.getFirstAtomObj(t.residues[r]);
                n[r] = s.color.getHexString().toUpperCase()
            }
            for (var o = {}, a = 0, l = i.nodes.length; a < l; ++a) {
                var d = i.nodes[a]
                  , c = [];
                c.push(""),
                c.push("");
                var h = d.r.substr(4);
                r = (c = c.concat(e.getIdArray(h)))[2] + "_" + c[3] + "_" + c[4];
                d.c = n[r],
                o[d.id] = r
            }
            for (a = 0,
            l = i.links.length; a < l; ++a) {
                var p = i.links[a];
                if (p.v == e.ssValue || p.v == e.coilValue) {
                    r = o[p.target];
                    p.c = n[r]
                }
            }
            e.graphStr = JSON.stringify(i)
        }
        e.bGraph && e.drawGraph(e.graphStr, e.pre + "dl_graph"),
        e.bLinegraph && e.drawLineGraph(e.graphStr),
        e.bScatterplot && e.drawLineGraph(e.graphStr, !0)
    },
    setOption: function(e, t) {
        var i = this.icn3d;
        if (i.opts[e] = t,
        this.saveSelectionIfSelected(),
        "color" === e) {
            i.setColorByOptions(i.opts, i.hAtoms),
            i.draw();
            var n = i.getResiduesFromCalphaAtoms(i.hAtoms);
            this.changeSeqColor(Object.keys(n)),
            this.updateGraphCOlor()
        } else
            "surface" === e || "opacity" === e || "wireframe" === e ? ("opacity" !== e && "wireframe" !== e || i.removeLastSurface(),
            i.applySurfaceOptions()) : "map" === e || "mapwireframe" === e ? ("mapwireframe" === e && i.removeLastMap(),
            i.applyMapOptions()) : "emmap" === e || "emmapwireframe" === e ? ("emmapwireframe" === e && i.removeLastEmmap(),
            i.applyEmmapOptions()) : "phimap" === e || "phimapwireframe" === e ? ("phimapwireframe" === e && i.removeLastPhimap(),
            i.applyPhimapOptions()) : "phisurface" === e ? i.applyphisurfaceOptions() : "chemicalbinding" === e && (i.bSkipChemicalbinding = !1),
            i.draw()
    },
    setStyle: function(e, t) {
        var i = this.icn3d
          , n = {};
        switch (e) {
        case "proteins":
            n = i.intHash(i.hAtoms, i.proteins),
            Object.keys(i.hAtoms).length < Object.keys(i.proteins).length && 0;
            break;
        case "sidec":
            n = i.intHash(i.hAtoms, i.sidec);
            break;
        case "nucleotides":
            n = i.intHash(i.hAtoms, i.nucleotides),
            Object.keys(i.hAtoms).length < Object.keys(i.nucleotides).length && 0;
            break;
        case "chemicals":
            n = i.intHash(i.hAtoms, i.chemicals);
            break;
        case "ions":
            n = i.intHash(i.hAtoms, i.ions);
            break;
        case "water":
            n = i.intHash(i.hAtoms, i.water)
        }
        if ("sidec" === e)
            for (var r in n)
                i.atoms[r].style2 = t;
        else
            for (var r in n)
                i.atoms[r].style = t;
        i.opts[e] = t,
        this.saveSelectionIfSelected(),
        i.draw()
    },
    setLogCmd: function(e, t, i) {
        var n = this
          , r = n.icn3d;
        if ("" === e.trim())
            return !1;
        -1 !== (a = e.indexOf("|||")) && (e = e.substr(0, a));
        var s = {};
        if (s.factor = r._zoomFactor,
        s.mouseChange = r.mouseChange,
        s.quaternion = {},
        s.quaternion._x = parseFloat(r.quaternion._x).toPrecision(5),
        s.quaternion._y = parseFloat(r.quaternion._y).toPrecision(5),
        s.quaternion._z = parseFloat(r.quaternion._z).toPrecision(5),
        s.quaternion._w = parseFloat(r.quaternion._w).toPrecision(5),
        t && n.bAddCommands)
            if (n.STATENUMBER < r.commands.length) {
                var o = r.commands[n.STATENUMBER - 1]
                  , a = o.indexOf("|||");
                e !== o.substr(0, a) && (r.commands = r.commands.slice(0, n.STATENUMBER),
                r.commands.push(e + "|||" + n.getTransformationStr(s)),
                r.optsHistory.push(r.cloneHash(r.opts)),
                r.optsHistory[r.optsHistory.length - 1].hlatomcount = Object.keys(r.hAtoms).length,
                n.isSessionStorageSupported() && n.saveCommandsToSession(),
                n.STATENUMBER = r.commands.length)
            } else
                r.commands.push(e + "|||" + n.getTransformationStr(s)),
                r.optsHistory.push(r.cloneHash(r.opts)),
                void 0 !== r.hAtoms && (r.optsHistory[r.optsHistory.length - 1].hlatomcount = Object.keys(r.hAtoms).length),
                n.isSessionStorageSupported() && n.saveCommandsToSession(),
                n.STATENUMBER = r.commands.length;
        n.bAddLogs && n.cfg.showcommand && (r.logs.push(e),
        $("#" + n.pre + "logtext").val("> " + r.logs.join("\n> ") + "\n> ").scrollTop($("#" + n.pre + "logtext")[0].scrollHeight)),
        n.adjustIcon()
    },
    renderStructure: function() {
        var i = this
          , n = i.icn3d;
        if (n.bInitial) {
            if (jQuery.extend(n.opts, i.opts),
            n.bOpm && (void 0 !== i.cfg.align || void 0 !== i.cfg.chainalign)) {
                var e = i.selectedPdbid + "_MEM_1";
                for (var t in n.residues[e]) {
                    var r = n.atoms[t];
                    r.style = "stick",
                    r.color = n.atomColors[r.name],
                    n.atomPrevColors[t] = r.color,
                    n.dAtoms[t] = 1
                }
            }
            if (void 0 !== i.cfg.command && "" !== i.cfg.command ? n.bRender = !1 : i.oneStructurePerWindow(),
            n.draw(),
            n.bOpm) {
                var s = new THREE.Vector3(1,0,0)
                  , o = -.5 * Math.PI;
                n.setRotation(s, o)
            }
            1 < Object.keys(n.structures).length ? $("#" + i.pre + "alternate").show() : $("#" + i.pre + "alternate").hide()
        } else
            i.saveSelectionIfSelected(),
            n.draw();
        if (n.bInitial && void 0 !== i.cfg.command && "" !== i.cfg.command) {
            if (1 == Object.keys(n.structures).length) {
                var a = Object.keys(n.structures)[0];
                i.cfg.command = i.cfg.command.replace(new RegExp("!","g"), a + "_")
            }
            i.loadScript(i.cfg.command)
        } else
            void 0 !== i.deferred && i.deferred.resolve(),
            void 0 !== i.deferred2 && i.deferred2.resolve();
        void 0 !== i.cfg.align || void 0 !== i.cfg.chainalign || i.bRealign || i.bInputfile && "pdb" == i.InputfileType && 2 <= Object.keys(n.structures).length ? ($("#" + i.pre + "mn2_alternateWrap").show(),
        $("#" + i.pre + "mn2_realignWrap").show()) : ($("#" + i.pre + "mn2_alternateWrap").hide(),
        $("#" + i.pre + "mn2_realignWrap").hide()),
        setTimeout(function() {
            if (n.bInitial) {
                if (i.cfg.showsets && i.showSets(),
                void 0 !== i.cfg.align || void 0 !== i.cfg.chainalign) {
                    var e = i.pre + "selection";
                    $("#" + e).show(),
                    $("#" + e + "_expand").hide(),
                    $("#" + e + "_shrink").show();
                    var t = i.getAlignSequencesAnnotations(Object.keys(n.alnChains), void 0, void 0, !1);
                    $("#" + i.pre + "dl_sequence2").html(t.sequencesHtml),
                    $("#" + i.pre + "dl_sequence2").width(i.RESIDUE_WIDTH * t.maxSeqCnt + 200)
                }
                if (i.cfg.showanno) {
                    i.setLogCmd("view annotations", !0),
                    i.showAnnotations()
                }
                i.cfg.closepopup && i.closeDialogs()
            } else
                i.updateHlAll();
            0 < $("#" + i.pre + "atomsCustom").length && $("#" + i.pre + "atomsCustom")[0].blur(),
            n.bInitial = !1
        }, 0)
    },
    closeDialogs: function() {
        var e = this
          , t = (e.icn3d,
        ["dl_selectannotations", "dl_alignment", "dl_2ddgm", "dl_definedsets", "dl_graph", "dl_linegraph", "dl_scatterplot", "dl_allinteraction", "dl_copyurl"]);
        for (var i in t) {
            var n = t[i];
            e.cfg.notebook ? $("#" + e.pre + n).hide() : $("#" + e.pre + n).hasClass("ui-dialog-content") && $("#" + e.pre + n).dialog("isOpen") && $("#" + e.pre + n).dialog("close")
        }
        e.cfg.notebook || e.resizeCanvas(e.WIDTH, e.HEIGHT, !0)
    },
    exportCustomAtoms: function() {
        for (var e = this.icn3d, t = "", i = void 0 !== e.defNames2Residues ? Object.keys(e.defNames2Residues).sort() : [], n = 0, r = i.length; n < r; ++n) {
            var s = i[n]
              , o = e.defNames2Residues[s];
            e.defNames2Descr[s];
            e.defNames2Command[s].replace(/,/g, ", "),
            t += s + "\tselect ",
            t += this.residueids2spec(o),
            t += "\n"
        }
        for (n = 0,
        r = (i = void 0 !== e.defNames2Atoms ? Object.keys(e.defNames2Atoms).sort() : []).length; n < r; ++n) {
            s = i[n];
            var a = e.defNames2Atoms[s];
            e.defNames2Descr[s];
            e.defNames2Command[s].replace(/,/g, ", "),
            0 < (o = this.atoms2residues(a)).length && (t += s + "\tselect ",
            t += this.residueids2spec(o),
            t += "\n")
        }
        return t
    },
    atoms2residues: function(e) {
        for (var t = this.icn3d, i = {}, n = 0, r = e.length; n < r; ++n)
            i[e[n]] = 1;
        var s = t.getResiduesFromAtoms(i);
        return Object.keys(s)
    },
    residueids2spec: function(e) {
        var t = this.icn3d
          , i = "";
        if (void 0 !== e) {
            for (var n, r, s, o, a, l, d, c = e.sort(function(e, t) {
                if ("" !== e && !isNaN(e))
                    return parseInt(e) - parseInt(t);
                var i = e.lastIndexOf("_")
                  , n = t.lastIndexOf("_");
                if (e.substr(0, i) < t.substr(0, n))
                    return -1;
                if (e.substr(0, i) > t.substr(0, n))
                    return 1;
                if (e.substr(0, i) == t.substr(0, n)) {
                    if (parseInt(e.substr(i + 1)) < parseInt(t.substr(n + 1)))
                        return -1;
                    if (parseInt(e.substr(i + 1)) > parseInt(t.substr(n + 1)))
                        return 1;
                    if (parseInt(e.substr(i + 1)) == parseInt(t.substr(n + 1)))
                        return 0
                }
            }), h = "", p = 0, m = 1 != Object.keys(t.structures).length, u = 0, f = c.length; u < f; ++u) {
                var g = c[u];
                s = g.lastIndexOf("_"),
                n = g.substr(0, s),
                r = parseInt(g.substr(s + 1)),
                o = h.indexOf("_"),
                a = h.substr(0, o),
                l = h.substr(o + 1),
                h !== n ? (0 < u && (i += p === d ? m ? "$" + a + "." + l + ":" + d + " or " : "." + l + ":" + d + " or " : m ? "$" + a + "." + l + ":" + d + "-" + p + " or " : "." + l + ":" + d + "-" + p + " or "),
                d = r) : h === n && r !== p + 1 && (i += p === d ? m ? "$" + a + "." + l + ":" + d + " or " : "." + l + ":" + d + " or " : m ? "$" + a + "." + l + ":" + d + "-" + p + " or " : "." + l + ":" + d + "-" + p + " or ",
                d = r),
                h = n,
                p = r
            }
            o = h.indexOf("_"),
            a = h.substr(0, o),
            l = h.substr(o + 1),
            i += p === d ? m ? "$" + a + "." + l + ":" + d : "." + l + ":" + d : m ? "$" + a + "." + l + ":" + d + "-" + p : "." + l + ":" + d + "-" + p
        }
        return i
    },
    atoms2spec: function(e) {
        var t = this.icn3d
          , i = ""
          , n = 0
          , r = {}
          , s = {}
          , o = {};
        for (var a in e) {
            var l = t.atoms[a];
            0 < n && (i += " or "),
            i += "$" + l.structure + "." + l.chain + ":" + l.resi + "@" + l.name,
            r[l.structure] = 1,
            s[l.structure + "_" + l.chain] = 1,
            o[l.structure + "_" + l.chain + "_" + l.resi] = 1,
            ++n
        }
        if (1 == Object.keys(o).length) {
            var d = "\\$" + l.structure + "\\." + l.chain + ":" + l.resi;
            i = i.replace(new RegExp(d,"g"), "")
        } else if (1 == Object.keys(s).length) {
            d = "\\$" + l.structure + "\\." + l.chain;
            i = i.replace(new RegExp(d,"g"), "")
        } else if (1 == Object.keys(r).length) {
            d = "\\$" + l.structure;
            i = i.replace(new RegExp(d,"g"), "")
        }
        return i
    },
    getAtomsFromSets: function(e) {
        for (var t = this.icn3d, i = {}, n = 0, r = e.length; n < r; ++n) {
            commandname = e[n];
            var s = this.getAtomsFromSet(commandname);
            i = t.unionHash(i, s)
        }
        return i
    },
    getAtomsFromSet: function(e) {
        var t = this.icn3d
          , i = {};
        if (void 0 === t.defNames2Residues.proteins && this.showSets(),
        -1 !== Object.keys(t.chains).indexOf(e))
            i = t.unionHash(i, t.chains[e]);
        else {
            if (void 0 !== t.defNames2Residues[e] && 0 < t.defNames2Residues[e].length)
                for (var n = 0, r = t.defNames2Residues[e].length; n < r; ++n) {
                    var s = t.defNames2Residues[e][n];
                    i = t.unionHash(i, t.residues[s])
                }
            if (void 0 !== t.defNames2Atoms[e] && 0 < t.defNames2Atoms[e].length)
                for (n = 0,
                r = t.defNames2Atoms[e].length; n < r; ++n) {
                    i[t.defNames2Atoms[e][n]] = 1
                }
        }
        return i
    },
    getAtomsFromNameArray: function(e) {
        for (var t = this.icn3d, i = {}, n = 0, r = e.length; n < r; ++n)
            if ("non-selected" === e[n]) {
                var s = {};
                for (var n in t.atoms)
                    !t.hAtoms.hasOwnProperty(n) && t.dAtoms.hasOwnProperty(n) && (s[n] = t.atoms[n]);
                i = t.unionHash(i, s)
            } else
                i = "selected" === e[n] ? t.unionHash(i, t.hash2Atoms(t.hAtoms)) : t.unionHash(i, t.hash2Atoms(this.getAtomsFromSet(e[n])));
        return 0 == e.length && (i = t.atoms),
        i
    },
    pickCustomSphere: function(e, t, i, n, r, s) {
        var o = this.icn3d;
        if (!n) {
            var a, l, d = "select zone cutoff " + e + " | sets " + t + " " + i + " | " + n;
            r && (d = "interactions " + e + " | sets " + t + " " + i + " | " + n,
            o.opts.contact = "yes"),
            a = this.getAtomsFromNameArray(t),
            l = this.getAtomsFromNameArray(i);
            var c, h = this.pickCustomSphere_base(e, a, l, n, r, s, d, !0), p = Object.keys(h.residues);
            o.hAtoms = {};
            for (var m = 0, u = p.length; m < u; ++m) {
                var f = p[m];
                for (var g in o.residues[f])
                    o.hAtoms[g] = 1
            }
            var v = o.getFirstAtomObj(a);
            void 0 !== v && (c = "sphere." + v.chain + ":" + o.residueName2Abbr(v.resn.substr(0, 3)).trim() + v.resi + "-" + e + "A",
            r && (c = "interactions." + v.chain + ":" + o.residueName2Abbr(v.resn.substr(0, 3)).trim() + v.resi + "-" + $("#" + this.pre + "contactthreshold").val() + "A"),
            this.addCustomSelection(p, c, c, d, !0)),
            this.saveSelectionIfSelected(),
            o.draw()
        }
    },
    pickCustomSphere_base: function(e, t, i, n, r, s, o, a) {
        var l, d = this.icn3d;
        r ? (l = d.getAtomsWithinAtom(d.intHash2Atoms(d.dAtoms, i), d.intHash2Atoms(d.dAtoms, t), parseFloat(e), a, r),
        this.resid2ResidhashInteractions = d.cloneHash(d.resid2Residhash)) : (l = d.getAtomsWithinAtom(i, t, parseFloat(e), a, r),
        this.resid2ResidhashSphere = d.cloneHash(d.resid2Residhash));
        var c = {};
        for (var h in l) {
            var p = l[h];
            if (!d.bOpm || "DUM" !== p.resn)
                c[p.structure + "_" + p.chain + "_" + p.resi] = 1
        }
        return {
            residues: c,
            resid2Residhash: d.resid2Residhash
        }
    },
    showHbonds: function(e, t, i, n, r, s) {
        var o = this.icn3d;
        if (!n) {
            var a, l, d, c;
            l = r ? (a = "saltbridge",
            "salt bridge " + e + " | sets " + t + " " + i + " | " + n) : (a = "hbonds",
            "hbonds " + e + " | sets " + t + " " + i + " | " + n),
            o.opts[a] = "yes",
            o.opts.water = "dot",
            d = this.getAtomsFromNameArray(t),
            c = this.getAtomsFromNameArray(i);
            var h = o.getFirstAtomObj(d);
            if (0 < Object.keys(c).length && 0 < Object.keys(d).length) {
                var p, m = o.calculateChemicalHbonds(o.intHash2Atoms(o.dAtoms, c), o.intHash2Atoms(o.dAtoms, d), parseFloat(e), r);
                p = r ? (this.resid2ResidhashSaltbridge = o.cloneHash(o.resid2Residhash),
                "all atoms that have salt bridges with the selected atoms") : (this.resid2ResidhashHbond = o.cloneHash(o.resid2Residhash),
                "all atoms that are hydrogen-bonded with the selected atoms");
                var u = {};
                for (var f in m) {
                    u[o.atoms[f].structure + "_" + o.atoms[f].chain + "_" + o.atoms[f].resi] = 1
                }
                for (var g in o.hAtoms = {},
                u)
                    for (var f in o.residues[g])
                        o.hAtoms[f] = 1,
                        o.atoms[f].style2 = "stick";
                var v = a + "_" + h.serial;
                this.addCustomSelection(Object.keys(u), v, p, l, !0);
                i = [v];
                this.saveSelectionIfSelected(),
                o.draw()
            }
        }
    },
    showIonicInteractions: function(e, t, i, n, r, s) {
        var o = this.icn3d;
        if (!n) {
            var a, l, d, c;
            a = "saltbridge",
            l = "salt bridge " + e + " | sets " + t + " " + i + " | " + n,
            o.opts[a] = "yes",
            d = this.getAtomsFromNameArray(t),
            c = this.getAtomsFromNameArray(i);
            var h = o.getFirstAtomObj(d);
            if (0 < Object.keys(c).length && 0 < Object.keys(d).length) {
                var p = o.calculateIonicInteractions(o.intHash2Atoms(o.dAtoms, c), o.intHash2Atoms(o.dAtoms, d), parseFloat(e), r);
                this.resid2ResidhashSaltbridge = o.cloneHash(o.resid2Residhash),
                0;
                var m = {};
                for (var u in p) {
                    m[o.atoms[u].structure + "_" + o.atoms[u].chain + "_" + o.atoms[u].resi] = 1
                }
                for (var f in o.hAtoms = {},
                m)
                    for (var u in o.residues[f])
                        o.hAtoms[u] = 1,
                        o.atoms[u].style2 = "stick",
                        o.ions.hasOwnProperty(u) && (o.atoms[u].style2 = "sphere");
                var g = a + "_" + h.serial;
                this.addCustomSelection(Object.keys(m), g, "all atoms that have ionic interactions with the selected atoms", l, !0);
                i = [g];
                this.saveSelectionIfSelected(),
                o.draw()
            }
        }
    },
    showHalogenPi: function(e, t, i, n, r, s) {
        var o = this.icn3d;
        if (!n) {
            var a, l, d = s + " " + e + " | sets " + t + " " + i + " | " + n;
            o.opts[s] = "yes",
            a = this.getAtomsFromNameArray(t),
            l = this.getAtomsFromNameArray(i);
            var c = o.getFirstAtomObj(a);
            if (0 < Object.keys(l).length && 0 < Object.keys(a).length) {
                var h, p = o.calculateHalogenPiInteractions(o.intHash2Atoms(o.dAtoms, a), o.intHash2Atoms(o.dAtoms, l), parseFloat(e), r, s);
                "halogen" == s ? (this.resid2ResidhashHalogen = o.cloneHash(o.resid2Residhash),
                h = "all atoms that have halogen bonds with the selected atoms") : "pi-cation" == s ? (this.resid2ResidhashPication = o.cloneHash(o.resid2Residhash),
                h = "all atoms that have pi-cation interactions with the selected atoms") : "pi-stacking" == s && (this.resid2ResidhashPistacking = o.cloneHash(o.resid2Residhash),
                h = "all atoms that have pi-stacking with the selected atoms");
                var m = {};
                for (var u in p) {
                    m[o.atoms[u].structure + "_" + o.atoms[u].chain + "_" + o.atoms[u].resi] = 1
                }
                for (var f in o.hAtoms = {},
                m)
                    for (var u in o.residues[f])
                        o.hAtoms[u] = 1,
                        o.atoms[u].style2 = "stick",
                        o.ions.hasOwnProperty(u) && (o.atoms[u].style2 = "sphere");
                var g = s + "_" + c.serial;
                this.addCustomSelection(Object.keys(m), g, h, d, !0);
                i = [g];
                this.saveSelectionIfSelected(),
                o.draw()
            }
        }
    },
    showSsbonds: function() {
        var e = this.icn3d;
        e.opts.ssbonds = "yes";
        for (var t = {}, i = Object.keys(e.structures), n = 0, r = i.length; n < r; ++n) {
            var s = i[n];
            if (void 0 !== e.ssbondpnts[s])
                for (var o = 0, a = Math.floor(e.ssbondpnts[s].length / 2); o < a; o++) {
                    var l = e.ssbondpnts[s][2 * o]
                      , d = e.ssbondpnts[s][2 * o + 1];
                    t[l] = 1,
                    t[d] = 1,
                    e.hAtoms = e.unionHash(e.hAtoms, e.residues[l]),
                    e.hAtoms = e.unionHash(e.hAtoms, e.residues[d])
                }
        }
        if (0 < Object.keys(t).length) {
            this.addCustomSelection(Object.keys(t), "ssbonds", "all atoms that have disulfide bonds", "disulfide bonds", !0);
            this.saveSelectionIfSelected(),
            e.draw()
        }
    },
    showClbonds: function() {
        var e = this.icn3d;
        e.opts.clbonds = "yes";
        var t = e.applyClbondsOptions();
        for (var i in t)
            e.hAtoms = e.unionHash(e.hAtoms, e.residues[i]);
        if (0 < Object.keys(t).length) {
            this.addCustomSelection(Object.keys(t), "clbonds", "all atoms that have cross-linkages", "cross linkage", !0);
            this.saveSelectionIfSelected(),
            e.draw()
        }
    },
    addLine: function(e, t, i, n, r, s, o, a, l) {
        var d = this.icn3d
          , c = {};
        c.position1 = new THREE.Vector3(e,t,i),
        c.position2 = new THREE.Vector3(n,r,s),
        c.color = o,
        c.dashed = a,
        void 0 === d.lines[l] && (d.lines[l] = []),
        void 0 !== l ? d.lines[l].push(c) : d.lines.custom.push(c),
        d.removeHlObjects()
    },
    back: function() {
        var e = this;
        e.icn3d;
        e.backForward = !0,
        e.STATENUMBER--,
        e.bAddCommands = !1,
        e.bAddLogs = !1,
        e.bNotLoadStructure = !0,
        e.STATENUMBER < 1 ? e.STATENUMBER = 1 : e.execCommands(0, e.STATENUMBER - 1, e.STATENUMBER, !0),
        e.adjustIcon(),
        e.bAddCommands = !0,
        e.bAddLogs = !0
    },
    forward: function() {
        var e = this
          , t = e.icn3d;
        e.backForward = !0,
        e.STATENUMBER++,
        e.bAddCommands = !1,
        e.bAddLogs = !1,
        e.bNotLoadStructure = !0,
        e.STATENUMBER > t.commands.length ? e.STATENUMBER = t.commands.length : e.execCommands(0, e.STATENUMBER - 1, e.STATENUMBER, !0),
        e.adjustIcon(),
        e.bAddCommands = !0,
        e.bAddLogs = !0
    },
    toggleSelection: function() {
        var e = this.icn3d;
        if (this.bHideSelection) {
            for (var t in e.dAtoms)
                e.hAtoms.hasOwnProperty(t) && delete e.dAtoms[t];
            this.bHideSelection = !1
        } else
            e.dAtoms = e.unionHash(e.dAtoms, e.hAtoms),
            this.bHideSelection = !0;
        e.draw()
    },
    adjustIcon: function() {
        var e = this
          , t = e.icn3d;
        1 === e.STATENUMBER ? $("#" + e.pre + "back").hasClass("icn3d-middleIcon") && ($("#" + e.pre + "back").toggleClass("icn3d-middleIcon"),
        $("#" + e.pre + "back").toggleClass("icn3d-endIcon")) : $("#" + e.pre + "back").hasClass("icn3d-endIcon") && ($("#" + e.pre + "back").toggleClass("icn3d-middleIcon"),
        $("#" + e.pre + "back").toggleClass("icn3d-endIcon")),
        e.STATENUMBER === t.commands.length ? $("#" + e.pre + "forward").hasClass("icn3d-middleIcon") && ($("#" + e.pre + "forward").toggleClass("icn3d-middleIcon"),
        $("#" + e.pre + "forward").toggleClass("icn3d-endIcon")) : $("#" + e.pre + "forward").hasClass("icn3d-endIcon") && ($("#" + e.pre + "forward").toggleClass("icn3d-middleIcon"),
        $("#" + e.pre + "forward").toggleClass("icn3d-endIcon"))
    },
    toggle: function(e, t, i, n) {
        this.icn3d;
        var r = [e, t];
        for (var s in r) {
            var o = r[s];
            $("#" + o).toggleClass("ui-icon-plus"),
            $("#" + o).toggleClass("ui-icon-minus")
        }
        for (var s in r = [e, t, i, n]) {
            o = r[s];
            $("#" + o).toggleClass("icn3d-shown"),
            $("#" + o).toggleClass("icn3d-hidden")
        }
    },
    selectComplement: function() {
        var e = this.icn3d
          , t = {};
        for (var i in e.atoms)
            e.hAtoms.hasOwnProperty(i) || (t[i] = 1);
        e.hAtoms = e.cloneHash(t),
        this.updateHlAll()
    },
    saveCommandsToSession: function() {
        var e = this.icn3d.commands.join("\n")
          , t = decodeURIComponent(e);
        sessionStorage.setItem("commands", t)
    },
    addChainLabels: function(e) {
        var t = this.icn3d
          , i = t.intHash(t.hAtoms, e);
        void 0 === t.labels.chain && (t.labels.chain = []);
        var n = t.getChainsFromAtoms(i);
        for (var r in n) {
            var s = {};
            s.position = t.centerAtoms(t.chains[r]).center;
            var o = r.indexOf("_")
              , a = r.substr(o + 1)
              , l = this.getProteinName(r);
            20 < l.length && (l = l.substr(0, 20) + "..."),
            s.text = "Chain " + a + ": " + l,
            s.size = 18;
            var d = t.getFirstCalphaAtomObj(t.chains[r]).color.getHexString().toUpperCase();
            s.color = "CCCCCC" === d || "C8C8C8" === d ? "#888888" : "#" + d,
            s.background = "#CCCCCC",
            t.labels.chain.push(s)
        }
        t.removeHlObjects()
    },
    addTerminiLabels: function(e) {
        var t, i = this.icn3d;
        t = i.unionHash(t, i.proteins),
        t = i.unionHash(t, i.nucleotides);
        var n = i.intHash(i.dAtoms, t)
          , r = i.intHash(n, e);
        void 0 === i.labels.chain && (i.labels.chain = []);
        var s = i.getChainsFromAtoms(r);
        for (var o in s) {
            var a = i.intHash(n, i.chains[o])
              , l = Object.keys(a)
              , d = i.atoms[l[0]]
              , c = i.atoms[l[l.length - 1]]
              , h = {}
              , p = {};
            h.position = d.coord,
            p.position = c.coord,
            h.text = "N-",
            p.text = "C-",
            i.nucleotides.hasOwnProperty(d.serial) && (h.text = "5'",
            p.text = "3'"),
            h.size = 18,
            p.size = 18;
            var m = d.color.getHexString().toUpperCase()
              , u = c.color.getHexString().toUpperCase();
            h.color = "CCCCCC" === m || "C8C8C8" === m ? "#888888" : "#" + m,
            p.color = "CCCCCC" === u || "C8C8C8" === u ? "#888888" : "#" + u,
            h.background = "#CCCCCC",
            p.background = "#CCCCCC",
            i.labels.chain.push(h),
            i.labels.chain.push(p)
        }
        i.removeHlObjects()
    },
    getCommandsBeforeCrash: function() {
        this.icn3d;
        window.addEventListener("load", function() {
            sessionStorage.setItem("good_exit", "pending")
        }),
        window.addEventListener("beforeunload", function() {
            sessionStorage.setItem("good_exit", "true")
        }),
        sessionStorage.getItem("good_exit") && "pending" === sessionStorage.getItem("good_exit") && (this.isMac() || (this.bCrashed = !0),
        this.commandsBeforeCrash = sessionStorage.getItem("commands"),
        this.commandsBeforeCrash || (this.commandsBeforeCrash = ""))
    },
    addLineFromPicking: function(e) {
        var t = this.icn3d
          , i = $("#" + this.pre + e + "color").val()
          , n = (t.pAtom.coord.x,
        t.pAtom2.coord.x,
        t.pAtom.coord.y,
        t.pAtom2.coord.y,
        t.pAtom.coord.z,
        t.pAtom2.coord.z,
        "stabilizer" != e);
        this.setLogCmd("add line | x1 " + t.pAtom.coord.x.toPrecision(4) + " y1 " + t.pAtom.coord.y.toPrecision(4) + " z1 " + t.pAtom.coord.z.toPrecision(4) + " | x2 " + t.pAtom2.coord.x.toPrecision(4) + " y2 " + t.pAtom2.coord.y.toPrecision(4) + " z2 " + t.pAtom2.coord.z.toPrecision(4) + " | color " + i + " | dashed " + n + " | type " + e, !0),
        this.addLine(t.pAtom.coord.x, t.pAtom.coord.y, t.pAtom.coord.z, t.pAtom2.coord.x, t.pAtom2.coord.y, t.pAtom2.coord.z, i, n, e),
        t.pickpair = !1
    },
    setEntrezLinks: function(e) {
        var t, i = this.icn3d, n = Object.keys(i.structures);
        1 === n.length ? (t = "https://www.ncbi.nlm.nih.gov/" + e + "/?term=" + n[0],
        this.setLogCmd("Entrez " + e + " about PDB " + n[0] + ": " + t, !1),
        window.open(t, "_blank")) : 2 === n.length && (t = "https://www.ncbi.nlm.nih.gov/" + e + "/?term=" + n[0] + " OR " + n[1],
        this.setLogCmd("Entrez " + e + " about PDB " + n[0] + " OR " + n[1] + ": " + t, !1),
        window.open(t, "_blank"))
    },
    shareLink: function(a) {
        var l = this
          , e = l.icn3d
          , d = l.shareLinkUrl()
          , t = 4e3 < d.length || 0 !== d.indexOf("http");
        a && (d += "&random=" + parseInt(1e3 * Math.random()));
        var c = Object.keys(e.structures).join("_");
        if (a) {
            if (l.bInputfile || t)
                return void l.saveFile(c + "_image_icn3d_loadable.png", "png")
        } else {
            if (l.bInputfile && !l.bInputUrlfile)
                return void alert("Share Link does NOT work when the data is from custom files. Please save 'iCn3D PNG Image' in the File menu and open it in iCn3D.");
            if (t)
                return void alert("The url is more than 4000 characters and may not work. Please save 'iCn3D PNG Image' or 'State File' and open them in iCn3D.");
            l.setLogCmd("share link: " + d, !1)
        }
        $.ajax({
            url: "https://firebasedynamiclinks.googleapis.com/v1/shortLinks?key=AIzaSyBxl9CgM0dY5lagHL4UOhEpLWE1fuwdnvc",
            type: "POST",
            data: {
                longDynamicLink: "https://icn3d.page.link/?link=" + encodeURIComponent(d)
            },
            dataType: "json",
            success: function(e) {
                var t = "Problem in getting shortened URL";
                if (void 0 !== e.shortLink && (t = e.shortLink,
                a)) {
                    var i = t.split("/")
                      , n = i[i.length - 1];
                    l.saveFile(c + "-" + n + ".png", "png");
                    var r = '<div style="float:left; border: solid 1px #0000ff; padding: 5px; margin: 10px; text-align:center;">';
                    r += '<a href="https://structure.ncbi.nlm.nih.gov/icn3d/share.html?' + n + '" target="_blank">',
                    r += '<img style="height:300px" src ="' + c + "-" + n + '.png"><br>\n',
                    r += "\x3c!--Start of your comments==================--\x3e\n";
                    var s = l.yournote ? ": " + l.yournote.replace(/\n/g, "<br>").replace(/; /g, ", ") : "";
                    r += "PDB " + c.toUpperCase() + s + "\n",
                    r += "\x3c!--End of your comments====================--\x3e\n",
                    r += "</a>",
                    r += "</div>\n\n",
                    l.saveFile(c + "-" + n + ".html", "html", r)
                }
                a && void 0 === e.shortLink && l.saveFile(c + "_image_icn3d_loadable.png", "png");
                var o = t.split("page.link/");
                2 == o.length && (t = "https://structure.ncbi.nlm.nih.gov/icn3d/share.html?" + o[1]),
                $("#" + l.pre + "ori_url").val(d),
                $("#" + l.pre + "short_url").val(t),
                a || l.openDlg("dl_copyurl", "Copy a Share Link URL")
            },
            error: function(e, t, i) {
                $("#" + l.pre + "ori_url").val(d),
                $("#" + l.pre + "short_url").val("Problem in getting shortened URL"),
                a || l.openDlg("dl_copyurl", "Copy a Share Link URL")
            }
        })
    },
    exportInteractions: function() {
        this.icn3d;
        var e = '<html><body><div style="text-align:center"><br><b>Interacting residues</b>:<br/><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Base Chain: Residues</th><th>Interacting Chain</th></tr>';
        for (var t in this.chainname2residues)
            for (var i in this.chainname2residues[t]) {
                var n = t.substr(0, t.indexOf("_")) + "_" + i.substr(0, i.indexOf(" "));
                e += "<tr><td>" + t + ": ",
                e += this.residueids2spec(this.chainname2residues[t][i]),
                e += "</td><td>" + n + "</td></tr>"
            }
        e += "</table><br/></div></body></html>";
        var r = this.inputid ? this.inputid : "custom";
        this.saveFile(r + "_interactions.html", "html", e)
    },
    exportSsbondPairs: function() {
        var e = this.icn3d
          , t = ""
          , i = 0;
        for (var n in e.structures) {
            var r = e.ssbondpnts[n];
            if (void 0 === r)
                break;
            for (var s = 0, o = r.length; s < o; s += 2) {
                t += "<tr><td>" + r[s] + " Cys</td><td>" + r[s + 1] + " Cys</td></tr>",
                ++i
            }
        }
        var a = '<html><body><div style="text-align:center"><br><b>' + i + " disulfide pairs</b>:<br><br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue ID 1</th><th>Residue ID 2</th></tr>";
        a += t,
        a += "</table><br/></div></body></html>";
        var l = this.inputid ? this.inputid : "custom";
        this.saveFile(l + "_disulfide_pairs.html", "html", a)
    },
    exportClbondPairs: function() {
        var e = this.icn3d
          , t = ""
          , i = 0
          , n = {};
        for (var r in e.structures) {
            var s = e.clbondpnts[r];
            if (void 0 === s)
                break;
            for (var o = 0, a = s.length; o < a; o += 2) {
                var l = s[o]
                  , d = s[o + 1];
                if (!n.hasOwnProperty(l + "_" + d)) {
                    var c = e.getFirstAtomObj(e.residues[l])
                      , h = e.getFirstAtomObj(e.residues[d]);
                    t += "<tr><td>" + l + " " + c.resn + "</td><td>" + d + " " + h.resn + "</td></tr>",
                    ++i
                }
                n[l + "_" + d] = 1,
                n[d + "_" + l] = 1
            }
        }
        var p = '<html><body><div style="text-align:center"><br><b>' + i + " cross-linkage pairs</b>:<br><br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue ID 1</th><th>Residue ID 2</th></tr>";
        p += t,
        p += "</table><br/></div></body></html>";
        var m = this.inputid ? this.inputid : "custom";
        this.saveFile(m + "_crosslinkage_pairs.html", "html", p)
    },
    getGraphLinks: function(e, t, i, n, r) {
        var s = this.icn3d
          , o = "";
        r = void 0 === r ? 1 : r;
        var a = "";
        for (var l in e) {
            var d = (l = l.trim()).indexOf(" ")
              , c = l.indexOf(":")
              , h = l.indexOf("@")
              , p = -1 !== h ? h : l.length
              , m = l.indexOf(".")
              , u = l.indexOf("$")
              , f = s.residueName2Abbr(l.substr(0, d)) + l.substr(c + 1, p - c - 1);
            for (var g in "chain" != n && "structure" != n || (f += "." + l.substr(m + 1, c - m - 1)),
            "structure" == n && (f += "." + l.substr(u + 1, m - u - 1)),
            t[l]) {
                var v = (g = g.trim()).indexOf(" ")
                  , b = g.indexOf(":")
                  , y = g.indexOf("@")
                  , C = -1 !== y ? y : g.length
                  , _ = g.indexOf(".")
                  , S = g.indexOf("$")
                  , w = s.residueName2Abbr(g.substr(0, v)) + g.substr(b + 1, C - b - 1);
                g.substr(_ + 1, b - _ - 1),
                "chain" != n && "structure" != n || (w += "." + g.substr(_ + 1, b - _ - 1)),
                "structure" == n && (w += "." + g.substr(S + 1, _ - S - 1));
                var A = ', {"source": "' + f + '", "target": "' + w + '", "v": ' + r + ', "c": "' + i + '"}';
                A != a && (o += A),
                a = A
            }
        }
        return o
    },
    convertLabel2Resid: function(e) {
        this.icn3d,
        e.indexOf(" ");
        var t = e.indexOf("@")
          , i = -1 !== t ? t : e.length
          , n = e.indexOf("$")
          , r = e.indexOf(".")
          , s = e.indexOf(":");
        return e.substr(n + 1, r - n - 1) + "_" + e.substr(r + 1, s - r - 1) + "_" + e.substr(s + 1, i - s - 1)
    },
    exportHbondPairs: function(e, t) {
        var i = this
          , n = i.icn3d
          , r = ""
          , s = 0
          , o = ' <span style="background-color:#'
          , a = '">&nbsp;&nbsp;&nbsp;</span>';
        for (var l in i.resid2ResidhashHbond) {
            var d = i.convertLabel2Resid(l)
              , c = n.getFirstAtomObj(n.residues[d]).color.getHexString();
            for (var h in i.resid2ResidhashHbond[l]) {
                var p = i.convertLabel2Resid(h)
                  , m = n.getFirstAtomObj(n.residues[p]).color.getHexString()
                  , u = Math.sqrt(i.resid2ResidhashHbond[l][h]).toFixed(1);
                r += '<tr><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "hbond_" + s + 'a" resid="' + l + '"/> ' + l + o + c + a + '</td><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "hbond_" + s + 'b" resid="' + h + '"/> ' + h + o + m + a + '</td><td align="center">' + u + "</td>",
                "view" == e && (r += '<td align="center"><button class="' + i.pre + 'selres" resid="' + l + "|" + h + '">Highlight</button></td>'),
                r += "</tr>",
                ++s
            }
        }
        var f = '<div style="text-align:center"><br><b>' + s + " hydrogen bond pairs</b>:</div><br>";
        return 0 < s && (f += "<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Atom 1</th><th>Atom 2</th><th>Distance (&#8491;)</th>",
        "view" == e && (f += '<th align="center">Highlight in 3D</th>'),
        f += "</tr>",
        f += r,
        f += "</table><br/>"),
        "graph" != e && "linegraph" != e && "scatterplot" != e ? f : i.getGraphLinks(i.resid2ResidhashHbond, i.resid2ResidhashHbond, i.hbondColor, t, i.hbondValue)
    },
    exportSaltbridgePairs: function(e, t) {
        var i = this
          , n = i.icn3d
          , r = ""
          , s = 0
          , o = ' <span style="background-color:#'
          , a = '">&nbsp;&nbsp;&nbsp;</span>';
        for (var l in i.resid2ResidhashSaltbridge) {
            var d = i.convertLabel2Resid(l)
              , c = n.getFirstAtomObj(n.residues[d]).color.getHexString();
            for (var h in i.resid2ResidhashSaltbridge[l]) {
                var p = i.convertLabel2Resid(h)
                  , m = n.getFirstAtomObj(n.residues[p]).color.getHexString()
                  , u = Math.sqrt(i.resid2ResidhashSaltbridge[l][h]).toFixed(1);
                r += '<tr><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "saltb_" + s + 'a" resid="' + l + '"/> ' + l + o + c + a + '</td><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "saltb_" + s + 'b" resid="' + h + '"/> ' + h + o + m + a + '</td><td align="center">' + u + "</td>",
                "view" == e && (r += '<td align="center"><button class="' + i.pre + 'selres" resid="' + l + "|" + h + '">Highlight</button></td>'),
                r += "</tr>",
                ++s
            }
        }
        var f = '<div style="text-align:center"><br><b>' + s + " salt bridge/ionic interaction pairs</b>:</div><br>";
        return 0 < s && (f += "<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Atom 1</th><th>Atom 2</th><th>Distance (&#8491;)</th>",
        "view" == e && (f += '<th align="center">Highlight in 3D</th>'),
        f += "</tr>",
        f += r,
        f += "</table><br/>"),
        "graph" != e && "linegraph" != e && "scatterplot" != e ? f : i.getGraphLinks(i.resid2ResidhashSaltbridge, i.resid2ResidhashSaltbridge, i.ionicColor, t, i.ionicValue)
    },
    exportHalogenPiPairs: function(e, t, i) {
        var n, r, s, o = this, a = o.icn3d, l = "", d = 0, c = ' <span style="background-color:#', h = '">&nbsp;&nbsp;&nbsp;</span>';
        for (var p in "halogen" == i ? (n = o.resid2ResidhashHalogen,
        r = o.halogenColor,
        s = o.halogenValue) : "pi-cation" == i ? (n = o.resid2ResidhashPication,
        r = o.picationColor,
        s = o.picationValue) : "pi-stacking" == i && (n = o.resid2ResidhashPistacking,
        r = o.pistackingColor,
        s = o.pistackingValue),
        n) {
            var m = o.convertLabel2Resid(p)
              , u = a.getFirstAtomObj(a.residues[m]).color.getHexString();
            for (var f in n[p]) {
                var g = o.convertLabel2Resid(f)
                  , v = a.getFirstAtomObj(a.residues[g]).color.getHexString()
                  , b = Math.sqrt(n[p][f]).toFixed(1);
                l += '<tr><td><input type="checkbox" class="' + o.pre + 'seloneres" id="' + o.pre + i + "_" + d + 'a" resid="' + p + '"/> ' + p + c + u + h + '</td><td><input type="checkbox" class="' + o.pre + 'seloneres" id="' + o.pre + i + "_" + d + 'b" resid="' + f + '"/> ' + f + c + v + h + '</td><td align="center">' + b + "</td>",
                "view" == e && (l += '<td align="center"><button class="' + o.pre + 'selres" resid="' + p + "|" + f + '">Highlight</button></td>'),
                l += "</tr>",
                ++d
            }
        }
        var y = '<div style="text-align:center"><br><b>' + d + " " + i + " pairs</b>:</div><br>";
        return 0 < d && (y += "<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Atom 1</th><th>Atom 2</th><th>Distance (&#8491;)</th>",
        "view" == e && (y += '<th align="center">Highlight in 3D</th>'),
        y += "</tr>",
        y += l,
        y += "</table><br/>"),
        "graph" != e && "linegraph" != e && "scatterplot" != e ? y : o.getGraphLinks(n, n, r, t, s)
    },
    exportSpherePairs: function(e, t, i) {
        var n = this
          , r = n.icn3d
          , s = ""
          , o = 0
          , a = e ? n.resid2ResidhashInteractions : n.resid2ResidhashSphere
          , l = ' <span style="background-color:#'
          , d = '">&nbsp;&nbsp;&nbsp;</span>';
        for (var c in a) {
            var h = n.convertLabel2Resid(c)
              , p = r.getFirstAtomObj(r.residues[h])
              , m = p.color.getHexString();
            for (var u in a[c]) {
                var f = n.convertLabel2Resid(u)
                  , g = r.getFirstAtomObj(r.residues[f])
                  , v = g.color.getHexString()
                  , b = a[c][u].split("_")
                  , y = b[0]
                  , C = b[1];
                p = b[2],
                g = b[3];
                var _ = b[4];
                e ? (s += '<tr><td><input type="checkbox" class="' + n.pre + 'seloneres" id="' + n.pre + "inter_" + o + 'a" resid="' + c + '"/> ' + c + "@" + p + l + m + d + '</td><td><input type="checkbox" class="' + n.pre + 'seloneres" id="' + n.pre + "inter_" + o + 'b" resid="' + u + '"/> ' + u + "@" + g + l + v + d + '</td><td align="center">' + _ + '</td><td align="center">' + y + '</td><td align="center">' + C + "</td>",
                "view" == t && (s += '<td align="center"><button class="' + n.pre + 'selres" resid="' + c + "|" + u + '">Highlight</button></td>'),
                s += "</tr>") : s += "<tr><td>" + c + "</td><td>" + u + '</td><td align="center">' + _ + '</td><td align="center">' + y + '</td><td align="center">' + C + "</td></tr>",
                ++o
            }
        }
        var S = '<div style="text-align:center"><br><b>' + o + " residue pairs in " + (e ? "the contacts" : "sphere") + "</b>:</div><br>";
        return 0 < o && (e ? (S += '<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue 1</th><th>Residue 2</th><th align="center">Num Contacts</th><th align="center">Min Distance (&#8491;)</th><th align="center">C-alpha Distance (&#8491;)</th>',
        "view" == t && (S += '<th align="center">Highlight in 3D</th>'),
        S += "</tr>") : S += '<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue 1</th><th>Residue 2</th><th align="center">Num Contacts</th><th align="center">Min Distance (&#8491;)</th><th align="center">C-alpha Distance (&#8491;)</th></tr>',
        S += s,
        S += "</table><br/>"),
        "graph" != t && "linegraph" != t && "scatterplot" != t ? S : n.getGraphLinks(a, a, n.contactColor, i, n.contactValue)
    },
    saveColor: function() {
        var e = this.icn3d;
        for (var t in e.atoms) {
            var i = e.atoms[t];
            i.colorSave = i.color.clone()
        }
    },
    applySavedColor: function() {
        var e = this.icn3d;
        for (var t in e.atoms) {
            var i = e.atoms[t];
            void 0 !== i.colorSave && (i.color = i.colorSave.clone())
        }
        e.draw(),
        this.changeSeqColor(Object.keys(e.residues))
    },
    saveStyle: function() {
        var e = this.icn3d;
        for (var t in e.atoms) {
            var i = e.atoms[t];
            i.styleSave = i.style,
            void 0 !== i.style2 && (i.style2Save = i.style2)
        }
    },
    applySavedStyle: function() {
        var e = this.icn3d;
        for (var t in e.atoms) {
            var i = e.atoms[t];
            void 0 !== i.styleSave && (i.style = i.styleSave),
            void 0 !== i.style2Save && (i.style2 = i.style2Save)
        }
        e.draw()
    },
    showHydrogens: function() {
        var e = this.icn3d;
        for (var t in e.hAtoms) {
            var i = e.atoms[t];
            if ("H" !== i.name) {
                e.atoms[i.serial].bonds = e.atoms[i.serial].bonds2.concat(),
                e.atoms[i.serial].bondOrder = e.atoms[i.serial].bondOrder2.concat();
                for (var n = 0, r = e.atoms[i.serial].bonds.length; n < r; ++n) {
                    var s = e.atoms[i.serial].bonds[n];
                    "H" === e.atoms[s].name && (e.dAtoms[s] = 1,
                    e.hAtoms[s] = 1)
                }
            }
        }
    },
    hideHydrogens: function() {
        var e = this.icn3d;
        for (var t in e.hAtoms) {
            var i = e.atoms[t];
            if ("H" === i.name) {
                if (0 < e.atoms[i.serial].bonds.length) {
                    var n = e.atoms[i.serial].bonds[0]
                      , r = e.atoms[n].bonds.indexOf(i.serial);
                    -1 !== r && (e.atoms[n].bonds.splice(r, 1),
                    e.atoms[n].bondOrder.splice(r, 1))
                }
                delete e.dAtoms[i.serial],
                delete e.hAtoms[i.serial]
            }
        }
    },
    showAll: function() {
        var e = this.icn3d;
        e.dAtoms = e.cloneHash(e.atoms),
        e.maxD = e.oriMaxD,
        e.draw()
    },
    saveSelectionPrep: function() {
        var e = this;
        e.icn3d;
        e.cfg.notebook ? ($("#" + e.pre + "dl_definedsets").show(),
        $("#" + e.pre + "atomsCustom").resizable()) : $("#" + e.pre + "dl_definedsets").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_definedsets").dialog("isOpen") || (e.openDlg("dl_definedsets", "Select sets"),
        $("#" + e.pre + "atomsCustom").resizable()),
        e.bSelectResidue = !1,
        e.bSelectAlignResidue = !1
    },
    selectOneResid: function(e, t) {
        var i = this.icn3d
          , n = e.indexOf("$")
          , r = e.indexOf(".")
          , s = e.indexOf(":")
          , o = e.indexOf("@");
        -1 == o && (o = e.length);
        var a = e.substr(n + 1, r - n - 1)
          , l = e.substr(r + 1, s - r - 1)
          , d = e.substr(s + 1, o - s - 1)
          , c = a + "_" + l + "_" + d;
        for (var h in i.residues[c])
            t ? delete i.hAtoms[h] : i.hAtoms[h] = 1;
        return t ? delete this.selectedResidues[c] : this.selectedResidues[c] = 1,
        "$" + a + "." + l + ":" + d
    },
    openFullscreen: function(e) {
        this.icn3d;
        document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement || (e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen())
    },
    setIcn3dui: function(e) {
        var t = this
          , i = (t.icn3d,
        e.split("_"));
        return t.pre = i[0] + "_",
        void 0 !== window.icn3duiHash && window.icn3duiHash.hasOwnProperty(i[0]) && (t = window.icn3duiHash[i[0]]),
        t
    },
    exportStlFile: function(i) {
        var n = this
          , e = n.icn3d;
        void 0 !== e.biomtMatrices && 1 < e.biomtMatrices.length && e.bAssembly && (e.threshbox = 180 / Math.pow(e.biomtMatrices.length, .33),
        e.removeSurfaces(),
        e.applySurfaceOptions(),
        e.removeMaps(),
        e.applyMapOptions(),
        e.removeEmmaps(),
        e.applyEmmapOptions());
        var r = n.saveStlFile()
          , s = n.inputid ? n.inputid : "custom";
        if (n.saveFile(s + i + ".stl", "binary", r),
        void 0 !== e.biomtMatrices && 1 < e.biomtMatrices.length && e.bAssembly && Object.keys(e.dAtoms).length * e.biomtMatrices.length > e.maxAtoms3DMultiFile) {
            alert(e.biomtMatrices.length + " files will be generated for this assembly. Please merge these files using some software and 3D print the merged file.");
            var t = new THREE.Matrix4;
            t.identity();
            for (var o = 1, a = 0; a < e.biomtMatrices.length; a++) {
                var l = e.biomtMatrices[a];
                if (void 0 !== l && !l.equals(t)) {
                    var d = 100 * (a + 1);
                    setTimeout(function(e, t) {
                        r = n.saveStlFile(e),
                        n.saveFile(s + i + t + ".stl", "binary", r),
                        r = ""
                    }
                    .bind(this, l, o), d),
                    ++o
                }
            }
            e.threshbox = 180
        }
    },
    exportVrmlFile: function(i) {
        var n = this
          , e = n.icn3d;
        void 0 !== e.biomtMatrices && 1 < e.biomtMatrices.length && e.bAssembly && (e.threshbox = 180 / Math.pow(e.biomtMatrices.length, .33),
        e.removeSurfaces(),
        e.applySurfaceOptions(),
        e.removeMaps(),
        e.applyMapOptions(),
        e.removeEmmaps(),
        e.applyEmmapOptions());
        var r = n.saveVrmlFile()
          , s = n.inputid ? n.inputid : "custom";
        if (n.saveFile(s + i + ".vrml", "text", r),
        void 0 !== e.biomtMatrices && 1 < e.biomtMatrices.length && e.bAssembly && Object.keys(e.dAtoms).length * e.biomtMatrices.length > e.maxAtoms3DMultiFile) {
            alert(e.biomtMatrices.length + " files will be generated for this assembly. Please merge these files using some software and 3D print the merged file.");
            var t = new THREE.Matrix4;
            t.identity();
            for (var o = 1, a = 0; a < e.biomtMatrices.length; a++) {
                var l = e.biomtMatrices[a];
                if (void 0 !== l && !l.equals(t)) {
                    var d = 100 * (a + 1);
                    setTimeout(function(e, t) {
                        r = n.saveVrmlFile(e),
                        n.saveFile(s + i + t + ".vrml", "text", r),
                        r = ""
                    }
                    .bind(this, l, o), d),
                    ++o
                }
            }
            e.threshbox = 180
        }
    },
    replayon: function() {
        var e = this
          , t = e.icn3d;
        for (var i in e.CURRENTNUMBER = 0,
        e.bReplay = 1,
        $("#" + e.pre + "replay").show(),
        e.closeDialogs(),
        t.prevSurfaces = [],
        t.prevMaps = [],
        t.prevEmmaps = [],
        t.prevPhimaps = [],
        t.labels = {},
        t.lines = {},
        t.atoms)
            t.atoms[i].style2 = void 0;
        e.selectAll(),
        e.renderFinalStep(1);
        var n = e.CURRENTNUMBER
          , r = t.commands[n].indexOf(" | ")
          , s = t.commands[n].substr(0, r)
          , o = 20 < s.length ? s.substr(0, 20) + "..." : s
          , a = e.getMenuFromCmd(o);
        $("#" + e.pre + "replay_cmd").html("Cmd: " + o),
        $("#" + e.pre + "replay_menu").html("Menu: " + a)
    },
    replayoff: function() {
        this.icn3d;
        this.bReplay = 0,
        $("#" + this.pre + "replay").hide(),
        ++this.CURRENTNUMBER,
        this.execCommands(this.CURRENTNUMBER, this.STATENUMBER - 1, this.STATENUMBER)
    },
    selectProperty: function(e, t, i) {
        var n = this.icn3d
          , r = n.cloneHash(n.hAtoms);
        if ("positive" == e) {
            var s = ":r,k,h";
            n.hAtoms = {},
            this.selectBySpec(s, s, s)
        } else if ("negative" == e) {
            s = ":d,e";
            n.hAtoms = {},
            this.selectBySpec(s, s, s)
        } else if ("hydrophobic" == e) {
            s = ":w,f,y,l,i,c,m";
            n.hAtoms = {},
            this.selectBySpec(s, s, s)
        } else if ("polar" == e) {
            s = ":g,v,s,t,a,n,p,q";
            n.hAtoms = {},
            this.selectBySpec(s, s, s)
        } else if ("b factor" == e) {
            var o = n.cloneHash(n.calphas);
            for (var a in o = n.unionHash(o, n.nucleotidesO3),
            o = n.unionHash(o, n.chemicals),
            o = n.unionHash(o, n.ions),
            o = n.unionHash(o, n.water),
            n.hAtoms = {},
            o) {
                var l = n.atoms[a];
                l.b >= t && l.b <= i && (n.hAtoms = n.unionHash(n.hAtoms, n.residues[l.structure + "_" + l.chain + "_" + l.resi]))
            }
        } else if ("percent out" == e)
            for (var d in n.bCalcArea = !0,
            n.opts.surface = "solvent accessible surface",
            n.applySurfaceOptions(),
            n.bCalcArea = !1,
            n.hAtoms = {},
            n.resid2area) {
                var c = this.getIdArray(d);
                if (n.residueArea.hasOwnProperty(c[3])) {
                    var h = parseInt(n.resid2area[d] / n.residueArea[c[3]] * 100);
                    if (t <= h && h <= i) {
                        var p = c[0] + "_" + c[1] + "_" + c[2];
                        n.hAtoms = n.unionHash(n.hAtoms, n.residues[p])
                    }
                }
            }
        n.hAtoms = n.intHash(n.hAtoms, r),
        n.draw(),
        this.updateHlAll()
    },
    toggleMembrane: function() {
        var e = this.icn3d
          , t = Object.keys(e.structures)[0]
          , i = e.residues[t + "_MEM_1"]
          , n = e.getFirstAtomObj(i)
          , r = n.style;
        for (var s in e.dAtoms.hasOwnProperty(n.serial) || (e.dAtoms = e.unionHash(e.dAtoms, i),
        r = "nothing"),
        i) {
            var o = e.atoms[s];
            o.style = "nothing" !== r ? "nothing" : "stick"
        }
        e.draw()
    },
    setCustomFile: function(h) {
        var p = this
          , m = (p.icn3d,
        $("#" + p.pre + "customcolor_chainid").val())
          , e = $("#" + p.pre + "cstcolorfile")[0].files[0];
        if (e) {
            p.checkFileAPI();
            var t = new FileReader;
            t.onload = function(e) {
                var t = p.icn3d
                  , i = e.target.result.split("\n");
                void 0 === t.queryresi2score && (t.queryresi2score = {}),
                t.queryresi2score[m] = {};
                for (var n = 0, r = i.length; n < r; ++n)
                    if ("" !== i[n].trim()) {
                        var s = i[n].split(/\s+/);
                        t.queryresi2score[m][s[0]] = s[1]
                    }
                for (var o = Object.keys(t.queryresi2score[m]), a = Math.min.apply(null, o), l = Math.max.apply(null, o), d = "", c = a; c <= l; ++c)
                    t.queryresi2score[m].hasOwnProperty(c) ? d += Math.round(t.queryresi2score[m][c] / 11) : d += "_";
                "color" == h ? (t.opts.color = "align custom",
                t.setColorByOptions(t.opts, t.hAtoms),
                p.updateHlAll(),
                p.setLogCmd("custom tube | " + m + " | range " + a + "_" + l + " | " + d, !0)) : "tube" == h && (p.setStyle("proteins", "custom tube"),
                p.setLogCmd("color align custom | " + m + " | range " + a + "_" + l + " | " + d, !0)),
                t.draw()
            }
            ,
            t.readAsText(e)
        } else
            alert("Please select a file before clicking 'Load'")
    },
    setBackground: function(e) {
        this.icn3d;
        this.setOption("background", e),
        this.setLogCmd("set background " + e, !0);
        var t = "black" == e || "transparent" == e ? this.GREYD : "black";
        $("#" + this.pre + "title").css("color", t),
        $("#" + this.pre + "titlelink").css("color", t)
    },
    calculateArea: function() {
        var e = this.icn3d;
        e.bCalcArea = !0,
        e.opts.surface = "solvent accessible surface",
        e.applySurfaceOptions(),
        $("#" + this.pre + "areavalue").val(e.areavalue),
        $("#" + this.pre + "areatable").html(e.areahtml),
        this.openDlg("dl_area", "Surface area calculation"),
        e.bCalcArea = !1
    },
    hideHbondsContacts: function() {
        var e = this.icn3d
          , t = "set hbonds off";
        this.setLogCmd(t, !0),
        e.hideHbonds(),
        t = "set salt bridge off",
        this.setLogCmd(t, !0),
        e.hideSaltbridge(),
        t = "set contact off",
        this.setLogCmd(t, !0),
        e.hideContact(),
        t = "set halogen pi off",
        this.setLogCmd(t, !0),
        e.hideHalogenPi()
    },
    retrieveInteractionData: function() {
        var e = this.icn3d;
        if (!this.b2DShown)
            if (void 0 !== this.cfg.align) {
                var t = Object.keys(e.structures);
                this.set2DDiagramsForAlign(t[0].toUpperCase(), t[1].toUpperCase())
            } else if (void 0 !== this.cfg.chainalign) {
                2 == (t = Object.keys(e.structures)).length ? this.set2DDiagramsForAlign(t[1].toUpperCase(), t[0].toUpperCase()) : 1 == t.length && this.set2DDiagramsForAlign(t[0].toUpperCase(), t[0].toUpperCase())
            } else
                this.download2Ddgm(this.inputid.toUpperCase())
    },
    loadDsn6File: function(i) {
        var n = this
          , e = (n.icn3d,
        $("#" + n.pre + "dsn6file" + i)[0].files[0])
          , r = $("#" + n.pre + "dsn6sigma" + i).val();
        if (e) {
            n.checkFileAPI();
            var t = new FileReader;
            t.onload = function(e) {
                n.icn3d;
                var t = e.target.result;
                n.loadDsn6Data(t, i, r),
                "2fofc" == i ? n.bAjax2fofc = !0 : "fofc" == i && (n.bAjaxfofc = !0),
                n.setOption("map", i),
                n.setLogCmd("load dsn6 file " + $("#" + n.pre + "dsn6file" + i).val(), !1)
            }
            ,
            t.readAsArrayBuffer(e)
        } else
            alert("Please select a file before clicking 'Load'")
    },
    checkFileAPI: function() {
        this.icn3d;
        window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.")
    },
    loadDelphiFile: function(e) {
        var t = this.icn3d
          , i = $("#" + this.pre + "delphigsize").val()
          , n = $("#" + this.pre + "delphisalt").val()
          , r = "delphi2" == e ? $("#" + this.pre + "delphicontour2").val() : $("#" + this.pre + "delphicontour").val()
          , s = "delphi2" == e;
        this.CalcPhi(i, n, r, s);
        var o = "delphi2" == e ? "surface" : "map";
        s ? this.setLogCmd("set delphi " + o + " | contour " + r + " | gsize " + i + " | salt " + n + " | surface " + t.phisurftype + " | opacity " + t.phisurfop + " | wireframe " + t.phisurfwf, !0) : this.setLogCmd("set delphi " + o + " | contour " + r + " | gsize " + i + " | salt " + n, !0)
    },
    loadPhiFile: function(o) {
        var e, a = this;
        a.icn3d;
        "pqr" == o || "phi" == o || "cube" == o ? e = $("#" + a.pre + o + "file")[0].files[0] : "pqr2" == o ? e = $("#" + a.pre + "pqrfile2")[0].files[0] : "phi2" == o ? e = $("#" + a.pre + "phifile2")[0].files[0] : "cube2" == o && (e = $("#" + a.pre + "cubefile2")[0].files[0]);
        var l = "pqr" == o || "phi" == o || "cube" == o ? $("#" + a.pre + "phicontour").val() : $("#" + a.pre + "phicontour2").val();
        if (e) {
            a.checkFileAPI();
            var t = new FileReader;
            t.onload = function(e) {
                var t = a.icn3d
                  , i = e.target.result
                  , n = 0
                  , r = 0;
                if ("pqr" == o || "pqr2" == o) {
                    var s = "pqr2" == o;
                    n = $("#" + a.pre + o + "gsize").val(),
                    r = $("#" + a.pre + o + "salt").val(),
                    a.CalcPhi(n, r, l, s, i)
                } else if ("phi" == o || "phi2" == o) {
                    s = "phi2" == o;
                    a.loadPhiData(i, l, s)
                } else if ("cube" == o || "cube2" == o) {
                    s = "cube2" == o;
                    a.loadCubeData(i, l, s)
                }
                a.bAjaxPhi = !0,
                s ? a.setOption("phisurface", "phi") : a.setOption("phimap", "phi"),
                s ? a.setLogCmd("load phi " + o + " | contour " + l + " | file " + $("#" + a.pre + o + "file").val() + " | gsize " + n + " | salt " + r + " | surface " + t.phisurftype + " | opacity " + t.phisurfop + " | wireframe " + t.phisurfwf, !1) : a.setLogCmd("load phi " + o + " | contour " + l + " | file " + $("#" + a.pre + o + "file").val() + " | gsize " + n + " | salt " + r, !1)
            }
            ,
            "phi" == o || "phi2" == o ? t.readAsArrayBuffer(e) : t.readAsText(e)
        } else
            alert("Please select a file before clicking 'Load'")
    },
    loadPhiFileUrl: function(e) {
        var t, i = this, n = i.icn3d;
        "pqrurl" == e || "phiurl" == e || "cubeurl" == e ? t = $("#" + i.pre + e + "file").val() : "pqrurl2" == e ? t = $("#" + i.pre + "pqrurlfile2").val() : "phiurl2" == e ? t = $("#" + i.pre + "phiurlfile2").val() : "cubeurl2" == e && (t = $("#" + i.pre + "cubeurlfile2").val());
        var r = "pqrurl" == e || "phiurl" == e || "cubeurl" == e ? $("#" + i.pre + "phiurlcontour").val() : $("#" + i.pre + "phiurlcontour2").val();
        if (t) {
            var s = "pqrurl2" == e || "phiurl2" == e || "cubeurl2" == e
              , o = 0
              , a = 0;
            "pqrurl" == e || "pqrurl2" == e ? (o = $("#" + i.pre + e + "gsize").val(),
            a = $("#" + i.pre + e + "salt").val(),
            i.CalcPhiUrl(o, a, r, s, t)) : i.PhiParser(t, e, r, s),
            s ? i.setLogCmd("set phi " + e + " | contour " + r + " | url " + encodeURIComponent(t) + " | gsize " + o + " | salt " + a + " | surface " + n.phisurftype + " | opacity " + n.phisurfop + " | wireframe " + n.phisurfwf, !0) : i.setLogCmd("set phi " + e + " | contour " + r + " | url " + encodeURIComponent(t) + " | gsize " + o + " | salt " + a, !0)
        } else
            alert("Please input the file URL before clicking 'Load'")
    },
    loadDsn6FileUrl: function(e) {
        this.icn3d;
        var t = $("#" + this.pre + "dsn6fileurl" + e).val()
          , i = $("#" + this.pre + "dsn6sigmaurl" + e).val();
        t ? (this.Dsn6ParserBase(t, e, i),
        this.setLogCmd("set map " + e + " sigma " + i + " | " + encodeURIComponent(t), !0)) : alert("Please input the file URL before clicking 'Load'")
    },
    adjustMembrane: function(e, t) {
        var i = this.icn3d;
        for (var n in i.chains[this.inputid.toUpperCase() + "_MEM"]) {
            var r = i.atoms[n];
            "O" == r.name ? r.coord.z = e : "N" == r.name && (r.coord.z = t)
        }
        this.setTransmemInMenu(e, t, !0),
        this.updateHlMenus(),
        i.draw()
    },
    selectBtwPlanes: function(e, t) {
        var i = this.icn3d;
        if (e < t) {
            var n = t;
            t = e,
            e = n
        }
        var r = {};
        for (var s in i.atoms) {
            var o = i.atoms[s];
            if ("DUM" != o.resn)
                if (o.coord.z >= t && o.coord.z <= e)
                    r[o.structure + "_" + o.chain + "_" + o.resi] = 1
        }
        var a = "z_planes_" + e + "_" + t
          , l = a;
        this.selectResidueList(r, a, l, !1)
    },
    calcBuriedSurface: function(e, t) {
        var i = this.icn3d;
        if (0 == e.length)
            alert("Please select the first set");
        else {
            var n = i.cloneHash(i.hAtoms)
              , r = this.getAtomsFromNameArray(e)
              , s = this.getAtomsFromNameArray(t);
            i.bCalcArea = !0,
            i.opts.surface = "solvent accessible surface",
            i.hAtoms = i.cloneHash(r),
            i.applySurfaceOptions();
            var o = i.areavalue;
            i.hAtoms = i.cloneHash(s),
            i.applySurfaceOptions();
            var a = i.areavalue;
            i.hAtoms = i.unionHash(i.hAtoms, r),
            i.applySurfaceOptions();
            var l = i.areavalue;
            i.bCalcArea = !1,
            i.hAtoms = i.cloneHash(n);
            var d = (parseFloat(a) + parseFloat(o) - parseFloat(l)).toFixed(2)
              , c = "<br>Calculate solvent accessible surface area in the interface:<br><br>";
            c += "Set 1: " + e + ", Surface: " + o + " &#8491;<sup>2</sup><br>",
            c += "Set 2: " + t + ", Surface: " + a + " &#8491;<sup>2</sup><br>",
            c += "Total Surface: " + l + " &#8491;<sup>2</sup><br>",
            c += "<b>Buried Surface</b>: " + d + " &#8491;<sup>2</sup><br><br>",
            $("#" + this.pre + "dl_buriedarea").html(c),
            this.openDlg("dl_buriedarea", "Buried solvent accessible surface area in the interface"),
            this.setLogCmd("buried surface " + d, !1)
        }
    },
    showInteractions: function(e) {
        var t = this
          , i = (t.icn3d,
        $("#" + t.pre + "atomsCustomHbond").val())
          , n = $("#" + t.pre + "atomsCustomHbond2").val();
        if (0 == n.length)
            alert("Please select the first set");
        else {
            t.setMode("selection");
            var r = $("#" + t.pre + "analysis_hbond")[0].checked
              , s = $("#" + t.pre + "analysis_saltbridge")[0].checked
              , o = $("#" + t.pre + "analysis_contact")[0].checked
              , a = $("#" + t.pre + "analysis_halogen")[0].checked
              , l = $("#" + t.pre + "analysis_pication")[0].checked
              , d = $("#" + t.pre + "analysis_pistacking")[0].checked
              , c = "threshold " + $("#" + t.pre + "hbondthreshold").val() + " " + $("#" + t.pre + "saltbridgethreshold").val() + " " + $("#" + t.pre + "contactthreshold").val() + " " + $("#" + t.pre + "halogenthreshold").val() + " " + $("#" + t.pre + "picationthreshold").val() + " " + $("#" + t.pre + "pistackingthreshold").val()
              , h = t.viewInteractionPairs(n, i, t.bHbondCalc, e, r, s, o, a, l, d)
              , p = t.bHbondCalc ? "true" : "false"
              , m = n + " " + i + " | " + h + " | " + p + " | " + c;
            if ("3d" == e)
                t.setLogCmd("display interaction 3d | " + m, !0);
            else if ("view" == e)
                t.setLogCmd("view interaction pairs | " + m, !0);
            else if ("save1" == e)
                t.setLogCmd("save1 interaction pairs | " + m, !0);
            else if ("save2" == e)
                t.setLogCmd("save2 interaction pairs | " + m, !0);
            else if ("linegraph" == e)
                t.setLogCmd("line graph interaction pairs | " + m, !0);
            else if ("scatterplot" == e)
                t.setLogCmd("scatterplot interaction pairs | " + m, !0);
            else if ("graph" == e) {
                var u = parseInt($("#" + t.pre + "dist_ss").val())
                  , f = parseInt($("#" + t.pre + "dist_coil").val())
                  , g = parseInt($("#" + t.pre + "dist_hbond").val())
                  , v = parseInt($("#" + t.pre + "dist_inter").val())
                  , b = parseInt($("#" + t.pre + "dist_ssbond").val())
                  , y = parseInt($("#" + t.pre + "dist_ionic").val())
                  , C = parseInt($("#" + t.pre + "dist_halogen").val())
                  , _ = parseInt($("#" + t.pre + "dist_pication").val())
                  , S = parseInt($("#" + t.pre + "dist_pistacking").val());
                t.setLogCmd("graph interaction pairs | " + n + " " + i + " | " + h + " | " + p + " | " + c + " | " + u + " " + f + " " + g + " " + v + " " + b + " " + y + " " + C + " " + _ + " " + S, !0)
            }
            t.bHbondCalc = !0
        }
    },
    handleForce: function() {
        var e = this;
        e.icn3d;
        0 == e.force && void 0 !== e.simulation ? (e.simulation.stop(),
        e.simulation.force("charge", null),
        e.simulation.force("x", null),
        e.simulation.force("y", null),
        e.simulation.force("r", null),
        e.simulation.force("link", null)) : e.drawGraph(e.graphStr, e.pre + "dl_graph")
    },
    resetInteractionPairs: function() {
        var e = this.icn3d;
        this.bHbondCalc = !1,
        this.hideHbondsContacts(),
        this.clearHighlight(),
        e.resids2inter = {},
        e.resids2interAll = {}
    },
    viewInteractionPairs: function(e, t, i, n, r, s, o, a, l, d) {
        var c = this
          , h = c.icn3d;
        h.bRender = !1;
        var p, m = {}, u = h.cloneHash(h.hAtoms), f = c.getAtomsFromNameArray(e), g = c.getAtomsFromNameArray(t), v = 0, b = 0;
        for (var y in h.structures) {
            for (var C = 0, _ = h.structures[y].length; C < _; ++C) {
                var S = h.structures[y][C];
                for (var w in h.chains[S])
                    if (f.hasOwnProperty(w) || g.hasOwnProperty(w)) {
                        ++v,
                        0;
                        break
                    }
            }
            ++b
        }
        p = 1 < b ? "structure" : 1 < v ? "chain" : "residue";
        var A = [];
        if (r && A.push("hbonds"),
        s && A.push("salt bridge"),
        o && A.push("interactions"),
        a && A.push("halogen"),
        l && A.push("pi-cation"),
        d && A.push("pi-stacking"),
        i || (h.resids2inter = {},
        h.resids2interAll = {}),
        s) {
            var x = parseFloat($("#" + c.pre + "saltbridgethreshold").val());
            i || (h.hAtoms = h.cloneHash(u),
            c.showIonicInteractions(x, e, t, i, !0, n)),
            m = h.unionHash(m, h.hAtoms)
        }
        if (r) {
            x = parseFloat($("#" + c.pre + "hbondthreshold").val());
            i || (h.hAtoms = h.cloneHash(u),
            c.showHbonds(x, e, t, i, void 0, n)),
            m = h.unionHash(m, h.hAtoms)
        }
        var k, D, O = "";
        if (r && (O += c.exportHbondPairs(n, p)),
        s && (O += c.exportSaltbridgePairs(n, p)),
        a) {
            x = parseFloat($("#" + c.pre + "halogenthreshold").val());
            i || (h.hAtoms = h.cloneHash(u),
            c.showHalogenPi(x, e, t, i, n, "halogen")),
            m = h.unionHash(m, h.hAtoms),
            O += c.exportHalogenPiPairs(n, p, "halogen")
        }
        if (l) {
            x = parseFloat($("#" + c.pre + "picationthreshold").val());
            i || (h.hAtoms = h.cloneHash(u),
            c.showHalogenPi(x, e, t, i, n, "pi-cation")),
            m = h.unionHash(m, h.hAtoms),
            O += c.exportHalogenPiPairs(n, p, "pi-cation")
        }
        if (d) {
            x = parseFloat($("#" + c.pre + "pistackingthreshold").val());
            i || (h.hAtoms = h.cloneHash(u),
            c.showHalogenPi(x, e, t, i, n, "pi-stacking")),
            m = h.unionHash(m, h.hAtoms),
            O += c.exportHalogenPiPairs(n, p, "pi-stacking")
        }
        if (o) {
            x = parseFloat($("#" + c.pre + "contactthreshold").val());
            if (1 != e.length || 1 != t.length || e[0] != t[0])
                i || (h.hAtoms = h.cloneHash(u),
                c.pickCustomSphere(x, e, t, i, !0, n)),
                m = h.unionHash(m, h.hAtoms),
                O += c.exportSpherePairs(!0, n, p);
            else {
                if (!i) {
                    var R = []
                      , T = ""
                      , E = ""
                      , I = {};
                    for (var C in f) {
                        var H = h.atoms[C];
                        H.ss == T && H.chain == E || (0 < Object.keys(I).length && R.push(I),
                        I = {}),
                        I[H.serial] = 1,
                        T = H.ss,
                        E = H.chain
                    }
                    0 < Object.keys(I).length && R.push(I);
                    var L = R.length;
                    D = "interactions " + x + " | sets " + e + " " + t + " | true",
                    h.opts.contact = "yes";
                    var P = {}
                      , F = {};
                    for (C = 0; C < L; ++C)
                        for (var M = C + 1; M < L; ++M) {
                            h.hAtoms = h.cloneHash(u);
                            var N = c.pickCustomSphere_base(x, R[C], R[M], i, !0, n, D, !0);
                            for (var z in P = h.unionHash(P, N.residues),
                            N.resid2Residhash)
                                F[z] = h.unionHash(F[z], N.resid2Residhash[z])
                        }
                    c.resid2ResidhashInteractions = F;
                    var q, j, U = Object.keys(P);
                    h.hAtoms = {};
                    for (var B = 0, G = U.length; B < G; ++B) {
                        var V = U[B];
                        for (var C in h.residues[V])
                            h.hAtoms[C] = 1
                    }
                    var W = h.getFirstAtomObj(P);
                    void 0 !== W && (q = "sphere." + W.chain + ":" + h.residueName2Abbr(W.resn.substr(0, 3)).trim() + W.resi + "-" + radius + "A",
                    o && (q = "interactions." + W.chain + ":" + h.residueName2Abbr(W.resn.substr(0, 3)).trim() + W.resi + "-" + $("#" + c.pre + "contactthreshold").val() + "A"),
                    j = q,
                    c.addCustomSelection(U, q, j, D, !0)),
                    c.saveSelectionIfSelected(),
                    h.draw()
                }
                m = h.unionHash(m, h.hAtoms),
                O += c.exportSpherePairs(!0, n, p)
            }
        }
        h.hAtoms = h.cloneHash(m),
        h.bRender = !0,
        h.draw(),
        k = h.getResiduesFromAtoms(m),
        D = "select " + c.residueids2spec(Object.keys(k)),
        j = q = "interface_all",
        c.addCustomSelection(Object.keys(k), q, j, D, !0);
        var Y = h.intHash(m, f);
        k = h.getResiduesFromAtoms(Y),
        D = "select " + c.residueids2spec(Object.keys(k)),
        j = q = "interface_1",
        c.addCustomSelection(Object.keys(k), q, j, D, !0);
        var X = h.intHash(m, g);
        k = h.getResiduesFromAtoms(X),
        D = "select " + c.residueids2spec(Object.keys(k)),
        j = q = "interface_2",
        c.addCustomSelection(Object.keys(k), q, j, D, !0);
        var Q = '<div style="text-align:center"><b>' + A.join(", ") + " between Two Sets:</b><br>"
          , Z = c.atoms2residues(Object.keys(f))
          , K = c.atoms2residues(Object.keys(g))
          , J = "select " + c.residueids2spec(Z)
          , ee = "select " + c.residueids2spec(K);
        Q += "Set 1: " + e + ' <button class="' + c.pre + 'selset" cmd="' + J + '">Highlight in 3D</button><br>',
        Q += "Set 2: " + t + ' <button class="' + c.pre + 'selset" cmd="' + ee + '">Highlight in 3D</button><br><br></div>',
        Q += '<div style="text-align:center"><b>The interfaces are:</b><br>';
        var te = c.atoms2residues(Object.keys(Y))
          , ie = c.atoms2residues(Object.keys(X))
          , ne = "select " + c.residueids2spec(te)
          , re = "select " + c.residueids2spec(ie);
        Q += 'interface_1 <button class="' + c.pre + 'selset" cmd="' + ne + '">Highlight in 3D</button><br>',
        Q += 'interface_2 <button class="' + c.pre + 'selset" cmd="' + re + '">Highlight in 3D</button><br><br></div>';
        var se = Q += '<div><b>Note</b>: Each checkbox below selects the corresponding residue. You can click "Save Selection" in the "Select" menu to save the selection and click on "Highlight" button to clear the checkboxes.</div><br>';
        if ("graph" != n && "linegraph" != n && "scatterplot" != n || (Q = ""),
        Q += O,
        "save1" == n || "save2" == n) {
            Q = se;
            var oe = "";
            "save1" == n ? oe = "Set 1" : "save2" == n && (oe = "Set 2"),
            Q += '<div style="text-align:center"><br><b>Interactions Sorted on ' + oe + '</b>: <button class="' + c.pre + 'showintercntonly" style="margin-left:20px">Show Count Only</button><button class="' + c.pre + 'showinterdetails" style="margin-left:20px">Show Details</button></div>',
            Q += c.getAllInteractionTable(n),
            $("#" + c.pre + "dl_interactionsorted").html(Q),
            c.openDlg("dl_interactionsorted", "Show sorted interactions")
        } else if ("view" == n)
            $("#" + c.pre + "dl_allinteraction").html(Q),
            c.openDlg("dl_allinteraction", "Show interactions");
        else if ("linegraph" == n) {
            c.openDlg("dl_linegraph", "Show interactions between two lines of residue nodes");
            c.graphStr = c.getGraphData(f, g, e, t, Q, p),
            c.bLinegraph = !0;
            var ae = c.drawLineGraph(c.graphStr);
            $("#" + c.pre + "linegraphDiv").html(ae)
        } else if ("scatterplot" == n) {
            c.openDlg("dl_scatterplot", "Show interactions as scatterplot");
            c.graphStr = c.getGraphData(f, g, e, t, Q, p),
            c.bScatterplot = !0;
            ae = c.drawLineGraph(c.graphStr, !0);
            $("#" + c.pre + "scatterplotDiv").html(ae)
        } else if ("graph" == n)
            if (c.graphStr = c.getGraphData(f, g, e, t, Q, p),
            c.bGraph = !0,
            Object.keys(g).length + Object.keys(f).length > Object.keys(h.dAtoms).length && (c.graphStr = c.getGraphDataForDisplayed()),
            void 0 === c.bD3) {
                $.ajax({
                    url: "https://d3js.org/d3.v4.min.js",
                    dataType: "script",
                    cache: !0,
                    tryCount: 0,
                    retryLimit: 1,
                    success: function(e) {
                        $.ajax({
                            url: "https://www.ncbi.nlm.nih.gov/Structure/icn3d/script/graph_d3v4.min.js",
                            dataType: "script",
                            cache: !0,
                            tryCount: 0,
                            retryLimit: 1,
                            success: function(e) {
                                c.bD3 = !0,
                                $("#" + c.svgid).empty(),
                                c.openDlg("dl_graph", "Force-directed graph"),
                                c.drawGraph(c.graphStr, c.pre + "dl_graph"),
                                void 0 !== c.deferredGraphinteraction && c.deferredGraphinteraction.resolve()
                            },
                            error: function(e, t, i) {
                                this.tryCount++,
                                this.tryCount <= this.retryLimit ? $.ajax(this) : void 0 !== c.deferredGraphinteraction && c.deferredGraphinteraction.resolve()
                            }
                        })
                    },
                    error: function(e, t, i) {
                        this.tryCount++,
                        this.tryCount <= this.retryLimit ? $.ajax(this) : void 0 !== c.deferredGraphinteraction && c.deferredGraphinteraction.resolve()
                    }
                })
            } else
                $("#" + c.svgid).empty(),
                c.openDlg("dl_graph", "Force-directed graph"),
                c.drawGraph(c.graphStr, c.pre + "dl_graph");
        return A.toString()
    },
    clearInteractions: function() {
        var e = this.icn3d;
        e.lines.hbond = [],
        e.hbondpnts = [],
        e.lines.saltbridge = [],
        e.saltbridgepnts = [],
        e.lines.contact = [],
        e.contactpnts = [],
        e.lines.halogen = [],
        e.lines["pi-cation"] = [],
        e.lines["pi-stacking"] = [],
        e.halogenpnts = [],
        e.picationpnts = [],
        e.pistackingpnts = []
    },
    getIdArray: function(e) {
        this.icn3d;
        var t = []
          , i = e.indexOf("_")
          , n = e.lastIndexOf("_");
        return t.push(e.substr(0, i)),
        t.push(e.substr(i + 1, n - i - 1)),
        t.push(e.substr(n + 1)),
        t
    },
    compResid: function(e, t, i) {
        this.icn3d;
        var n, r, s = e.split(","), o = t.split(",");
        "save1" == i ? (n = this.getIdArray(s[0]),
        r = this.getIdArray(o[0])) : "save2" == i && (n = this.getIdArray(s[1]),
        r = this.getIdArray(o[1]));
        var a = n[0] + "_" + n[1]
          , l = r[0] + "_" + r[1]
          , d = parseInt(n[2])
          , c = parseInt(r[2]);
        return l < a ? 1 : a < l ? -1 : a == l ? c < d ? 1 : d < c ? -1 : 0 : void 0
    },
    getAllInteractionTable: function(i) {
        var n = this
          , e = n.icn3d
          , t = Object.keys(e.resids2inter);
        "save1" == i ? t.sort(function(e, t) {
            return n.compResid(e, t, i)
        }) : "save2" == i && t.sort(function(e, t) {
            return n.compResid(e, t, i)
        });
        for (var r = tmpText = "", s = "", o = "", a = "", l = "", d = "", c = "", h = "", p = 0, m = 0, u = 0, f = 0, g = 0, v = 0, b = 0, y = t.length; b < y; ++b) {
            var C, _, S = t[b], w = S.split(","), A = "save1" == i ? w[0] : w[1], x = ("save1" == i ? w[1] : w[0],
            A.split("_"));
            0 < b && A != r && (tmpText += n.getInteractionPerResidue(s, o, a, l, d, c, h, p, m, u, f, g, v),
            h = c = d = l = a = o = "",
            v = g = f = u = m = p = 0),
            C = e.resids2inter[S].hbond,
            o += (_ = n.getInteractionPairDetails(C, i, "hbond")).html,
            p += _.cnt,
            C = e.resids2inter[S].ionic,
            a += (_ = n.getInteractionPairDetails(C, i, "ionic")).html,
            m += _.cnt,
            C = e.resids2inter[S].contact,
            l += (_ = n.getContactPairDetails(C, i, "contact")).html,
            u += _.cnt,
            C = e.resids2inter[S].halogen,
            d += (_ = n.getInteractionPairDetails(C, i, "halogen")).html,
            f += _.cnt,
            C = e.resids2inter[S]["pi-cation"],
            c += (_ = n.getInteractionPairDetails(C, i, "pi-cation")).html,
            g += _.cnt,
            C = e.resids2inter[S]["pi-stacking"],
            h += (_ = n.getInteractionPairDetails(C, i, "pi-stacking")).html,
            v += _.cnt,
            r = A,
            s = x
        }
        tmpText += n.getInteractionPerResidue(s, o, a, l, d, c, h, p, m, u, f, g, v);
        var k = "";
        if (0 < t.length) {
            k += '<br><table class="icn3d-sticky" align=center border=1 cellpadding=10 cellspacing=0><thead>',
            k += "<tr><th rowspan=2>Residue</th><th rowspan=2># Hydrogen<br>Bond</th><th rowspan=2># Salt Bridge<br>/Ionic Interaction</th><th rowspan=2># Contact</th>",
            k += "<th rowspan=2># Halogen<br>Bond</th><th rowspan=2># &pi;-Cation</th><th rowspan=2># &pi;-Stacking</th>",
            k += "<th>Hydrogen Bond</th><th>Salt Bridge/Ionic Interaction</th><th>Contact</th>",
            k += "<th>Halogen Bond</th><th>&pi;-Cation</th><th>&pi;-Stacking</th></tr>",
            k += "<tr>";
            var D = '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td>Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>';
            k += D,
            k += D,
            k += '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td># Contacts</td><td>Min Distance (&#8491;)</td><td>C-alpha Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>',
            k += D,
            k += D,
            k += D,
            k += "</tr>",
            k += "</thead><tbody>",
            k += tmpText,
            k += "</tbody></table><br/>"
        }
        return k
    },
    getInteractionPerResidue: function(e, t, i, n, r, s, o, a, l, d, c, h, p) {
        this.icn3d;
        var m = "";
        m += '<tr align="center"><th>' + e[3] + e[2] + "</th><td>" + a + "</td><td>" + l + "</td><td>" + d + "</td><td>" + c + "</td><td>" + h + "</td><td>" + p + "</td>";
        var u = [t, i, n, r, s, o];
        for (var f in u) {
            m += '<td valign="top"><table width="100%" class="icn3d-border">' + u[f] + "</table></td>"
        }
        return m += "</tr>"
    },
    getInteractionPairDetails: function(e, t, i) {
        var n = this.icn3d
          , r = ""
          , s = 0
          , o = ' <span style="background-color:#'
          , a = '">&nbsp;&nbsp;&nbsp;</span>';
        if (void 0 !== e)
            for (var l in e) {
                var d = l.split(",")
                  , c = "save1" == t ? d[0] : d[1]
                  , h = "save1" == t ? d[1] : d[0]
                  , p = this.convertLabel2Resid(c)
                  , m = n.getFirstAtomObj(n.residues[p]).color.getHexString()
                  , u = this.convertLabel2Resid(h)
                  , f = n.getFirstAtomObj(n.residues[u]).color.getHexString()
                  , g = Math.sqrt(e[l]).toFixed(1);
                r += '<tr><td><span style="white-space:nowrap"><input type="checkbox" class="' + this.pre + 'seloneres" id="' + this.pre + i + "2_" + s + 'a" resid="' + c + '"/> ' + c + o + m + a + '</span></td><td><span style="white-space:nowrap"><input type="checkbox" class="' + this.pre + 'seloneres" id="' + this.pre + i + "2_" + s + 'b" resid="' + h + '"/> ' + h + o + f + a + '</span></td><td align="center">' + g + "</td>",
                r += '<td align="center"><button class="' + this.pre + 'selres" resid="' + c + "|" + h + '">Highlight</button></td>',
                r += "</tr>",
                ++s
            }
        return {
            html: r,
            cnt: s
        }
    },
    getContactPairDetails: function(e, t) {
        var i = this.icn3d
          , n = ""
          , r = 0
          , s = ' <span style="background-color:#'
          , o = '">&nbsp;&nbsp;&nbsp;</span>';
        if (void 0 !== e)
            for (var a in e) {
                var l = a.split(",")
                  , d = "save1" == t ? l[0] : l[1]
                  , c = "save1" == t ? l[1] : l[0]
                  , h = this.convertLabel2Resid(d)
                  , p = i.getFirstAtomObj(i.residues[h]).color.getHexString()
                  , m = this.convertLabel2Resid(c)
                  , u = i.getFirstAtomObj(i.residues[m]).color.getHexString()
                  , f = e[a].split("_")
                  , g = f[0]
                  , v = f[1]
                  , b = f[2]
                  , y = f[3]
                  , C = f[4];
                n += '<tr><td><span style="white-space:nowrap"><input type="checkbox" class="' + this.pre + 'seloneres" id="' + this.pre + "inter2_" + r + 'a" resid="' + d + '"/> ' + d + "@" + b + s + p + o + '</span></td><td><span style="white-space:nowrap"><input type="checkbox" class="' + this.pre + 'seloneres" id="' + this.pre + "inter2_" + r + 'b" resid="' + c + '"/> ' + c + "@" + y + s + u + o + '</span></td><td align="center">' + C + '</td><td align="center">' + g + '</td><td align="center">' + v + "</td>",
                n += '<td align="center"><button class="' + this.pre + 'selres" resid="' + d + "|" + c + '">Highlight</button></td>',
                n += "</tr>",
                r += parseInt(C)
            }
        return {
            html: n,
            cnt: r
        }
    },
    getGraphData: function(e, t, i, n, r, s) {
        for (var o, a, l, d = this, c = d.icn3d, h = d.getNodesLinksForSet(e, s, "a"), p = d.getNodesLinksForSet(t, s, "b"), m = [], u = {}, f = 0, g = 0, v = (l = h.node.concat(p.node)).length; g < v; ++g) {
            var b = l[g]
              , y = JSON.parse(b);
            if (u.hasOwnProperty(y.id))
                m[u[y.id]].s = "ab";
            else
                m.push(y),
                u[y.id] = f,
                ++f
        }
        var C = [];
        for (g = 0,
        v = m.length; g < v; ++g) {
            y = m[g];
            C.push(JSON.stringify(y))
        }
        o = C.join(", "),
        a = h.link.concat(p.link).join(", ");
        var _ = c.unionHash(c.cloneHash(t), e)
          , S = ""
          , w = ""
          , A = ""
          , x = ""
          , k = ""
          , D = "";
        for (var O in 1 == i.length && 1 == n.length && i[0] == n[0] || (S += d.getHbondLinksForSet(e, s),
        S += d.getHbondLinksForSet(t, s)),
        1 == i.length && 1 == n.length && i[0] == n[0] || (w += d.getIonicLinksForSet(e, s),
        w += d.getIonicLinksForSet(t, s)),
        1 == i.length && 1 == n.length && i[0] == n[0] || (A += d.getHalogenPiLinksForSet(e, s),
        A += d.getHalogenPiLinksForSet(t, s)),
        1 == i.length && 1 == n.length && i[0] == n[0] || (x += d.getContactLinksForSet(e, s),
        x += d.getContactLinksForSet(t, s)),
        c.ssbondpnts)
            for (g = 0,
            v = c.ssbondpnts[O].length; g < v; g += 2) {
                var R = c.ssbondpnts[O][g]
                  , T = c.ssbondpnts[O][g + 1]
                  , E = c.getFirstAtomObj(c.residues[R])
                  , I = c.getFirstAtomObj(c.residues[T]);
                if (_.hasOwnProperty(E.serial) && _.hasOwnProperty(I.serial)) {
                    var H = c.residueName2Abbr(E.resn) + E.resi;
                    "chain" != s && "structure" != s || (H += "." + E.chain),
                    "structure" == s && (H += "." + E.structure);
                    var L = c.residueName2Abbr(I.resn) + I.resi;
                    "chain" != s && "structure" != s || (L += "." + I.chain),
                    "structure" == s && (L += "." + I.structure),
                    k += ', {"source": "' + H + '", "target": "' + L + '", "v": ' + d.ssbondValue + ', "c": "' + d.ssbondColor + '"}'
                }
            }
        for (var O in c.clbondpnts)
            for (g = 0,
            v = c.clbondpnts[O].length; g < v; g += 2) {
                R = c.clbondpnts[O][g],
                T = c.clbondpnts[O][g + 1],
                E = c.getFirstAtomObj(c.residues[R]),
                I = c.getFirstAtomObj(c.residues[T]);
                if (_.hasOwnProperty(E.serial) && _.hasOwnProperty(I.serial)) {
                    H = c.residueName2Abbr(E.resn) + E.resi;
                    "chain" != s && "structure" != s || (H += "." + E.chain),
                    "structure" == s && (H += "." + E.structure);
                    L = c.residueName2Abbr(I.resn) + I.resi;
                    "chain" != s && "structure" != s || (L += "." + I.chain),
                    "structure" == s && (L += "." + I.structure),
                    D += ', {"source": "' + H + '", "target": "' + L + '", "v": ' + d.clbondValue + ', "c": "' + d.clbondColor + '"}'
                }
            }
        var $ = '{"nodes": [' + o + '], "links": [';
        return $ += a + r + k + D + x + S + w + A,
        $ += "]}"
    },
    drawResNode: function(e, t, i, n, r, s, o, a) {
        var l, d = this.icn3d, c = e.r.substr(4);
        l = a ? r - t * (i + n) : r + t * (i + n);
        d.getFirstAtomObj(d.residues[c]);
        var h = "#" + e.c.toUpperCase()
          , p = (d.hColor.getHexString().toUpperCase(),
        e.id.indexOf("."))
          , m = -1 == p ? e.id : e.id.substr(0, p)
          , u = "a" == o ? -7 : 10;
        t % 2 == 1 && (u = "a" == o ? u - 7 : u + 7);
        var f = "<g class='icn3d-node' resid='" + c + "' >";
        return f += "<title>" + e.id + "</title>",
        a ? (f += "<circle cx='" + s + "' cy='" + l + "' r='" + i + "' fill='" + h + "' stroke-width='1' stroke='#000' resid='" + c + "' />",
        f += "<text x='" + (s - 20).toString() + "' y='" + (l + 2).toString() + "' fill='#000' stroke='none' style='font-size:6; text-anchor:middle' >" + m + "</text>") : (f += "<circle cx='" + l + "' cy='" + s + "' r='" + i + "' fill='" + h + "' stroke-width='1' stroke='#000' resid='" + c + "' />",
        f += "<text x='" + (l + 0).toString() + "' y='" + (s + u).toString() + "' fill='#000' stroke='none' style='font-size:6; text-anchor:middle' >" + m + "</text>"),
        f += "</g>"
    },
    getNodeTopBottom: function(e, t, i) {
        var n = this
          , r = (n.icn3d,
        [])
          , s = [];
        for (var o in e) {
            var a = t[o];
            a && ("a" == a.s ? r.push(a) : "b" == a.s ? s.push(a) : "ab" == a.s && (r.push(a),
            s.push(a)))
        }
        return r.sort(function(e, t) {
            return n.compNode(e, t)
        }),
        s.sort(function(e, t) {
            return n.compNode(e, t, i)
        }),
        {
            nodeArray1: r,
            nodeArray2: s
        }
    },
    updateGraphJson: function(e, t, i, n, r) {
        this.icn3d;
        var s = "";
        return s += '"structure' + t + '": {"id": "' + e + '", "nodes1":[',
        s += this.getJSONFromArray(i),
        s += '], \n"nodes2":[',
        s += this.getJSONFromArray(n),
        s += '], \n"links":[',
        s += this.getJSONFromArray(r),
        s += "]}"
    },
    drawLineGraph: function(e, t) {
        for (var i, n, r, s = this, o = s.icn3d, a = JSON.parse(e), l = [], d = {}, c = 0, h = a.nodes.length; c < h; ++c) {
            var p = a.nodes[c];
            d[p.id] = p
        }
        var m = {};
        for (c = 0,
        h = a.links.length; c < h; ++c) {
            (R = a.links[c]).v != s.hbondValue && R.v != s.ionicValue && R.v != s.halogenValue && R.v != s.picationValue && R.v != s.pistackingValue && R.v != s.contactValue || (l.push(R),
            m[R.source] = 1,
            m[R.target] = 1)
        }
        var u = s.getNodeTopBottom(m, d);
        if (n = u.nodeArray1,
        r = u.nodeArray2,
        s.lineGraphStr = "{\n",
        1 < Object.keys(o.structures).length) {
            var f, g, v, b, y, C, _ = Object.keys(o.structures)[0], S = Object.keys(o.structures)[1], w = [], A = [], x = [], k = {}, D = {}, O = {};
            for (c = 0,
            h = l.length; c < h; ++c) {
                var R, T = d[(R = l[c]).source], E = d[R.target], I = [];
                I.push(""),
                I.push("");
                var H = T.r.substr(4);
                I = I.concat(s.getIdArray(H));
                var L = [];
                L.push(""),
                L.push(""),
                H = E.r.substr(4),
                L = L.concat(s.getIdArray(H)),
                I[2] == _ && L[2] == _ ? (w.push(R),
                k[R.source] = 1,
                k[R.target] = 1) : I[2] == S && L[2] == S ? (A.push(R),
                D[R.source] = 1,
                D[R.target] = 1) : (x.push(R),
                O[R.source] = 1,
                O[R.target] = 1)
            }
            var P = s.getNodeTopBottom(k, d);
            f = P.nodeArray1,
            g = P.nodeArray2;
            var F = s.getNodeTopBottom(D, d);
            v = F.nodeArray1,
            b = F.nodeArray2;
            var M = s.getNodeTopBottom(O, d, !0);
            y = M.nodeArray1,
            C = M.nodeArray2;
            var N = f.length
              , z = g.length
              , q = v.length
              , j = b.length
              , U = y.length
              , B = C.length
              , G = Math.max(N, z, q, j, U, B)
              , V = [];
            0 < w.length && V.push(_),
            0 < A.length && V.push(S),
            0 < x.length && V.push(_ + "_" + S);
            var W = 3 * (ne = 1)
              , Y = 7 * ne
              , X = 10
              , Q = 10
              , Z = 30;
            oe = t ? (J = (N + 2 + q + 2) * (W + Y) + 4 * Q + 2 * Z,
            (Math.max(z, j) + 2) * (W + Y) + 2 * X + Z) : (J = (se = 110) * V.length,
            G * (W + Y) + 2 * X),
            ee = t ? (s.scatterplotWidth = 2 * oe,
            te = s.scatterplotWidth,
            s.scatterplotid) : (s.linegraphWidth = 2 * oe,
            te = s.linegraphWidth,
            s.linegraphid),
            i = 0 == V.length ? "No interactions found for each structure<br><br>" : "2D integration graph for structure(s) <b>" + V + "</b><br><br>",
            i += "<svg id='" + ee + "' viewBox='0,0," + oe + "," + J + "' width='" + te + "px'>";
            var K = 0;
            0 < w.length && (t ? (K -= 15,
            i += s.drawScatterplot_base(f, g, w, d, K),
            K = 15,
            se = (N + 1) * (W + Y) + 2 * Q) : i += s.drawLineGraph_base(f, g, w, d, K),
            K += se,
            s.lineGraphStr += s.updateGraphJson(_, 1, f, g, w)),
            0 < A.length && (t ? (i += s.drawScatterplot_base(v, b, A, d, K),
            se = (q + 1) * (W + Y) + 2 * Q) : i += s.drawLineGraph_base(v, b, A, d, K),
            K += se,
            0 < w.length && (s.lineGraphStr += ", \n"),
            s.lineGraphStr += s.updateGraphJson(S, 2, v, b, A)),
            0 < x.length && !t && (i += s.drawLineGraph_base(y, C, x, d, K),
            (0 < w.length || 0 < A.length) && (s.lineGraphStr += ", \n"),
            s.lineGraphStr += '"structure1_2": {"id1": "' + _ + '", "id2": "' + S + '", "nodes1":[',
            s.lineGraphStr += s.getJSONFromArray(y),
            s.lineGraphStr += '], \n"nodes2":[',
            s.lineGraphStr += s.getJSONFromArray(C),
            s.lineGraphStr += '], \n"links":[',
            s.lineGraphStr += s.getJSONFromArray(x),
            s.lineGraphStr += "]}"),
            i += "</svg>"
        } else if (t) {
            var J, ee, te;
            _ = Object.keys(o.structures)[0];
            J = ((re = n.length) + 2) * ((W = 3 * (ne = 1)) + (Y = 7 * ne)) + 2 * (Q = 10) + (Z = 30),
            oe = ((ie = r.length) + 2) * (W + Y) + 2 * (X = 10) + Z,
            s.scatterplotWidth = 2 * oe,
            te = s.scatterplotWidth,
            ee = s.scatterplotid,
            i = 0 < l.length ? "" : "No interactions found for these two sets<br><br>",
            i += "<svg id='" + ee + "' viewBox='0,0," + oe + "," + J + "' width='" + te + "px'>",
            i += s.drawScatterplot_base(n, r, l, d, 0),
            s.lineGraphStr += s.updateGraphJson(_, 1, n, r, l),
            i += "</svg>"
        } else {
            var ie, ne, _ = Object.keys(o.structures)[0], re = n.length, W = 3 * (ne = 1), Y = 7 * ne, se = 110, oe = (ie = r.length) < re ? re * (W + Y) + 20 : ie * (W + Y) + 20;
            s.linegraphWidth = 2 * oe,
            i = 0 < l.length ? "" : "No interactions found for these two sets<br><br>",
            i += "<svg id='" + s.linegraphid + "' viewBox='0,0," + oe + "," + se + "' width='" + s.linegraphWidth + "px'>",
            i += s.drawLineGraph_base(n, r, l, d, 0),
            s.lineGraphStr += s.updateGraphJson(_, 1, n, r, l),
            i += "</svg>"
        }
        return s.lineGraphStr += "}\n",
        s.scatterplotStr = s.lineGraphStr,
        t ? $("#" + s.pre + "scatterplotDiv").html(i) : $("#" + s.pre + "linegraphDiv").html(i),
        i
    },
    getJSONFromArray: function(e) {
        this.icn3d;
        for (var t = "", i = 0, n = e.length; i < n; ++i)
            t += JSON.stringify(e[i]),
            i != n - 1 && (t += ", ");
        return t
    },
    drawLineGraph_base: function(e, t, i, n, r) {
        var s, o, a = this, l = (a.icn3d,
        ""), d = e.length, c = t.length;
        c < d ? o = (s = 10) * Math.abs(d - c) * .5 + 10 : s = (o = 10) * Math.abs(d - c) * .5 + 10;
        for (var h = 30 + r, p = 80 + r, m = "", u = {}, f = {}, g = 0; g < d; ++g)
            m += a.drawResNode(e[g], g, 3, 7, s, h, "a"),
            u[e[g].id] = {
                x: s + 10 * g,
                y: h
            };
        for (g = 0; g < c; ++g)
            m += a.drawResNode(t[g], g, 3, 7, o, p, "b"),
            f[t[g].id] = {
                x: o + 10 * g,
                y: p
            };
        g = 0;
        for (var v = i.length; g < v; ++g) {
            var b, y, C = i[g], _ = n[C.source], S = n[C.target], w = _.r.substr(4), A = S.r.substr(4), x = u[_.id], k = f[S.id];
            if (void 0 !== x && void 0 !== k)
                b = C.v == a.contactValue ? 1 : 2,
                C.v == a.hbondValue ? y = "#" + a.hbondColor : C.v == a.ionicValue ? y = "#" + a.ionicColor : C.v == a.halogenValue ? y = "#" + a.halogenColor : C.v == a.picationValue ? y = "#" + a.picationColor : C.v == a.pistackingValue ? y = "#" + a.pistackingColor : C.v == a.contactValue && (y = "#" + a.contactColor),
                l += "<g class='icn3d-interaction' resid1='" + w + "' resid2='" + A + "' >",
                l += "<title>Interaction of residue " + _.id + " with residue " + S.id + "</title>",
                l += "<line x1='" + x.x + "' y1='" + x.y + "' x2='" + k.x + "' y2='" + k.y + "' stroke='" + y + "' stroke-width='" + b + "' /></g>"
        }
        return l += m
    },
    drawScatterplot_base: function(e, t, i, n, r) {
        for (var s = this, o = (s.icn3d,
        ""), a = e.length, l = t.length, d = 10 * (a + 1) + 30 + 40, c = r + d - 60, h = "", p = {}, m = {}, u = 0; u < a; ++u)
            h += s.drawResNode(e[u], u, 3, 7, c, 40, "a", !0),
            p[e[u].id] = {
                x: 40,
                y: c - 10 * u
            };
        var f = r + d - 50;
        for (u = 0; u < l; ++u)
            h += s.drawResNode(t[u], u, 3, 7, 50, f, "b"),
            m[t[u].id] = {
                x: 50 + 10 * u,
                y: f
            };
        u = 0;
        for (var g = i.length; u < g; ++u) {
            var v, b, y = i[u], C = n[y.source], _ = n[y.target], S = C.r.substr(4), w = _.r.substr(4), A = p[C.id], x = m[_.id];
            if (void 0 !== A && void 0 !== x)
                y.v == s.hbondValue ? v = "#" + s.hbondColor : y.v == s.ionicValue ? v = "#" + s.ionicColor : y.v == s.halogenValue ? v = "#" + s.halogenColor : y.v == s.picationValue ? v = "#" + s.picationColor : y.v == s.pistackingValue ? v = "#" + s.pistackingColor : y.v == s.contactValue && (v = "#" + s.contactColor),
                b = y.v == s.contactValue ? 1 : 2,
                o += "<g class='icn3d-interaction' resid1='" + S + "' resid2='" + w + "' >",
                o += "<title>Interaction of residue " + C.id + " with residue " + _.id + "</title>",
                o += "<rect x='" + (x.x - 2.25).toString() + "' y='" + (A.y - 2.25).toString() + "' width='4.5' height='4.5' fill='" + v + "' fill-opacity='0.6' stroke-width='" + b + "' stroke='" + v + "' />",
                o += "</g>"
        }
        return o += h
    },
    compNode: function(e, t, i) {
        this.icn3d;
        var n = e.r.substr(4)
          , r = t.r.substr(4)
          , s = this.getIdArray(n)
          , o = this.getIdArray(r)
          , a = s[0] + "_" + s[1]
          , l = o[0] + "_" + o[1]
          , d = parseInt(s[2])
          , c = parseInt(o[2]);
        return l < a ? i ? -1 : 1 : a < l ? i ? 1 : -1 : a == l ? c < d ? 1 : d < c ? -1 : 0 : void 0
    },
    getNodesLinksForSet: function(e, t, i) {
        var n = this.icn3d
          , r = []
          , s = []
          , o = 0
          , a = this.coilValue
          , l = ""
          , d = ""
          , c = 0
          , h = {};
        for (var p in e) {
            var m = n.atoms[p];
            if ("DUM" != m.chain && (m.het || "CA" == m.name && "C" == m.elem || "O3'" == m.name || "O3*" == m.name || "P" == m.name)) {
                var u = m.structure + "_" + m.chain + "_" + m.resi;
                if (h.hasOwnProperty(u))
                    continue;
                h[u] = 1;
                var f = n.residueName2Abbr(m.resn) + m.resi;
                "chain" != t && "structure" != t || (f += "." + m.chain),
                "structure" == t && (f += "." + m.structure);
                var g = "1_1_" + u;
                r.push('{"id": "' + f + '", "r": "' + g + '", "s": "' + i + '", "x": ' + m.coord.x.toFixed(0) + ', "y": ' + m.coord.y.toFixed(0) + ', "c": "' + m.color.getHexString().toUpperCase() + '"}'),
                0 < o && l == m.chain && (m.resi == c + 1 || m.resi == c) && (s.push('{"source": "' + d + '", "target": "' + f + '", "v": ' + a + ', "c": "' + m.color.getHexString().toUpperCase() + '"}'),
                m.ssbegin && (a = this.ssValue),
                m.ssend && (a = this.coilValue),
                0),
                l = m.chain,
                d = f,
                c = m.resi,
                ++o
            }
        }
        return {
            node: r,
            link: s
        }
    },
    getHbondLinksForSet: function(e, t) {
        var i = this.icn3d
          , n = {}
          , r = parseFloat($("#" + this.pre + "hbondthreshold").val())
          , s = e
          , o = s;
        if (0 < Object.keys(o).length && 0 < Object.keys(s).length) {
            i.calculateChemicalHbonds(i.intHash2Atoms(i.dAtoms, o), i.intHash2Atoms(i.dAtoms, s), parseFloat(r), !1, "graph", !0);
            n = i.cloneHash(i.resid2Residhash)
        }
        return this.getGraphLinks(n, n, this.hbondInsideColor, t, this.hbondInsideValue)
    },
    getIonicLinksForSet: function(e, t) {
        var i = this.icn3d
          , n = {}
          , r = parseFloat($("#" + this.pre + "saltbridgethreshold").val())
          , s = e
          , o = s;
        if (0 < Object.keys(o).length && 0 < Object.keys(s).length) {
            i.calculateIonicInteractions(i.intHash2Atoms(i.dAtoms, o), i.intHash2Atoms(i.dAtoms, s), parseFloat(r), !1, "graph", !0);
            n = i.cloneHash(i.resid2Residhash)
        }
        return this.getGraphLinks(n, n, this.ionicInsideColor, t, this.ionicInsideValue)
    },
    getHalogenPiLinksForSet: function(e, t) {
        var i, n = this, r = n.icn3d, s = {}, o = e, a = o, l = "";
        if (i = parseFloat($("#" + n.pre + "halogenthreshold").val()),
        0 < Object.keys(a).length && 0 < Object.keys(o).length) {
            r.calculateHalogenPiInteractions(r.intHash2Atoms(r.dAtoms, o), r.intHash2Atoms(r.dAtoms, a), parseFloat(i), "graph", "halogen", !0);
            s = r.cloneHash(r.resid2Residhash)
        }
        if (l += n.getGraphLinks(s, s, n.halogenInsideColor, t, n.halogenInsideValue),
        i = parseFloat($("#" + n.pre + "picationthreshold").val()),
        0 < Object.keys(a).length && 0 < Object.keys(o).length) {
            r.calculateHalogenPiInteractions(r.intHash2Atoms(r.dAtoms, o), r.intHash2Atoms(r.dAtoms, a), parseFloat(i), "graph", "pi-cation", !0);
            s = r.cloneHash(r.resid2Residhash)
        }
        if (l += n.getGraphLinks(s, s, n.picationInsideColor, t, n.picationInsideValue),
        i = parseFloat($("#" + n.pre + "pistackingthreshold").val()),
        0 < Object.keys(a).length && 0 < Object.keys(o).length) {
            r.calculateHalogenPiInteractions(r.intHash2Atoms(r.dAtoms, o), r.intHash2Atoms(r.dAtoms, a), parseFloat(i), "graph", "pi-stacking", !0);
            s = r.cloneHash(r.resid2Residhash)
        }
        return l += n.getGraphLinks(s, s, n.pistackingInsideColor, t, n.pistackingInsideValue)
    },
    getContactLinksForSet: function(e, t) {
        var i = this.icn3d
          , n = []
          , r = ""
          , s = ""
          , o = {};
        for (var a in e) {
            var l = i.atoms[a];
            l.ss == r && l.chain == s || (0 < Object.keys(o).length && n.push(o),
            o = {}),
            o[l.serial] = 1,
            r = l.ss,
            s = l.chain
        }
        0 < Object.keys(o).length && n.push(o);
        var d = n.length
          , c = "";
        for (a = 0; a < d; ++a)
            for (var h = a + 1; h < d; ++h)
                c += this.getContactLinks(n[a], n[h], t, !0);
        return c
    },
    getContactLinks: function(e, t, i, n) {
        var r = this.icn3d
          , s = parseFloat($("#" + this.pre + "contactthreshold").val())
          , o = (r.getAtomsWithinAtom(t, e, parseFloat(s), !0, !1, n),
        r.cloneHash(r.resid2Residhash));
        return this.getGraphLinks(o, o, this.contactInsideColor, i, this.contactInsideValue)
    },
    getSvgXml: function(e) {
        this.icn3d;
        return '<svg title="graph" version="1.1" xmlns="http://www.w3.org/2000/svg"><style>text {font-family: sans-serif; font-weight: bold; font-size: 18px;}</style>' + document.getElementById(e).innerHTML + "</svg>"
    },
    saveSvg: function(e, t) {
        this.icn3d;
        var i = this.getSvgXml(e)
          , n = new Blob([i],{
            type: "image/svg+xml"
        });
        saveAs(n, t)
    },
    savePng: function(e, t, i, n) {
        var r = this
          , s = (r.icn3d,
        document.getElementById(e))
          , o = s.getBBox()
          , a = s.cloneNode(!0);
        r.copyStylesInline(a, s);
        var l = document.createElement("CANVAS");
        l.width = i,
        l.height = n;
        var d = l.getContext("2d");
        d.clearRect(0, 0, o.width, o.height);
        var c = r.getSvgXml(e)
          , h = window.URL || window.webkitURL || window
          , p = new Blob([c],{
            type: "image/svg+xml;charset=utf-8"
        })
          , m = new Image;
        m.src = h.createObjectURL(p),
        m.onload = function() {
            if (d.drawImage(m, 0, 0),
            h.revokeObjectURL(this.src),
            r.isIE()) {
                var e = l.msToBlob();
                return saveAs(e, t),
                void l.remove()
            }
            l.toBlob(function(e) {
                saveAs(e, t),
                l.remove()
            })
        }
    },
    getPDBHeader: function() {
        var e = this.icn3d
          , t = "";
        t += "HEADER    PDB From iCn3D".padEnd(62, " ") + Object.keys(e.structures)[0] + "\n";
        var i = 50 < e.molTitle.length ? e.molTitle.substr(0, 47) + "..." : e.molTitle;
        return -1 != i.indexOf('"') && (i = ""),
        t += "TITLE     " + i + "\n"
    },
    getAtomPDB: function(e, t, i) {
        var n = this.icn3d
          , r = ""
          , s = {}
          , o = {};
        for (var a in n.chemicals) {
            if ("P" == (C = n.atoms[a]).elem) {
                s[a] = 1;
                for (var l = 0, d = C.bonds.length; l < d; ++l) {
                    var c = C.bonds[l];
                    c && "O" == n.atoms[c].elem && (o[c] = 1)
                }
            }
        }
        var h = n.intHash(e, n.calphas)
          , p = !1
          , m = !0
          , u = !1
          , f = !0;
        for (var a in h) {
            (C = n.atoms[a]).ssbegin && ("helix" == C.ss ? (p = !0,
            m && (r += "HELIX".padEnd(15, " ") + C.resn.padStart(3, " ") + C.chain.padStart(2, " ") + C.resi.toString().padStart(5, " ")),
            m = !1) : "sheet" == C.ss && (u = !0,
            f && (r += "SHEET".padEnd(17, " ") + C.resn.padStart(3, " ") + C.chain.padStart(2, " ") + C.resi.toString().padStart(4, " ")),
            f = !1)),
            C.ssend && ("helix" == C.ss ? (m = !0,
            p && (r += C.resn.padStart(5, " ") + C.chain.padStart(2, " ") + C.resi.toString().padStart(5, " ") + "\n"),
            p = !1) : "sheet" == C.ss && (f = !0,
            u && (r += C.resn.padStart(5, " ") + C.chain.padStart(2, " ") + C.resi.toString().padStart(4, " ") + "\n"),
            u = !1))
        }
        var g = ""
          , v = 1 < Object.keys(n.structures).length
          , b = 1
          , y = "";
        for (var a in r += "\n",
        e) {
            var C = n.atoms[a];
            v && C.structure != y && (r += g,
            g = "",
            1 < b && (r += "ENDMDL\n"),
            r += "MODEL        " + b + "\n",
            y = C.structure,
            ++b);
            var _ = "";
            _ += C.het ? "HETATM" : "ATOM  ",
            _ += a.toString().padStart(5, " "),
            _ += " ";
            var S = C.name.trim();
            isNaN(S.substr(0, 1)) || (S = S.substr(1) + S.substr(0, 1)),
            4 == S.length ? _ += S : (_ += " ",
            "O1P" == (S = S.replace(/\*/g, "'")) ? S = "OP1" : "O2P" == S ? S = "OP2" : "C5M" == S && (S = "C7 "),
            _ += S.padEnd(3, " ")),
            _ += " ";
            var w = C.resn;
            _ += w.length <= 3 ? w.padStart(3, " ") : w.substr(0, 3),
            _ += " ",
            _ += C.chain.length <= 1 ? C.chain.padStart(1, " ") : C.chain.substr(0, 1);
            var A = C.resi;
            if (3 < C.chain.length && !isNaN(C.chain.substr(3)) && (A = A - 1 + parseInt(C.chain.substr(3))),
            _ += A.toString().length <= 4 ? A.toString().padStart(4, " ") : A.toString().substr(0, 4),
            _ += " ".padStart(4, " "),
            _ += C.coord.x.toFixed(3).toString().padStart(8, " "),
            _ += C.coord.y.toFixed(3).toString().padStart(8, " "),
            _ += C.coord.z.toFixed(3).toString().padStart(8, " "),
            t && C.het || s.hasOwnProperty(a) && !i || o.hasOwnProperty(a) && !i) {
                var x = 1.5
                  , k = 0;
                "C" == C.elem ? x = 1.908 : "N" == C.elem ? x = 1.824 : "O" == C.elem ? x = 1.6612 : "H" == C.elem ? x = 1.25 : "S" == C.elem ? x = 2 : "P" == C.elem ? x = 2.1 : n.vdwRadii.hasOwnProperty(C.elem) && (x = n.vdwRadii[C.elem]),
                void 0 !== this.cfg.cid && void 0 !== C.crg ? k = C.crg : s.hasOwnProperty(a) ? k = 1.38 : o.hasOwnProperty(a) ? k = -.595 : n.ionCharges.hasOwnProperty(C.elem) && (k = n.ionCharges[C.elem]),
                _ += k.toFixed(4).toString().padStart(8, " "),
                _ += x.toFixed(4).toString().padStart(7, " ")
            } else
                _ += "1.00".padStart(6, " "),
                _ += C.b ? parseFloat(C.b).toFixed(2).toString().padStart(6, " ") : " ".padStart(6, " "),
                _ += " ".padStart(10, " "),
                _ += C.elem.padStart(2, " "),
                _ += " ".padStart(2, " ");
            if (C.het && 0 < C.bonds.length) {
                g += "CONECT" + a.toString().padStart(5, " ");
                var D = {};
                for (l = 0,
                d = C.bonds.length; l < d; ++l)
                    C.bonds[l] && !D.hasOwnProperty(C.bonds[l]) && (g += C.bonds[l].toString().padStart(5, " "),
                    D[C.bonds[l]] = 1);
                g += "\n"
            }
            r += _ + "\n"
        }
        return r += g,
        v && (r += "ENDMDL\n"),
        r
    },
    getSelectedResiduePDB: function() {
        var e = this.icn3d
          , t = "";
        t += this.getPDBHeader();
        var i = e.intHash(e.dAtoms, e.hAtoms);
        return t += this.getAtomPDB(i)
    },
    measureDistTwoSets: function(e, t) {
        var i = this.icn3d;
        if (0 == e.length || 0 == t.length)
            alert("Please select two sets");
        else {
            var n = i.cloneHash(i.hAtoms)
              , r = this.getAtomsFromNameArray(e)
              , s = this.getAtomsFromNameArray(t)
              , o = i.getExtent(r)
              , a = i.getExtent(s)
              , l = new THREE.Vector3(o[2][0],o[2][1],o[2][2])
              , d = new THREE.Vector3(a[2][0],a[2][1],a[2][2]);
            i.hAtoms = i.cloneHash(n);
            i.createBox_base(l, i.originSize, i.hColor, !1, !0),
            i.createBox_base(d, i.originSize, i.hColor, !1, !0);
            var c = $("#" + this.pre + "distancecolor2").val();
            this.addLine(l.x, l.y, l.z, d.x, d.y, d.z, c, !0, "distance");
            var h = l.clone().add(d).multiplyScalar(.5)
              , p = (parseInt(10 * l.distanceTo(d)) / 10).toString() + " A";
            this.addLabel(p, h.x, h.y, h.z, 0, c, 0, "distance"),
            i.draw()
        }
    }
},
"undefined" == typeof jQuery)
    throw new Error("iCn3DUI requires jQuery");
if (void 0 === iCn3D)
    throw new Error("iCn3DUI requires iCn3D");
iCn3DUI.prototype.rotStruc = function(e, t) {
    var i = this
      , n = i.icn3d;
    if (n.bStopRotate)
        return !1;
    if (n.rotateCount > n.rotateCountMax)
        return n.resetOrientation(),
        !1;
    if (++n.rotateCount,
    t)
        if ("left" === e)
            i.ROT_DIR = "left";
        else if ("right" === e)
            i.ROT_DIR = "right";
        else if ("up" === e)
            i.ROT_DIR = "up";
        else {
            if ("down" !== e)
                return !1;
            i.ROT_DIR = "down"
        }
    if ("left" === e && "left" === i.ROT_DIR)
        n.rotateLeft(1);
    else if ("right" === e && "right" === i.ROT_DIR)
        n.rotateRight(1);
    else if ("up" === e && "up" === i.ROT_DIR)
        n.rotateUp(1);
    else {
        if ("down" !== e || "down" !== i.ROT_DIR)
            return !1;
        n.rotateDown(1)
    }
    setTimeout(function() {
        i.rotStruc(e)
    }, 100)
}
,
iCn3DUI.prototype.showTitle = function() {
    var e = this
      , t = e.icn3d;
    if (void 0 !== t.molTitle && "" !== t.molTitle) {
        var i = t.molTitle
          , n = "white" == e.opts.background || "grey" == e.opts.background ? "black" : e.GREYD;
        if (void 0 === e.inputid)
            40 < t.molTitle.length && (i = t.molTitle.substr(0, 40) + "..."),
            $("#" + e.pre + "title").html(i);
        else if (void 0 !== e.cfg.cid) {
            var r = e.getLinkToStructureSummary();
            $("#" + e.pre + "title").html("PubChem CID <a id='" + e.pre + "titlelink' href='" + r + "' style='color:" + n + "' target='_blank'>" + e.inputid.toUpperCase() + "</a>: " + i)
        } else if (void 0 !== e.cfg.align)
            $("#" + e.pre + "title").html(i);
        else if (void 0 !== e.cfg.chainalign) {
            var s = e.cfg.chainalign.split(",");
            i = "Dynamic Structure Alignment of Chain " + s[0] + " to Chain " + s[1],
            $("#" + e.pre + "title").html(i)
        } else {
            r = e.getLinkToStructureSummary();
            40 < t.molTitle.length && (i = t.molTitle.substr(0, 40) + "...");
            $("#" + e.pre + "title").html("PDB ID <a id='" + e.pre + "titlelink' href='" + r + "' style='color:" + n + "' target='_blank'>" + e.inputid.toUpperCase() + "</a>: " + i)
        }
    } else
        $("#" + e.pre + "title").html("")
}
,
iCn3DUI.prototype.getLinkToStructureSummary = function(e) {
    var t = this
      , i = t.icn3d
      , n = "https://www.ncbi.nlm.nih.gov/structure/?term=";
    if (n = void 0 !== t.cfg.cid ? "https://www.ncbi.nlm.nih.gov/pccompound/?term=" : 1 < Object.keys(i.structures).length ? "https://www.ncbi.nlm.nih.gov/structure/?term=" : t.baseUrl + "pdb/",
    void 0 === t.inputid)
        n = "https://www.ncbi.nlm.nih.gov/pccompound/?term=" + t.molTitle;
    else {
        var r = t.inputid.split("_");
        1 === r.length ? (n += t.inputid,
        e && t.setLogCmd("link to Structure Summary " + t.inputid + ": " + n, !1)) : 2 === r.length && (n += r[0] + " OR " + r[1],
        e && t.setLogCmd("link to structures " + r[0] + " and " + r[1] + ": " + n, !1))
    }
    return n
}
,
iCn3DUI.prototype.isIE = function() {
    this.icn3d;
    return !!(0 < window.navigator.userAgent.indexOf("MSIE ") || navigator.userAgent.match(/Trident.*rv\:11\./))
}
,
iCn3DUI.prototype.passFloat32 = function(e, t) {
    this.icn3d;
    var i = e.length;
    t = t || new Uint8Array(4 * i);
    for (var n = this.getDataView(t), r = 0; r < i; ++r)
        n.setFloat32(4 * r, e[r], !0);
    return this.getUint8View(t)
}
,
iCn3DUI.prototype.passInt8 = function(e, t) {
    this.icn3d;
    var i = e.length;
    t = t || new Uint8Array(+i);
    for (var n = this.getDataView(t), r = 0; r < i; ++r)
        n.setInt8(+r, e[r], !0);
    return this.getUint8View(t)
}
,
iCn3DUI.prototype.passInt16 = function(e, t) {
    this.icn3d;
    var i = e.length;
    t = t || new Uint8Array(2 * i);
    for (var n = this.getDataView(t), r = 0; r < i; ++r)
        n.setInt16(2 * r, e[r], !0);
    return this.getUint8View(t)
}
,
iCn3DUI.prototype.passInt32 = function(e, t) {
    this.icn3d;
    var i = e.length;
    t = t || new Uint8Array(4 * i);
    for (var n = this.getDataView(t), r = 0; r < i; ++r)
        n.setInt32(4 * r, e[r], !0);
    return this.getUint8View(t)
}
,
iCn3DUI.prototype.getUint8View = function(e) {
    this.icn3d;
    return this.getView(Uint8Array, e)
}
,
iCn3DUI.prototype.getDataView = function(e) {
    this.icn3d;
    return this.getView(DataView, e)
}
,
iCn3DUI.prototype.getView = function(e, t, i) {
    this.icn3d;
    return t ? new e(t.buffer,t.byteOffset,t.byteLength / (i || 1)) : void 0
}
,
iCn3DUI.prototype.getBlobFromBufferAndText = function(e, t) {
    this.icn3d;
    for (var i = new Uint8Array(e), n = new Uint8Array(t.length), r = 0; r < t.length; ++r)
        n[r] = this.passInt8([t.charCodeAt(r)])[0];
    var s = [];
    return s.push(new Blob([i],{
        type: "application/octet-stream"
    })),
    s.push(new Blob([n],{
        type: "application/octet-stream"
    })),
    new Blob(s,{
        type: "image/png"
    })
}
,
iCn3DUI.prototype.getTransformationStr = function(e) {
    this.icn3d;
    var t = {
        factor: 1,
        mouseChange: {
            x: 0,
            y: 0
        },
        quaternion: {
            _x: 0,
            _y: 0,
            _z: 0,
            _w: 1
        }
    };
    return t.factor = parseFloat(e.factor).toPrecision(4),
    t.mouseChange.x = parseFloat(e.mouseChange.x).toPrecision(4),
    t.mouseChange.y = parseFloat(e.mouseChange.y).toPrecision(4),
    t.quaternion._x = parseFloat(e.quaternion._x).toPrecision(4),
    t.quaternion._y = parseFloat(e.quaternion._y).toPrecision(4),
    t.quaternion._z = parseFloat(e.quaternion._z).toPrecision(4),
    t.quaternion._w = parseFloat(e.quaternion._w).toPrecision(4),
    "1.0000" == t.factor && (t.factor = 1),
    "0.0000" == t.mouseChange.x && (t.mouseChange.x = 0),
    "0.0000" == t.mouseChange.y && (t.mouseChange.y = 0),
    "0.0000" == t.quaternion._x && (t.quaternion._x = 0),
    "0.0000" == t.quaternion._y && (t.quaternion._y = 0),
    "0.0000" == t.quaternion._z && (t.quaternion._z = 0),
    "1.0000" == t.quaternion._w && (t.quaternion._w = 1),
    JSON.stringify(t)
}
,
iCn3DUI.prototype.getPngText = function() {
    var e, t = this.icn3d, i = "";
    this.bInputfile ? (e = this.shareLinkUrl(!0),
    i += "\nStart of type file======\n",
    i += this.InputfileType + "\n",
    i += "End of type file======\n",
    i += "Start of data file======\n",
    i += this.InputfileData,
    i += "End of data file======\n",
    i += "Start of state file======\n",
    i += e,
    i += "End of state file======\n") : 4e3 < (e = this.shareLinkUrl()).length || 0 !== e.indexOf("http") ? (i += "\nStart of state file======\n",
    i += e = this.shareLinkUrl(!0),
    i += "End of state file======\n") : i += "\nShare Link: " + e;
    return i = i.replace(/!/g, Object.keys(t.structures)[0] + "_")
}
,
iCn3DUI.prototype.saveFile = function(n, e, t) {
    var r, s = this, i = s.icn3d;
    if ("command" === e) {
        for (var o = s.loadCmd ? s.loadCmd + "\n" : "", a = 0, l = i.commands.length; a < l; ++a) {
            var d = i.commands[a].trim();
            if (a == l - 1) {
                var c = d.split("|||")
                  , h = {};
                h.factor = i._zoomFactor,
                h.mouseChange = i.mouseChange,
                h.quaternion = i.quaternion,
                d = c[0] + "|||" + s.getTransformationStr(h)
            }
            o += d + "\n"
        }
        var p = decodeURIComponent(o);
        r = new Blob([p],{
            type: "text;charset=utf-8;"
        })
    } else if ("png" === e) {
        var m = $("#" + s.pre + "canvas").width()
          , u = $("#" + s.pre + "canvas").height();
        i.setWidthHeight(m, u),
        i.bRender && i.render();
        var f = !0;
        if (window.File && window.FileReader && window.FileList && window.Blob || (f = !1),
        s.isIE()) {
            if (r = i.renderer.domElement.msToBlob(),
            !f)
                return void saveAs(r, n);
            var g = new FileReader;
            g.onload = function(e) {
                var t = e.target.result
                  , i = s.getPngText();
                r = s.getBlobFromBufferAndText(t, i),
                saveAs(r, n)
            }
            ,
            g.readAsArrayBuffer(r)
        } else
            i.renderer.domElement.toBlob(function(e) {
                if (f) {
                    var t = new FileReader;
                    t.onload = function(e) {
                        var t = e.target.result
                          , i = s.getPngText();
                        r = s.getBlobFromBufferAndText(t, i),
                        saveAs(r, n)
                    }
                    ,
                    t.readAsArrayBuffer(e)
                } else
                    saveAs(r = e, n)
            });
        i.scaleFactor = 1,
        i.setWidthHeight(m, u),
        i.bRender && i.render()
    } else if ("html" === e) {
        o = t,
        p = decodeURIComponent(o);
        r = new Blob([p],{
            type: "text/html;charset=utf-8;"
        })
    } else if ("text" === e) {
        p = t;
        r = new Blob(p,{
            type: "text;charset=utf-8;"
        })
    } else if ("binary" === e) {
        p = t;
        r = new Blob(p,{
            type: "application/octet-stream"
        })
    }
    "png" !== e && saveAs(r, n)
}
,
iCn3DUI.prototype.isMobile = function() {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
}
,
iCn3DUI.prototype.isMac = function() {
    return /Mac/i.test(navigator.userAgent)
}
,
iCn3DUI.prototype.isSessionStorageSupported = function() {
    return window.sessionStorage
}
,
iCn3DUI.prototype.resizeCanvas = function(e, t, i, n) {
    var r = this.icn3d;
    if (i || this.cfg.resize) {
        var s = t;
        $("#" + this.pre + "canvas").width(e).height(s),
        $("#" + this.pre + "viewer").width(e).height(t),
        $("#" + this.divid + " div:has(#" + this.pre + "canvas)").width(e).height(s),
        r.setWidthHeight(e, s),
        void 0 !== n && !n || r.draw()
    }
}
,
iCn3DUI.prototype.handleContextLost = function() {
    var t = this.icn3d
      , e = $("#" + this.pre + "canvas")[0];
    e.addEventListener("webglcontextlost", function(e) {
        e.preventDefault()
    }, !1),
    e.addEventListener("webglcontextrestored", function(e) {
        console.log("WebGL context was lost. Reset WebGLRenderer and launch iCn3D again."),
        t.renderer = new THREE.WebGLRenderer({
            canvas: t.container.get(0),
            antialias: !0,
            preserveDrawingBuffer: !0,
            alpha: !0
        }),
        t.draw()
    }, !1)
}
,
iCn3DUI.prototype.windowResize = function() {
    var n = this;
    n.cfg.resize && !n.isMobile() && $(window).resize(function() {
        var e = n.icn3d;
        n.setViewerWidthHeight();
        var t = n.WIDTH
          , i = n.HEIGHT;
        void 0 === e || e.bFullscreen || n.resizeCanvas(t, i)
    })
}
,
iCn3DUI.prototype.setViewerWidthHeight = function() {
    var e, t, i = this;
    i.icn3d;
    i.WIDTH = $(window).width() - i.LESSWIDTH,
    i.HEIGHT = $(window).height() - i.EXTRAHEIGHT - i.LESSHEIGHT,
    t = void 0 !== i.oriWidth && -1 === i.cfg.width.toString().indexOf("%") ? (e = i.oriWidth,
    i.oriHeight) : (e = $("#" + i.pre + "viewer").css("width"),
    t = $("#" + i.pre + "viewer").css("height"),
    void 0 === e && (e = i.WIDTH),
    void 0 === t && (t = i.HEIGHT),
    e = -1 !== i.cfg.width.toString().indexOf("%") ? $(window).width() * i.cfg.width.substr(0, i.cfg.width.toString().indexOf("%")) / 100 - i.LESSWIDTH : parseInt(i.cfg.width),
    -1 !== i.cfg.height.toString().indexOf("%") ? $(window).height() * i.cfg.height.substr(0, i.cfg.height.toString().indexOf("%")) / 100 - i.EXTRAHEIGHT - i.LESSHEIGHT : parseInt(i.cfg.height)),
    e && i.WIDTH > e && (i.WIDTH = e),
    t && i.HEIGHT > t && (i.HEIGHT = t)
}
,
iCn3DUI.prototype.shareLinkUrl = function(e) {
    var t = this
      , i = t.icn3d
      , n = t.baseUrl + "icn3d/full.html?";
    t.cfg.bSidebyside && (n = t.baseUrl + "icn3d/full2.html?"),
    t.bInputUrlfile && (n = window.location.href.split("?")[0] + "?" + t.inputurl + "&");
    var r, s = {};
    for (var o in t.cfg) {
        var a = t.cfg[o];
        "inpara" !== o && "command" !== t.key && void 0 !== a && ("width" === o && "100%" === a || "height" === o && "100%" === a || "resize" === o && !0 === a || "showmenu" === o && !0 === a || "showtitle" === o && !0 === a || "showcommand" === o && !0 === a || "simplemenu" === o && !1 === a || "mobilemenu" === o && !1 === a || "closepopup" === o && !1 === a || "showanno" === o && !1 === a || "showseq" === o && !1 === a || "showalignseq" === o && !1 === a || "show2d" === o && !1 === a || "showsets" === o && !1 === a || "rotate" === o && "right" === a || "command" !== o && ("options" === o ? 0 < Object.keys(a).length && (s[o] = JSON.stringify(a)) : !0 === a ? s[o] = 1 : !1 === a ? s[o] = 0 : "" !== a && (s[o] = a)))
    }
    var l = -1;
    if (void 0 !== t.cfg.inpara && (l = t.cfg.inpara.indexOf("&command=")),
    r = -1 !== l ? t.cfg.inpara.substr(0, l) : t.cfg.inpara,
    !t.bInputUrlfile) {
        for (var d = r && r.substr(1) ? r.substr(1).split("&") : [], c = 0, h = d.length; c < h; ++c) {
            var p = d[c].split("=");
            2 == p.length && (s[p[0]] = p[1])
        }
        for (var o in s)
            n += o + "=" + s[o] + "&"
    }
    var m = new Date;
    n += "date=" + (m.getFullYear().toString() + (m.getMonth() + 1).toString() + m.getDate().toString()) + "&",
    n += "command=";
    var u = 0;
    (e || t.bInputUrlfile) && (u = 0);
    var f = {};
    f.factor = i._zoomFactor,
    f.mouseChange = i.mouseChange,
    f.quaternion = i.quaternion;
    var g = !1
      , v = ""
      , b = void 0
      , y = "toggle highlight"
      , C = 0;
    i.commands.length > u && -1 !== (b = i.commands[u].split("|||")[0].trim()).indexOf(y) && ++C;
    var _;
    for (c = u + 1,
    h = i.commands.length; c < h; ++c) {
        g = !0;
        var S = i.commands[c].split("|||")[0].trim();
        (-1 !== b.indexOf("select saved atoms") || -1 !== b.indexOf("select sets")) && (0 === S.indexOf("select") || 0 === S.indexOf("select")) && -1 === b.indexOf(" name ") || -1 !== b.indexOf("pickatom") && -1 !== S.indexOf("pickatom") || "show selection" == b && -1 != i.commands.slice(c).toString().indexOf("show selection") || (-1 !== b.indexOf(y) ? ++C : n += c === u + 1 ? b : "; " + b),
        v += b + "\n",
        b = S
    }
    return b && (g && (n += "; "),
    0 < C && C % 2 == 0 && b !== y && (n += y + "; "),
    n += b + "|||" + t.getTransformationStr(f),
    v += b + "|||" + t.getTransformationStr(f) + "\n"),
    v = v.replace(/!/g, Object.keys(i.structures)[0] + "_"),
    (t.bInputfile && !t.bInputUrlfile || 4e3 < n.length) && (n = v),
    void 0 !== i.structures && 1 == Object.keys(i.structures).length && void 0 !== t.inputid && (_ = Object.keys(i.structures)[0],
    n = n.replace(new RegExp(_ + "_","g"), "!")),
    void 0 !== t.cfg.blast_rep_id && (n = n.replace(new RegExp("blast_rep_id=!","g"), "blast_rep_id=" + _ + "_")),
    n
}
,
iCn3DUI.prototype.addLabel = function(e, t, i, n, r, s, o, a) {
    var l = this.icn3d
      , d = {};
    "0" !== r && "" !== r && "undefined" !== r || (r = void 0),
    "0" !== s && "" !== s && "undefined" !== s || (s = void 0),
    "0" !== o && "" !== o && "undefined" !== o || (o = void 0);
    var c = new THREE.Vector3;
    c.x = t,
    c.y = i,
    c.z = n,
    d.position = c,
    d.text = e,
    d.size = r,
    d.color = s,
    d.background = o,
    void 0 === l.labels[a] && (l.labels[a] = []),
    void 0 !== a ? l.labels[a].push(d) : l.labels.custom.push(d),
    l.removeHlObjects()
}
,
iCn3DUI.prototype.showLoading = function() {
    this.icn3d;
    $("#" + this.pre + "wait") && $("#" + this.pre + "wait").show(),
    $("#" + this.pre + "canvas") && $("#" + this.pre + "canvas").hide(),
    $("#" + this.pre + "cmdlog") && $("#" + this.pre + "cmdlog").hide()
}
,
iCn3DUI.prototype.hideLoading = function() {
    this.icn3d;
    $("#" + this.pre + "wait") && $("#" + this.pre + "wait").hide(),
    $("#" + this.pre + "canvas") && $("#" + this.pre + "canvas").show(),
    $("#" + this.pre + "cmdlog") && $("#" + this.pre + "cmdlog").show()
}
,
iCn3DUI.prototype.setYourNote = function(e) {
    this.icn3d;
    this.yournote = e,
    $("#" + this.pre + "yournote").val(this.yournote),
    this.cfg.shownote && (document.title = this.yournote)
}
,
iCn3DUI.prototype.downloadMmcif = function(t) {
    var i, n = this, e = n.icn3d;
    i = "https://files.rcsb.org/view/" + t + ".cif",
    e.bCid = void 0,
    n.setYourNote(t.toUpperCase() + " (MMCIF) in iCn3D"),
    $.ajax({
        url: i,
        dataType: "text",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        beforeSend: function() {
            n.showLoading()
        },
        complete: function() {},
        success: function(e) {
            i = n.baseUrl + "mmcifparser/mmcifparser.cgi",
            $.ajax({
                url: i,
                type: "POST",
                data: {
                    mmciffile: e
                },
                dataType: "jsonp",
                cache: !0,
                tryCount: 0,
                retryLimit: 1,
                beforeSend: function() {
                    n.showLoading()
                },
                complete: function() {},
                success: function(e) {
                    n.loadMmcifData(e, t)
                },
                error: function(e, t, i) {
                    this.tryCount++,
                    this.tryCount <= this.retryLimit && $.ajax(this)
                }
            })
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit && $.ajax(this)
        }
    })
}
,
iCn3DUI.prototype.downloadMmcifSymmetry = function(e, t) {
    var i = this;
    i.icn3d;
    return i.deferredSymmetry = $.Deferred(function() {
        i.downloadMmcifSymmetryBase(e, t)
    }),
    i.deferredSymmetry.promise()
}
,
iCn3DUI.prototype.downloadMmcifSymmetryBase = function(F, M) {
    var N, z = this, q = z.icn3d;
    N = z.isMac() ? "https://files.rcsb.org/view/" + F + ".cif" : "https://files.rcsb.org/header/" + F + ".cif",
    q.bCid = void 0,
    $.ajax({
        url: N,
        dataType: "text",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            if (z.cfg.notebook) {
                var t = e.split("\n")
                  , i = !1
                  , n = !1
                  , r = !1
                  , s = !1
                  , o = 0
                  , a = ""
                  , l = ""
                  , d = !1
                  , c = !1
                  , h = ""
                  , p = "";
                for (var m in t) {
                    var u = t[m];
                    if ("EMDB  EMD-" == u.substr(0, 10))
                        q.emd = u.substr(6).trim(),
                        0;
                    else if ("_entity_src_nat.common_name" == u.substr(0, 27))
                        q.organism = u.substr(27).trim(),
                        q.organism && (i = !0),
                        n = !0;
                    else if (n && !i && "_entity_src_nat.details" == p.substr(0, 23)) {
                        var f = u.split(/\s+/);
                        q.organism = 5 < f.length ? f[5] : "",
                        i = !0
                    } else if ("_pdbx_struct_oper_list.vector" == p.substr(0, 29) && 2 < u.split(/\s+/).length) {
                        s = !0,
                        ++o;
                        var g = u.indexOf(" ")
                          , v = u.indexOf("' ");
                        l += u.substr(0, g) + u.substr(v + 1),
                        a += "["
                    } else if (s && "#" == u.trim())
                        "[" != a && (a = a.substr(0, a.length - 1)),
                        a += "]",
                        s = !(r = !0);
                    else if (s && !r)
                        if (++o % 2 == 0) {
                            if ("X0" != (f = (l += u).split(/\s+/))[0] && "P" != f[0] && 14 < f.length) {
                                var b = f[3]
                                  , y = f[4]
                                  , C = f[5]
                                  , _ = f[6]
                                  , S = f[7]
                                  , w = f[8]
                                  , A = f[9]
                                  , x = f[10];
                                a += "[" + b + "," + S + "," + f[11] + ", 0, " + y + "," + w + "," + f[12] + ", 0, " + C + "," + A + "," + f[13] + ", 0, " + _ + "," + x + "," + f[14] + ", 1],"
                            }
                            l = ""
                        } else {
                            g = u.indexOf(" "),
                            v = u.indexOf("' ");
                            l += u.substr(0, g) + u.substr(v + 1)
                        }
                    else if (c && "#" == u.trim())
                        "[" != h && (h = h.substr(0, h.length - 1)),
                        h += "]",
                        c = !(d = !0);
                    else if ("_pdbx_poly_seq_scheme.hetero" == p.trim() || c && !d) {
                        "_pdbx_poly_seq_scheme.hetero" == p.trim() && (c = !0,
                        h += "[");
                        var k = (f = u.split(/\s+/))[3]
                          , D = f[9]
                          , O = f[5];
                        "?" == f[6] && (h += '{"resn": "' + k + '", "chain": "' + D + '", "resi": ' + O + "},")
                    }
                    if (i && r && d)
                        break;
                    p = u
                }
                z.bAssemblyUseAsu && z.loadMmcifSymmetry(JSON.parse(a));
                var R = JSON.parse(h);
                if ("mmtfid" === M && void 0 !== R) {
                    for (var T = 0, E = "", I = {}, H = (m = 0,
                    R.length); m < H; ++m) {
                        k = R[m].resn,
                        D = R[m].chain,
                        O = R[m].resi;
                        var L = F + "_" + D;
                        void 0 === I[L] && (I[L] = []);
                        var P = {};
                        P.resi = O,
                        P.name = q.residueName2Abbr(k).toLowerCase(),
                        D != E && (T = 0),
                        !isNaN(O) && ("" == E || D != E || D == E && T < O) && (I[L].push(P),
                        T = O,
                        E = D)
                    }
                    q.adjustSeq(I)
                }
                void 0 !== z.deferredSymmetry && z.deferredSymmetry.resolve()
            } else
                N = z.baseUrl + "mmcifparser/mmcifparser.cgi",
                $.ajax({
                    url: N,
                    type: "POST",
                    data: {
                        mmcifheader: e
                    },
                    dataType: "jsonp",
                    cache: !0,
                    tryCount: 0,
                    retryLimit: 1,
                    success: function(e) {
                        if (void 0 !== e.emd && (q.emd = e.emd),
                        void 0 !== e.organism && (q.organism = e.organism),
                        z.bAssemblyUseAsu && z.loadMmcifSymmetry(e.assembly),
                        "mmtfid" === M && void 0 !== e.missingseq) {
                            for (var t = 0, i = "", n = {}, r = 0, s = e.missingseq.length; r < s; ++r) {
                                var o = e.missingseq[r].resn
                                  , a = e.missingseq[r].chain
                                  , l = e.missingseq[r].resi
                                  , d = F + "_" + a;
                                void 0 === n[d] && (n[d] = []);
                                var c = {};
                                c.resi = l,
                                c.name = q.residueName2Abbr(o).toLowerCase(),
                                a != i && (t = 0),
                                !isNaN(l) && ("" == i || a != i || a == i && t < l) && (n[d].push(c),
                                t = l,
                                i = a)
                            }
                            q.adjustSeq(n)
                        }
                        void 0 !== z.deferredSymmetry && z.deferredSymmetry.resolve()
                    },
                    error: function(e, t, i) {
                        this.tryCount++,
                        this.tryCount <= this.retryLimit ? $.ajax(this) : void 0 !== z.deferredSymmetry && z.deferredSymmetry.resolve()
                    }
                })
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : void 0 !== z.deferredSymmetry && z.deferredSymmetry.resolve()
        }
    })
}
,
iCn3DUI.prototype.loadMmcifData = function(e, t) {
    var i = this
      , n = i.icn3d;
    return t = (t = t || e.mmcif) || "stru",
    void 0 !== e.atoms ? (n.init(),
    void 0 !== e.emd && (n.emd = e.emd),
    void 0 !== e.organism && (n.organism = e.organism),
    void 0 !== n.emd ? ($("#" + i.pre + "mapWrapper1").hide(),
    $("#" + i.pre + "mapWrapper2").hide(),
    $("#" + i.pre + "mapWrapper3").hide()) : ($("#" + i.pre + "emmapWrapper1").hide(),
    $("#" + i.pre + "emmapWrapper2").hide(),
    $("#" + i.pre + "emmapWrapper3").hide()),
    i.deferredOpm = $.Deferred(function() {
        i.loadOpmData(e, t, void 0, "mmcif")
    }),
    i.deferredOpm.promise()) : (alert("invalid atoms data."),
    !1)
}
,
iCn3DUI.prototype.loadMmcifSymmetry = function(e) {
    for (var t = this.icn3d, i = 0, n = e.length; i < n; ++i) {
        var r = new THREE.Matrix4;
        r.fromArray(e[i]),
        t.biomtMatrices[i] = r
    }
    t.asuCnt = t.biomtMatrices.length
}
,
iCn3DUI.prototype.parseMmdbDataPart1 = function(e, t) {
    var i = this
      , n = i.icn3d;
    if (void 0 === e.atoms && void 0 === e.molid2rescount)
        return alert("invalid MMDB data."),
        !1;
    void 0 !== t && "target" !== t || (i.bStatefile || n.init(),
    n.chainsColor = {},
    n.chainsGene = {}),
    "query" === t ? i.interactionData_q = {
        moleculeInfor: e.moleculeInfor,
        intrac: e.intrac,
        intracResidues: e.intracResidues
    } : i.interactionData = {
        moleculeInfor: e.moleculeInfor,
        intrac: e.intrac,
        intracResidues: e.intracResidues
    },
    "query" === t ? i.mmdb_data_q = e : i.mmdb_data = e;
    var r = void 0 !== e.pdbId ? e.pdbId : e.mmdbId;
    "query" === t ? i.inputid2 = r : i.inputid = r;
    var s = e.moleculeInfor
      , o = {}
      , a = {}
      , l = {}
      , d = {};
    for (var c in s)
        if (0 !== Object.keys(s[c]).length) {
            var h = void 0 === s[c].color ? "#CCCCCC" : "#" + ("000000" + s[c].color.toString(16)).slice(-6)
              , p = void 0 === s[c].chain ? "" : s[c].chain.trim();
            void 0 === d[p] ? d[p] = 1 : ++d[p];
            var m = r + "_" + (1 === d[p] ? p : p + d[p].toString());
            o[c] = h,
            l[a[m] = c] = m,
            n.chainsColor[m] = void 0 !== t ? n.thr(i.GREY8) : n.thr(h);
            var u = void 0 === s[c].geneId ? "" : s[c].geneId
              , f = void 0 === s[c].geneSymbol ? "" : s[c].geneSymbol
              , g = void 0 === s[c].geneDesc ? "" : s[c].geneDesc;
            n.chainsGene[m] = {
                geneId: u,
                geneSymbol: f,
                geneDesc: g
            },
            0
        }
    n.molid2color = o,
    n.chain2molid = a,
    n.molid2chain = l,
    $("#" + i.pre + "accordion5").show()
}
,
iCn3DUI.prototype.parseMmdbData = function(e, t) {
    this.icn3d;
    if (void 0 === t) {
        var i = void 0 !== e.pdbId ? e.pdbId : e.mmdbId;
        this.loadMmdbOpmData(e, i, t)
    } else {
        this.parseMmdbDataPart1(e, t);
        i = void 0 !== e.pdbId ? e.pdbId : e.mmdbId;
        this.loadAtomDataIn(e, i, "mmdbid", void 0, t),
        this.loadMmdbOpmDataPart2(e, i, t)
    }
}
,
iCn3DUI.prototype.downloadMmdb = function(n, r) {
    var t, s = this, i = s.icn3d;
    t = r ? s.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&gi=" + n : s.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + n,
    void 0 !== s.cfg.blast_rep_id && (t += "&buidx=0"),
    (i.bCid = void 0) !== s.cfg.inpara && (t += s.cfg.inpara),
    void 0 === s.chainids2resids && (s.chainids2resids = {}),
    $.ajax({
        url: t,
        dataType: "jsonp",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        beforeSend: function() {
            s.showLoading()
        },
        complete: function() {},
        success: function(e) {
            i.isCalphaPhosOnly(e.atoms) || e.atomCount <= i.maxatomcnt ? s.parseMmdbData(e) : (e = null,
            $.ajax({
                url: t + "&complexity=2",
                dataType: "jsonp",
                cache: !0,
                tryCount: 0,
                retryLimit: 1,
                beforeSend: function() {
                    s.showLoading()
                },
                complete: function() {},
                success: function(e) {
                    s.parseMmdbData(e)
                },
                error: function(e, t, i) {
                    this.tryCount++,
                    this.tryCount <= this.retryLimit ? $.ajax(this) : r ? alert("This gi " + n + " has no corresponding 3D structure...") : alert("This mmdbid " + n + " with the parameters " + s.cfg.inpara + " may not have 3D structure data. Please visit the summary page for details: " + s.baseUrl + "pdb/" + n)
                }
            }))
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : r ? alert("This gi " + n + " has no corresponding 3D structure...") : alert("This mmdbid " + n + " with the parameters " + s.cfg.inpara + " may not have 3D structure data. Please visit the summary page for details: " + s.baseUrl + "pdb/" + n)
        }
    })
}
,
iCn3DUI.prototype.downloadMmdbPart2 = function(e) {
    var t = this
      , i = t.icn3d;
    t.bAssemblyUseAsu ? ($("#" + t.pre + "assemblyWrapper").show(),
    i.bAssembly = !0) : ($("#" + t.pre + "assemblyWrapper").hide(),
    i.bAssembly = !1),
    void 0 !== i.emd ? ($("#" + t.pre + "mapWrapper1").hide(),
    $("#" + t.pre + "mapWrapper2").hide(),
    $("#" + t.pre + "mapWrapper3").hide()) : ($("#" + t.pre + "emmapWrapper1").hide(),
    $("#" + t.pre + "emmapWrapper2").hide(),
    $("#" + t.pre + "emmapWrapper3").hide()),
    i.setAtomStyleByOptions(t.opts),
    void 0 !== t.cfg.blast_rep_id ? i.setColorByOptions(t.opts, i.atoms) : i.setColorByOptions(t.opts, i.atoms, !0),
    void 0 === e && (t.renderStructure(),
    void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0),
    t.html2ddgm = "",
    t.cfg.show2d && (t.openDlg("dl_2ddgm", "Interactions"),
    t.bFullUi && (void 0 === e ? t.download2Ddgm(t.inputid.toUpperCase()) : t.set2DDiagramsForAlign(t.inputid2.toUpperCase(), t.inputid.toUpperCase())))),
    void 0 !== t.cfg.align && void 0 !== t.cfg.chainalign || 1 != Object.keys(i.structures).length || null !== $("#" + t.pre + "alternateWrapper") && $("#" + t.pre + "alternateWrapper").hide()
}
,
iCn3DUI.prototype.downloadGi = function(e) {
    this.icn3d.bCid = void 0;
    this.downloadMmdb(e, !0)
}
,
iCn3DUI.prototype.downloadBlast_rep_id = function(e) {
    this.icn3d.bCid = void 0;
    var t = e.split(",");
    this.cfg.query_id = t[0],
    this.cfg.blast_rep_id = t[1];
    var i = this.cfg.blast_rep_id.split("_")[0];
    this.downloadMmdb(i)
}
,
iCn3DUI.prototype.getMissingResidues = function(e, t, i) {
    for (var n = this.icn3d, r = -9999, s = 0, o = !0, a = 0, l = e.length; a < l; ++a) {
        var d, c;
        "mmdbid" === t ? (d = e[a][1],
        c = 0) : "mmcifid" === t ? (d = e[a][1],
        d = n.residueName2Abbr(d),
        c = 0) : "align" === t && (d = e[a][1],
        c = 0),
        "" === d && (d = "x");
        var h = {};
        h.resi = a + 1;
        var p = parseInt(e[a][c])
          , m = a == l - 1 ? 9999 : parseInt(e[a + 1][c]);
        if (0 !== p || 0 === p && (-1 === r || 1 == m)) {
            if (h.name = d.toLowerCase(),
            o && 0 < s) {
                void 0 === this.countNextresiArray[i] && (this.countNextresiArray[i] = []);
                var u = [s, parseInt(e[a][0])];
                this.countNextresiArray[i].push(u),
                s = 0
            }
            o = !1
        } else
            h.name = d.toLowerCase(),
            ++s,
            o = !0;
        void 0 === n.chainsSeq[i] && (n.chainsSeq[i] = []);
        h.resi % 10 == 0 && h.resi.toString(),
        n.chainsSeq[i].push(h),
        r = p
    }
}
,
iCn3DUI.prototype.loadAtomDataIn = function(e, t, i, n, r) {
    var s = this
      , o = s.icn3d;
    o.pmin = new THREE.Vector3(9999,9999,9999),
    o.pmax = new THREE.Vector3(-9999,-9999,-9999),
    o.psum = new THREE.Vector3;
    var a = e.atoms
      , l = void 0 === r || "target" === r ? 0 : s.lastTargetSerial
      , d = {}
      , c = {};
    void 0 === r || "target" === r ? (s.pmid = e.pubmedId,
    s.chainid2title = {},
    s.chainid2sid = {}) : s.pmid2 = e.pubmedId;
    var h = {}
      , p = {};
    if ("align" === i) {
        s.pmid = "";
        var m = s.cfg.inpara && -1 !== s.cfg.inpara.indexOf("atype=1") ? "Invariant Core " : "";
        o.molTitle = m + "Structure Alignment of ";
        for (var u = 0, f = e.alignedStructures[0].length; u < f; ++u) {
            var g = e.alignedStructures[0][u];
            1 === u && (o.secondId = g.pdbId);
            for (var v = g.pdbId, b = g.mmdbId, y = g.serialInterval[0], C = g.serialInterval[1]; y <= C; ++y)
                d[y] = v.toString(),
                c[b] = v;
            for (y = 0,
            C = g.molecules.length; y < C; ++y) {
                var _ = g.molecules[y].chain
                  , S = g.molecules[y].kind
                  , w = g.molecules[y].name
                  , A = g.molecules[y].sid;
                h[O = v + "_" + _] = S,
                s.chainid2title[O] = w,
                void 0 !== A && (s.chainid2sid[O] = A)
            }
            o.molTitle += '<a href="' + s.baseUrl + "mmdb/mmdbsrv.cgi?uid=" + g.pdbId.toUpperCase() + '" target="_blank">' + g.pdbId.toUpperCase() + "</a>",
            void 0 !== g.descr && (s.pmid += g.descr.pubmedid),
            0 === u && (o.molTitle += " and ",
            void 0 !== g.descr && (s.pmid += "_"))
        }
        o.molTitle += " from VAST+"
    } else if (void 0 !== e.descr && (o.molTitle += e.descr.name),
    "mmdbid" === i) {
        v = e.pdbId;
        var x = {};
        "target" == r && (s.alignmolid2color = [],
        s.alignmolid2color[0] = {},
        s.alignmolid2color[1] = {});
        var k = 1;
        for (var D in e.moleculeInfor)
            if (0 !== Object.keys(e.moleculeInfor[D]).length) {
                var O = v + "_" + (_ = e.moleculeInfor[D].chain.trim());
                x.hasOwnProperty(_) ? (++x[_],
                O += x[_]) : x[_] = 1,
                void 0 !== s.mmdbid_q && s.mmdbid_q === s.mmdbid_t && "query" === r && (O = v + s.postfix + "_" + _);
                S = e.moleculeInfor[D].kind;
                var R = e.moleculeInfor[D].color;
                A = e.moleculeInfor[D].sid;
                h[O] = S,
                p[O] = R,
                "protein" == S && (o.organism = e.moleculeInfor[D].taxonomyName.toLowerCase()),
                void 0 !== A && (s.chainid2sid[O] = A),
                void 0 === o.pdbid_chain2title && (o.pdbid_chain2title = {}),
                o.pdbid_chain2title[O] = e.moleculeInfor[D].name,
                "query" == r && _ == s.chain_q ? s.alignmolid2color[0][D] = k.toString() : "target" == r && _ == s.chain_t && (s.alignmolid2color[1][D] = k.toString()),
                ++k
            }
    }
    if (s.countNextresiArray = {},
    s.bFullUi)
        if ("mmdbid" === i || "mmcifid" === i)
            for (var _ in e.sequences) {
                var T = e.sequences[_];
                O = t + "_" + _;
                void 0 !== s.mmdbid_q && s.mmdbid_q === s.mmdbid_t && "query" === r && (O = t + s.postfix + "_" + _),
                s.getMissingResidues(T, i, O)
            }
        else if ("align" === i)
            for (var O in s.chainid2seq) {
                T = s.chainid2seq[O];
                s.getMissingResidues(T, i, O)
            }
    var E, I, H, L, $ = {}, P = "", F = "", M = "", N = "", z = "", q = "", j = 0, U = "", B = !0, G = !1, V = "", W = o.isCalphaPhosOnly(a), Y = 0, X = {};
    for (var u in a) {
        var Q;
        ++l,
        $[u] = l,
        (ue = a[u]).serial = l,
        "mmdbid" === i || "mmcifid" === i ? Q = t : "align" === i && (Q = d[l]);
        if ("mmdbid" === i || "align" === i)
            ue.resi_ori = parseInt(ue.resi),
            ue.resi = ue.ids.r,
            ue.resi,
            ue.resi_ori,
            -1 !== (Z = ue.resn.indexOf(" ")) && 0 != Z && (ue.resn = ue.resn.substr(0, Z));
        else
            ue.resi = parseInt(ue.resi);
        if (void 0 !== ue.chain || "mmdbid" !== i && "align" !== i)
            ue.chain = "" === ue.chain ? "Misc" : ue.chain;
        else if ("mmdbid" === i)
            if (D = ue.ids.m,
            void 0 !== o.molid2chain[D]) {
                var Z = o.molid2chain[D].indexOf("_");
                ue.chain = o.molid2chain[D].substr(Z + 1)
            } else {
                var K = "Misc";
                ue.resn == U && "solvent" !== h[z] && "HOH" !== ue.resn && ue.resn != ue.elem || ++Y,
                ue.resi = Y,
                ue.chain = K
            }
        else if ("align" === i)
            if (D = ue.ids.m,
            void 0 !== o.pdbid_molid2chain[Q + "_" + D])
                ue.chain = o.pdbid_molid2chain[Q + "_" + D];
            else {
                K = "Misc";
                ue.resn == U && "solvent" !== h[z] && "HOH" !== ue.resn && ue.resn != ue.elem || ++Y,
                ue.resi = Y,
                ue.chain = K
            }
        if (ue.chain = ue.chain.trim(),
        "mmdbid" !== i && "align" !== i || (ue.structure = Q,
        "mmdbid" === i && void 0 !== s.mmdbid_q && s.mmdbid_q === s.mmdbid_t && "query" === r && (ue.structure += s.postfix)),
        (z = (N = ue.structure) + "_" + ue.chain) !== F && (j = 0),
        ue.resi !== j && (L = z !== F ? I = void 0 : (I = E,
        H)),
        "mmdbid" === i) {
            if (ue.coord = new THREE.Vector3(ue.coord[0],ue.coord[1],ue.coord[2]),
            void 0 !== s.q_rotation)
                if ("target" === r)
                    ue.coord.x += s.t_trans_add.x,
                    ue.coord.y += s.t_trans_add.y,
                    ue.coord.z += s.t_trans_add.z;
                else if ("query" === r) {
                    ue.coord.x -= s.q_trans_sub.x,
                    ue.coord.y -= s.q_trans_sub.y,
                    ue.coord.z -= s.q_trans_sub.z;
                    var J = ue.coord.x * s.q_rotation.x1 + ue.coord.y * s.q_rotation.y1 + ue.coord.z * s.q_rotation.z1
                      , ee = ue.coord.x * s.q_rotation.x2 + ue.coord.y * s.q_rotation.y2 + ue.coord.z * s.q_rotation.z2
                      , te = ue.coord.x * s.q_rotation.x3 + ue.coord.y * s.q_rotation.y3 + ue.coord.z * s.q_rotation.z3;
                    ue.coord.x = J,
                    ue.coord.y = ee,
                    ue.coord.z = te
                }
        } else
            ue.coord = new THREE.Vector3(ue.coord.x,ue.coord.y,ue.coord.z);
        var ie = o.residueName2Abbr(ue.resn.substr(0, 3));
        "mmdbid" !== i && "align" !== i || !s.bFullUi || (void 0 === s.mmdbMolidResid2mmdbChainResi && (s.mmdbMolidResid2mmdbChainResi = {}),
        s.mmdbMolidResid2mmdbChainResi[Q + "_" + ue.ids.m + "_" + ue.ids.r] = Q + "_" + ue.chain + "_" + ue.resi),
        o.pmin.min(ue.coord),
        o.pmax.max(ue.coord),
        o.psum.add(ue.coord);
        var ne = void 0 === s.cfg.mmcifid && "mmcif" != s.InputfileType ? "protein" === h[z] : "p" === ue.mt
          , re = void 0 === s.cfg.mmcifid && "mmcif" != s.InputfileType ? "nucleotide" === h[z] : "n" === ue.mt
          , se = void 0 === s.cfg.mmcifid && "mmcif" != s.InputfileType ? "solvent" === h[z] : "s" === ue.mt
          , oe = void 0 === s.cfg.mmcifid && "mmcif" != s.InputfileType ? "ligand" === h[z] || void 0 !== h[z] && -1 !== h[z].indexOf("other") || void 0 === h[z] : "l" === ue.mt;
        if ("Misc" !== ue.chain && "other" !== h[z] || "protein" === X[z] || "nucleotide" === X[z] || ("CA" === ue.name ? X[z] = "protein" : "P" === ue.name ? X[z] = "nucleotide" : X[z] = "chemical"),
        ne || re ? (ne ? (o.proteins[l] = 1,
        "CA" === ue.name && (o.calphas[l] = 1),
        "N" !== ue.name && "CA" !== ue.name && "C" !== ue.name && "O" !== ue.name && (o.sidec[l] = 1)) : re && (o.nucleotides[l] = 1,
        ("O3'" == ue.name || "O3*" == ue.name || W && "P" == ue.name) && (o.nucleotidesO3[l] = 1)),
        ue.het = !1) : se ? (o.water[l] = 1,
        ue.het = !0) : oe && ("HOH" === ue.resn || "O" === ue.resn ? o.water[l] = 1 : ue.elem === ue.resn ? o.ions[l] = 1 : o.chemicals[l] = 1,
        ue.het = !0),
        "mmdbid" === i ? ue.het ? ue.color = o.atomColors[ue.elem] || o.defaultAtomColor : ue.color = void 0 !== p[z] ? o.thr(p[z]) : o.chargeColors[ue.resn] : void 0 !== ue.color && (ue.color = o.thr(ue.color)),
        " " !== ue.resn.charAt(0) && " " === ue.resn.charAt(1) && (ue.resn = ue.resn.charAt(0)),
        ue.het || "C" !== ue.name || (E = l),
        ue.het || "O" !== ue.name || (H = l),
        !ue.het && "N" === ue.name && void 0 !== I && void 0 !== L) {
            var ae = o.atoms[I].coord.distanceTo(o.atoms[L].coord)
              , le = ue.coord.x + (o.atoms[I].coord.x - o.atoms[L].coord.x) / ae
              , de = ue.coord.y + (o.atoms[I].coord.y - o.atoms[L].coord.y) / ae
              , ce = ue.coord.z + (o.atoms[I].coord.z - o.atoms[L].coord.z) / ae;
            ue.hcoord = new THREE.Vector3(le,de,ce)
        }
        "HOH" == ue.resn && (o.water[l] = 1),
        o.atoms[l] = ue,
        o.dAtoms[l] = 1,
        o.hAtoms[l] = 1;
        O = ue.structure + "_" + ue.chain;
        void 0 === o.chains[O] && (o.chains[O] = {}),
        o.chains[O][l] = 1;
        var he = O + "_" + ue.resi;
        void 0 === o.residues[he] && (o.residues[he] = {}),
        o.residues[he][l] = 1,
        (q = z + "_" + ue.resi) !== M && z !== F && (B = !0,
        "" !== P && (void 0 === o.structures[P] && (o.structures[P] = []),
        o.structures[P].push(F))),
        o.residueId2Name[he] = ie;
        var pe = "-";
        if ("helix" === ue.ss ? pe = "H" : "sheet" === ue.ss ? pe = "E" : ue.het || re ? pe = "o" : !ue.het && o.residueColors.hasOwnProperty(ue.resn.toUpperCase()) ? pe = "c" : "coil" === ue.ss && (pe = "c"),
        o.secondaries[ue.structure + "_" + ue.chain + "_" + ue.resi] = pe,
        (ue.resi != j || D != V) && s.bFullUi)
            if (void 0 === o.chainsSeq[O] && (B = !(o.chainsSeq[O] = [])),
            B && !G && void 0 !== o.chainsSeq[O][ue.resi - 1])
                o.chainsSeq[O][ue.resi - 1].name = ie;
            else if (!B || !o.chainsSeq[O].hasOwnProperty(ue.resi - 1)) {
                var me = {};
                me.resi = ue.resi,
                me.name = ie;
                ue.resi % 10 == 0 && ue.resi.toString(),
                o.chainsSeq[O].push(me),
                G = !0
            }
        j = ue.resi,
        U = ue.resn,
        P = N,
        F = z,
        M = q,
        V = D,
        0
    }
    for (var O in "target" === r && (s.lastTargetSerial = l),
    X)
        if (!(Object.keys(o.chains[O]).length < 10) && "chemical" !== X[O])
            for (var l in o.chains[O]) {
                var ue = o.atoms[l];
                delete o.chemicals[l],
                ue.het = !1,
                "protein" === X[O] ? (o.proteins[l] = 1,
                "CA" === ue.name && (o.calphas[l] = 1),
                "N" !== ue.name && "CA" !== ue.name && "C" !== ue.name && "O" !== ue.name && (o.sidec[l] = 1)) : "nucleotide" === X[O] && (o.nucleotides[l] = 1,
                ("O3'" == ue.name || "O3*" == ue.name || W && "P" == ue.name) && (o.nucleotidesO3[l] = 1))
            }
    if (void 0 === o.structures[N] && (o.structures[N] = []),
    o.structures[N].push(z),
    "mmcifid" !== i)
        for (var u in a) {
            var fe = $[u]
              , ge = void 0 === o.atoms[fe].bonds ? 0 : o.atoms[fe].bonds.length;
            for (y = 0; y < ge; ++y)
                o.atoms[fe].bonds[y] = $[o.atoms[fe].bonds[y]]
        }
    if (e.atoms = {},
    o.cnt = l,
    (o.cnt > o.maxatomcnt || void 0 !== o.biomtMatrices && o.biomtMatrices.length * o.cnt > 10 * o.maxatomcnt) && (s.opts.proteins = "c alpha trace",
    s.opts.nucleotides = "o3 trace"),
    o.maxD = o.pmax.distanceTo(o.pmin),
    o.center = o.psum.multiplyScalar(1 / o.cnt),
    o.maxD < 5 && (o.maxD = 5),
    "mmdbid" === i) {
        if (void 0 !== (xe = e.disulfides))
            for (u = 0,
            f = xe.length; u < f; ++u) {
                var ve = xe[u][0].ca
                  , be = xe[u][1].ca
                  , ye = o.atoms[ve]
                  , Ce = o.atoms[be]
                  , _e = ye.chain
                  , Se = Ce.chain
                  , we = ye.structure + "_" + _e + "_" + ye.resi
                  , Ae = Ce.structure + "_" + Se + "_" + Ce.resi;
                void 0 === o.ssbondpnts[ye.structure] && (o.ssbondpnts[ye.structure] = []),
                o.ssbondpnts[ye.structure].push(we),
                o.ssbondpnts[ye.structure].push(Ae)
            }
    } else if ("mmcifid" === i) {
        var xe;
        if (void 0 !== (xe = e.disulfides)) {
            void 0 === o.ssbondpnts[t] && (o.ssbondpnts[t] = []);
            for (u = 0,
            f = xe.length; u < f; ++u) {
                we = xe[u][0],
                Ae = xe[u][1];
                o.ssbondpnts[t].push(we),
                o.ssbondpnts[t].push(Ae)
            }
            for (var ke = Object.keys(o.structures), De = 0, Oe = ke.length; De < Oe; ++De) {
                if ((g = ke[De]) != t) {
                    void 0 === o.ssbondpnts[g] && (o.ssbondpnts[g] = []);
                    for (y = 0,
                    C = o.ssbondpnts[t].length; y < C; ++y) {
                        var Re = o.ssbondpnts[t][y]
                          , Te = (Z = Re.indexOf("_"),
                        g + Re.substr(Z));
                        o.ssbondpnts[g].push(Te)
                    }
                }
            }
        }
    } else if ("align" === i) {
        var Ee = {};
        for (var O in s.chainid2seq)
            if ("protein" == h[O]) {
                var Ie = s.chainid2seq[O];
                for (g = O.substr(0, O.indexOf("_")),
                u = 0,
                f = Ie.length; u < f; ++u)
                    "C" == Ie[u][1] && (null == Ee[g] && (Ee[g] = []),
                    Ee[g].push(O + "_" + Ie[u][0]))
            }
        o.setSsbond(Ee)
    }
    if ("mmcifid" === i ? s.transformToOpmOri(t) : "mmdbid" === i && s.transformToOpmOri(t),
    "align" === i && void 0 !== n && s.bFullUi ? s.setSeqAlign(n, e.alignedStructures) : "mmdbid" === i && "query" === r && s.bFullUi && void 0 !== s.q_rotation && s.setSeqAlignChain(),
    "mmdbid" === i && ("target" === r || "query" === r) && void 0 === s.q_rotation) {
        if ("target" === r || "query" === r)
            for (var u in a) {
                var He = a[u];
                He.coord.x -= o.center.x,
                He.coord.y -= o.center.y,
                He.coord.z -= o.center.z
            }
        "target" === r ? (o.maxD1 = o.maxD,
        o.center1 = o.center) : "query" === r && (o.maxD2 = o.maxD,
        o.center2 = o.center,
        o.maxD2 < o.maxD1 && (o.maxD = o.maxD1),
        o.center = new THREE.Vector3(0,0,0))
    }
    o.oriMaxD = o.maxD,
    o.oriCenter = o.center.clone(),
    s.showTitle(),
    e = {}
}
,
iCn3DUI.prototype.downloadMmtf = function(t) {
    var i = this
      , n = i.icn3d;
    i.setYourNote(t.toUpperCase() + " (MMTF) in iCn3D"),
    n.bCid = void 0,
    MMTF.fetchReduced(t, function(e) {
        if (10 * e.numAtoms > n.maxatomcnt) {
            return 0 == Object.keys(e).length ? void alert("This PDB structure is not found at RCSB...") : (i.deferredOpm = $.Deferred(function() {
                i.loadOpmData(e, t, !1, "mmtf")
            }),
            i.deferredOpm.promise())
        }
        e = null,
        MMTF.fetch(t, function(e) {
            if (0 != Object.keys(e).length)
                return i.deferredOpm = $.Deferred(function() {
                    i.loadOpmData(e, t, !0, "mmtf")
                }),
                i.deferredOpm.promise();
            alert("This PDB structure is not found at RCSB...")
        }, function(e) {})
    }, function(e) {})
}
,
iCn3DUI.prototype.parseMmtfData = function(e, t, l) {
    var d = this
      , c = d.icn3d;
    e.numAtoms;
    c.init();
    var h = new THREE.Vector3(9999,9999,9999)
      , p = new THREE.Vector3(-9999,-9999,-9999)
      , m = new THREE.Vector3
      , i = e.structureId;
    if (c.molTitle = e.title,
    void 0 !== e.bioAssemblyList && void 0 !== e.bioAssemblyList[0] && 1 < e.bioAssemblyList[0].transformList.length) {
        c.biomtMatrices = [];
        for (var n = 0, r = e.bioAssemblyList[0].transformList.length; n < r; ++n) {
            var s = (new THREE.Matrix4).fromArray(e.bioAssemblyList[0].transformList[n].matrix).transpose();
            c.biomtMatrices.push(s)
        }
    }
    void 0 !== c.biomtMatrices && 1 < c.biomtMatrices.length ? ($("#" + d.pre + "assemblyWrapper").show(),
    c.asuCnt = c.biomtMatrices.length) : $("#" + d.pre + "assemblyWrapper").hide();
    var u, f, g, v, b, y, C, _, S, w, A, x, k, D, O, R, T, E, I, H = {}, L = [], P = "coil", F = "", M = 0, N = 0, o = {
        onModel: function(e) {
            u = 0 === e.modelIndex ? i : i + (e.modelIndex + 1).toString()
        },
        onChain: function(e) {
            f = e.chainName;
            var t = u + "_" + f;
            void 0 === c.structures[u] && (c.structures[u] = []),
            c.structures[u].push(t)
        },
        onGroup: function(e) {
            g = e.groupName,
            v = e.groupId;
            var t = u + "_" + f + "_" + v;
            b = 0 === e.secStruct || 2 === e.secStruct || 4 === e.secStruct ? "helix" : 3 === e.secStruct ? "sheet" : -1 === e.secStruct ? "other" : "coil";
            var i = !1;
            if (f !== F) {
                if (I = T = void 0,
                C = "coil" !== b && "other" !== b ? !(y = !0) : y = !1,
                "coil" !== P && "other" !== P) {
                    var n = u + "_" + F + "_" + M.toString();
                    for (var r in c.residues[n])
                        c.atoms[r].ssbegin = !1,
                        c.atoms[r].ssend = !0
                }
            } else
                T = R,
                I = E,
                b !== P ? "coil" === P || "other" === P ? C = !(y = !0) : "coil" === b || "other" === b ? C = y = !(i = !0) : ("sheet" === P && "helix" === b || "helix" === P && "sheet" === b) && (C = !(y = i = !0)) : C = y = !1;
            if (i) {
                n = u + "_" + f + "_" + (v - 1).toString();
                for (var r in c.residues[n])
                    c.atoms[r].ssbegin = !1,
                    c.atoms[r].ssend = !0
            }
            P = b,
            F = f,
            M = v,
            w = S = _ = !1,
            "non-polymer" === e.chemCompType.toLowerCase() || "other" === e.chemCompType.toLowerCase() || -1 !== e.chemCompType.toLowerCase().indexOf("saccharide") ? _ = !0 : -1 !== e.chemCompType.toLowerCase().indexOf("peptide") ? S = !0 : -1 !== e.chemCompType.toLowerCase().indexOf("dna") || -1 !== e.chemCompType.toLowerCase().indexOf("rna") ? w = !0 : S = !0;
            var s = u + "_" + f
              , o = {};
            o.resi = v,
            o.name = c.residueName2Abbr(g),
            c.residueId2Name[t] = o.name;
            o.resi % 10 == 0 && o.resi.toString();
            var a = "-";
            "helix" === b ? a = "H" : "sheet" === b ? a = "E" : "coil" === b ? a = "c" : "other" === b && (a = "o"),
            void 0 === c.chainsSeq[s] && (c.chainsSeq[s] = []),
            d.bFullUi && c.chainsSeq[s].push(o),
            c.secondaries[t] = a
        },
        onAtom: function(e) {
            if (A = e.element,
            x = e.atomName,
            k = new THREE.Vector3(e.xCoord,e.yCoord,e.zCoord),
            D = e.bFactor,
            O = e.altLoc,
            "\0" === e.altLoc && (O = ""),
            "" === O || "A" === O) {
                ++N,
                "SG" === x && L.push(N),
                H[e.atomIndex] = N;
                var t = {
                    het: _,
                    serial: N,
                    name: x,
                    alt: O,
                    resn: g,
                    structure: u,
                    chain: f,
                    resi: v,
                    coord: k,
                    b: D,
                    elem: A,
                    bonds: [],
                    bondOrder: [],
                    ss: b,
                    ssbegin: y,
                    ssend: C
                };
                if (t.het || "C" !== t.name || (R = N),
                t.het || "O" !== t.name || (E = N),
                !t.het && "N" === t.name && void 0 !== T && void 0 !== I) {
                    var i = c.atoms[T].coord.distanceTo(c.atoms[I].coord)
                      , n = t.coord.x + (c.atoms[T].coord.x - c.atoms[I].coord.x) / i
                      , r = t.coord.y + (c.atoms[T].coord.y - c.atoms[I].coord.y) / i
                      , s = t.coord.z + (c.atoms[T].coord.z - c.atoms[I].coord.z) / i;
                    t.hcoord = new THREE.Vector3(n,r,s)
                }
                c.atoms[N] = t,
                h.min(k),
                p.max(k),
                m.add(k);
                var o = u + "_" + f
                  , a = o + "_" + v;
                void 0 === c.chains[o] && (c.chains[o] = {}),
                c.chains[o][N] = 1,
                void 0 === c.residues[a] && (c.residues[a] = {}),
                c.residues[a][N] = 1,
                S ? (c.proteins[N] = 1,
                "CA" === x && (c.calphas[N] = 1),
                "N" !== x && "CA" !== x && "C" !== x && "O" !== x && (c.sidec[N] = 1)) : w ? (c.nucleotides[N] = 1,
                (!l || "O3'" != x && "O3*" != x) && (l || "P" != x) || (c.nucleotidesO3[N] = 1)) : A.toLowerCase() === g.toLowerCase() ? c.ions[N] = 1 : "HOH" === g || "WAT" === g || "SQL" === g || "H2O" === g || "W" === g || "DOD" === g || "D3O" === g ? c.water[N] = 1 : c.chemicals[N] = 1,
                c.dAtoms[N] = 1,
                c.hAtoms[N] = 1
            }
        },
        onBond: function(e) {
            var t = H[e.atomIndex1]
              , i = H[e.atomIndex2];
            if (H.hasOwnProperty(e.atomIndex1) && H.hasOwnProperty(e.atomIndex2) && (c.atoms[t].bonds.push(i),
            c.atoms[i].bonds.push(t),
            _)) {
                var n = e.bondOrder;
                c.atoms[t].bondOrder.push(n),
                c.atoms[i].bondOrder.push(n),
                2 === n ? (c.doublebonds[t + "_" + i] = 1,
                c.doublebonds[i + "_" + t] = 1) : 3 === n && (c.triplebonds[t + "_" + i] = 1,
                c.triplebonds[i + "_" + t] = 1)
            }
        }
    };
    MMTF.traverse(e, o);
    var a = L.length;
    for (n = 0,
    r = a; n < r; ++n)
        for (var z = n + 1; z < r; ++z) {
            var q = L[n]
              , j = L[z]
              , U = c.atoms[q]
              , B = c.atoms[j];
            if (-1 !== $.inArray(j, U.bonds)) {
                var G = U.structure + "_" + U.chain + "_" + U.resi
                  , V = B.structure + "_" + B.chain + "_" + B.resi;
                void 0 === c.ssbondpnts[U.structure] && (c.ssbondpnts[U.structure] = []),
                c.ssbondpnts[U.structure].push(G),
                c.ssbondpnts[U.structure].push(V)
            }
        }
    c.cnt = N,
    (c.cnt > c.maxatomcnt || void 0 !== c.biomtMatrices && c.biomtMatrices.length * c.cnt > 10 * c.maxatomcnt) && (d.opts.proteins = "c alpha trace",
    d.opts.nucleotides = "o3 trace"),
    c.pmin = h,
    c.pmax = p,
    c.maxD = p.distanceTo(h),
    c.center = m.multiplyScalar(1 / c.cnt),
    c.maxD < 5 && (c.maxD = 5),
    c.oriMaxD = c.maxD,
    c.oriCenter = c.center.clone(),
    d.transformToOpmOri(t),
    void 0 === d.cfg.align && 1 == Object.keys(c.structures).length && $("#" + d.pre + "alternateWrapper").hide(),
    c.setAtomStyleByOptions(d.opts),
    c.setColorByOptions(d.opts, c.atoms),
    d.renderStructure(),
    d.showTitle(),
    void 0 !== d.cfg.rotate && d.rotStruc(d.cfg.rotate, !0)
}
,
iCn3DUI.prototype.downloadPdb = function(t) {
    var e, i = this, n = i.icn3d;
    e = "https://files.rcsb.org/view/" + t + ".pdb",
    n.bCid = void 0,
    i.setYourNote(t.toUpperCase() + " (PDB) in iCn3D"),
    $.ajax({
        url: e,
        dataType: "text",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        beforeSend: function() {
            i.showLoading()
        },
        complete: function() {},
        success: function(e) {
            return i.deferredOpm = $.Deferred(function() {
                i.loadOpmData(e, t, void 0, "pdb")
            }),
            i.deferredOpm.promise()
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit && $.ajax(this)
        }
    })
}
,
iCn3DUI.prototype.downloadOpm = function(t) {
    var e, i = this, n = i.icn3d;
    e = "https://opm-assets.storage.googleapis.com/pdb/" + t.toLowerCase() + ".pdb",
    i.setYourNote(t.toUpperCase() + " (OPM) in iCn3D"),
    n.bCid = void 0,
    n.bStopRotate = !0,
    $.ajax({
        url: e,
        dataType: "text",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        beforeSend: function() {
            i.showLoading()
        },
        complete: function() {},
        success: function(e) {
            n.bOpm = !0,
            i.loadPdbData(e, t, n.bOpm),
            $("#" + i.pre + "selectplane_z1").val(n.halfBilayerSize),
            $("#" + i.pre + "selectplane_z2").val(-n.halfBilayerSize),
            $("#" + i.pre + "extra_mem_z").val(n.halfBilayerSize),
            $("#" + i.pre + "intra_mem_z").val(-n.halfBilayerSize)
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : alert("This is probably not a transmembrane protein. It has no data in Orientations of Proteins in Membranes (OPM) database.")
        }
    })
}
,
iCn3DUI.prototype.downloadUrl = function(e, t) {
    var i = this;
    i.icn3d.bCid = void 0,
    $.ajax({
        url: e,
        dataType: "text",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        beforeSend: function() {
            i.showLoading()
        },
        complete: function() {},
        success: function(e) {
            i.InputfileData = e,
            "pdb" === (i.InputfileType = t) ? i.loadPdbData(e) : "mol2" === t ? i.loadMol2Data(e) : "sdf" === t ? i.loadSdfData(e) : "xyz" === t ? i.loadXyzData(e) : "mmcif" === t && i.loadMmcifData(e)
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit && $.ajax(this)
        }
    })
}
,
iCn3DUI.prototype.addOneDumAtom = function(e, t, i, n, r, s) {
    var o = this.icn3d
      , a = {
        het: !0,
        serial: ++s,
        name: t,
        alt: void 0,
        resn: "DUM",
        structure: e,
        chain: "MEM",
        resi: 1,
        coord: new THREE.Vector3(i,n,r),
        b: void 0,
        elem: t,
        bonds: [],
        ss: "",
        ssbegin: !1,
        ssend: !1,
        color: o.atomColors[t]
    };
    return o.atoms[s] = a,
    o.chains[e + "_MEM"][s] = 1,
    o.residues[e + "_MEM_1"][s] = 1,
    o.chemicals[s] = 1,
    o.dAtoms[s] = 1,
    o.hAtoms[s] = 1,
    s
}
,
iCn3DUI.prototype.addMemAtoms = function(e, t, i) {
    var n = this.icn3d;
    t = t.toUpperCase(),
    n.structures[t].push(t + "_MEM"),
    n.chains[t + "_MEM"] = {},
    n.residues[t + "_MEM_1"] = {},
    n.chainsSeq[t + "_MEM"] = [{
        name: "DUM",
        resi: 1
    }];
    for (var r = Object.keys(n.atoms).length, s = 0; s < 1e3; ++s)
        if (!n.atoms.hasOwnProperty(r + s)) {
            r = r + s - 1;
            break
        }
    for (s = 0; s < 81; ++s)
        for (var o = 0; o < 81; ++o) {
            0;
            var a = 2 * s - 80
              , l = 2 * o - 80;
            if (Math.sqrt(a * a + l * l) < i) {
                var d = -e - .4;
                r = this.addOneDumAtom(t, "N", a, l, d, r),
                d = e + .4,
                r = this.addOneDumAtom(t, "O", a, l, d, r)
            }
        }
}
,
iCn3DUI.prototype.transformToOpmOri = function(e) {
    var t = this.icn3d;
    if (void 0 !== t.rmsd_supr && void 0 !== t.rmsd_supr.rot) {
        var i = t.rmsd_supr.rot
          , n = t.rmsd_supr.trans1
          , r = t.rmsd_supr.trans2
          , s = (t.rmsd_supr.rmsd,
        0);
        for (var o in t.atoms) {
            var a = t.atoms[o];
            a.coord = t.transformMemPro(a.coord, i, n, r);
            var l = a.coord.x * a.coord.x + a.coord.y * a.coord.y;
            Math.abs(a.coord.z) <= 25 && s < l && (s = l)
        }
        this.addMemAtoms(t.halfBilayerSize, e, Math.sqrt(s)),
        t.bStopRotate = !0,
        t.bOpm = !0,
        $("#" + this.pre + "togglememli").show(),
        $("#" + this.pre + "adjustmemli").show(),
        $("#" + this.pre + "selectplaneli").show(),
        $("#" + this.pre + "anno_transmemli").show()
    } else
        t.bOpm = !1
}
,
iCn3DUI.prototype.transformToOpmOriForAlign = function(e, t, i) {
    var n = this
      , r = n.icn3d;
    if (void 0 !== t) {
        var s = r.getChainCalpha(r.chains, r.atoms, i, e)
          , o = 1 == Object.keys(s.chainresiCalphaHash).length || 1 == Object.keys(t.chainresiCalphaHash).length
          , a = []
          , l = [];
        for (var d in s.chainresiCalphaHash)
            if (t.chainresiCalphaHash.hasOwnProperty(d)) {
                var c = s.chainresiCalphaHash[d]
                  , h = t.chainresiCalphaHash[d];
                if (c.length != h.length && !o || (a = a.concat(c),
                l = l.concat(h)),
                500 < a.length)
                    break
            }
        var p = a.length < l.length ? a.length : l.length;
        if (4 <= p)
            if (r.rmsd_supr = r.getRmsdSupr(a, l, p),
            void 0 !== r.rmsd_supr.rot && r.rmsd_supr.rmsd < .1) {
                var m = r.rmsd_supr.rot
                  , u = r.rmsd_supr.trans1
                  , f = r.rmsd_supr.trans2
                  , g = r.rmsd_supr.rmsd;
                n.setLogCmd("RMSD of alignment to OPM: " + g.toPrecision(4), !1),
                $("#" + n.pre + "realignrmsd").val(g.toPrecision(4)),
                n.cfg.bSidebyside || n.openDlg("dl_rmsd", "RMSD of alignment to OPM");
                var v = 0;
                for (var b in r.atoms) {
                    var y = r.atoms[b];
                    y.coord = r.transformMemPro(y.coord, m, u, f);
                    var C = y.coord.x * y.coord.x + y.coord.y * y.coord.y;
                    Math.abs(y.coord.z) <= 25 && v < C && (v = C)
                }
                r.center = t.center,
                r.oriCenter = r.center.clone(),
                n.addMemAtoms(r.halfBilayerSize, e, Math.sqrt(v)),
                r.bStopRotate = !0,
                r.bOpm = !0,
                $("#" + n.pre + "togglememli").show(),
                $("#" + n.pre + "adjustmemli").show(),
                $("#" + n.pre + "selectplaneli").show(),
                $("#" + n.pre + "anno_transmemli").show()
            } else
                r.bOpm = !1;
        else
            r.bOpm = !1
    }
}
,
iCn3DUI.prototype.alignCoords = function(e, t, i, n) {
    var r = this
      , s = r.icn3d
      , o = e.length < t.length ? e.length : t.length;
    if (o < 4 && alert("Please select at least four residues in each structure..."),
    4 <= o && (s.rmsd_supr = s.getRmsdSupr(e, t, o),
    void 0 !== s.rmsd_supr.rot)) {
        var a = s.rmsd_supr.rot;
        null === a[0] && alert("Please select more residues in each structure...");
        var l = s.rmsd_supr.trans1
          , d = s.rmsd_supr.trans2
          , c = s.rmsd_supr.rmsd;
        c && (r.setLogCmd("realignment RMSD: " + c.toPrecision(4), !1),
        $("#" + r.pre + "realignrmsd").val(c.toPrecision(4)),
        r.cfg.bSidebyside || r.openDlg("dl_rmsd", "Realignment RMSD"));
        for (var h = 0, p = s.structures[i].length; h < p; ++h) {
            var m = s.structures[i][h];
            for (var u in s.chains[m]) {
                var f = s.atoms[u];
                f.coord = s.transformMemPro(f.coord, a, l, d)
            }
        }
        r.bRealign = !0,
        n || r.setSeqAlignForRealign();
        var g = r.getAlignSequencesAnnotations(Object.keys(s.alnChains), void 0, void 0, !1);
        $("#" + r.pre + "dl_sequence2").html(g.sequencesHtml),
        $("#" + r.pre + "dl_sequence2").width(r.RESIDUE_WIDTH * g.maxSeqCnt + 200),
        r.openDlg("dl_alignment", "Select residues in aligned sequences"),
        r.opts.color = "grey",
        s.setColorByOptions(r.opts, s.dAtoms),
        r.opts.color = "identity",
        s.setColorByOptions(r.opts, s.hAtoms),
        s.draw()
    }
}
,
iCn3DUI.prototype.loadPdbData = function(t, e, i) {
    var n = this
      , r = n.icn3d;
    if (r.loadPDB(t, e, i),
    void 0 === n.cfg.opmid && n.transformToOpmOri(e),
    void 0 !== r.biomtMatrices && 1 < r.biomtMatrices.length ? ($("#" + n.pre + "assemblyWrapper").show(),
    r.asuCnt = r.biomtMatrices.length) : $("#" + n.pre + "assemblyWrapper").hide(),
    void 0 !== r.emd ? ($("#" + n.pre + "mapWrapper1").hide(),
    $("#" + n.pre + "mapWrapper2").hide(),
    $("#" + n.pre + "mapWrapper3").hide()) : ($("#" + n.pre + "emmapWrapper1").hide(),
    $("#" + n.pre + "emmapWrapper2").hide(),
    $("#" + n.pre + "emmapWrapper3").hide()),
    !r.bSecondaryStructure)
        return n.deferredSecondary = $.Deferred(function() {
            var e = r.isCalphaPhosOnly(r.hash2Atoms(r.proteins)) ? "1" : "0";
            n.loadPdbDataBase(t, e, i)
        }),
        n.deferredSecondary.promise();
    n.loadPdbDataRender()
}
,
iCn3DUI.prototype.loadPdbDataBase = function(e, t, i) {
    var y = this
      , C = y.icn3d
      , n = y.baseUrl + "mmcifparser/mmcifparser.cgi"
      , r = "";
    if (i) {
        var s = e.split("\n");
        for (var o in s) {
            var a = s[o];
            if ("DUM" === a.substr(17, 3))
                break;
            r += a + "\n"
        }
    } else
        r = e;
    $.ajax({
        url: n,
        type: "POST",
        data: {
            dssp: "t",
            calphaonly: t,
            pdbfile: r
        },
        dataType: "jsonp",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            var t = e;
            if (-1 === JSON.stringify(e).indexOf("Oops there was a problem"))
                for (var i in C.chainsSeq)
                    for (var n = i.indexOf("_"), r = i.substr(n + 1), s = C.chainsSeq[i], o = "coil", a = 0, l = s.length; a < l; ++a) {
                        var d, c = s[a].resi, h = r + "_" + c, p = "c";
                        t.hasOwnProperty(h) ? p = t[h] : t.hasOwnProperty(" _" + c) ? p = t[" _" + c] : t.hasOwnProperty("_" + c) && (p = t["_" + c]),
                        d = "H" === p ? "helix" : "E" === p ? "sheet" : "coil";
                        var m = i + "_" + c;
                        C.secondaries[m] = p;
                        var u, f, g = 0;
                        if (d !== o ? "coil" === o ? f = !(u = !0) : "coil" === d ? f = u = !(g = 2) : ("sheet" === o && "helix" === d || "helix" === o && "sheet" === d) && (g = 1,
                        f = !(u = !0)) : f = u = !1,
                        1 == g) {
                            var v = i + "_" + (c - 1).toString();
                            for (var b in C.residues[v])
                                C.atoms[b].ssbegin = !0,
                                C.atoms[b].ssend = !1
                        } else if (2 == g) {
                            v = i + "_" + (c - 1).toString();
                            for (var b in C.residues[v])
                                C.atoms[b].ssbegin = !1,
                                C.atoms[b].ssend = !0
                        }
                        for (var b in C.residues[m])
                            C.atoms[b].ss = d,
                            C.atoms[b].ssbegin = u,
                            C.atoms[b].ssend = f;
                        o = d
                    }
            else
                console.log("DSSP calculation had a problem with this structure...");
            y.loadPdbDataRender(),
            void 0 !== y.deferredSecondary && y.deferredSecondary.resolve()
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : (y.loadPdbDataRender(),
            void 0 !== y.deferredSecondary && y.deferredSecondary.resolve())
        }
    })
}
,
iCn3DUI.prototype.loadOpmData = function(n, r, s, o, a) {
    var e, l = this, t = l.icn3d;
    e = "https://www.ncbi.nlm.nih.gov/Structure/mmdb/mmdb_strview.cgi?v=2&program=icn3d&opm&uid=" + (r = r || "stru").toLowerCase(),
    $.ajax({
        url: e,
        dataType: "jsonp",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            l.setOpmData(e),
            $("#" + l.pre + "selectplane_z1").val(t.halfBilayerSize),
            $("#" + l.pre + "selectplane_z2").val(-t.halfBilayerSize),
            $("#" + l.pre + "extra_mem_z").val(t.halfBilayerSize),
            $("#" + l.pre + "intra_mem_z").val(-t.halfBilayerSize),
            l.parseAtomData(n, r, s, o, a)
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : l.parseAtomData(n, r, s, o, a)
        }
    })
}
,
iCn3DUI.prototype.parseAtomData = function(e, t, i, n, r) {
    var s = this
      , o = s.icn3d;
    "mmtf" === n ? (s.parseMmtfData(e, t, i),
    void 0 !== s.deferredOpm && s.deferredOpm.resolve()) : "mmcif" === n ? (s.loadAtomDataIn(e, e.mmcif, "mmcifid", void 0, void 0),
    s.loadMmcifOpmDataPart2(e, t),
    void 0 !== s.deferredOpm && s.deferredOpm.resolve()) : "pdb" === n ? (s.loadPdbData(e, t),
    void 0 !== s.deferredOpm && s.deferredOpm.resolve()) : "align" === n && (o.bOpm ? (s.downloadAlignmentPart2(t),
    void 0 !== s.deferredOpm && s.deferredOpm.resolve()) : void 0 !== r ? s.loadOpmData(e, r, i, n) : (s.downloadAlignmentPart2(t),
    void 0 !== s.deferredOpm && s.deferredOpm.resolve()))
}
,
iCn3DUI.prototype.loadOpmDataForAlign = function(r, s, o) {
    var e, a = this, l = a.icn3d;
    e = "https://opm-assets.storage.googleapis.com/pdb/" + o[0].toLowerCase() + ".pdb",
    $.ajax({
        url: e,
        dataType: "text",
        cache: !0,
        success: function(e) {
            a.selectedPdbid = o[0],
            l.bOpm = !0;
            var t = l.loadPDB(e, o[0], l.bOpm, !0);
            $("#" + a.pre + "selectplane_z1").val(l.halfBilayerSize),
            $("#" + a.pre + "selectplane_z2").val(-l.halfBilayerSize),
            $("#" + a.pre + "extra_mem_z").val(l.halfBilayerSize),
            $("#" + a.pre + "intra_mem_z").val(-l.halfBilayerSize),
            l.init(),
            a.downloadAlignmentPart2(r, s, t),
            void 0 !== a.deferredOpm && a.deferredOpm.resolve()
        },
        error: function(e, t, i) {
            var n = "https://opm-assets.storage.googleapis.com/pdb/" + o[1].toLowerCase() + ".pdb";
            $.ajax({
                url: n,
                dataType: "text",
                cache: !0,
                success: function(e) {
                    a.selectedPdbid = o[1],
                    l.bOpm = !0;
                    var t = l.loadPDB(e, o[1], l.bOpm, !0);
                    $("#" + a.pre + "selectplane_z1").val(l.halfBilayerSize),
                    $("#" + a.pre + "selectplane_z2").val(-l.halfBilayerSize),
                    $("#" + a.pre + "extra_mem_z").val(l.halfBilayerSize),
                    $("#" + a.pre + "intra_mem_z").val(-l.halfBilayerSize),
                    l.init(),
                    a.downloadAlignmentPart2(r, s, t),
                    void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                },
                error: function(e, t, i) {
                    l.init(),
                    a.downloadAlignmentPart2(r, s),
                    void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                }
            })
        }
    })
}
,
iCn3DUI.prototype.loadOpmDataForChainalign = function(r, s, o) {
    var e, a = this, l = a.icn3d;
    e = "https://opm-assets.storage.googleapis.com/pdb/" + o[0].toLowerCase() + ".pdb",
    $.ajax({
        url: e,
        dataType: "text",
        cache: !0,
        success: function(e) {
            a.selectedPdbid = o[0],
            l.bOpm = !0;
            var t = l.loadPDB(e, o[0], l.bOpm, !0);
            $("#" + a.pre + "selectplane_z1").val(l.halfBilayerSize),
            $("#" + a.pre + "selectplane_z2").val(-l.halfBilayerSize),
            $("#" + a.pre + "extra_mem_z").val(l.halfBilayerSize),
            $("#" + a.pre + "intra_mem_z").val(-l.halfBilayerSize),
            l.init(),
            a.downloadChainalignmentPart2(r, s, t),
            void 0 !== a.deferredOpm && a.deferredOpm.resolve()
        },
        error: function(e, t, i) {
            var n = "https://opm-assets.storage.googleapis.com/pdb/" + o[1].toLowerCase() + ".pdb";
            $.ajax({
                url: n,
                dataType: "text",
                cache: !0,
                success: function(e) {
                    a.selectedPdbid = o[1],
                    l.bOpm = !0;
                    var t = l.loadPDB(e, o[1], l.bOpm, !0);
                    $("#" + a.pre + "selectplane_z1").val(l.halfBilayerSize),
                    $("#" + a.pre + "selectplane_z2").val(-l.halfBilayerSize),
                    $("#" + a.pre + "extra_mem_z").val(l.halfBilayerSize),
                    $("#" + a.pre + "intra_mem_z").val(-l.halfBilayerSize),
                    l.init(),
                    a.downloadChainalignmentPart2(r, s, t),
                    void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                },
                error: function(e, t, i) {
                    l.init(),
                    a.downloadChainalignmentPart2(r, s),
                    void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                }
            })
        }
    })
}
,
iCn3DUI.prototype.loadMmcifOpmDataPart2 = function(e, t) {
    var i = this
      , n = i.icn3d;
    1 == Object.keys(n.structures).length && $("#" + i.pre + "alternateWrapper").hide();
    for (var r = void 0 !== e.assembly ? e.assembly : [], s = 0, o = r.length; s < o; ++s) {
        null == n.biomtMatrices[s] && (n.biomtMatrices[s] = (new THREE.Matrix4).identity());
        for (var a = 0, l = r[s].length; a < l; ++a)
            n.biomtMatrices[s].elements[a] = r[s][a]
    }
    void 0 !== n.biomtMatrices && 1 < n.biomtMatrices.length ? ($("#" + i.pre + "assemblyWrapper").show(),
    n.asuCnt = n.biomtMatrices.length) : $("#" + i.pre + "assemblyWrapper").hide(),
    n.setAtomStyleByOptions(i.opts),
    n.setColorByOptions(i.opts, n.atoms),
    i.renderStructure(),
    void 0 !== i.cfg.rotate && i.rotStruc(i.cfg.rotate, !0)
}
,
iCn3DUI.prototype.loadMmdbOpmDataPart2 = function(e, t, i) {
    var n = this
      , r = n.icn3d
      , s = e.pdbId;
    for (var o in void 0 === i && n.setYourNote(s.toUpperCase() + " (MMDB) in iCn3D"),
    e.domains)
        for (var a = e.domains[o].chain, l = e.domains[o].domains, d = 0, c = l.length; d < c; ++d) {
            var h = s + "_" + a + "_3d_domain_" + (d + 1).toString();
            r.tddomains[h] = {};
            for (var p = l[d].intervals, m = {}, u = {}, f = 0, g = p.length; f < g; ++f) {
                var v = Math.round(p[f][0]) - 1
                  , b = Math.round(p[f][1]) - 1;
                if (!m.hasOwnProperty(v) && !u.hasOwnProperty(b)) {
                    m[v] = 1,
                    u[b] = 1;
                    for (var y = v; y <= b; ++y) {
                        var C = s + "_" + a + "_" + (y + 1).toString();
                        r.tddomains[h][C] = 1
                    }
                }
            }
        }
    n.bAssemblyUseAsu = void 0 !== e.asuAtomCount,
    void 0 !== i && (n.bAssemblyUseAsu = !1),
    $.when(n.downloadMmcifSymmetry(t)).then(function() {
        n.downloadMmdbPart2(i)
    })
}
,
iCn3DUI.prototype.loadMmdbOpmData = function(e, t, i) {
    var n = this.icn3d;
    void 0 !== e.opm && void 0 !== e.opm.rot && (n.bOpm = !0,
    this.setOpmData(e)),
    this.parseMmdbDataPart1(e, i),
    this.loadAtomDataIn(e, t, "mmdbid", void 0, i),
    this.loadMmdbOpmDataPart2(e, t, i)
}
,
iCn3DUI.prototype.setOpmData = function(e) {
    var t = this.icn3d;
    void 0 !== e.opm && void 0 !== e.opm.rot ? (t.bOpm = !0,
    t.halfBilayerSize = e.opm.thickness,
    t.rmsd_supr = {},
    t.rmsd_supr.rot = e.opm.rot,
    t.rmsd_supr.trans1 = new THREE.Vector3(e.opm.trans1[0],e.opm.trans1[1],e.opm.trans1[2]),
    t.rmsd_supr.trans2 = new THREE.Vector3(e.opm.trans2[0],e.opm.trans2[1],e.opm.trans2[2]),
    t.rmsd_supr.rmsd = e.opm.rmsd) : t.bOpm = !1
}
,
iCn3DUI.prototype.loadPdbDataRender = function() {
    var e = this
      , t = e.icn3d;
    e.pmid = t.pmid,
    void 0 === e.cfg.align && 1 == Object.keys(t.structures).length && $("#" + e.pre + "alternateWrapper").hide(),
    t.setAtomStyleByOptions(e.opts),
    t.setColorByOptions(e.opts, t.atoms),
    e.renderStructure(),
    e.showTitle(),
    void 0 !== e.cfg.rotate && e.rotStruc(e.cfg.rotate, !0)
}
,
iCn3DUI.prototype.downloadCid = function(i) {
    var n = this
      , r = n.icn3d
      , e = "https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/" + i + "/record/SDF/?record_type=3d&response_type=display";
    n.setYourNote("PubChem CID " + i + " in iCn3D"),
    n.opts.pk = "atom",
    n.opts.chemicals = "ball and stick",
    r.opts.pk = "atom",
    r.opts.chemicals = "ball and stick",
    r.bCid = !0,
    $.ajax({
        url: e,
        dataType: "text",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        beforeSend: function() {
            n.showLoading()
        },
        complete: function() {},
        success: function(e) {
            var t = n.loadSdfAtomData(e, i);
            void 0 === n.cfg.align && 1 == Object.keys(r.structures).length && $("#" + n.pre + "alternateWrapper").hide(),
            t ? (r.setAtomStyleByOptions(n.opts),
            r.setColorByOptions(n.opts, r.atoms),
            n.renderStructure(),
            void 0 !== n.cfg.rotate && n.rotStruc(n.cfg.rotate, !0)) : alert("The SDF of CID " + i + " has the wrong format...")
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit && $.ajax(this)
        }
    }).fail(function() {
        alert("This CID may not have 3D structure...")
    })
}
,
iCn3DUI.prototype.loadSdfData = function(e) {
    var t = this
      , i = t.icn3d
      , n = t.loadSdfAtomData(e);
    void 0 === t.cfg.align && 1 == Object.keys(i.structures).length && $("#" + t.pre + "alternateWrapper").hide(),
    n ? (i.setAtomStyleByOptions(t.opts),
    i.setColorByOptions(t.opts, i.atoms),
    t.renderStructure(),
    void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0)) : alert("The SDF file has the wrong format...")
}
,
iCn3DUI.prototype.loadSdfAtomData = function(e, t) {
    var i = this.icn3d
      , n = e.split(/\r?\n|\r/);
    if (n.length < 4)
        return !1;
    i.init();
    var r = t || 1
      , s = r
      , o = r + "_A"
      , a = o + "_1"
      , l = parseInt(n[3].substr(0, 3));
    if (isNaN(l) || l <= 0)
        return !1;
    var d = parseInt(n[3].substr(3, 3))
      , c = 4;
    if (n.length < c + l + d)
        return !1;
    var h, p, m = l, u = {}, f = {}, g = {}, v = 1;
    for (h = 0; h < m; h++) {
        p = n[c],
        c++;
        var b = p.substr(31, 3).trim()
          , y = parseFloat(p.substr(0, 10))
          , C = parseFloat(p.substr(10, 10))
          , _ = parseFloat(p.substr(20, 10))
          , S = {
            het: !0,
            serial: v,
            name: b,
            resn: "LIG",
            structure: r,
            chain: "A",
            resi: 1,
            coord: new THREE.Vector3(y,C,_),
            b: 0,
            elem: b,
            bonds: [],
            ss: "coil",
            ssbegin: !1,
            ssend: !1,
            bondOrder: []
        };
        i.atoms[v] = S,
        g[v] = 1,
        u[h] = v,
        ++v,
        "H" == b && (f[h] = 1)
    }
    i.dAtoms = g,
    i.hAtoms = g,
    i.structures[s] = [o],
    i.chains[o] = g,
    i.residues[a] = g,
    i.residueId2Name[a] = "LIG",
    void 0 === i.chainsSeq[o] && (i.chainsSeq[o] = []);
    var w = {
        resi: 1,
        name: "LIG"
    };
    for (i.chainsSeq[o].push(w),
    h = 0; h < d; h++) {
        p = n[c],
        c++;
        var A = parseInt(p.substr(0, 3)) - 1 + 0
          , x = parseInt(p.substr(3, 3)) - 1 + 0
          , k = p.substr(6, 3).trim()
          , D = u[A]
          , O = u[x];
        i.atoms[D].bonds.push(O),
        i.atoms[D].bondOrder.push(k),
        i.atoms[O].bonds.push(D),
        i.atoms[O].bondOrder.push(k),
        f.hasOwnProperty(A) || f.hasOwnProperty(x) || ("2" == k ? (i.doublebonds[D + "_" + O] = 1,
        i.doublebonds[O + "_" + D] = 1) : "3" == k && (i.triplebonds[D + "_" + O] = 1,
        i.triplebonds[O + "_" + D] = 1))
    }
    for (var R = !1, T = n.length; c < T; ++c)
        if (-1 != n[c].indexOf("PARTIAL_CHARGES")) {
            R = !0;
            break
        }
    if (R) {
        ++c;
        var E = parseInt(n[c]);
        for (++c,
        h = 0; h < E; ++h,
        ++c) {
            var I = (p = n[c]).split(" ")
              , H = parseInt(I[0])
              , L = parseFloat(I[1]);
            i.atoms[H].crg = L
        }
    }
    for (h in i.atoms)
        "H" !== i.atoms[h].name && (i.atoms[h].bonds2 = i.atoms[h].bonds.concat(),
        i.atoms[h].bondOrder2 = i.atoms[h].bondOrder.concat());
    return this.setMaxD(),
    this.showTitle(),
    !0
}
,
iCn3DUI.prototype.setMaxD = function() {
    var e = this.icn3d
      , t = new THREE.Vector3(9999,9999,9999)
      , i = new THREE.Vector3(-9999,-9999,-9999)
      , n = new THREE.Vector3
      , r = 0;
    for (var s in e.atoms) {
        var o = e.atoms[s]
          , a = o.coord;
        n.add(a),
        t.min(a),
        i.max(a),
        ++r,
        o.het && (0 == o.bonds.length ? e.ions[o.serial] = 1 : e.chemicals[o.serial] = 1)
    }
    e.pmin = t,
    e.pmax = i,
    e.cnt = r,
    e.maxD = e.pmax.distanceTo(e.pmin),
    e.center = n.multiplyScalar(1 / e.cnt),
    e.maxD < 5 && (e.maxD = 5),
    e.oriMaxD = e.maxD,
    e.oriCenter = e.center.clone()
}
,
iCn3DUI.prototype.getFaceCnt = function(e) {
    this.icn3d;
    for (var t = 0, i = 0, n = e.children.length; i < n; ++i) {
        var r = e.children[i];
        if ("Sprite" !== r.type) {
            var s = r.geometry.faces;
            if (void 0 !== s)
                for (var o = 0, a = s.length; o < a; ++o)
                    ++t
        }
    }
    return t
}
,
iCn3DUI.prototype.saveStlFile = function(e) {
    var t = this;
    t.icn3d;
    if (7e4 < Object.keys(t.icn3d.dAtoms).length)
        return alert("Please display a subset of the structure to export 3D files. Then merge the files for 3D printing..."),
        [""];
    t.prepareFor3Dprint();
    var i = 0;
    i += t.getFaceCnt(t.icn3d.mdl),
    i += t.getFaceCnt(t.icn3d.mdl_ghost);
    for (var n = [], r = new Uint8Array(84), s = "STL file for the structure(s) ", o = Object.keys(t.icn3d.structures), a = 0, l = o.length; a < l; ++a)
        s += o[a],
        a < l - 1 && (s += ", ");
    80 < s.length && (s = s.substr(0, 80));
    for (a = 0; a < 80; ++a)
        a < s.length ? r[a] = t.passInt8([s.charCodeAt(a)])[0] : r[a] = t.passInt8([" ".charCodeAt(0)])[0];
    if (r = void 0 !== t.icn3d.biomtMatrices && 1 < t.icn3d.biomtMatrices.length && t.icn3d.bAssembly && Object.keys(t.icn3d.dAtoms).length * t.icn3d.biomtMatrices.length <= t.icn3d.maxAtoms3DMultiFile ? t.updateArray(r, t.passInt32([i * t.icn3d.biomtMatrices.length]), 80) : t.updateArray(r, t.passInt32([i]), 80),
    n.push(new Blob([r],{
        type: "application/octet-stream"
    })),
    n = t.processStlMeshGroup(t.icn3d.mdl, n, e),
    n = t.processStlMeshGroup(t.icn3d.mdl_ghost, n, e),
    void 0 !== t.icn3d.biomtMatrices && 1 < t.icn3d.biomtMatrices.length && t.icn3d.bAssembly && Object.keys(t.icn3d.dAtoms).length * t.icn3d.biomtMatrices.length <= t.icn3d.maxAtoms3DMultiFile) {
        var d = new THREE.Matrix4;
        d.identity();
        for (a = 0; a < t.icn3d.biomtMatrices.length; a++) {
            var c = t.icn3d.biomtMatrices[a];
            void 0 !== c && (c.equals(d) || (n = t.processStlMeshGroup(t.icn3d.mdl, n, c),
            n = t.processStlMeshGroup(t.icn3d.mdl_ghost, n, c)))
        }
    }
    return n
}
,
iCn3DUI.prototype.updateArray = function(e, t, i) {
    this.icn3d;
    for (var n = 0, r = t.length; n < r; ++n)
        e[i + n] = t[n];
    return e
}
,
iCn3DUI.prototype.processStlMeshGroup = function(e, t, i) {
    for (var n = this, r = (n.icn3d,
    0), s = e.children.length; r < s; ++r) {
        var o = e.children[r];
        if ("Sprite" !== o.type) {
            var a = o.geometry
              , l = a.vertices
              , d = a.faces;
            if (void 0 !== d) {
                for (var c = o.position, h = o.scale, p = o.matrix, m = new Uint8Array(50 * d.length), u = 0, f = 0, g = d.length; f < g; ++f) {
                    var v, b, y, C = d[f].a, _ = d[f].b, S = d[f].c, w = d[f].normal;
                    y = "SphereGeometry" == a.type || "BoxGeometry" == a.type ? (v = l[C].clone().multiply(h).add(c),
                    b = l[_].clone().multiply(h).add(c),
                    l[S].clone().multiply(h).add(c)) : "CylinderGeometry" == a.type ? (v = l[C].clone().applyMatrix4(p),
                    b = l[_].clone().applyMatrix4(p),
                    l[S].clone().applyMatrix4(p)) : (v = l[C].clone(),
                    b = l[_].clone(),
                    l[S].clone()),
                    m = void 0 !== w ? (void 0 !== i && w.applyMatrix4(i),
                    n.updateArray(m, n.passFloat32([w.x, w.y, w.z]), u)) : n.updateArray(m, n.passFloat32([0, 0, 0]), u),
                    u += 12,
                    void 0 !== i && (v.applyMatrix4(i),
                    b.applyMatrix4(i),
                    y.applyMatrix4(i)),
                    m = n.updateArray(m, n.passFloat32([v.x, v.y, v.z]), u),
                    u += 12,
                    m = n.updateArray(m, n.passFloat32([b.x, b.y, b.z]), u),
                    u += 12,
                    m = n.updateArray(m, n.passFloat32([y.x, y.y, y.z]), u),
                    u += 12,
                    v = b = y = void 0,
                    m = n.updateArray(m, n.passInt16([0]), u),
                    u += 2
                }
                t.push(new Blob([m],{
                    type: "application/octet-stream"
                })),
                m = null
            }
        }
    }
    return t
}
,
iCn3DUI.prototype.saveVrmlFile = function(e) {
    var t = this;
    t.icn3d;
    if (5e4 < Object.keys(t.icn3d.dAtoms).length)
        return alert("Please display a subset of the structure to export 3D files. Then merge the files for 3D printing..."),
        [""];
    t.prepareFor3Dprint();
    var i = [];
    i.push("#VRML V2.0 utf8\n");
    var n = 0
      , r = t.processVrmlMeshGroup(t.icn3d.mdl, i, n, e);
    if (i = r.vrmlStrArray,
    n = r.vertexCnt,
    i = (r = t.processVrmlMeshGroup(t.icn3d.mdl_ghost, i, n, e)).vrmlStrArray,
    n = r.vertexCnt,
    void 0 !== t.icn3d.biomtMatrices && 1 < t.icn3d.biomtMatrices.length && t.icn3d.bAssembly && Object.keys(t.icn3d.dAtoms).length * t.icn3d.biomtMatrices.length <= t.icn3d.maxAtoms3DMultiFile) {
        var s = new THREE.Matrix4;
        s.identity();
        for (var o = 0; o < t.icn3d.biomtMatrices.length; o++) {
            var a = t.icn3d.biomtMatrices[o];
            void 0 !== a && (a.equals(s) || (i = (r = t.processVrmlMeshGroup(t.icn3d.mdl, i, n, a)).vrmlStrArray,
            n = r.vertexCnt,
            i = (r = t.processVrmlMeshGroup(t.icn3d.mdl_ghost, i, n, a)).vrmlStrArray,
            n = r.vertexCnt))
        }
    }
    return i
}
,
iCn3DUI.prototype.processVrmlMeshGroup = function(e, t, i, n) {
    this.icn3d;
    for (var r = 0, s = e.children.length; r < s; ++r) {
        var o = e.children[r];
        if ("Sprite" !== o.type) {
            var a = o.geometry
              , l = (o.material.type,
            "Surface" == a.type)
              , d = a.vertices;
            if (void 0 !== d) {
                i += d.length;
                var c = a.faces
                  , h = o.position
                  , p = o.scale
                  , m = o.matrix
                  , u = this.icn3d.thr(1, 1, 1);
                "SphereGeometry" != a.type && "BoxGeometry" != a.type && "CylinderGeometry" != a.type || void 0 !== o.material && (u = o.material.color),
                t.push("Shape {\n"),
                t.push("geometry IndexedFaceSet {\n"),
                t.push("coord Coordinate { point [ ");
                for (var f = [], g = 0, v = d.length; g < v; ++g) {
                    var b;
                    b = "SphereGeometry" == a.type || "BoxGeometry" == a.type ? d[g].clone().multiply(p).add(h) : "CylinderGeometry" == a.type ? d[g].clone().applyMatrix4(m) : d[g].clone(),
                    void 0 !== n && b.applyMatrix4(n),
                    t.push(b.x.toPrecision(5) + " " + b.y.toPrecision(5) + " " + b.z.toPrecision(5)),
                    b = void 0,
                    g < v - 1 && t.push(", "),
                    f.push(this.icn3d.thr(1, 1, 1))
                }
                t.push(" ] }\n");
                var y = ""
                  , C = "";
                if (l) {
                    for (g = 0,
                    v = c.length; g < v; ++g) {
                        y += (_ = c[g].a) + " " + (S = c[g].b) + " " + (w = c[g].c),
                        g < v - 1 && (y += ", -1, "),
                        f[_] = c[g].vertexColors[0],
                        f[S] = c[g].vertexColors[1],
                        f[w] = c[g].vertexColors[2]
                    }
                    for (g = 0,
                    v = f.length; g < v; ++g) {
                        C += (A = f[g]).r.toPrecision(3) + " " + A.g.toPrecision(3) + " " + A.b.toPrecision(3),
                        g < v - 1 && (C += ", ")
                    }
                    t.push("coordIndex [ " + y + " ]\n"),
                    t.push("color Color { color [ " + C + " ] } colorPerVertex TRUE\n")
                } else {
                    for (g = 0,
                    v = c.length; g < v; ++g) {
                        var _ = c[g].a
                          , S = c[g].b
                          , w = c[g].c;
                        A = "SphereGeometry" == a.type || "BoxGeometry" == a.type || "CylinderGeometry" == a.type ? u : c[g].color,
                        y += _ + " " + S + " " + w,
                        g < v - 1 && (y += ", -1, "),
                        f[_] = A,
                        f[S] = A,
                        f[w] = A
                    }
                    for (g = 0,
                    v = f.length; g < v; ++g) {
                        var A;
                        C += (A = f[g]).r.toPrecision(3) + " " + A.g.toPrecision(3) + " " + A.b.toPrecision(3),
                        g < v - 1 && (C += ", ")
                    }
                    t.push("coordIndex [ " + y + " ]\n"),
                    t.push("color Color { color [ " + C + " ] } colorPerVertex TRUE\n")
                }
                t.push("  }\n"),
                t.push("}\n")
            }
        }
    }
    return {
        vrmlStrArray: t,
        vertexCnt: i
    }
}
,
iCn3DUI.prototype.setThichknessFor3Dprint = function() {
    var e = this;
    e.icn3d;
    e.icn3d.lineRadius = 1,
    e.icn3d.coilWidth = 1.2,
    e.icn3d.cylinderRadius = .8,
    e.icn3d.traceRadius = 1,
    e.icn3d.dotSphereScale = .6,
    e.icn3d.sphereRadius = 1.5,
    e.icn3d.ribbonthickness = 1,
    e.icn3d.helixSheetWidth = 2,
    e.icn3d.nucleicAcidWidth = 1.4
}
,
iCn3DUI.prototype.prepareFor3Dprint = function() {
    var e = this;
    e.icn3d;
    if (e.icn3d.bShowHighlight = !1,
    e.icn3d.removeHlObjects(),
    e.bDashedLines = !1,
    e.bSetThickness || void 0 !== e.cfg.cid || e.setThichknessFor3Dprint(),
    void 0 !== e.icn3d.lines.hbond)
        for (var t = 0, i = e.icn3d.lines.hbond.length; t < i; ++t) {
            e.icn3d.lines.hbond[t].dashed = !1,
            e.bDashedLines = !0
        }
    if (void 0 !== e.icn3d.lines.distance)
        for (t = 0,
        i = e.icn3d.lines.distance.length; t < i; ++t) {
            e.icn3d.lines.distance[t].dashed = !1,
            e.bDashedLines = !0
        }
    e.icn3d.draw()
}
,
iCn3DUI.prototype.resetAfter3Dprint = function() {
    var e = this;
    e.icn3d;
    if (void 0 !== e.icn3d.lines.hbond)
        for (var t = 0, i = e.icn3d.lines.hbond.length; t < i; ++t) {
            e.icn3d.lines.hbond[t].dashed = !0
        }
    if (void 0 !== e.icn3d.lines.distance)
        for (t = 0,
        i = e.icn3d.lines.distance.length; t < i; ++t) {
            e.icn3d.lines.distance[t].dashed = !0
        }
    e.icn3d.lineRadius = .1,
    e.icn3d.coilWidth = .3,
    e.icn3d.cylinderRadius = .4,
    e.icn3d.traceRadius = .4,
    e.icn3d.dotSphereScale = .3,
    e.icn3d.sphereRadius = 1.5,
    e.icn3d.cylinderHelixRadius = 1.6,
    e.icn3d.ribbonthickness = .2,
    e.icn3d.helixSheetWidth = 1.3,
    e.icn3d.nucleicAcidWidth = .8
}
,
iCn3DUI.prototype.removeOneStabilizer = function(e) {
    this.icn3d;
    for (var t, i = 0, n = this.icn3d.pairArray.length; i < n; i += 2) {
        var r = this.getResidueRepAtom(this.icn3d.pairArray[i])
          , s = this.getResidueRepAtom(this.icn3d.pairArray[i + 1]);
        if (null != e)
            for (var o = 0, a = e.length; o < a; o += 2) {
                var l = this.getResidueRepAtom(e[o])
                  , d = this.getResidueRepAtom(e[o + 1]);
                if (r.serial == l.serial && s.serial == d.serial || r.serial == d.serial && s.serial == l.serial) {
                    t = i;
                    break
                }
            }
        if (void 0 !== t)
            break
    }
    void 0 !== t && this.icn3d.pairArray.splice(t, 2)
}
,
iCn3DUI.prototype.outputSelection = function() {
    this.icn3d;
    var e = {};
    for (var t in this.icn3d.hAtoms) {
        e[this.icn3d.atoms[t].structure + "_" + this.icn3d.atoms[t].chain + "_" + this.icn3d.atoms[t].resi] = 1
    }
    for (var i = Object.keys(e).sort(function(e, t) {
        if ("" !== e && !isNaN(e))
            return parseInt(e) - parseInt(t);
        var i = e.lastIndexOf("_")
          , n = t.lastIndexOf("_");
        if (e.substr(0, i) < t.substr(0, i))
            return -1;
        if (e.substr(0, i) > t.substr(0, i))
            return 1;
        if (e.substr(0, i) == t.substr(0, i)) {
            if (parseInt(e.substr(i + 1)) < parseInt(t.substr(n + 1)))
                return -1;
            if (parseInt(e.substr(i + 1)) > parseInt(t.substr(n + 1)))
                return 1;
            if (parseInt(e.substr(i + 1)) == parseInt(t.substr(n + 1)))
                return 0
        }
    }), n = "<table><tr><th>Structure</th><th>Chain</th><th>Residue Number</th></tr>", r = (t = 0,
    i.length); t < r; ++t) {
        var s = i[t].indexOf("_")
          , o = i[t].lastIndexOf("_");
        n += "<tr><td>" + i[t].substr(0, s) + "</td><td>" + i[t].substr(s + 1, o - s - 1) + "</td><td>" + i[t].substr(o + 1) + "</td></tr>"
    }
    var a = this.inputid ? this.inputid : "custom";
    this.saveFile(a + "_residues.txt", "html", n)
}
,
iCn3DUI.prototype.addStabilizer = function() {
    var e = this;
    e.icn3d;
    if (0 < Object.keys(e.icn3d.dAtoms).length) {
        var t = {};
        for (var i in e.icn3d.dAtoms) {
            var n = e.icn3d.atoms[i];
            !e.icn3d.nucleotides.hasOwnProperty(n.serial) || "N1" !== n.name && "N2" !== n.name && "N3" !== n.name && "N4" !== n.name && "N6" !== n.name && "O2" !== n.name && "O6" !== n.name || (t[n.structure + "_" + n.chain + "_" + n.resi + "_" + n.name] = n)
        }
        var r = (k = Object.keys(t)).length;
        void 0 === e.icn3d.pairArray && (e.icn3d.pairArray = []);
        for (i = 0; i < r; ++i)
            for (var s = i + 1; s < r; ++s) {
                var o = k[i]
                  , a = k[s]
                  , l = Math.abs(t[o].coord.x - t[a].coord.x);
                if (!(3.5 < l)) {
                    var d = Math.abs(t[o].coord.y - t[a].coord.y);
                    if (!(3.5 < d)) {
                        var c = Math.abs(t[o].coord.z - t[a].coord.z);
                        if (!(3.5 < c)) {
                            var h = l * l + d * d + c * c;
                            12.25 < h || h < 3.2 * 3.2 || (e.icn3d.pairArray.push(t[o].serial),
                            e.icn3d.pairArray.push(t[a].serial))
                        }
                    }
                }
            }
        var p = {};
        for (var i in e.icn3d.dAtoms) {
            p[u = (n = e.icn3d.atoms[i]).structure + "_" + n.chain + "_" + n.resi] = 1
        }
        var m = {};
        for (var i in e.icn3d.chemicals) {
            var u = (n = e.icn3d.atoms[i]).structure + "_" + n.chain + "_" + n.resi;
            p.hasOwnProperty(u) && (m[u] = 1)
        }
        for (var i in e.icn3d.ions) {
            u = (n = e.icn3d.atoms[i]).structure + "_" + n.chain + "_" + n.resi;
            p.hasOwnProperty(u) && (m[u] = 1)
        }
        for (var f = Object.keys(e.icn3d.chains), g = (i = 0,
        f.length); i < g; ++i) {
            for (var v = f[i], b = 0, y = 0, C = (s = 0,
            e.icn3d.chainsSeq[v].length); s < C; ++s)
                u = v + "_" + e.icn3d.chainsSeq[v][s].resi,
                "c" != e.icn3d.secondaries[u] && "E" != e.icn3d.secondaries[u] && "H" != e.icn3d.secondaries[u] || (b % 3 != 0 && e.icn3d.chainsSeq[v][s].resi == y + 1 || p.hasOwnProperty(u) && (m[u] = 1),
                ++b,
                y = e.icn3d.chainsSeq[v][s].resi);
            "c" != e.icn3d.secondaries[u] && "E" != e.icn3d.secondaries[u] && "H" != e.icn3d.secondaries[u] || p.hasOwnProperty(u) && (m[u] = 1)
        }
        var _ = Object.keys(m);
        void 0 === e.icn3d.pairArray && (e.icn3d.pairArray = []);
        var S = e.icn3d.exclHash(e.icn3d.dAtoms, e.icn3d.water);
        for (i = 0,
        g = _.length; i < g; ++i) {
            u = _[i];
            var w = e.icn3d.secondaries[u]
              , A = e.icn3d.getNeighboringAtoms(S, e.icn3d.hash2Atoms(e.icn3d.residues[u]), 6)
              , x = Object.keys(A).sort()
              , k = Object.keys(e.icn3d.residues[u]).sort()
              , D = !1;
            if (e.icn3d.proteins.hasOwnProperty(k[0])) {
                k = [k[0]],
                D = !0;
                var O = parseInt(u.substr(u.lastIndexOf("_") + 1))
                  , R = {};
                for (var T in A)
                    if (!e.icn3d.chemicals.hasOwnProperty(T) && !e.icn3d.ions.hasOwnProperty(T)) {
                        n = e.icn3d.atoms[T];
                        ("c" == w && (n.resi > O + 1 || n.resi < O - 1) || "E" == w && (n.resi > O + 2 || n.resi < O - 2) || "H" == w && (n.resi > O + 4 || n.resi < O - 4)) && (R[T] = 1)
                    }
                x = Object.keys(R).sort()
            }
            if (0 < x.length && 0 < k.length)
                if (D) {
                    var E = parseInt((x.length + .5) / 2);
                    e.icn3d.pairArray.push(k[0]),
                    e.icn3d.pairArray.push(x[E])
                } else {
                    var I = parseInt(x.length / 11);
                    for (s = 0,
                    C = k.length; s < C; ++s)
                        if (s % 10 == 0) {
                            var H = parseInt(s / 10) * I;
                            E = H < x.length ? H : x.length - 1;
                            e.icn3d.pairArray.push(k[s]),
                            e.icn3d.pairArray.push(x[E]),
                            k.length < 11 && (e.icn3d.pairArray.push(k[s]),
                            e.icn3d.pairArray.push(x[x.length - 1]))
                        }
                }
        }
    }
}
,
iCn3DUI.prototype.hideStabilizer = function() {
    this.icn3d;
    for (var e in this.icn3d.pairArray = [],
    this.icn3d.lines.stabilizer = [],
    this.icn3d.stabilizerpnts = [],
    this.icn3d.water)
        this.icn3d.atoms[e].style = this.icn3d.opts.water
}
,
iCn3DUI.prototype.getResidueRepPos = function(e) {
    var t, i = this, n = (i.icn3d,
    i.icn3d.atoms[e]), r = n.structure + "_" + n.chain + "_" + n.resi;
    if (i.icn3d.proteins.hasOwnProperty(e) || i.icn3d.nucleotides.hasOwnProperty(e))
        for (var s in i.icn3d.residues[r]) {
            var o = i.icn3d.atoms[s];
            if ("N3" === o.name) {
                t = i.icn3d.atoms[s].coord;
                break
            }
            if ("CA" === o.name && "coil" == o.ss) {
                t = i.icn3d.atoms[s].coord;
                break
            }
            if ("CA" === o.name && ("helix" == o.ss || "sheet" == o.ss)) {
                t = void 0 !== i.icn3d.atoms[s].coord2 ? i.icn3d.atoms[s].coord2 : i.icn3d.atoms[s].coord;
                break
            }
        }
    else
        t = n.coord;
    return void 0 === t && (t = n.coord),
    t
}
,
iCn3DUI.prototype.getResidueRepAtom = function(e) {
    this.icn3d;
    var t, i = this.icn3d.atoms[e], n = i.structure + "_" + i.chain + "_" + i.resi;
    if (this.icn3d.proteins.hasOwnProperty(e) || this.icn3d.nucleotides.hasOwnProperty(e))
        for (var r in this.icn3d.residues[n]) {
            var s = this.icn3d.atoms[r];
            if ("CA" === s.name || "N3" === s.name) {
                t = this.icn3d.atoms[r];
                break
            }
        }
    else
        t = i;
    return void 0 === t && (t = i),
    t
}
,
iCn3DUI.prototype.downloadAlignment = function(e) {
    var k = this
      , C = k.icn3d;
    k.opts.proteins = "c alpha trace",
    C.opts.proteins = "c alpha trace";
    var _ = e.split(",")
      , t = "ids=" + e
      , i = k.baseUrl + "vastplus/vastplus.cgi?v=3&cmd=c&b=1&s=1&w3d&" + t;
    void 0 !== k.cfg.inpara && (i += k.cfg.inpara),
    C.bCid = void 0,
    C.pdbid_chain2title = {},
    void 0 === k.chainids2resids && (k.chainids2resids = {});
    var n = $.ajax({
        url: i,
        dataType: "jsonp",
        cache: !0,
        beforeSend: function() {
            k.showLoading()
        },
        complete: function() {}
    })
      , D = {};
    n.then(function(i) {
        if (void 0 === (D = i.seqalign))
            return alert("These two MMDB IDs " + _ + " do not have 3D alignment data."),
            !1;
        C.pdbid_molid2chain = {},
        C.chainsColor = {};
        for (var e = 0, t = 2; e < t; ++e)
            for (var n = void 0 !== (c = i.alignedStructures[0][e]).pdbId ? c.pdbId : c.mmdbId, r = {}, s = 0, o = c.molecules.length; s < o; ++s) {
                var a = (h = c.molecules[s]).moleculeId
                  , l = h.chain.trim();
                void 0 === r[l] ? r[l] = 1 : ++r[l];
                var d = 1 === r[l] ? l : l + r[l].toString();
                C.pdbid_molid2chain[n + "_" + a] = d,
                "p" !== h.kind && "n" !== h.kind || (C.chainsColor[n + "_" + d] = C.thr(k.GREY8))
            }
        k.mmdbidArray = [];
        for (e = 0,
        t = 2; e < t; ++e) {
            var c;
            n = (c = i.alignedStructures[0][e]).pdbId;
            k.mmdbidArray.push(n);
            var h = c.molecules;
            for (var p in h) {
                var m = h[p].chain;
                C.pdbid_chain2title[n + "_" + m] = h[p].name
            }
        }
        k.alignmolid2color = [],
        k.alignmolid2color[0] = {},
        k.alignmolid2color[1] = {};
        for (C.stdChainColors.length,
        e = 0,
        t = D.length; e < t; ++e) {
            var u = D[e][0].moleculeId
              , f = D[e][1].moleculeId;
            k.alignmolid2color[0][u] = (e + 1).toString(),
            k.alignmolid2color[1][f] = (e + 1).toString()
        }
        var g = k.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + k.mmdbidArray[0]
          , v = k.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + k.mmdbidArray[1]
          , b = $.ajax({
            url: g,
            dataType: "jsonp",
            cache: !0,
            beforeSend: function() {
                k.showLoading()
            },
            complete: function() {}
        })
          , y = $.ajax({
            url: v,
            dataType: "jsonp",
            cache: !0,
            beforeSend: function() {
                k.showLoading()
            },
            complete: function() {}
        });
        $.when(b, y).then(function(e, t) {
            var w = i
              , A = e[0]
              , x = t[0];
            return void 0 !== A.atoms && void 0 !== x.atoms ? (k.deferredOpm = $.Deferred(function() {
                k.setYourNote((k.mmdbidArray[0] + "," + k.mmdbidArray[1]).toUpperCase() + " (VAST+) in iCn3D");
                for (var e = w.transform.translate.master, t = new THREE.Vector3(+e[0],+e[1],+e[2]), i = w.transform.translate.slave, n = new THREE.Vector3(+i[0],+i[1],+i[2]), r = w.transform.rotate, s = [], o = 0, a = r.length; o < a; ++o)
                    s.push(+r[o]);
                for (var l in k.chainid2seq = {},
                A.sequences) {
                    var d = k.mmdbidArray[0] + "_" + l;
                    k.chainid2seq[d] = A.sequences[l]
                }
                for (var l in x.sequences) {
                    d = k.mmdbidArray[1] + "_" + l;
                    k.chainid2seq[d] = x.sequences[l]
                }
                var c = A.atoms
                  , h = x.atoms
                  , p = A.atomCount
                  , m = x.atomCount;
                for (o = 0,
                a = w.alignedStructures[0].length; o < a; ++o) {
                    var u = w.alignedStructures[0][o];
                    u.serialInterval = [],
                    0 == o ? (u.serialInterval.push(1),
                    u.serialInterval.push(p)) : 1 == o && (u.serialInterval.push(p + 1),
                    u.serialInterval.push(p + m))
                }
                var f = {};
                for (var o in c) {
                    (y = c[o]).coord = new THREE.Vector3(y.coord[0],y.coord[1],y.coord[2]),
                    y.coord.add(t);
                    var g = y.coord.x * s[0] + y.coord.y * s[1] + y.coord.z * s[2]
                      , v = y.coord.x * s[3] + y.coord.y * s[4] + y.coord.z * s[5]
                      , b = y.coord.x * s[6] + y.coord.y * s[7] + y.coord.z * s[8];
                    y.coord.x = g,
                    y.coord.y = v,
                    y.coord.z = b,
                    f[o] = y
                }
                for (var o in h) {
                    var y;
                    (y = h[o]).coord = new THREE.Vector3(y.coord[0],y.coord[1],y.coord[2]),
                    y.coord.add(n);
                    for (var C = 0, _ = y.bonds.length; C < _; ++C)
                        y.bonds[C] += p;
                    f[(parseInt(o) + p).toString()] = y
                }
                var S = {};
                S.alignedStructures = w.alignedStructures,
                S.alignment = w.alignment,
                S.atoms = f,
                k.loadOpmDataForAlign(S, D, k.mmdbidArray)
            }),
            k.deferredOpm.promise()) : (alert("invalid atoms data."),
            !1)
        })
    })
}
,
iCn3DUI.prototype.downloadAlignmentPart2 = function(e, t, i) {
    var n = this
      , r = n.icn3d;
    n.loadAtomDataIn(e, void 0, "align", t),
    void 0 === n.cfg.align && 1 == Object.keys(r.structures).length && $("#" + n.pre + "alternateWrapper").hide();
    var s = {};
    for (var o in r.atoms)
        s[o] = 1;
    r.dAtoms = s,
    r.hAtoms = s,
    r.setAtomStyleByOptions(n.opts),
    r.setColorByOptions(n.opts, r.atoms),
    void 0 !== i && n.transformToOpmOriForAlign(n.selectedPdbid, i, !0),
    n.renderStructure(),
    void 0 !== n.cfg.rotate && n.rotStruc(n.cfg.rotate, !0),
    n.html2ddgm = "",
    n.cfg.showalignseq && n.openDlg("dl_alignment", "Select residues in aligned sequences"),
    n.cfg.show2d && n.bFullUi && n.set2DDiagramsForAlign(n.mmdbidArray[0].toUpperCase(), n.mmdbidArray[1].toUpperCase())
}
,
iCn3DUI.prototype.downloadChainalignmentPart2 = function(e, t, i) {
    var n = this
      , r = n.icn3d;
    n.parseMmdbData(e, "target"),
    n.parseMmdbData(t, "query");
    var s = {};
    for (var o in r.atoms)
        s[o] = 1;
    r.dAtoms = s,
    r.hAtoms = s,
    r.setAtomStyleByOptions(n.opts),
    r.setColorByOptions(n.opts, r.atoms),
    void 0 !== i && n.transformToOpmOriForAlign(n.selectedPdbid, i, !0),
    n.renderStructure(),
    void 0 !== n.cfg.rotate && n.rotStruc(n.cfg.rotate, !0),
    n.html2ddgm = "",
    n.cfg.showalignseq && n.openDlg("dl_alignment", "Select residues in aligned sequences"),
    n.cfg.show2d && n.bFullUi && (n.openDlg("dl_2ddgm", "Interactions"),
    n.bFullUi && (r.bChainAlign ? n.set2DDiagramsForAlign(n.inputid2.toUpperCase(), n.inputid.toUpperCase()) : n.download2Ddgm(n.inputid.toUpperCase())))
}
,
iCn3DUI.prototype.downloadChainAlignment = function(t) {
    var i = this
      , e = i.icn3d;
    i.opts.proteins = "c alpha trace",
    e.opts.proteins = "c alpha trace";
    var n = t.split(",")
      , r = n[0].indexOf("_")
      , s = n[1].indexOf("_");
    i.mmdbid_q = n[0].substr(0, r).toUpperCase(),
    i.mmdbid_t = n[1].substr(0, s).toUpperCase(),
    i.chain_q = n[0].substr(r + 1),
    i.chain_t = n[1].substr(s + 1);
    var o = i.mmdbid_q + "_" + i.chain_q + "," + i.mmdbid_t + "_" + i.chain_t;
    i.setYourNote(t.toUpperCase() + " in iCn3D");
    var a = i.baseUrl + "vastdyn/vastdyn.cgi?chainpairs=" + o
      , l = i.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + i.mmdbid_t
      , d = i.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + i.mmdbid_q;
    void 0 !== i.cfg.inpara && (l += i.cfg.inpara,
    d += i.cfg.inpara),
    e.bCid = void 0,
    e.pdbid_chain2title = {},
    void 0 === i.chainids2resids && (i.chainids2resids = {}),
    $.ajax({
        url: a,
        dataType: "jsonp",
        cache: !0,
        beforeSend: function() {
            i.showLoading()
        },
        complete: function() {},
        success: function(e) {
            void 0 !== e && 0 != e.length || i.mmdbid_q != i.mmdbid_t || i.chain_q != i.chain_t ? void 0 === e || 0 == e.length ? (i.cfg.command || alert("These two chains " + t + ' can not align to each other. Please select sequences from these two chains in the "Sequences & Annotations" window, and click "Realign Selection" in the "File" menu to align your selection.'),
            i.cfg.showanno = 1,
            i.cfg.showalignseq = 0) : (i.t_trans_add = e[0].t_trans_add,
            i.q_trans_sub = e[0].q_trans_sub,
            i.q_rotation = e[0].q_rotation,
            i.qt_start_end = e[0].segs) : (i.t_trans_add = {
                x: 0,
                y: 0,
                z: 0
            },
            i.q_trans_sub = {
                x: 0,
                y: 0,
                z: 0
            },
            i.q_rotation = {
                x1: 1,
                y1: 0,
                z1: 0,
                x2: 0,
                y2: 1,
                z2: 0,
                x3: 0,
                y3: 0,
                z3: 1
            }),
            $.ajax({
                url: l,
                dataType: "jsonp",
                cache: !0,
                beforeSend: function() {
                    i.showLoading()
                },
                complete: function() {},
                success: function(t) {
                    $.ajax({
                        url: d,
                        dataType: "jsonp",
                        cache: !0,
                        beforeSend: function() {
                            i.showLoading()
                        },
                        complete: function() {},
                        success: function(e) {
                            i.mmdbidArray = [],
                            i.mmdbidArray.push(i.mmdbid_q),
                            i.mmdbidArray.push(i.mmdbid_t),
                            i.loadOpmDataForChainalign(t, e, i.mmdbidArray)
                        }
                    })
                }
            })
        },
        error: function(e, t, i) {
            alert("One of the chains is unavailable in the NCBI MMDB database.")
        }
    })
}
,
iCn3DUI.prototype.set2DDiagramsForAlign = function(t, i) {
    var n = this;
    n.icn3d;
    n.openDlg("dl_2ddgm", "Interactions"),
    t = t.substr(0, 4),
    i = i.substr(0, 4);
    var e = n.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&uid=" + t + "&intrac=1"
      , r = n.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&uid=" + i + "&intrac=1";
    void 0 !== n.cfg.inpara && (e += n.cfg.inpara,
    r += n.cfg.inpara),
    $.ajax({
        url: e,
        dataType: "jsonp",
        cache: !0
    }).then(function(e) {
        return n.interactionData1 = e,
        n.html2ddgm = "",
        n.draw2Ddgm(e, t, 0),
        n.cfg.show2d && n.openDlg("dl_2ddgm", "Interactions"),
        $.ajax({
            url: r,
            dataType: "jsonp",
            cache: !0
        })
    }).done(function(e) {
        n.interactionData2 = e,
        n.draw2Ddgm(e, i, 1),
        n.html2ddgm += "<br>" + n.set2DdgmNote(!0),
        $("#" + n.pre + "dl_2ddgm").html(n.html2ddgm),
        n.b2DShown = !0,
        void 0 !== n.deferredViewinteraction && n.deferredViewinteraction.resolve()
    })
}
,
iCn3DUI.prototype.download2Ddgm = function(e, t) {
    this.set2DDiagrams(e)
}
,
iCn3DUI.prototype.set2DDiagrams = function(e) {
    var t = this;
    t.icn3d;
    t.openDlg("dl_2ddgm", "Interactions"),
    void 0 !== t.b2DShown && t.b2DShown || (t.html2ddgm = "",
    t.draw2Ddgm(t.interactionData, e),
    t.html2ddgm += "<br>" + t.set2DdgmNote(),
    $("#" + t.pre + "dl_2ddgm").html(t.html2ddgm)),
    t.b2DShown = !0
}
,
iCn3DUI.prototype.setSeqAlign = function(e, t) {
    var i = this
      , n = i.icn3d
      , r = t[0][0].pdbId
      , s = t[0][1].pdbId;
    i.conservedName1 = r + "_cons",
    i.nonConservedName1 = r + "_ncons",
    i.notAlignedName1 = r + "_nalign",
    i.conservedName2 = s + "_cons",
    i.nonConservedName2 = s + "_ncons",
    i.notAlignedName2 = s + "_nalign",
    i.consHash1 = {},
    i.nconsHash1 = {},
    i.nalignHash1 = {},
    i.consHash2 = {},
    i.nconsHash2 = {},
    i.nalignHash2 = {};
    for (var o = 0, a = e.length; o < a; ++o) {
        for (var l = e[o][0], d = l.moleculeId, c = n.pdbid_molid2chain[r + "_" + d], h = r + "_" + c, p = {}, m = l.sequence.length, u = -1, f = !1, g = 0, v = l.sequence.length; g < v; ++g) {
            var b = l.sequence[g][0]
              , y = "~" === l.sequence[g][2] ? "-" : l.sequence[g][2];
            1 == (A = l.sequence[g][3] ? 1 : 0) && (g < m && !f && (m = g,
            f = !0),
            u < g && (u = g)),
            p[g] = {
                resi: b,
                resn: y,
                aligned: A
            }
        }
        var C = (l = e[o][1]).moleculeId
          , _ = n.pdbid_molid2chain[s + "_" + C]
          , S = s + "_" + _;
        void 0 === n.alnChainsAnTtl[h] && (n.alnChainsAnTtl[h] = []),
        void 0 === n.alnChainsAnTtl[h][0] && (n.alnChainsAnTtl[h][0] = []),
        void 0 === n.alnChainsAnTtl[h][1] && (n.alnChainsAnTtl[h][1] = []),
        void 0 === n.alnChainsAnTtl[h][2] && (n.alnChainsAnTtl[h][2] = []),
        void 0 === n.alnChainsAnTtl[h][3] && (n.alnChainsAnTtl[h][3] = []),
        void 0 === n.alnChainsAnTtl[h][4] && (n.alnChainsAnTtl[h][4] = []),
        void 0 === n.alnChainsAnTtl[h][5] && (n.alnChainsAnTtl[h][5] = []),
        void 0 === n.alnChainsAnTtl[h][6] && (n.alnChainsAnTtl[h][6] = []),
        n.alnChainsAnTtl[h][0].push(S),
        n.alnChainsAnTtl[h][1].push(h),
        n.alnChainsAnTtl[h][2].push(""),
        n.alnChainsAnTtl[h][3].push(""),
        n.alnChainsAnTtl[h][4].push(S),
        n.alnChainsAnTtl[h][5].push(h),
        n.alnChainsAnTtl[h][6].push("");
        var w = 1;
        for (g = m; g <= u; ++g) {
            b = l.sequence[g][0],
            y = "~" === l.sequence[g][2] ? "-" : l.sequence[g][2];
            var A, x, k, D, O = l.sequence[g][3] ? 1 : 0;
            2 === (A = p[g].aligned + O) ? (p[g].resn === y ? (x = "#FF0000",
            D = "icn3d-cons",
            i.consHash1[h + "_" + p[g].resi] = 1,
            i.consHash2[S + "_" + b] = 1) : (x = "#0000FF",
            D = "icn3d-ncons",
            i.nconsHash1[h + "_" + p[g].resi] = 1,
            i.nconsHash2[S + "_" + b] = 1),
            k = "#" + i.getColorhexFromBlosum62(p[g].resn, y)) : (x = i.GREY8,
            D = "icn3d-nalign",
            i.nalignHash1[h + "_" + p[g].resi] = 1,
            i.nalignHash2[S + "_" + b] = 1),
            void 0 === n.alnChainsSeq[h] && (n.alnChainsSeq[h] = []);
            var R = {};
            R.mmdbid = r,
            R.chain = c,
            R.resi = p[g].resi,
            R.resn = "" === R.resi || "icn3d-nalign" === D ? p[g].resn.toLowerCase() : p[g].resn,
            R.aligned = A,
            R.color = "" === R.resi ? i.GREYC : x,
            R.color2 = "" === R.resi ? i.GREYC : k,
            R.class = D,
            n.alnChainsSeq[h].push(R),
            "" !== p[g].resi && (void 0 === n.alnChains[h] && (n.alnChains[h] = {}),
            $.extend(n.alnChains[h], n.residues[h + "_" + p[g].resi])),
            void 0 === n.alnChainsSeq[S] && (n.alnChainsSeq[S] = []),
            (R = {}).mmdbid = s,
            R.chain = _,
            R.resi = b,
            R.resn = "" === R.resi || "icn3d-nalign" === D ? y.toLowerCase() : y,
            R.aligned = A,
            R.color = "" === R.resi ? i.GREYC : x,
            R.color2 = "" === R.resi ? i.GREYC : k,
            R.class = D,
            n.alnChainsSeq[S].push(R),
            "" !== R.resi && (void 0 === n.alnChains[S] && (n.alnChains[S] = {}),
            $.extend(n.alnChains[S], n.residues[S + "_" + b])),
            void 0 === n.alnChainsAnno[h] && (n.alnChainsAnno[h] = []),
            void 0 === n.alnChainsAnno[h][0] && (n.alnChainsAnno[h][0] = []),
            void 0 === n.alnChainsAnno[h][1] && (n.alnChainsAnno[h][1] = []),
            void 0 === n.alnChainsAnno[h][2] && (n.alnChainsAnno[h][2] = []),
            void 0 === n.alnChainsAnno[h][3] && (n.alnChainsAnno[h][3] = []),
            g === m && (void 0 === n.alnChainsAnno[h][4] && (n.alnChainsAnno[h][4] = []),
            void 0 === n.alnChainsAnno[h][5] && (n.alnChainsAnno[h][5] = []),
            void 0 === n.alnChainsAnno[h][6] && (n.alnChainsAnno[h][6] = []),
            n.alnChainsAnno[h][4].push(n.pdbid_chain2title[S]),
            n.alnChainsAnno[h][5].push(n.pdbid_chain2title[h]),
            n.alnChainsAnno[h][6].push(""));
            var T = h + "_" + p[g].resi
              , E = S + "_" + b
              , I = n.secondaries[T]
              , H = n.secondaries[E];
            void 0 !== H ? n.alnChainsAnno[h][0].push(H) : n.alnChainsAnno[h][0].push("-"),
            void 0 !== I ? n.alnChainsAnno[h][1].push(I) : n.alnChainsAnno[h][1].push("-");
            var L = ".";
            w % 5 == 0 && (L = "*"),
            w % 10 == 0 && (L = "|"),
            n.alnChainsAnno[h][2].push(L);
            var P = "";
            w % 10 == 0 && (P = w.toString()),
            n.alnChainsAnno[h][3].push(P),
            ++w
        }
    }
    e = {}
}
,
iCn3DUI.prototype.setSeqPerResi = function(e, t, i, n, r, s, o, a, l, d, c, h) {
    var p = this.icn3d;
    void 0 === p.alnChainsSeq[e] && (p.alnChainsSeq[e] = []);
    var m = {}
      , u = e.indexOf("_");
    if (m.mmdbid = e.substr(0, u),
    m.chain = e.substr(u + 1),
    m.resi = n,
    m.resn = "" === m.resi || "icn3d-nalign" === l ? r.toLowerCase() : r,
    m.aligned = s,
    m.color = "" === m.resi ? this.GREYC : o,
    m.color2 = "" === m.resi ? this.GREYC : a,
    m.class = l,
    p.alnChainsSeq[e].push(m),
    "" !== m.resi && (void 0 === p.alnChains[e] && (p.alnChains[e] = {}),
    $.extend(p.alnChains[e], p.residues[e + "_" + m.resi])),
    d) {
        if (void 0 === p.alnChainsAnno[e] && (p.alnChainsAnno[e] = []),
        void 0 === p.alnChainsAnno[e][0] && (p.alnChainsAnno[e][0] = []),
        void 0 === p.alnChainsAnno[e][1] && (p.alnChainsAnno[e][1] = []),
        void 0 === p.alnChainsAnno[e][2] && (p.alnChainsAnno[e][2] = []),
        void 0 === p.alnChainsAnno[e][3] && (p.alnChainsAnno[e][3] = []),
        c) {
            void 0 === p.alnChainsAnno[e][4] && (p.alnChainsAnno[e][4] = []),
            void 0 === p.alnChainsAnno[e][5] && (p.alnChainsAnno[e][5] = []),
            void 0 === p.alnChainsAnno[e][6] && (p.alnChainsAnno[e][6] = []);
            var f = p.pdbid_chain2title && p.pdbid_chain2title.hasOwnProperty(i) ? p.pdbid_chain2title[i] : ""
              , g = p.pdbid_chain2title && p.pdbid_chain2title.hasOwnProperty(e) ? p.pdbid_chain2title[e] : "";
            p.alnChainsAnno[e][4].push(f),
            p.alnChainsAnno[e][5].push(g),
            p.alnChainsAnno[e][6].push("")
        }
        var v = ".";
        h % 5 == 0 && (v = "*"),
        h % 10 == 0 && (v = "|"),
        p.alnChainsAnno[e][2].push(v);
        var b = "";
        h % 10 == 0 && (b = h.toString()),
        p.alnChainsAnno[e][3].push(b);
        var y = e + "_" + n;
        void 0 !== (C = p.secondaries[y]) ? p.alnChainsAnno[e][1].push(C) : p.alnChainsAnno[e][1].push("-")
    } else {
        y = e + "_" + n;
        var C = p.secondaries[y];
        p.alnChainsAnno.hasOwnProperty(t) && 0 < p.alnChainsAnno[t].length ? void 0 !== C ? p.alnChainsAnno[t][0].push(C) : p.alnChainsAnno[t][0].push("-") : console.log("Error: ic.alnChainsAnno[chainid1] is undefined")
    }
}
,
iCn3DUI.prototype.setSeqAlignChain = function() {
    var e = this
      , t = e.icn3d
      , i = e.inputid2
      , n = e.inputid
      , r = e.cfg.chainalign.split(",")
      , s = r[0].indexOf("_")
      , o = r[1].indexOf("_")
      , a = r[0].substr(s + 1)
      , l = r[1].substr(o + 1);
    if (i == n && a == l) {
        var d = t.chainsSeq[e.mmdbid_q + "_" + e.chain_q].length;
        e.qt_start_end = [{
            q_start: 1,
            q_end: d,
            t_start: 1,
            t_end: d
        }]
    }
    var c, h, p, m = r[0].substr(0, s).toUpperCase() + "_" + a, u = r[1].substr(0, o).toUpperCase() + "_" + l;
    void 0 !== e.mmdbid_q && e.mmdbid_q === e.mmdbid_t && (m = r[0].substr(0, s).toUpperCase() + e.postfix + "_" + a),
    e.conservedName1 = m + "_cons",
    e.nonConservedName1 = m + "_ncons",
    e.notAlignedName1 = m + "_nalign",
    e.conservedName2 = u + "_cons",
    e.nonConservedName2 = u + "_ncons",
    e.notAlignedName2 = u + "_nalign",
    e.consHash1 = {},
    e.nconsHash1 = {},
    e.nalignHash1 = {},
    e.consHash2 = {},
    e.nconsHash2 = {},
    e.nalignHash2 = {},
    void 0 === t.alnChainsAnTtl[m] && (t.alnChainsAnTtl[m] = []);
    for (var f = 0; f < 7; ++f)
        void 0 === t.alnChainsAnTtl[m][f] && (t.alnChainsAnTtl[m][f] = []);
    t.alnChainsAnTtl[m][0].push(u),
    t.alnChainsAnTtl[m][1].push(m),
    t.alnChainsAnTtl[m][2].push(""),
    t.alnChainsAnTtl[m][3].push(""),
    t.alnChainsAnTtl[m][4].push(u),
    t.alnChainsAnTtl[m][5].push(m),
    t.alnChainsAnTtl[m][6].push("");
    for (var g, v, b = 1, y = (f = 0,
    e.qt_start_end.length); f < y; ++f) {
        var C = e.qt_start_end[f].q_start - 1
          , _ = e.qt_start_end[f].t_start - 1
          , S = e.qt_start_end[f].q_end - 1
          , w = e.qt_start_end[f].t_end - 1;
        if (0 < f) {
            for (var A = b, x = g + 1, k = C; x < k && void 0 !== t.chainsSeq[m]; ++x) {
                var D = t.chainsSeq[m][x].resi
                  , O = t.chainsSeq[m][x].name.toLowerCase();
                c = e.GREY8,
                p = "icn3d-nalign",
                e.nalignHash1[m + "_" + D] = 1,
                e.setSeqPerResi(m, m, u, D, O, !1, c, void 0, p, !0, !1, A),
                ++A
            }
            var R = b;
            for (x = v + 1,
            k = _; x < k && void 0 !== t.chainsSeq[u]; ++x) {
                D = t.chainsSeq[u][x].resi,
                O = t.chainsSeq[u][x].name.toLowerCase();
                c = e.GREY8,
                p = "icn3d-nalign",
                e.nalignHash2[u + "_" + D] = 1,
                e.setSeqPerResi(u, m, u, D, O, !1, c, void 0, p, !1, !1, R),
                ++R
            }
            if (A < R) {
                b = R;
                for (x = 0; x < R - A; ++x) {
                    D = "",
                    O = "-";
                    c = e.GREY8,
                    p = "icn3d-nalign",
                    e.setSeqPerResi(m, m, u, D, O, !1, c, void 0, p, !0, !1, A + x)
                }
            } else {
                b = A;
                for (x = 0; x < A - R; ++x) {
                    D = "",
                    O = "-";
                    c = e.GREY8,
                    p = "icn3d-nalign",
                    e.setSeqPerResi(u, m, u, D, O, !1, c, void 0, p, !1, !1, R + x)
                }
            }
        }
        for (x = 0; x <= S - C && (void 0 !== t.chainsSeq[m] && void 0 !== t.chainsSeq[u]); ++x) {
            var T = t.chainsSeq[m][x + C].resi
              , E = t.chainsSeq[u][x + _].resi
              , I = t.chainsSeq[m][x + C].name.toUpperCase()
              , H = t.chainsSeq[u][x + _].name.toUpperCase();
            I === H ? (c = "#FF0000",
            p = "icn3d-cons",
            e.consHash1[m + "_" + T] = 1,
            e.consHash2[u + "_" + E] = 1) : (c = "#0000FF",
            p = "icn3d-ncons",
            e.nconsHash1[m + "_" + T] = 1,
            e.nconsHash2[u + "_" + E] = 1),
            h = "#" + e.getColorhexFromBlosum62(I, H);
            var L = 0 === f && 0 === x;
            e.setSeqPerResi(m, m, u, T, I, !0, c, h, p, !0, L, b),
            e.setSeqPerResi(u, m, u, E, H, !0, c, h, p, !1, L, b),
            ++b
        }
        g = S,
        v = w
    }
}
,
iCn3DUI.prototype.setSeqAlignForRealign = function() {
    var e = this
      , t = e.icn3d
      , i = Object.keys(t.structures)
      , n = i[0]
      , r = i[1];
    e.conservedName1 = n + "_cons",
    e.conservedName2 = r + "_cons",
    e.consHash1 = {},
    e.consHash2 = {},
    t.alnChainsAnTtl = {},
    t.alnChainsAnno = {},
    t.alnChainsSeq = {},
    t.alnChains = {},
    t.alnChainsSeq = {};
    for (var s = {}, o = 0, a = e.realignResid[n].length; o < a; ++o) {
        var l = e.realignResid[n][o]
          , d = l.resid.lastIndexOf("_")
          , c = l.resid.substr(0, d)
          , h = l.resid.substr(d + 1);
        l.resi = h,
        l.aligned = !0;
        var p, m = e.realignResid[r][o], u = m.resid.lastIndexOf("_"), f = m.resid.substr(0, u), g = m.resid.substr(u + 1);
        m.resi = g,
        m.aligned = !0,
        s[l.resid] = 1,
        s[m.resid] = 1,
        p = l.resn == m.resn ? "#FF0000" : "#0000FF";
        var v = "#" + e.getColorhexFromBlosum62(l.resn, m.resn);
        for (var b in l.color = p,
        m.color = p,
        l.color2 = v,
        m.color2 = v,
        t.residues[l.resid])
            t.atoms[b].color = t.thr(p);
        for (var b in t.residues[m.resid])
            t.atoms[b].color = t.thr(p);
        void 0 === t.alnChainsAnTtl[c] && (t.alnChainsAnTtl[c] = []);
        for (b = 0; b < 3; ++b)
            void 0 === t.alnChainsAnTtl[c][b] && (t.alnChainsAnTtl[c][b] = []);
        for (b = 0; b < 3; ++b)
            t.alnChainsAnTtl[c][b].push("");
        void 0 === t.alnChainsSeq[c] && (t.alnChainsSeq[c] = []),
        void 0 === t.alnChainsSeq[f] && (t.alnChainsSeq[f] = []),
        t.alnChainsSeq[c].push(l),
        t.alnChainsSeq[f].push(m),
        void 0 === t.alnChains[c] && (t.alnChains[c] = {}),
        void 0 === t.alnChains[f] && (t.alnChains[f] = {}),
        $.extend(t.alnChains[c], t.residues[c + "_" + l.resi]),
        $.extend(t.alnChains[f], t.residues[f + "_" + m.resi]),
        e.consHash1[c + "_" + l.resi] = 1,
        e.consHash2[f + "_" + m.resi] = 1,
        void 0 === t.alnChainsAnno[c] && (t.alnChainsAnno[c] = []);
        for (b = 0; b < 3; ++b)
            void 0 === t.alnChainsAnno[c][b] && (t.alnChainsAnno[c][b] = []);
        var y = ".";
        o % 5 == 0 && (y = "*"),
        o % 10 == 0 && (y = "|"),
        t.alnChainsAnno[c][0].push(y);
        var C = "";
        o % 10 == 0 && (C = o.toString()),
        t.alnChainsAnno[c][1].push(C)
    }
    var _ = "select " + e.residueids2spec(Object.keys(s));
    e.addCustomSelection(Object.keys(s), "protein_aligned", "protein aligned", _, !0)
}
,
iCn3DUI.prototype.realignOnSeqAlign = function() {
    var f = this
      , e = f.icn3d;
    f.saveSelectionPrep();
    var t = "alseq_" + Object.keys(e.defNames2Atoms).length;
    f.saveSelection(t, t);
    var i = {}
      , n = {}
      , r = {}
      , s = "";
    for (var o in e.hAtoms) {
        var a = e.atoms[o];
        if (e.proteins.hasOwnProperty(o) && "CA" == a.name || e.nucleotides.hasOwnProperty(o) && ("O3'" == a.name || "O3*" == a.name)) {
            var l = a.structure + "_" + a.chain + "_" + a.resi;
            if (l == s)
                continue;
            i.hasOwnProperty(a.structure) || (i[a.structure] = "",
            n[a.structure] = [],
            r[a.structure] = []);
            var d = e.residueName2Abbr(a.resn.substr(0, 3)).substr(0, 1);
            i[a.structure] += d,
            n[a.structure].push(a.coord.clone()),
            r[a.structure].push(l),
            s = l
        }
    }
    var c = Object.keys(i)
      , g = c[0]
      , v = c[1]
      , b = i[g]
      , y = i[v]
      , C = n[g]
      , _ = n[v]
      , S = r[g]
      , w = r[v];
    $.ajax({
        url: "https://www.ncbi.nlm.nih.gov/Structure/pwaln/pwaln.fcgi?from=track",
        type: "POST",
        data: {
            targets: b,
            queries: y
        },
        dataType: "jsonp",
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            var t, i;
            if (void 0 !== e.data) {
                t = e.data[0].query;
                var n = Object.keys(e.data[0].targets)[0];
                i = (i = e.data[0].targets[n]).hsps[0]
            }
            if (void 0 !== t && void 0 !== i) {
                var r = []
                  , s = [];
                f.realignResid = {},
                f.realignResid[g] = [],
                f.realignResid[v] = [];
                for (var o = i.segs, a = 0, l = o.length; a < l; ++a)
                    for (var d = o[a], c = "", h = "", p = 0; p <= d.orito - d.orifrom; ++p) {
                        var m = S[p + d.orifrom].substr(0, S[p + d.orifrom].lastIndexOf("_"))
                          , u = w[p + d.from].substr(0, w[p + d.from].lastIndexOf("_"));
                        r.push(C[p + d.orifrom]),
                        s.push(_[p + d.from]),
                        b[p + d.orifrom],
                        y[p + d.from],
                        (0 == p || c == m && h == u || c != m && h != u) && (f.realignResid[g].push({
                            resid: S[p + d.orifrom],
                            resn: b[p + d.orifrom]
                        }),
                        f.realignResid[v].push({
                            resid: w[p + d.from],
                            resn: y[p + d.from]
                        })),
                        c = m,
                        h = u
                    }
                f.alignCoords(s, r, v),
                f.updateHlAll()
            } else
                void 0 !== v || f.cfg.command ? (b.length < 6 || y.length < 6) && !f.cfg.command ? alert("These sequences are too short for alignment") : 6 <= b.length && 6 <= y.length && !f.cfg.command && alert("These sequences can not be aligned to each other") : alert("Please do not align residues in the same structure");
            void 0 !== f.deferredRealign && f.deferredRealign.resolve()
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : (void 0 !== v || f.cfg.command ? (b.length < 6 || y.length < 6) && !f.cfg.command ? alert("These sequences are too short for alignment") : 6 <= b.length && 6 <= y.length && !f.cfg.command && alert("These sequences can not be aligned to each other") : alert("Please do not align residues in the same structure"),
            void 0 !== f.deferredRealign && f.deferredRealign.resolve())
        }
    })
}
,
iCn3DUI.prototype.realign = function() {
    var e = this.icn3d;
    this.saveSelectionPrep();
    var t = "alseq_" + Object.keys(e.defNames2Atoms).length;
    this.saveSelection(t, t);
    var i = {};
    this.realignResid = {};
    var n = "";
    for (var r in e.hAtoms) {
        var s = e.atoms[r];
        if (e.proteins.hasOwnProperty(r) && "CA" == s.name || e.nucleotides.hasOwnProperty(r) && ("O3'" == s.name || "O3*" == s.name)) {
            if (s.structure + "_" + s.resi == n)
                continue;
            i.hasOwnProperty(s.structure) || (i[s.structure] = []),
            i[s.structure].push(s.coord.clone()),
            this.realignResid.hasOwnProperty(s.structure) || (this.realignResid[s.structure] = []),
            this.realignResid[s.structure].push({
                resid: s.structure + "_" + s.chain + "_" + s.resi,
                resn: e.residueName2Abbr(s.resn.substr(0, 3)).substr(0, 1)
            }),
            n = s.structure + "_" + s.resi
        }
    }
    var o = Object.keys(i)
      , a = o[0]
      , l = o[1]
      , d = i[l]
      , c = i[a];
    this.alignCoords(d, c, l, !0),
    this.updateHlAll()
}
,
iCn3DUI.prototype.loadMol2Data = function(e) {
    var t = this
      , i = t.icn3d
      , n = t.loadMol2AtomData(e);
    void 0 === t.cfg.align && 1 == Object.keys(i.structures).length && $("#" + t.pre + "alternateWrapper").hide(),
    n ? (i.setAtomStyleByOptions(t.opts),
    i.setColorByOptions(t.opts, i.atoms),
    t.renderStructure(),
    void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0)) : alert("The Mol2 file has the wrong format...")
}
,
iCn3DUI.prototype.loadMol2AtomData = function(e) {
    var t = this.icn3d
      , i = e.split(/\r?\n|\r/);
    if (i.length < 4)
        return !1;
    t.init();
    for (var n, r, s = {}, o = 0, a = 0, l = 1, d = !1, c = !1, h = {}, p = {}, m = 0, u = i.length; m < u; ++m) {
        var f = i[m].trim();
        if ("" !== f && "#" !== f.substr(0, 1)) {
            if ("@<TRIPOS>MOLECULE" == f) {
                t.molTitle = i[m + 1].trim();
                var g = i[m + 2].trim().replace(/\s+/g, " ").split(" ");
                n = g[0],
                r = g[1],
                m += 4
            } else
                "@<TRIPOS>ATOM" == f ? (l = 1,
                d = !0,
                ++m) : "@<TRIPOS>BOND" == f ? (d = !(c = !0),
                ++m) : "@<TRIPOS>SUBSTRUCTURE" == f && (c = !1,
                ++m);
            if ("" !== (f = i[m].trim()) && "#" !== f.substr(0, 1)) {
                if (d && o < n) {
                    var v = f.replace(/\s+/g, " ").split(" ")
                      , b = parseInt(v[0]);
                    h[b] = l;
                    var y, C = v[1], _ = parseFloat(v[2]), S = parseFloat(v[3]), w = parseFloat(v[4]), A = new THREE.Vector3(_,S,w), x = v[5], k = x.indexOf(".");
                    if ("H" === (y = -1 === k ? x : x.substr(0, k)) && y === x)
                        p[b] = 1;
                    else {
                        var D = {
                            het: !0,
                            serial: l,
                            name: C,
                            resn: "LIG",
                            structure: 1,
                            chain: "A",
                            resi: 1,
                            coord: A,
                            b: 0,
                            elem: y,
                            bonds: [],
                            ss: "coil",
                            ssbegin: !1,
                            ssend: !1,
                            bondOrder: []
                        };
                        t.atoms[l] = D,
                        s[l] = 1,
                        ++l
                    }
                    ++o
                }
                if (c && a < r) {
                    var O = f.replace(/\s+/g, " ").split(" ")
                      , R = parseInt(O[1])
                      , T = parseInt(O[2])
                      , E = O[3]
                      , I = E;
                    if ("am" === E && (I = "1"),
                    "ar" === E && (I = "1.5"),
                    !(p.hasOwnProperty(R) || p.hasOwnProperty(T) || "1" !== I && "2" !== I && "3" !== I && "1.5" !== I)) {
                        var H = I
                          , L = h[R]
                          , $ = h[T];
                        t.atoms[L].bonds.push($),
                        t.atoms[L].bondOrder.push(H),
                        t.atoms[$].bonds.push(L),
                        t.atoms[$].bondOrder.push(H),
                        "2" == H ? (t.doublebonds[L + "_" + $] = 1,
                        t.doublebonds[$ + "_" + L] = 1) : "3" == H ? (t.triplebonds[L + "_" + $] = 1,
                        t.triplebonds[$ + "_" + L] = 1) : "1.5" == H && (t.aromaticbonds[L + "_" + $] = 1,
                        t.aromaticbonds[$ + "_" + L] = 1)
                    }
                    ++a,
                    0
                }
            }
        }
    }
    t.dAtoms = s,
    t.hAtoms = s,
    t.structures[1] = ["1_A"],
    t.chains["1_A"] = s,
    t.residues["1_A_1"] = s,
    t.residueId2Name["1_A_1"] = "LIG",
    void 0 === t.chainsSeq["1_A"] && (t.chainsSeq["1_A"] = []);
    var P = {
        resi: 1,
        name: "LIG"
    };
    return t.chainsSeq["1_A"].push(P),
    this.setMaxD(),
    this.showTitle(),
    !0
}
,
iCn3DUI.prototype.loadXyzData = function(e) {
    var t = this
      , i = t.icn3d
      , n = t.loadXyzAtomData(e);
    void 0 === t.cfg.align && 1 == Object.keys(i.structures).length && $("#" + t.pre + "alternateWrapper").hide(),
    n ? (i.setAtomStyleByOptions(t.opts),
    i.setColorByOptions(t.opts, i.atoms),
    t.renderStructure(),
    void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0)) : alert("The XYZ file has the wrong format...")
}
,
iCn3DUI.prototype.setXyzAtomSeq = function(e, t, i, n) {
    var r = this.icn3d;
    r.dAtoms = r.unionHash(r.dAtoms, e),
    r.hAtoms = r.unionHash(r.hAtoms, e),
    r.structures[t] = [i],
    r.chains[i] = e,
    r.residues[n] = e,
    r.residueId2Name[n] = "LIG",
    void 0 === r.chainsSeq[i] && (r.chainsSeq[i] = []);
    var s = {
        resi: 1,
        name: "LIG"
    };
    r.chainsSeq[i].push(s);
    for (var o = Object.keys(e), a = 0, l = o.length; a < l; ++a)
        for (var d = r.atoms[o[a]], c = a + 1, h = o.length; c < h; ++c) {
            var p = r.atoms[o[c]]
              , m = 1.2 * (r.covalentRadii[d.elem.toUpperCase()] + r.covalentRadii[p.elem.toUpperCase()]);
            Math.abs(d.coord.x - p.coord.x) > m || Math.abs(d.coord.y - p.coord.y) > m || Math.abs(d.coord.z - p.coord.z) > m || r.hasCovalentBond(d, p) && (r.atoms[o[a]].bonds.push(o[c]),
            r.atoms[o[c]].bonds.push(o[a]))
        }
}
,
iCn3DUI.prototype.loadXyzAtomData = function(e) {
    var t = this.icn3d
      , i = e.split(/\r?\n|\r/);
    if (i.length < 3)
        return !1;
    t.init();
    var n, r, s, o = {}, a = 0, l = 1;
    t.molTitle = "";
    for (var d = 0, c = i.length; d < c; ++d) {
        var h = i[d].trim();
        if ("" !== h && ("" === h || isNaN(h) || (0 !== d && this.setXyzAtomSeq(o, a, n, r),
        o = {},
        r = (n = (s = ++a) + "_A") + "_1",
        parseInt(h),
        1 < a && (t.molTitle += "; "),
        t.molTitle += i[d + 1].trim(),
        d += 2),
        "" !== (h = i[d].trim()))) {
            var p = h.replace(/,/, " ").replace(/\s+/g, " ").split(" ")
              , m = p[0]
              , u = parseFloat(p[1])
              , f = parseFloat(p[2])
              , g = parseFloat(p[3])
              , v = {
                het: !0,
                serial: l,
                name: m,
                resn: "LIG",
                structure: s,
                chain: "A",
                resi: 1,
                coord: new THREE.Vector3(u,f,g),
                b: 0,
                elem: m,
                bonds: [],
                ss: "coil",
                ssbegin: !1,
                ssend: !1,
                bondOrder: []
            };
            t.atoms[l] = v,
            o[l] = 1,
            ++l
        }
    }
    return this.setXyzAtomSeq(o, a, n, r),
    this.setMaxD(),
    this.showTitle(),
    !0
}
,
iCn3DUI.prototype.Dsn6Parser = function(e, t, i) {
    this.icn3d;
    var n = "https://edmaps.rcsb.org/maps/" + e.toLowerCase() + "_" + t + ".dsn6";
    this.Dsn6ParserBase(n, t, i)
}
,
iCn3DUI.prototype.Dsn6ParserBase = function(e, t, i) {
    var n = this
      , r = n.icn3d;
    if ("2fofc" == t && n.bAjax2fofc)
        r.mapData.sigma2 = i,
        n.setOption("map", t);
    else if ("fofc" == t && n.bAjaxfofc)
        r.mapData.sigma = i,
        n.setOption("map", t);
    else {
        var s = new XMLHttpRequest;
        s.open("GET", e, !0),
        s.responseType = "arraybuffer",
        s.onreadystatechange = function() {
            if (4 == this.readyState) {
                if (200 == this.status) {
                    var e = s.response;
                    n.loadDsn6Data(e, t, i),
                    "2fofc" == t ? n.bAjax2fofc = !0 : "fofc" == t && (n.bAjaxfofc = !0),
                    n.setOption("map", t)
                } else
                    alert("RCSB server has no corresponding eletron density map for this structure.");
                void 0 !== n.deferredMap && n.deferredMap.resolve()
            } else
                n.showLoading()
        }
        ,
        s.send()
    }
}
,
iCn3DUI.prototype.loadDsn6Data = function(e, t, i) {
    var n, r, s = this.icn3d, o = {}, a = e.buffer && e.buffer instanceof ArrayBuffer ? e.buffer : e, l = new Int16Array(a), d = new Uint8Array(a), c = String.fromCharCode.apply(null, d.subarray(0, 512));
    if (0 == c.indexOf(":-)"))
        o.xStart = parseInt(c.substr(10, 5)),
        o.yStart = parseInt(c.substr(15, 5)),
        o.zStart = parseInt(c.substr(20, 5)),
        o.xExtent = parseInt(c.substr(32, 5)),
        o.yExtent = parseInt(c.substr(38, 5)),
        o.zExtent = parseInt(c.substr(42, 5)),
        o.xRate = parseInt(c.substr(52, 5)),
        o.yRate = parseInt(c.substr(58, 5)),
        o.zRate = parseInt(c.substr(62, 5)),
        o.xlen = +parseFloat(c.substr(73, 10)),
        o.ylen = +parseFloat(c.substr(83, 10)),
        o.zlen = +parseFloat(c.substr(93, 10)),
        o.alpha = parseFloat(c.substr(103, 10)),
        o.beta = parseFloat(c.substr(113, 10)),
        o.gamma = parseFloat(c.substr(123, 10)),
        n = parseFloat(c.substr(138, 12)) / 100,
        r = parseInt(c.substr(155, 8)),
        o.sigma = 100 * parseFloat(c.substr(170, 12));
    else {
        if (100 !== l[18])
            for (var h = 0, p = l.length; h < p; ++h) {
                var m = l[h];
                l[h] = (255 & m) << 8 | m >> 8 & 255
            }
        o.zStart = l[2],
        o.xStart = l[0],
        o.yStart = l[1],
        o.xExtent = l[3],
        o.yExtent = l[4],
        o.zExtent = l[5],
        o.xRate = l[6],
        o.yRate = l[7],
        o.zRate = l[8];
        var u = 1 / l[17]
          , f = u;
        o.xlen = l[9] * f,
        o.ylen = l[10] * f,
        o.zlen = l[11] * f,
        o.alpha = l[12] * u,
        o.beta = l[13] * u,
        o.gamma = l[14] * u,
        n = l[15] / l[18],
        r = l[16]
    }
    for (var g = new Float32Array(o.xExtent * o.yExtent * o.zExtent), v = 512, b = Math.ceil(o.xExtent / 8), y = Math.ceil(o.yExtent / 8), C = Math.ceil(o.zExtent / 8), _ = 0; _ < C; ++_)
        for (var S = 0; S < y; ++S)
            for (var w = 0; w < b; ++w)
                for (var A = 0; A < 8; ++A)
                    for (var x = 8 * _ + A, k = 0; k < 8; ++k) {
                        var D = 8 * S + k;
                        for (h = 0; h < 8; ++h) {
                            var O = 8 * w + h;
                            if (!(O < o.xExtent && D < o.yExtent && x < o.zExtent)) {
                                v += 8 - h;
                                break
                            }
                            g[(O * o.yExtent + D) * o.zExtent + x] = (d[v] - r) / n,
                            ++v
                        }
                    }
    "2fofc" == t ? (s.mapData.header2 = o,
    s.mapData.data2 = g,
    s.mapData.matrix2 = this.getMatrix(o),
    s.mapData.type2 = t,
    s.mapData.sigma2 = i) : (s.mapData.header = o,
    s.mapData.data = g,
    s.mapData.matrix = this.getMatrix(o),
    s.mapData.type = t,
    s.mapData.sigma = i)
}
,
iCn3DUI.prototype.getMatrix = function(e) {
    this.icn3d;
    var t = e
      , i = [t.xlen, 0, 0]
      , n = [t.ylen * Math.cos(Math.PI / 180 * t.gamma), t.ylen * Math.sin(Math.PI / 180 * t.gamma), 0]
      , r = [t.zlen * Math.cos(Math.PI / 180 * t.beta), t.zlen * (Math.cos(Math.PI / 180 * t.alpha) - Math.cos(Math.PI / 180 * t.gamma) * Math.cos(Math.PI / 180 * t.beta)) / Math.sin(Math.PI / 180 * t.gamma), 0];
    r[2] = Math.sqrt(t.zlen * t.zlen * Math.sin(Math.PI / 180 * t.beta) * Math.sin(Math.PI / 180 * t.beta) - r[1] * r[1]);
    var s = [[], i, n, r]
      , o = [0, t.xRate, t.yRate, t.zRate]
      , a = [0, 1, 2, 3]
      , l = new THREE.Matrix4;
    return l.set(s[a[1]][0] / o[a[1]], s[a[2]][0] / o[a[2]], s[a[3]][0] / o[a[3]], 0, s[a[1]][1] / o[a[1]], s[a[2]][1] / o[a[2]], s[a[3]][1] / o[a[3]], 0, s[a[1]][2] / o[a[1]], s[a[2]][2] / o[a[2]], s[a[3]][2] / o[a[3]], 0, 0, 0, 0, 1),
    l.multiply((new THREE.Matrix4).makeTranslation(t.xStart, t.yStart, t.zStart)),
    l
}
,
iCn3DUI.prototype.CalcPhiUrl = function(t, i, n, r, e) {
    var s = this
      , o = (s.icn3d,
    new XMLHttpRequest);
    o.open("GET", e, !0),
    o.responseType = "text",
    o.onreadystatechange = function() {
        if (4 == this.readyState)
            if (200 == this.status) {
                var e = o.response;
                s.CalcPhi(t, i, n, r, e)
            } else
                alert("The PQR file is unavailable...");
        else
            s.showLoading()
    }
    ,
    o.send()
}
,
iCn3DUI.prototype.CalcPhi = function(e, t, i, n, r) {
    var s = this
      , o = s.icn3d;
    o.loadPhiFrom = "delphi";
    var a = s.cfg.cid ? s.cfg.cid : Object.keys(o.structures).toString()
      , l = {};
    if (r)
        l = {
            pqr2phi: r,
            gsize: e,
            salt: t,
            pdbid: a
        };
    else {
        var d = {}
          , c = {}
          , h = o.intHash(o.dAtoms, o.hAtoms);
        for (var p in h) {
            o.atoms[p];
            o.ions.hasOwnProperty(p) ? d[p] = 1 : c[p] = 1
        }
        var m = Object.keys(c).length;
        if (o.isCalphaPhosOnly(o.hash2Atoms(c)))
            return void alert("The potential will not be shown because the side chains are missing in the structure...");
        if (3e4 < m)
            return void alert("The maximum number of allowed atoms is 30,000. Please try it again with selected chains...");
        var u = "";
        u += s.getPDBHeader(),
        u += s.cfg.cid ? s.getAtomPDB(c, !0) : s.getAtomPDB(c),
        l = {
            pdb2phi: u += s.getAtomPDB(d, !0),
            gsize: e,
            salt: t,
            pdbid: a
        }
    }
    $.ajax({
        url: "https://www.ncbi.nlm.nih.gov/Structure/delphi/delphi.fcgi",
        type: "POST",
        data: l,
        dataType: "binary",
        responseType: "arraybuffer",
        cache: !0,
        tryCount: 0,
        retryLimit: 0,
        beforeSend: function() {
            s.showLoading()
        },
        complete: function() {
            s.hideLoading()
        },
        success: function(e) {
            s.loadPhiData(e, i, n),
            s.bAjaxPhi = !0,
            n ? s.setOption("phisurface", "phi") : s.setOption("phimap", "phi"),
            void 0 !== s.deferredDelphi && s.deferredDelphi.resolve(),
            void 0 !== s.deferredPhi && s.deferredPhi.resolve()
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit && $.ajax(this)
        }
    })
}
,
iCn3DUI.prototype.PhiParser = function(e, t, i, n) {
    var r = this
      , s = (r.icn3d,
    new XMLHttpRequest);
    s.open("GET", e, !0),
    s.responseType = "phiurl" == t || "phiurl2" == t ? "arraybuffer" : "text",
    s.onreadystatechange = function() {
        if (4 == this.readyState) {
            if (200 == this.status) {
                var e = s.response;
                "phiurl" == t || "phiurl2" == t ? r.loadPhiData(e, i, n) : r.loadCubeData(e, i, n),
                r.bAjaxPhi = !0,
                n ? r.setOption("phisurface", "phi") : r.setOption("phimap", "phi")
            } else
                alert("The potential file is unavailable...");
            void 0 !== r.deferredPhi && r.deferredPhi.resolve()
        } else
            r.showLoading()
    }
    ,
    s.send()
}
,
iCn3DUI.prototype.loadPhiData = function(e, t, i) {
    var n = this.icn3d
      , r = {
        filetype: "phi"
    }
      , s = e.buffer && e.buffer instanceof ArrayBuffer ? e.buffer : e
      , o = new Float32Array(s.slice(s.byteLength - 24, s.byteLength - 8));
    r.scale = o[0];
    var a = o[1]
      , l = o[2]
      , d = o[3];
    r.n = new Int32Array(s.slice(s.byteLength - 8, s.byteLength - 4)),
    r.xExtent = r.yExtent = r.zExtent = r.n;
    var c = 1 / r.scale * ((r.n - 1) / 2);
    r.ori = new THREE.Vector3(a - c,l - c,d - c);
    var h = new Float32Array(s.slice(110, s.byteLength - 56));
    r.bSurface = i,
    n.mapData.headerPhi = r,
    n.mapData.dataPhi = h,
    n.mapData.contourPhi = t;
    var p = new THREE.Matrix4;
    p.identity(),
    p.multiply((new THREE.Matrix4).makeTranslation(r.ori.x, r.ori.y, r.ori.z)),
    n.mapData.matrixPhi = p
}
,
iCn3DUI.prototype.loadCubeData = function(e, t, i) {
    var n = this.icn3d
      , r = {
        filetype: "cube"
    }
      , s = e.split("\n")
      , o = [];
    o.push(parseFloat(s[0].substr(0, 10))),
    o.push(parseFloat(s[0].substr(10, 6))),
    o.push(parseFloat(s[0].substr(16, 10))),
    o.push(parseFloat(s[0].substr(26, 10))),
    o.push(parseFloat(s[0].substr(36, 10))),
    r.scale = o[0];
    var a = o[2]
      , l = o[3]
      , d = o[4];
    r.n = o[1],
    r.xExtent = r.yExtent = r.zExtent = r.n;
    var c = 1 / r.scale * ((r.n - 1) / 2);
    r.ori = new THREE.Vector3(a - c,l - c,d - c);
    for (var h = [], p = 7, m = s.length; p < m; ++p)
        for (var u = s[p].split(/\s+/), f = 0, g = u.length; f < g; ++f) {
            var v = parseFloat(u[f]);
            isNaN(v) || h.push(v)
        }
    h.length != r.n * r.n * r.n && console.log("the data array size " + h.length + " didn't match the grid size " + r.n * r.n * r.n + "..."),
    r.bSurface = i,
    n.mapData.headerPhi = r,
    n.mapData.dataPhi = h,
    n.mapData.contourPhi = t;
    var b = new THREE.Matrix4;
    b.identity(),
    b.multiply((new THREE.Matrix4).makeTranslation(r.ori.x, r.ori.y, r.ori.z)),
    n.mapData.matrixPhi = b
}
,
iCn3DUI.prototype.applyCommandPhi = function(g) {
    var v = this;
    return v.deferredPhi = $.Deferred(function() {
        var e = v.icn3d
          , t = g.split(" | ")
          , i = t[0].split(" ")
          , n = t[1].split(" ")
          , r = t[2].split(" ")
          , s = t[3].split(" ")
          , o = t[4].split(" ")
          , a = i[2]
          , l = parseFloat(n[1])
          , d = r[1]
          , c = s[1]
          , h = o[1];
        if (8 == t.length) {
            var p = t[5].split(" ")
              , m = t[6].split(" ")
              , u = t[7].split(" ");
            e.phisurftype = p[1],
            e.phisurfop = parseFloat(m[1]),
            e.phisurfwf = u[1],
            $("#" + v.pre + "delphisurftype").val(e.phisurftype),
            $("#" + v.pre + "delphisurfop").val(e.phisurfop),
            $("#" + v.pre + "delphisurfwf").val(e.phisurfwf)
        }
        var f = "pqrurl2" == a || "phiurl2" == a || "cubeurl2" == a;
        "pqrurl" == a || "pqrurl2" == a ? v.CalcPhiUrl(c, h, l, f, d) : v.PhiParser(d, a, l, f)
    }),
    v.deferredPhi.promise()
}
,
iCn3DUI.prototype.applyCommandDelphi = function(u) {
    var f = this;
    return f.deferredDelphi = $.Deferred(function() {
        var e = f.icn3d
          , t = u.split(" | ")
          , i = t[0].split(" ")
          , n = t[1].split(" ")
          , r = t[2].split(" ")
          , s = t[3].split(" ")
          , o = i[2]
          , a = n[1]
          , l = r[1]
          , d = s[1];
        if ($("#" + f.pre + "delphigsize").val(l),
        $("#" + f.pre + "delphisalt").val(d),
        7 == t.length) {
            var c = t[4].split(" ")
              , h = t[5].split(" ")
              , p = t[6].split(" ");
            e.phisurftype = c[1],
            e.phisurfop = h[1],
            e.phisurfwf = p[1],
            $("#" + f.pre + "delphisurftype").val(e.phisurftype),
            $("#" + f.pre + "delphisurfop").val(e.phisurfop),
            $("#" + f.pre + "delphisurfwf").val(e.phisurfwf)
        }
        var m = "surface" == o;
        f.CalcPhi(l, d, a, m)
    }),
    f.deferredDelphi.promise()
}
,
iCn3DUI.prototype.applyCommandSymdBase = function(e) {
    this.icn3d;
    this.retrieveSymd()
}
,
iCn3DUI.prototype.applyCommandSymd = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredSymd = $.Deferred(function() {
        t.applyCommandSymdBase(e)
    }),
    t.deferredSymd.promise()
}
,
iCn3DUI.prototype.retrieveSymd = function() {
    var Z = this
      , K = Z.icn3d
      , e = K.intHash(K.dAtoms, K.hAtoms);
    e = K.intHash(e, K.proteins);
    var t = Object.keys(e).length
      , J = {};
    for (var i in e) {
        var n = K.atoms[i]
          , r = n.structure + "_" + n.chain + "_" + n.resi;
        J[r] = 1
    }
    if (1e4 < t)
        alert("The maximum number of allowed atoms is 10,000. Please try it again with smaller sets...");
    else {
        var s = "";
        s += Z.getPDBHeader();
        var o = {
            pdb: s += Z.getAtomPDB(e),
            pdbid: Object.keys(K.structures).toString()
        };
        $.ajax({
            url: "https://www.ncbi.nlm.nih.gov/Structure/symd/symd.cgi",
            type: "POST",
            data: o,
            dataType: "json",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            beforeSend: function() {
                Z.showLoading()
            },
            complete: function() {},
            success: function(e) {
                var t, i, n, r = e.rcsb_struct_symmetry, s = "none";
                if (void 0 !== r) {
                    var o;
                    void 0 !== K.rmsd_supr && void 0 !== K.rmsd_supr.rot && (t = K.rmsd_supr.rot,
                    i = K.rmsd_supr.trans1,
                    n = K.rmsd_supr.trans2),
                    K.symdHash = {};
                    for (var a = 0, l = r.length; a < l; ++a)
                        if ("C1" != r[a].symbol) {
                            s = r[a].symbol + " ",
                            "Pseudo Symmetry" == r[a].kind ? s = r[a].symbol + " (pseudo)" : "Global Symmetry" == r[a].kind ? s = r[a].symbol + " (global)" : "Local Symmetry" == r[a].kind && (s = r[a].symbol + " (local)");
                            for (var d = r[a].rotation_axes, c = [], h = 0, p = d.length; h < p; ++h) {
                                var m = []
                                  , u = new THREE.Vector3(d[h].start[0],d[h].start[1],d[h].start[2])
                                  , f = new THREE.Vector3(d[h].end[0],d[h].end[1],d[h].end[2]);
                                o = d[h].order,
                                void 0 !== K.rmsd_supr && void 0 !== K.rmsd_supr.rot && (u = K.transformMemPro(u, t, i, n),
                                f = K.transformMemPro(f, t, i, n)),
                                m.push(u),
                                m.push(f);
                                var g = Z.getAxisColor(r[a].symbol, d[h].order)
                                  , v = Z.getPolygonColor(r[a].symbol);
                                m.push(g),
                                m.push(v),
                                m.push(d[h].order),
                                m.push("selection"),
                                c.push(m)
                            }
                            K.symdHash[s] = c
                        }
                    if (0 == Object.keys(K.symdHash).length)
                        $("#" + Z.pre + "dl_symd").html("<br>The selected residues have no detected symmetry with a Z score of " + e.zscore + " from the program <a href='https://symd.nci.nih.gov/' target='_blank'>SymD</a>."),
                        Z.openDlg("dl_symd", "Dynamically Calculated Symmetry Using SymD");
                    else {
                        var b = e.seqalign.replace(/ /g, "").split(",")
                          , y = e.nres
                          , C = e.shift
                          , _ = e.rmsd
                          , S = Object.keys(J)
                          , w = {}
                          , A = {}
                          , x = []
                          , k = []
                          , D = 0
                          , O = 0
                          , R = {};
                        for (a = 0,
                        l = b[0].length; a < l; ++a) {
                            var T = b[0][a]
                              , E = b[1][a];
                            if ("-" != T) {
                                if (T == T.toUpperCase()) {
                                    w[S[D]] = 1;
                                    var I = Z.getIdArray(S[D]);
                                    x.push(T + " $" + I[0] + "." + I[1] + ":" + I[2]);
                                    var H = I[0] + "_" + I[1];
                                    R.hasOwnProperty(H) || (R[H] = []),
                                    R[H].push(x.length - 1)
                                }
                                ++D
                            }
                            if ("-" != E) {
                                if (E == E.toUpperCase()) {
                                    var L = (O + C + y) % y;
                                    A[S[L]] = 1;
                                    var P = Z.getIdArray(S[L]);
                                    k.push(E + " $" + P[0] + "." + P[1] + ":" + P[2])
                                }
                                ++O
                            }
                        }
                        var F = {}
                          , M = {}
                          , N = []
                          , z = []
                          , q = !1;
                        if (1 == Object.keys(R).length) {
                            q = !0;
                            var j = parseInt(x.length / o + .5)
                              , U = Object.keys(w)
                              , B = Object.keys(A);
                            for (a = 0; a < j; ++a)
                                F.hasOwnProperty(B[a]) || (N.push(x[a]),
                                z.push(k[a]),
                                F[U[a]] = 1,
                                M[B[a]] = 1)
                        } else {
                            var G, V = 0;
                            for (var H in R)
                                R[H].length > V && (V = R[H].length,
                                G = H);
                            for (U = Object.keys(w),
                            B = Object.keys(A),
                            a = 0,
                            l = R[G].length; a < l; ++a) {
                                var W = R[G][a];
                                F.hasOwnProperty(B[W]) || (N.push(x[W]),
                                z.push(k[W]),
                                F[U[W]] = 1,
                                M[B[W]] = 1)
                            }
                        }
                        var Y = "<br>";
                        Y += "The symmetry " + r[0].symbol + " was calculated dynamically using the program <a href='https://symd.nci.nih.gov/' target='_blank'>SymD</a>. The Z score " + e.zscore + " is greater than the threshold Z score 8. The RMSD is " + _ + ' angstrom. <br><br>The following sequence alignment shows the residue mapping of the best aligned sets: "symOri" and "symPerm", which are also available in the menu "Analysis > Defined Sets".<br>',
                        $("#" + Z.pre + "symd_info").html(Y),
                        Z.setSeqAlignForSymmetry(N, z, q);
                        var X = Z.getAlignSequencesAnnotations(Object.keys(K.alnChains), void 0, void 0, !1, q);
                        $("#" + Z.pre + "dl_sequence2").html(X.sequencesHtml),
                        $("#" + Z.pre + "dl_sequence2").width(Z.RESIDUE_WIDTH * X.maxSeqCnt + 200),
                        Z.openDlg("dl_alignment", "Select residues in aligned sequences from SymD");
                        var Q = "symOri";
                        Z.selectResidueList(F, Q, Q),
                        Z.updateSelectionNameDesc(),
                        Z.setLogCmd("select " + Z.residueids2spec(Object.keys(F)) + " | name " + Q, !0),
                        Q = "symPerm",
                        Z.selectResidueList(M, Q, Q),
                        Z.updateSelectionNameDesc(),
                        Z.setLogCmd("select " + Z.residueids2spec(Object.keys(M)) + " | name " + Q, !0),
                        Q = "symBoth";
                        F = K.unionHash(F, M);
                        Z.selectResidueList(F, Q, Q),
                        Z.updateSelectionNameDesc(),
                        Z.setLogCmd("select " + Z.residueids2spec(Object.keys(F)) + " | name " + Q, !0)
                    }
                } else
                    $("#" + Z.pre + "dl_symd").html("<br>The selected residues have no detected symmetry with a Z score of " + e.zscore + " from the program <a href='https://symd.nci.nih.gov/' target='_blank'>SymD</a>."),
                    Z.openDlg("dl_symd", "Dynamically Calculated Symmetry Using SymD");
                K.symdtitle = "none" === s ? void 0 : s,
                K.draw(),
                void 0 !== Z.deferredSymd && Z.deferredSymd.resolve()
            },
            error: function(e, t, i) {
                this.tryCount++,
                this.tryCount <= this.retryLimit ? $.ajax(this) : ($("#" + Z.pre + "dl_symd").html("<br>The web service can not determine the symmetry of the input set."),
                Z.openDlg("dl_symd", "Dynamically Calculated Symmetry Using SymD"),
                Z.hideLoading(),
                void 0 !== Z.deferredSymd && Z.deferredSymd.resolve())
            }
        })
    }
}
,
iCn3DUI.prototype.getResObj = function(e) {
    this.icn3d;
    var t = e.substr(0, e.indexOf(" "))
      , i = e.indexOf("$")
      , n = e.indexOf(".")
      , r = e.indexOf(":")
      , s = e.substr(i + 1, n - i - 1)
      , o = e.substr(n + 1, r - n - 1)
      , a = e.substr(r + 1);
    return {
        resn: t,
        resid: s + "_" + o + "_" + a,
        resi: a,
        aligned: !0
    }
}
,
iCn3DUI.prototype.setSeqAlignForSymmetry = function(e, t, i) {
    var n = this
      , r = n.icn3d;
    n.conservedName1 = "symOri_cons",
    n.conservedName2 = "symPerm_cons",
    n.consHash1 = {},
    n.consHash2 = {},
    r.alnChainsAnTtl = {},
    r.alnChainsAnno = {},
    r.alnChainsSeq = {},
    r.alnChains = {},
    r.alnChainsSeq = {};
    for (var s = {}, o = 0, a = e.length; o < a; ++o) {
        var l, d = n.getResObj(e[o]), c = n.getResObj(t[o]), h = d.resid.substr(0, d.resid.lastIndexOf("_")), p = c.resid.substr(0, c.resid.lastIndexOf("_")), m = p;
        if (i)
            m = p.substr(0, p.indexOf("_")) + "2" + p.substr(p.indexOf("_"));
        s[d.resid] = 1,
        s[c.resid] = 1,
        l = d.resn == c.resn ? "#FF0000" : "#0000FF";
        var u = "#" + n.getColorhexFromBlosum62(d.resn, c.resn);
        for (var f in d.color = l,
        c.color = l,
        d.color2 = u,
        c.color2 = u,
        r.residues[d.resid])
            r.atoms[f].color = r.thr(l),
            r.atomPrevColors[f] = r.thr(l);
        for (var f in r.residues[c.resid])
            r.atoms[f].color = r.thr(l),
            r.atomPrevColors[f] = r.thr(l);
        void 0 === r.alnChainsAnTtl[h] && (r.alnChainsAnTtl[h] = []);
        for (f = 0; f < 3; ++f)
            void 0 === r.alnChainsAnTtl[h][f] && (r.alnChainsAnTtl[h][f] = []);
        for (f = 0; f < 3; ++f)
            r.alnChainsAnTtl[h][f].push("");
        void 0 === r.alnChainsSeq[h] && (r.alnChainsSeq[h] = []),
        void 0 === r.alnChainsSeq[m] && (r.alnChainsSeq[m] = []),
        r.alnChainsSeq[h].push(d),
        r.alnChainsSeq[m].push(c),
        void 0 === r.alnChains[h] && (r.alnChains[h] = {}),
        void 0 === r.alnChains[m] && (r.alnChains[m] = {}),
        $.extend(r.alnChains[h], r.residues[h + "_" + d.resi]),
        $.extend(r.alnChains[m], r.residues[m + "_" + c.resi]),
        n.consHash1[h + "_" + d.resi] = 1,
        n.consHash2[m + "_" + c.resi] = 1,
        void 0 === r.alnChainsAnno[h] && (r.alnChainsAnno[h] = []);
        for (f = 0; f < 3; ++f)
            void 0 === r.alnChainsAnno[h][f] && (r.alnChainsAnno[h][f] = []);
        var g = ".";
        o % 5 == 0 && (g = "*"),
        o % 10 == 0 && (g = "|"),
        r.alnChainsAnno[h][0].push(g);
        var v = "";
        o % 10 == 0 && (v = o.toString()),
        r.alnChainsAnno[h][1].push(v)
    }
}
,
iCn3DUI.prototype.applyCommandScapBase = function(e) {
    this.icn3d;
    var t = e.substr(e.lastIndexOf(" ") + 1);
    0 == e.indexOf("scap 3d") ? this.retrieveScap(t) : 0 == e.indexOf("scap interaction") ? this.retrieveScap(t, !0) : 0 == e.indexOf("scap pdb") && this.retrieveScap(t, void 0, !0)
}
,
iCn3DUI.prototype.applyCommandScap = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredScap = $.Deferred(function() {
        t.applyCommandScapBase(e)
    }),
    t.deferredScap.promise()
}
,
iCn3DUI.prototype.adjust2DWidth = function(e) {
    this.icn3d,
    e = this.pre + e;
    var t = $("#" + this.pre + "dl_selectannotations").dialog("option", "height");
    $("#" + e).dialog("option", "width", 250),
    $("#" + e).dialog("option", "height", t);
    var i = {
        my: "left-125 top+" + this.MENU_HEIGHT,
        at: "right top",
        of: "#" + this.pre + "viewer",
        collision: "none"
    };
    $("#" + e).dialog("option", "position", i)
}
,
iCn3DUI.prototype.retrieveScap = function(e, h, p) {
    var m = this
      , u = m.icn3d
      , f = e.split("_")
      , g = f[1] + "," + f[2] + "," + f[3]
      , t = f[0] + "_" + f[1] + "_" + f[2]
      , i = "$" + f[0] + "." + f[1] + ":" + f[2]
      , n = m.pickCustomSphere_base(10, u.hash2Atoms(u.residues[t]), u.atoms, !1, !1, void 0, i, !1)
      , r = Object.keys(n.residues);
    u.hAtoms = {};
    for (var s = 0, o = r.length; s < o; ++s) {
        var a = r[s];
        for (var l in u.residues[a])
            u.hAtoms[l] = 1
    }
    u.hAtoms = u.unionHash(u.hAtoms, u.residues[t]);
    var d = m.getPDBHeader() + m.getAtomPDB(u.hAtoms)
      , v = Object.keys(u.structures)[0]
      , c = {
        pdb: d,
        snp: g,
        pdbid: v
    };
    $.ajax({
        url: "https://www.ncbi.nlm.nih.gov/Structure/scap/scap.cgi",
        type: "POST",
        data: c,
        dataType: "text",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        beforeSend: function() {
            m.showLoading()
        },
        complete: function() {},
        success: function(e) {
            var t = e.indexOf("\n")
              , i = e.substr(0, t)
              , n = e.substr(t + 1);
            console.log("free energy: " + i + " kcal/mol");
            var r = u.cloneHash(u.hAtoms);
            u.hAtoms = {},
            u.loadPDB(n, v, !1, !1, !0);
            var s = u.cloneHash(u.hAtoms);
            for (var o in u.hAtoms = u.unionHash(u.hAtoms, r),
            u.dAtoms = u.hAtoms,
            u.zoominSelection(),
            m.setStyle("proteins", "stick"),
            u.opts.color = "chain",
            u.setColorByOptions(u.opts, u.dAtoms),
            s)
                u.atoms[o].het || (u.atoms[o].color = u.thr(10824234),
                u.atomPrevColors[o] = u.thr(10824234));
            if (p) {
                var a = "";
                a += m.getPDBHeader(),
                a += m.getAtomPDB(u.hAtoms, void 0, !0);
                var l = m.inputid ? m.inputid : "custom";
                m.saveFile(l + "_" + g + ".pdb", "text", [a]),
                u.draw()
            } else {
                var d = "." + f[1] + ":" + f[2]
                  , c = "snp_" + f[1] + "_" + f[2];
                if (m.selectBySpec(d, c, c),
                u.opts.color = "atom",
                u.setColorByOptions(u.opts, u.hAtoms),
                m.clearInteractions(),
                h) {
                    m.viewInteractionPairs(["selected"], ["non-selected"], !1, "linegraph", !0, !0, !0, !0, !0, !0),
                    m.adjust2DWidth("dl_linegraph")
                }
                u.hAtoms = u.dAtoms,
                u.draw(),
                u.alertAlt || (u.alertAlt = !0,
                u.bRender && alert('Please press the letter "a" to alternate between wild type and mutant.'))
            }
            void 0 !== m.deferredScap && m.deferredScap.resolve()
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : (alert("There are some problems in predicting the side chain of the mutant..."),
            m.hideLoading(),
            void 0 !== m.deferredScap && m.deferredScap.resolve())
        }
    })
}
,
iCn3DUI.prototype.showAnnotations = function() {
    var t = this
      , e = t.icn3d;
    if (t.openDlg("dl_selectannotations", "Sequences and Annotations"),
    (void 0 === t.bAssemblyNote || !t.bAssemblyNote) && void 0 !== e.asuCnt) {
        var i = "     <br><div id='" + t.pre + "assembly_note' style='margin-left:5px;'><span class='icn3d-annoLargeTitle'>Assembly Tips:</span> Only the asymmetric unit is shown in the sequence window.<br>Click \"Assembly\" in the menu \"View\" to switch between asymmetric unit and biological assembly (<b>" + e.asuCnt + "</b> asymmetric unit).</div>";
        $("#" + t.pre + "dl_annotations_tabs").append(i),
        t.bAssemblyNote = !0
    }
    if (void 0 === t.bAnnoShown || !t.bAnnoShown) {
        var n = Object.keys(e.chains);
        void 0 === t.giSeq && (t.giSeq = {}),
        void 0 === t.currClin && (t.currClin = {}),
        void 0 === t.resi2disease_nonempty && (t.resi2disease_nonempty = {}),
        void 0 === t.baseResi && (t.baseResi = {}),
        void 0 === t.matchedPos && (t.matchedPos = {});
        var r = t.cfg.notebook ? t.WIDTH / 2 : $("#" + t.pre + "dl_selectannotations").dialog("option", "width");
        for (var s in t.seqAnnWidth = r - 120 - 60 - 50,
        t.maxAnnoLength = 1,
        e.chainsSeq)
            e.chainsSeq[s].length > t.maxAnnoLength && (t.maxAnnoLength = e.chainsSeq[s].length);
        var o = {}
          , a = {}
          , l = {};
        t.protein_chainid = {};
        for (var d = 0, c = n.length; d < c; ++d) {
            Math.round(n[d].indexOf("_"));
            void 0 === (b = e.getFirstCalphaAtomObj(e.chains[n[d]])) && (b = e.getFirstAtomObj(e.chains[n[d]]));
            var h, p = n[d].substr(n[d].indexOf("_") + 1);
            if (h = -1 !== p.indexOf("_") ? (p = p.substr(0, p.indexOf("_")),
            n[d].substr(0, n[d].indexOf("_")) + "_" + p) : n[d],
            e.proteins.hasOwnProperty(b.serial) && 1 < e.chainsSeq[n[d]].length)
                t.protein_chainid[n[d]] = h;
            else if (e.nucleotides.hasOwnProperty(b.serial) && 1 < e.chainsSeq[n[d]].length)
                o[n[d]] = h;
            else if (1 < e.chainsSeq[n[d]].length)
                a[n[d]] = h;
            else {
                var m = e.chainsSeq[n[d]][0].name
                  , u = n[d] + "_" + e.chainsSeq[n[d]][0].resi;
                void 0 === l[m] && (l[m] = []),
                l[m].push(u)
            }
            if ((void 0 !== t.cfg.pdbid || void 0 !== t.cfg.opmid || void 0 !== t.cfg.mmcifid || void 0 !== t.cfg.mmtfid) && (e.proteins.hasOwnProperty(b.serial) || e.nucleotides.hasOwnProperty(b.serial)))
                for (var f = 0, g = e.chainsSeq[n[d]].length; f < g; ++f) {
                    var v = e.chainsSeq[n[d]][f];
                    if ("" !== v.name && "-" !== v.name && v.name == v.name.toUpperCase()) {
                        var b;
                        u = n[d] + "_" + v.resi;
                        if (void 0 === (b = e.getFirstCalphaAtomObj(e.residues[u])) && (b = e.getFirstAtomObj(e.chains[n[d]])),
                        e.proteins.hasOwnProperty(b.serial) || e.nucleotides.hasOwnProperty(b.serial))
                            continue;
                        m = v.name.trim();
                        void 0 === l[m] && (l[m] = []),
                        l[m].push(u)
                    }
                }
        }
        if (void 0 === t.cfg.blast_rep_id) {
            if (t.bFullUi)
                if (void 0 !== t.cfg.mmtfid) {
                    var y = n[0].substr(0, n[0].indexOf("_"));
                    $.when(t.downloadMmcifSymmetry(y, "mmtfid")).then(function() {
                        t.showAnnoSeqData(o, a, l)
                    })
                } else
                    t.showAnnoSeqData(o, a, l)
        } else if (void 0 !== t.cfg.blast_rep_id) {
            var C = t.baseUrl + "pwaln/pwaln.fcgi?from=querytarget"
              , _ = {
                targets: t.cfg.blast_rep_id,
                queries: t.cfg.query_id
            };
            if (void 0 !== t.cfg.query_from_to) {
                var S = t.cfg.query_from_to.split(":");
                for (d = 0,
                c = S.length; d < c; ++d)
                    S[d] = parseInt(S[d]) - 1;
                _.queries = t.cfg.query_id + ":" + S.join(":")
            }
            if (void 0 !== t.cfg.target_from_to) {
                var w = t.cfg.target_from_to.split(":");
                for (d = 0,
                c = w.length; d < c; ++d)
                    w[d] = parseInt(w[d]) - 1;
                _.targets = t.cfg.blast_rep_id + ":" + w.join(":")
            }
            $.ajax({
                url: C,
                type: "POST",
                data: _,
                dataType: "jsonp",
                tryCount: 0,
                retryLimit: 1,
                success: function(e) {
                    t.seqStructAlignData = e,
                    t.showAnnoSeqData(o, a, l)
                },
                error: function(e, t, i) {
                    this.tryCount++,
                    this.tryCount <= this.retryLimit && $.ajax(this)
                }
            })
        }
    }
    t.bAnnoShown = !0
}
,
iCn3DUI.prototype.showAnnoSeqData = function(e, t, i) {
    var n = this
      , r = n.icn3d;
    n.getAnnotationData();
    var s = 0;
    for (var o in e)
        n.getSequenceData(o, e[o], "nucleotide", s),
        ++s;
    for (var o in n.interactChainbase = r.unionHash(n.interactChainbase, n.protein_chainid),
    n.interactChainbase = r.unionHash(n.interactChainbase, e),
    s = 0,
    t)
        n.getSequenceData(o, t[o], "chemical", s),
        ++s;
    for (var a in n.interactChainbase = r.unionHash(n.interactChainbase, t),
    n.ssbondChainbase = r.unionHash(n.ssbondChainbase, n.protein_chainid),
    n.ssbondChainbase = r.unionHash(n.ssbondChainbase, t),
    n.crosslinkChainbase = r.unionHash(n.crosslinkChainbase, n.protein_chainid),
    n.crosslinkChainbase = r.unionHash(n.crosslinkChainbase, e),
    n.crosslinkChainbase = r.unionHash(n.crosslinkChainbase, t),
    i)
        n.getCombinedSequenceData(a, i[a], s),
        ++s;
    n.enableHlSeq(),
    setTimeout(function() {
        n.hideAllAnno(),
        n.clickCdd()
    }, 0)
}
,
iCn3DUI.prototype.enableHlSeq = function() {
    var e = this.icn3d;
    this.isMobile() ? (this.selectSequenceMobile(),
    this.selectChainMobile()) : this.selectSequenceNonMobile(),
    Object.keys(e.hAtoms).length < Object.keys(e.dAtoms).length && this.updateHlSeq()
}
,
iCn3DUI.prototype.updateClinvar = function() {
    this.icn3d;
    if (void 0 === this.bClinvarShown || !this.bClinvarShown)
        for (var e in this.protein_chainid) {
            var t = this.protein_chainid[e];
            this.showClinvar(e, t)
        }
    this.bClinvarShown = !0
}
,
iCn3DUI.prototype.updateSnp = function() {
    this.icn3d;
    if (void 0 === this.bSnpShown || !this.bSnpShown)
        for (var e in this.protein_chainid) {
            var t = this.protein_chainid[e];
            this.showSnp(e, t)
        }
    this.bSnpShown = !0
}
,
iCn3DUI.prototype.updateDomain = function() {
    this.icn3d;
    void 0 !== this.bDomainShown && this.bDomainShown || this.showDomainAll(),
    this.bDomainShown = !0
}
,
iCn3DUI.prototype.updateInteraction = function() {
    this.icn3d;
    if (void 0 === this.bInteractionShown || !this.bInteractionShown)
        for (var e in this.interactChainbase) {
            var t = this.interactChainbase[e];
            this.showInteraction(e, t)
        }
    this.bInteractionShown = !0
}
,
iCn3DUI.prototype.updateSsbond = function() {
    this.icn3d;
    if (void 0 === this.bSSbondShown || !this.bSSbondShown)
        for (var e in this.ssbondChainbase) {
            var t = this.ssbondChainbase[e];
            this.showSsbond(e, t)
        }
    this.bSSbondShown = !0
}
,
iCn3DUI.prototype.updateCrosslink = function() {
    this.icn3d;
    if (void 0 === this.bCrosslinkShown || !this.bCrosslinkShown)
        for (var e in this.crosslinkChainbase) {
            var t = this.crosslinkChainbase[e];
            this.showCrosslink(e, t)
        }
    this.bCrosslinkShown = !0
}
,
iCn3DUI.prototype.updateTransmem = function() {
    this.icn3d;
    if (void 0 === this.bTranememShown || !this.bTranememShown)
        for (var e in this.protein_chainid) {
            var t = this.protein_chainid[e];
            this.showTransmem(e, t)
        }
    this.bTranememShown = !0
}
,
iCn3DUI.prototype.getAnDiv = function(e, t) {
    this.icn3d;
    var i = "Loading " + t + "...";
    return "custom" == t ? i = "" : "domain" == t && (i = "Loading 3D " + t + "..."),
    "<div id='" + this.pre + t + "_" + e + "'><div id='" + this.pre + "tt_" + t + "_" + e + "' class='icn3d-fixed-pos' style='display:none!important'></div><div id='" + this.pre + "dt_" + t + "_" + e + "' style='display:none'>" + i + "</div><div id='" + this.pre + "ov_" + t + "_" + e + "'>" + i + "</div></div>"
}
,
iCn3DUI.prototype.addButton = function(e, t, i, n, r, s) {
    this.icn3d;
    return "<div class='" + t + "' chainid='" + e + "' style='display:inline-block; font-size:11px; font-weight:bold; width:" + r + "px!important;'><button style='-webkit-appearance:" + s + "; height:18px; width:" + r + "px;'><span style='white-space:nowrap; margin-left:-3px;' title='" + n + "'>" + i + "</span></button></div>"
}
,
iCn3DUI.prototype.addSnpButton = function(e, t, i, n, r, s) {
    this.icn3d;
    return "<div class='" + this.pre + t + "' snp='" + e + "' style='margin:3px 0 3px 0; display:inline-block; font-size:11px; font-weight:bold; width:" + r + "px!important;'><button style='-webkit-appearance:" + s + "; height:18px; width:" + r + "px;'><span style='white-space:nowrap; margin-left:-3px;' title='" + n + "'>" + i + "</span></button></div>"
}
,
iCn3DUI.prototype.conservativeReplacement = function(e, t) {
    this.icn3d;
    var i = -1 !== this.b62ResArray.indexOf(e) ? this.b62ResArray.indexOf(e) : this.b62ResArray.length - 1
      , n = -1 !== this.b62ResArray.indexOf(t) ? this.b62ResArray.indexOf(t) : this.b62ResArray.length - 1;
    return 0 < this.b62Matrix[i][n]
}
,
iCn3DUI.prototype.getColorhexFromBlosum62 = function(e, t) {
    this.icn3d;
    var i = -1 !== this.b62ResArray.indexOf(e) ? this.b62ResArray.indexOf(e) : this.b62ResArray.length - 1
      , n = -1 !== this.b62ResArray.indexOf(t) ? this.b62ResArray.indexOf(t) : this.b62ResArray.length - 1
      , r = this.b62Matrix[i][n];
    if (void 0 === r)
        return "333333";
    var s, o, a = "333333";
    0 < r ? a = "DD" + (o = (s = 221 - parseInt(r / 11 * 221)) < 10 ? "0" + s.toString(16) : s.toString(16)) + o : a = (o = (s = 221 - parseInt(-1 * r / 4 * 221)) < 10 ? "0" + s.toString(16) : s.toString(16)) + o + "DD";
    return a
}
,
iCn3DUI.prototype.processSeqData = function(e) {
    var t = this
      , i = t.icn3d;
    for (var n in t.protein_chainid) {
        var r = t.protein_chainid[n];
        if (e.hasOwnProperty(r)) {
            var s = e[r];
            t.giSeq[n] = s;
            for (var o = "", a = 0; a < 10 && a < i.chainsSeq[n].length; ++a)
                o += i.chainsSeq[n][a].name.substr(0, 1);
            var l = s.toLowerCase().indexOf(o.toLowerCase());
            -1 == l ? (console.log("The gi sequence didn't match the protein sequence. The start of 3D protein sequence: " + o + ". The gi sequence: " + s.substr(0, 10) + "."),
            t.setAlternativeSeq(n, r)) : (t.matchedPos[n] = l,
            t.baseResi[n] = i.chainsSeq[n][0].resi - t.matchedPos[n] - 1)
        } else
            console.log("No data were found for the protein " + n + "..."),
            t.setAlternativeSeq(n, r);
        if (t.cfg.blast_rep_id != n)
            t.showSeq(n, r);
        else if (t.cfg.blast_rep_id == n && void 0 === t.seqStructAlignData.data) {
            c = 14 < t.cfg.query_id.length ? "Query: " + t.cfg.query_id.substr(0, 6) + "..." : isNaN(t.cfg.query_id) ? "Query: " + t.cfg.query_id : "Query: gi " + t.cfg.query_id,
            f = D = void 0;
            var d = "cannot be aligned";
            t.queryStart = "",
            t.queryEnd = "",
            alert("The sequence can NOT be aligned to the structure"),
            t.showSeq(n, r, void 0, c, D, d, f)
        } else if (t.cfg.blast_rep_id == n && void 0 !== t.seqStructAlignData.data) {
            var c;
            c = 14 < t.cfg.query_id.length ? "Query: " + t.cfg.query_id.substr(0, 6) + "..." : isNaN(t.cfg.query_id) ? "Query: " + t.cfg.query_id : "Query: gi " + t.cfg.query_id;
            var h, p, m = t.seqStructAlignData;
            void 0 !== m.data && (h = m.data[0].query,
            p = 0 < (p = m.data[0].targets[n.replace(/_/g, "")]).hsps.length ? p.hsps[0] : void 0);
            d = "";
            var u, f = "";
            if (t.queryStart = "",
            t.queryEnd = "",
            void 0 !== h && void 0 !== p) {
                1e-200 < (u = p.scores.e_value.toPrecision(2)) && (u = parseFloat(u).toExponential());
                p.scores.bit_score;
                var g = m.targets[n.replace(/_/g, "")].seqdata
                  , v = h.seqdata
                  , b = p.segs
                  , y = {};
                void 0 === t.targetGapHash && (t.targetGapHash = {}),
                t.fullpos2ConsTargetpos = {},
                t.consrvResPosArray = [];
                var C = 0
                  , _ = 0;
                t.nTotalGap = 0,
                t.queryStart = b[0].from + 1,
                t.queryEnd = b[b.length - 1].to + 1;
                a = 0;
                for (var S = b.length; a < S; ++a) {
                    var w = b[a];
                    if (0 < a)
                        if (w.orifrom - C < w.from - _)
                            t.targetGapHash[w.orifrom] = {
                                from: _ + 1,
                                to: w.from - 1
                            },
                            t.nTotalGap += t.targetGapHash[w.orifrom].to - t.targetGapHash[w.orifrom].from + 1;
                        else if (w.orifrom - C > w.from - _)
                            for (var A = C + 1; A < w.orifrom; ++A)
                                y[A] = -1;
                    for (A = 0; A <= w.orito - w.orifrom; ++A)
                        y[A + w.orifrom] = A + w.from;
                    C = w.orito,
                    _ = w.to
                }
                var x = 0;
                i.alnChainsSeq[n] = [];
                for (a = 0,
                S = g.length; a < S; ++a) {
                    if (t.targetGapHash.hasOwnProperty(a))
                        for (A = t.targetGapHash[a].from; A <= t.targetGapHash[a].to; ++A)
                            d += v[A];
                    if (f += t.insertGap(n, a, "-", !0),
                    t.targetGapHash.hasOwnProperty(a) && (x += t.targetGapHash[a].to - t.targetGapHash[a].from + 1),
                    y.hasOwnProperty(a) && -1 !== y[a]) {
                        d += v[y[a]];
                        var k = t.getColorhexFromBlosum62(g[a], v[y[a]]);
                        g[a] == v[y[a]] ? (f += g[a],
                        t.fullpos2ConsTargetpos[a + x] = {
                            same: 1,
                            pos: a + 1,
                            res: g[a],
                            color: k
                        },
                        t.consrvResPosArray.push(a + 1),
                        i.alnChainsSeq[n].push({
                            resi: a + 1,
                            color: "#FF0000",
                            color2: "#" + k
                        })) : t.conservativeReplacement(g[a], v[y[a]]) ? (f += "+",
                        t.fullpos2ConsTargetpos[a + x] = {
                            same: 0,
                            pos: a + 1,
                            res: g[a],
                            color: k
                        },
                        t.consrvResPosArray.push(a + 1),
                        i.alnChainsSeq[n].push({
                            resi: a + 1,
                            color: "#0000FF",
                            color2: "#" + k
                        })) : (f += " ",
                        t.fullpos2ConsTargetpos[a + x] = {
                            same: -1,
                            pos: a + 1,
                            res: g[a],
                            color: k
                        },
                        i.alnChainsSeq[n].push({
                            resi: a + 1,
                            color: t.GREYC,
                            color2: "#" + k
                        }))
                    } else
                        d += "-",
                        f += " "
                }
            } else
                d += "cannot be aligned",
                alert("The sequence can NOT be aligned to the structure");
            var D = "BLAST, E: " + u;
            t.showSeq(n, r, void 0, c, D, d, f);
            var O = {};
            if (void 0 !== t.consrvResPosArray)
                for (a = 0,
                S = t.consrvResPosArray.length; a < S; ++a)
                    O[r + "_" + t.consrvResPosArray[a]] = 1;
            var R = i.cloneHash(i.hAtoms);
            t.selectResidueList(O, "protein_aligned", D, !1),
            i.hAtoms = i.cloneHash(R)
        }
    }
    t.enableHlSeq(),
    t.showCddSiteAll()
}
,
iCn3DUI.prototype.getAnnotationData = function() {
    var s = this
      , e = s.icn3d
      , o = $.map(s.protein_chainid, function(e) {
        return e
    })
      , t = 0;
    for (var i in s.protein_chainid) {
        var n = s.isMobile() ? "none" : "button"
          , r = s.getProteinName(i)
          , a = r
          , l = 0 == t ? "<span class='icn3d-annoLargeTitle'><b>Proteins</b>: </span><br><br>" : ""
          , d = e.chainsGene[i] && e.chainsGene[i].geneId ? " (Gene: <a href='https://www.ncbi.nlm.nih.gov/gene/" + e.chainsGene[i].geneId + "' target='_blank' title='" + e.chainsGene[i].geneDesc + "'>" + e.chainsGene[i].geneSymbol + "</a>)" : ""
          , c = "<div id='" + s.pre + "anno_" + i + "' class='icn3d-annotation'>" + l + "<span style='font-weight:bold;'>Annotations of " + i + "</span>: <a class='icn3d-blue' href='https://www.ncbi.nlm.nih.gov/protein?term=" + i + "' target='_blank' title='" + r + "'>" + a + "</a>" + d + "&nbsp;&nbsp;&nbsp;" + s.addButton(i, "icn3d-addtrack", "Add Track", "Add a custom track", 60, n) + "&nbsp;&nbsp;&nbsp;";
        c += s.addButton(i, "icn3d-customcolor", "Custom Color/Tube", "Use a custom file to define the colors or tubes in 3D structure", 110, n) + "&nbsp;&nbsp;&nbsp;",
        c += s.addButton(i, "icn3d-helixsets", "Helix Sets", 'Define sets for each helix in this chain and add them to the menu of "Defined Sets"', 60, n) + "&nbsp;" + s.addButton(i, "icn3d-sheetsets", "Sheet Sets", 'Define sets for each sheet in this chain and add them to the menu of "Defined Sets"', 60, n) + "&nbsp;" + s.addButton(i, "icn3d-coilsets", "Coil Sets", 'Define sets for each coil in this chain and add them to the menu of "Defined Sets"', 60, n),
        $("#" + s.pre + "dl_annotations").append(c);
        var h = ["giseq", "cdd", "clinvar", "snp", "domain", "site", "interaction", "custom", "ssbond", "crosslink", "transmem"];
        for (var p in h) {
            var m = h[p];
            $("#" + s.pre + "anno_" + i).append(s.getAnDiv(i, m))
        }
        $("#" + s.pre + "anno_" + i).append("<br><hr><br>"),
        ++t
    }
    s.setToolTip();
    var u = s.baseUrl + "/vastdyn/vastdyn.cgi?chainlist=" + o;
    void 0 !== s.chainid_seq ? s.processSeqData(s.chainid_seq) : $.ajax({
        url: u,
        dataType: "jsonp",
        cache: !0,
        tryCount: 0,
        retryLimit: 0,
        success: function(e) {
            s.chainid_seq = e,
            s.processSeqData(s.chainid_seq)
        },
        error: function(e, t, i) {
            if (this.tryCount++,
            this.tryCount <= this.retryLimit)
                $.ajax(this);
            else {
                for (var n in s.enableHlSeq(),
                console.log("No data were found for the protein " + o + "..."),
                s.protein_chainid) {
                    var r = s.protein_chainid[n];
                    s.setAlternativeSeq(n, r),
                    s.showSeq(n, r)
                }
                s.showCddSiteAll()
            }
        }
    })
}
,
iCn3DUI.prototype.setAlternativeSeq = function(e, t) {
    var i = this.icn3d
      , n = i.chainsSeq[e];
    this.giSeq[e] = [];
    for (var r = 0, s = n.length; r < s; ++r) {
        var o = n[r].name;
        this.giSeq[e][r] = o
    }
    this.matchedPos[e] = 0,
    this.baseResi[e] = i.chainsSeq[e][0].resi - this.matchedPos[e] - 1
}
,
iCn3DUI.prototype.getProteinName = function(e) {
    var t = this
      , i = (t.icn3d,
    "");
    if (void 0 === t.cfg.mmdbid && void 0 === t.cfg.gi && void 0 === t.cfg.blast_rep_id || void 0 === t.mmdb_data)
        (void 0 !== t.cfg.align || void 0 !== t.cfg.chainalign || t.bRealign || t.bSymd) && void 0 !== t.chainid2title && void 0 !== t.chainid2title[e] && (i = t.chainid2title[e]);
    else {
        var n = t.mmdb_data.moleculeInfor
          , r = e.substr(e.indexOf("_") + 1);
        for (var s in n)
            if (n[s].chain == r) {
                i = n[s].name.replace(/\'/g, "&prime;");
                break
            }
    }
    return i
}
,
iCn3DUI.prototype.getSequenceData = function(e, t, i, n) {
    var r = this
      , s = r.icn3d
      , o = r.getProteinName(e)
      , a = o;
    40 < a.length && (a = a.substr(0, 40) + "...");
    var l = "";
    0 == n && ("protein" == i ? l = "<span class='icn3d-annoLargeTitle'><b>Proteins</b>: </span><br><br>" : "nucleotide" == i ? l = "<span class='icn3d-annoLargeTitle'><b>Nucleotides</b>: </span><br><br>" : "chemical" == i && (l = "<span class='icn3d-annoLargeTitle'><b>Chemicals/Ions/Water</b>: </span><br><br>")),
    $("#" + r.pre + "dl_annotations").append("<div id='" + r.pre + "anno_" + e + "' class='icn3d-annotation'>" + l + "<b>" + e + "</b>: <span title='" + o + "'>" + a + "</span> </div>"),
    $("#" + r.pre + "anno_" + e).append(r.getAnDiv(e, "giseq")),
    $("#" + r.pre + "anno_" + e).append(r.getAnDiv(e, "interaction")),
    $("#" + r.pre + "anno_" + e).append("<br><hr><br>"),
    r.giSeq[e] = [];
    for (var d = 0; d < s.chainsSeq[e].length; ++d) {
        var c = s.chainsSeq[e][d].name;
        r.giSeq[e][d] = c
    }
    r.matchedPos[e] = 0,
    r.baseResi[e] = s.chainsSeq[e][0].resi - r.matchedPos[e] - 1,
    r.showSeq(e, t, i)
}
,
iCn3DUI.prototype.getCombinedSequenceData = function(e, t, i) {
    var n, r = this, s = (r.icn3d,
    0 == i ? "<span class='icn3d-annoLargeTitle'><b>Chemicals/Ions/Water</b>: </span><br><br>" : ""), o = t[0].lastIndexOf("_"), a = t[0].substr(0, o), l = void 0 !== r.cfg.mmdbid && void 0 !== r.chainid2sid ? r.chainid2sid[a] : void 0;
    n = void 0 !== l ? "<b><a class='icn3d-blue' href='https://pubchem.ncbi.nlm.nih.gov/substance/" + l + "#section=2D-Structure' target='_blank'>" + e + " <img src='https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?sid=" + l + "'></a></b>" : "<b>" + e + "</b>",
    $("#" + r.pre + "dl_annotations").append("<div id='" + r.pre + "anno_" + e + "' class='icn3d-annotation'>" + s + n + "</div>"),
    $("#" + r.pre + "anno_" + e).append("<div id='" + r.pre + "giseq_" + e + "'><div id='" + r.pre + "dt_giseq_" + e + "' style='display:none'></div><div id='" + r.pre + "ov_giseq_" + e + "'></div></div>"),
    $("#" + r.pre + "anno_" + e).append("<br><hr><br>");
    var d = '<div id="' + r.pre + 'giseq_sequence" class="icn3d-dl_sequence">';
    d += '<div class="icn3d-seqTitle2" anno="sequence"><span style="white-space:nowrap;" title="Chemical ' + e + '">Chem. ' + e + "</span></div>",
    d += '<span class="icn3d-residueNum" style="width:60px!important;" title="starting protein sequence number">Count: ' + t.length + "</span>";
    for (var c = d += '<span class="icn3d-seqLine">', h = d, p = 0, m = t.length; p < m; ++p) {
        var u = e
          , f = u;
        3 < u.length && (f = u.substr(0, 3)),
        p < t.length - 1 && (f += ",");
        var g = t[p]
          , v = g.substr(g.lastIndexOf("_") + 1);
        c += '<span id="giseq_' + r.pre + g + '" title="' + u + v + '" class="icn3d-residue icn3d-chemical">' + f + "</span>"
    }
    var b = r.GREY8
      , y = Math.round(r.seqAnnWidth * t.length / r.maxAnnoLength);
    y < 1 && (y = 1),
    h += '<div class="icn3d-seqTitle" style="display:inline-block; color:white; font-weight:bold; background-color:' + b + "; width:" + y + 'px;">&nbsp;</div>',
    d = "</span>",
    d += "<br>",
    c += d += "</div>",
    h += d,
    $("#" + r.pre + "dt_giseq_" + e).html(c),
    $("#" + r.pre + "ov_giseq_" + e).html(h)
}
,
iCn3DUI.prototype.insertGap = function(e, t, i, n) {
    this.icn3d;
    var r = "";
    if (void 0 !== this.targetGapHash && this.targetGapHash.hasOwnProperty(t))
        for (var s = 0; s < this.targetGapHash[t].to - this.targetGapHash[t].from + 1; ++s)
            r += n ? i : "<span>" + i + "</span>";
    return r
}
,
iCn3DUI.prototype.insertGapOverview = function(e, t) {
    this.icn3d;
    var i = "";
    this.cfg.blast_rep_id == e && void 0 !== this.targetGapHash && this.targetGapHash.hasOwnProperty(t) && (i += '<div style="display:inline-block; background-color:#333; width:' + this.seqAnnWidth * (this.targetGapHash[t].to - this.targetGapHash[t].from + 1) / (this.maxAnnoLength + this.nTotalGap) + 'px; height:3px;">&nbsp;</div>');
    return i
}
,
iCn3DUI.prototype.showSeq = function(e, t, i, n, r, s, o) {
    var a, l = this, d = l.icn3d, c = !1;
    if (void 0 === l.cfg.mmdbid && void 0 === l.cfg.gi && void 0 === l.cfg.blast_rep_id && void 0 === l.cfg.align && void 0 === l.cfg.chainalign) {
        c = !0,
        a = [];
        for (var h = 0; h < l.giSeq[e].length; ++h)
            a.push(d.chainsSeq[e][h])
    } else
        a = l.giSeq[e];
    for (var p = [], m = (h = 0,
    a.length); h < m; ++h)
        a[h] && p.push(a[h]);
    a = p;
    var u = l.RESIDUE_WIDTH * l.giSeq[e].length + 200
      , f = l.giSeq[e].length;
    f > l.maxAnnoLength && (l.maxAnnoLength = f);
    var g = ["giseq", "cddsite", "clinvar", "snp", "domain", "interaction", "custom", "ssbond", "crosslink", "transmem"];
    for (var h in g) {
        var v = g[h];
        $("#" + l.pre + v + "_" + e).length && $("#" + l.pre + v + "_" + e).width(u)
    }
    var b, y = "", C = "", _ = "";
    if (y += '<div class="icn3d-dl_sequence">',
    _ += '<div class="icn3d-dl_sequence">',
    10 < l.giSeq[e].length) {
        b = '<div class="icn3d-residueLine" style="white-space:nowrap;">';
        var S = d.getFirstCalphaAtomObj(d.chains[e]);
        void 0 === l.cfg.mmdbid && void 0 === l.cfg.gi && void 0 === l.cfg.blast_rep_id && void 0 === l.cfg.align && void 0 === l.cfg.chainalign || void 0 === S.resi_ori || S.resi_ori == S.resi || -1 != e.indexOf("Misc") ? b += '<div class="icn3d-annoTitle" anno="0"></div>' : b += '<div class="icn3d-annoTitle" anno="0" title="NCBI Residue Numbers">NCBI Residue Numbers</div>',
        _ += (b += '<span class="icn3d-residueNum"></span>') + "<br>",
        y += b + '<span class="icn3d-seqLine">';
        var w = 0
          , A = 0
          , x = "";
        for (h = 0,
        m = a.length; h < m; ++h) {
            y += l.insertGap(e, h, "-"),
            y += "<span>",
            (V = c ? a[h].resi : h >= l.matchedPos[e] && h - l.matchedPos[e] < d.chainsSeq[e].length ? d.chainsSeq[e][h - l.matchedPos[e]].resi : l.baseResi[e] + 1 + h) % 10 == 0 && (y += V);
            var k = e + "_" + V
              , D = V % 10 != 0 && V % 10 != 1 && V % 10 != 9;
            if (d.residues.hasOwnProperty(k)) {
                S = d.getFirstCalphaAtomObj(d.residues[k]);
                "H" == d.secondaries[k] && S.ssbegin ? (x = '<span class="icn3d-helix-color">H' + ++w + "</span>",
                D && (y += x,
                x = "")) : "E" == d.secondaries[k] && S.ssbegin ? (++A,
                "green" == d.sheetcolor ? x = '<span class="icn3d-sheet-color">S' + A + "</span>" : "yellow" == d.sheetcolor && (x = '<span class="icn3d-sheet-colory">S' + A + "</span>"),
                D && (y += x,
                x = "")) : S.ssend && (x = ""),
                "" != x && D && (y += x,
                x = "")
            }
            y += "</span>"
        }
        y += '<span class="icn3d-residueNum"></span>',
        y += "</span>",
        y += "<br>",
        y += "</div>",
        _ += "</div>"
    }
    b = '<div class="icn3d-residueLine" style="white-space:nowrap;">',
    b += '<div class="icn3d-annoTitle" anno="0"></div>',
    _ += (b += '<span class="icn3d-residueNum"></span>') + "<br>",
    y += b + '<span class="icn3d-seqLine">';
    for (h = 0,
    m = a.length; h < m; ++h) {
        y += l.insertGap(e, h, "-");
        k = e + "_" + (h >= l.matchedPos[e] && h - l.matchedPos[e] < d.chainsSeq[e].length ? d.chainsSeq[e][h - l.matchedPos[e]].resi : l.baseResi[e] + 1 + h);
        if (d.residues.hasOwnProperty(k))
            if ("H" == d.secondaries[k])
                y += h % 2 == 0 ? '<span class="icn3d-helix">' : '<span class="icn3d-helix2">',
                y += "&nbsp;</span>";
            else if ("E" == d.secondaries[k]) {
                (S = d.getFirstCalphaAtomObj(d.residues[k])).ssend ? "green" == d.sheetcolor ? y += '<span class="icn3d-sheet2">' : "yellow" == d.sheetcolor && (y += '<span class="icn3d-sheet2y">') : "green" == d.sheetcolor ? y += '<span class="icn3d-sheet">' : "yellow" == d.sheetcolor && (y += '<span class="icn3d-sheety">'),
                y += "&nbsp;</span>"
            } else
                "c" == d.secondaries[k] ? y += '<span class="icn3d-coil">&nbsp;</span>' : "o" == d.secondaries[k] && (y += '<span class="icn3d-other">&nbsp;</span>');
        else
            y += "<span>-</span>"
    }
    y += '<span class="icn3d-residueNum"></span>',
    y += "</span>",
    y += "<br>",
    y += "</div>",
    y += "</div>",
    _ += "</div></div>",
    b = l.cfg.blast_rep_id === e ? '<div id="' + l.pre + 'giseq_sequence" class="icn3d-dl_sequence" style="border: solid 1px #000;">' : '<div id="' + l.pre + 'giseq_sequence" class="icn3d-dl_sequence">';
    var O = "Protein"
      , R = "Protein";
    void 0 !== i && ("nucleotide" == i ? (O = "Nucl.",
    R = "Nucleotide") : "chemical" == i && (O = "Chem.",
    R = "Chemical")),
    b += '<div class="icn3d-seqTitle icn3d-link icn3d-blue" gi="' + e + '" anno="sequence" chain="' + e + '"><span style="white-space:nowrap;" title="' + R + " " + e + '">' + O + " " + e + "</span></div>",
    _ += (b += '<span class="icn3d-residueNum" title="starting protein sequence number">' + (l.baseResi[e] + 1).toString() + "</span>") + "<br>",
    y += b + (j = '<span class="icn3d-seqLine">'),
    C += b + j;
    var T = 0;
    for (h = 0,
    m = a.length; h < m; ++h) {
        y += l.insertGap(e, h, "-"),
        void 0 !== l.targetGapHash && l.targetGapHash.hasOwnProperty(h) && (T += l.targetGapHash[h].to - l.targetGapHash[h].from + 1);
        var E = c ? a[h].name : a[h]
          , I = E;
        if (1 < E.length && (I = E[0] + ".."),
        q = h >= l.matchedPos[e] && h - l.matchedPos[e] < d.chainsSeq[e].length ? d.chainsSeq[e][h - l.matchedPos[e]].resi : l.baseResi[e] + 1 + h,
        d.residues.hasOwnProperty(e + "_" + q)) {
            var H = "333333";
            if (l.cfg.blast_rep_id == e && void 0 !== l.fullpos2ConsTargetpos && void 0 !== l.fullpos2ConsTargetpos[h + T])
                H = l.fullpos2ConsTargetpos[h + T].color;
            else {
                var L = void 0 === (S = d.getFirstCalphaAtomObj(d.residues[e + "_" + q])).color || "FFFFFF" === S.color.getHexString() ? "DDDDDD" : S.color.getHexString();
                H = void 0 !== S.color ? L : "CCCCCC"
            }
            y += '<span id="giseq_' + l.pre + e + "_" + q + '" title="' + E + q + '" class="icn3d-residue" style="color:#' + H + '">' + I + "</span>"
        } else
            y += '<span title="' + E + q + '" class="icn3d-residue">' + (I = I.toLowerCase()) + "</span>"
    }
    l.cfg.blast_rep_id == e && (l.opts.color = "conservation",
    d.setColorByOptions(l.opts, d.atoms));
    H = (S = d.getFirstCalphaAtomObj(d.chains[e])).color ? S.color.getHexString() : "CCCCCC";
    var P = Math.round(l.seqAnnWidth * a.length / l.maxAnnoLength);
    if (P < 1 && (P = 1),
    l.cfg.blast_rep_id != e)
        C += '<div id="giseq_summary_' + l.pre + e + '" class="icn3d-seqTitle icn3d-link" gi chain="' + e + '" style="display:inline-block; color:white; font-weight:bold; background-color:#' + H + "; width:" + P + 'px;">' + e + "</div>";
    else {
        var F = [];
        (U = []).push(0);
        for (h = 0,
        m = a.length; h < m; ++h)
            void 0 !== l.targetGapHash && l.targetGapHash.hasOwnProperty(h) && (F.push(h - 1),
            U.push(h));
        F.push(a.length - 1),
        C += '<div id="giseq_summary_' + l.pre + e + '" class="icn3d-seqTitle icn3d-link" gi chain="' + e + '" style="width:' + P + 'px;">';
        for (h = 0,
        m = U.length; h < m; ++h)
            C += l.insertGapOverview(e, U[h]),
            C += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + H + "; width:" + Math.round(l.seqAnnWidth * (F[h] - U[h] + 1) / (l.maxAnnoLength + l.nTotalGap)) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" anno="sequence" gi chain="' + e + '" title="' + e + '">' + e + "</div>";
        C += "</div>"
    }
    if (b = '<span class="icn3d-residueNum" title="ending protein sequence number">' + q + "</span>",
    b += "</span>",
    y += b += "<br>",
    C += b,
    l.cfg.blast_rep_id == e) {
        if (void 0 !== o && "" !== o) {
            b = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" blast="" posarray="' + l.consrvResPosArray.toString() + '" title="' + r + '" setname="' + e + '_blast" anno="sequence" chain="' + e + '"><span style="white-space:nowrap;" title="' + r + '">' + r + "</span></div>",
            _ += (b += '<span class="icn3d-residueNum"></span>') + "<br>",
            y += b + (j = '<span class="icn3d-seqLine">'),
            C += b + j;
            var M = 0
              , N = 0
              , z = l.queryStart;
            for (h = 0,
            m = o.length; h < m; ++h) {
                if ("-" == (I = o[h]))
                    y += "<span>-</span>";
                else if (" " == I)
                    y += "<span> </span>";
                else {
                    var q = l.fullpos2ConsTargetpos[h].pos;
                    if (d.residues.hasOwnProperty(e + "_" + q)) {
                        H = l.fullpos2ConsTargetpos[h].color;
                        y += '<span id="giseq_' + l.pre + e + "_" + q + '" title="' + l.fullpos2ConsTargetpos[h].res + q + '" class="icn3d-residue" style="color:#' + H + '">' + I + "</span>"
                    } else
                        y += '<span class="icn3d-residue">' + (I = I.toLowerCase()) + "</span>";
                    C += l.insertGapOverview(e, h),
                    0 <= (G = Math.round(l.seqAnnWidth * h / (l.maxAnnoLength + l.nTotalGap) - M - N)) && (C += '<div style="display:inline-block; width:' + G + 'px;">&nbsp;</div>',
                    C += '<div style="display:inline-block; background-color:#F00; width:1px;" title="' + I + q + '">&nbsp;</div>',
                    M += G,
                    N += 1),
                    ++z
                }
            }
            b = '<span class="icn3d-residueNum"></span>',
            b += "</span>",
            y += b += "<br>",
            C += b
        }
        var j;
        b = '<div class="icn3d-annoTitle" anno="sequence" chain="' + e + '"><span style="white-space:nowrap;" title="' + n + '">' + n + "</span></div>",
        _ += (b += '<span class="icn3d-residueNum" title="starting protein sequence number">' + l.queryStart + "</span>") + "<br>",
        y += b + (j = '<span class="icn3d-seqLine" style="font-weight: bold;">'),
        C += b + j;
        for (z = l.queryStart,
        h = 0,
        m = s.length; h < m; ++h) {
            " " == (I = s[h]) || "-" == I ? y += "<span>-</span>" : (void 0 === l.fullpos2ConsTargetpos || void 0 === l.fullpos2ConsTargetpos[h] || d.residues.hasOwnProperty(e + "_" + l.fullpos2ConsTargetpos[h].pos) ? y += '<span title="' + I + z + '" class="icn3d-residue">' + I + "</span>" : y += '<span title="' + (I = I.toLowerCase()) + z + '" class="icn3d-residue">' + I + "</span>",
            ++z)
        }
        L = void 0 === (S = d.getFirstCalphaAtomObj(d.chains[e])).color || "FFFFFF" === S.color.getHexString() ? "DDDDDD" : S.color.getHexString(),
        H = void 0 !== S.color ? L : "CCCCCC";
        var U = []
          , B = (F = [],
        "-");
        for (h = 0,
        m = s.length; h < m; ++h) {
            "-" != (I = s[h]) && "-" == B ? U.push(h) : "-" == I && "-" != B && F.push(h - 1),
            B = I
        }
        "-" != B && F.push(s.length - 1);
        for (h = 0,
        m = U.length; h < m; ++h) {
            var G;
            C += '<div style="display:inline-block; width:' + (G = 0 == h ? Math.round(l.seqAnnWidth * (U[h] - l.baseResi[e] - 1) / (l.maxAnnoLength + l.nTotalGap)) : Math.round(l.seqAnnWidth * (U[h] - F[h - 1] - 1) / (l.maxAnnoLength + l.nTotalGap))) + 'px;">&nbsp;</div>',
            C += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + H + "; width:" + Math.round(l.seqAnnWidth * (F[h] - U[h] + 1) / (l.maxAnnoLength + l.nTotalGap)) + 'px;" anno="sequence" chain="' + e + '" title="' + n + '">' + n + "</div>"
        }
        b = '<span class="icn3d-residueNum" title="ending protein sequence number">' + l.queryEnd + "</span>",
        b += "</span>",
        y += b += "<br>",
        C += b
    }
    if (y += "</div>",
    C += "</div>",
    _ += "</div>",
    10 < l.giSeq[e].length) {
        S = d.getFirstCalphaAtomObj(d.chains[e]);
        if ((void 0 !== l.cfg.mmdbid || void 0 !== l.cfg.gi || void 0 !== l.cfg.blast_rep_id || void 0 !== l.cfg.align || void 0 !== l.cfg.chainalign) && void 0 !== S.resi_ori && S.resi_ori != S.resi && -1 == e.indexOf("Misc")) {
            b = '<div class="icn3d-dl_sequence">',
            b += '<div class="icn3d-residueLine" style="white-space:nowrap;">',
            b += '<div class="icn3d-annoTitle" anno="0" title="PDB Residue Numbers">PDB Residue Numbers</div>',
            _ += (b += '<span class="icn3d-residueNum"></span>') + "<br>",
            y += b + '<span class="icn3d-seqLine">';
            for (h = 0,
            m = a.length; h < m; ++h)
                if (y += l.insertGap(e, h, "-"),
                h >= l.matchedPos[e] && h - l.matchedPos[e] < d.chainsSeq[e].length) {
                    var V;
                    k = e + "_" + (V = d.chainsSeq[e][h - l.matchedPos[e]].resi);
                    if (d.residues.hasOwnProperty(k)) {
                        var W = (S = d.getFirstCalphaAtomObj(d.residues[k])).resi_ori;
                        y += "<span>",
                        W % 10 == 0 && (y += W + " "),
                        y += "</span>"
                    } else
                        y += "<span></span>"
                } else
                    y += "<span></span>";
            y += '<span class="icn3d-residueNum"></span>',
            y += "</span>",
            y += "<br>",
            y += "</div>",
            y += "</div>",
            _ += "</div></div>"
        }
    }
    $("#" + l.pre + "dt_giseq_" + e).html(y),
    $("#" + l.pre + "ov_giseq_" + e).html(C),
    $("#" + l.pre + "tt_giseq_" + e).html(_)
}
,
iCn3DUI.prototype.navClinVar = function(i) {
    var n = this;
    n.icn3d;
    n.currClin[i] = -1,
    $(document).on("click", "#" + n.pre + i + "_prevclin", function(e) {
        n.icn3d;
        e.stopImmediatePropagation();
        var t = void 0 !== n.resi2disease_nonempty[i] ? Object.keys(n.resi2disease_nonempty[i]).length : 0;
        --n.currClin[i],
        n.currClin[i] < 0 && (n.currClin[i] = t - 1),
        n.showClinVarLabelOn3D(i)
    }),
    $(document).on("click", "#" + n.pre + i + "_nextclin", function(e) {
        n.icn3d;
        e.stopImmediatePropagation();
        var t = void 0 !== n.resi2disease_nonempty[i] ? Object.keys(n.resi2disease_nonempty[i]).length : 0;
        ++n.currClin[i],
        n.currClin[i] > t - 1 && (n.currClin[i] = 0),
        n.showClinVarLabelOn3D(i)
    })
}
,
iCn3DUI.prototype.showClinVarLabelOn3D = function(e) {
    var t, i = this, n = i.icn3d, r = Object.keys(i.resi2disease_nonempty[e]);
    t = e + "_" + r[i.currClin[e]];
    for (var s = "", o = i.resi2disease_nonempty[e][r[i.currClin[e]]], a = 0, l = o.length; a < l; ++a)
        if ("" != o[a] && "not specified" != o[a] && "not provided" != o[a]) {
            s = o[a];
            break
        }
    var d = n.centerAtoms(n.hash2Atoms(n.residues[t]));
    30 < s.length && (s = s.substr(0, 30) + "..."),
    i.removeSelection(),
    null == n.labels && (n.labels = {}),
    n.labels.clinvar = [];
    var c = n.LABELSIZE;
    for (var h in i.addLabel(s, d.center.x + 1, d.center.y + 1, d.center.z + 1, c, "#FFFF00", void 0, "clinvar"),
    n.hAtoms = {},
    n.residues[t])
        n.hAtoms[h] = 1;
    $("#clinvar_" + i.pre + t).addClass("icn3d-highlightSeq"),
    void 0 === $("#" + i.pre + "modeswitch")[0] || $("#" + i.pre + "modeswitch")[0].checked || i.setMode("selection"),
    n.draw()
}
,
iCn3DUI.prototype.getSnpLine = function(e, t, i, n, r, s, o, a, l, d, c, h, p, m, u, f) {
    var g = this
      , v = g.icn3d
      , b = ""
      , y = m ? "clinvar" : "snp"
      , C = !1;
    for (var _ in n) {
        for (var S = 0, w = n[_].length; S < w; ++S)
            if (0 == n[_][S]) {
                C = !0;
                break
            }
        if (C)
            break
    }
    if (c) {
        var A = "ClinVar"
          , x = ""
          , k = "";
        C || void 0 === v.organism || "human" === v.organism || "homo sapiens" === v.organism || (x = " <span style='color:#FFA500'>(from human)</span>",
        k = " <span style='color:#FFA500'>(based on human sequences and mapped to this structure by sequence similarity)</span>"),
        b += m ? '<div class="icn3d-seqTitle icn3d-link icn3d-blue icn3d-clinvar-path" clinvar="clinvar" posarray="' + d + '" shorttitle="' + A + '" setname="' + h + "_" + A + '" anno="sequence" chain="' + h + '" title="' + A + k + '">' + A + x + "</div>" : '<div class="icn3d-seqTitle icn3d-link icn3d-blue" clinvar="clinvar" posarray="' + l + '" shorttitle="SNP" setname="' + h + '_SNP" anno="sequence" chain="' + h + '" title="SNP' + k + '">SNP' + x + "</div>"
    } else if (2 == e && m) {
        var D = g.isMobile() ? "none" : "button";
        b += '<div id="' + g.pre + h + '_prevclin" style="display:inline-block; font-size:11px; font-weight:bold; width:60px!important;"><button class="link" style="-webkit-appearance:' + D + '; height:18px; width:55px;"><span style="white-space:nowrap; margin-left:-40px;" title="Show the previous ClinVar on structure">&lt; ClinVar</span></button></div>',
        b += '<div id="' + g.pre + h + '_nextclin" style="display:inline-block; font-size:11px; font-weight:bold; width:60px!important;"><button class="link" style="-webkit-appearance:' + D + '; height:18px; width:55px;"><span style="white-space:nowrap; margin-left:-40px;" title="Show the next ClinVar on structure">ClinVar &gt;</span></button></div>'
    } else
        b += '<div class="icn3d-seqTitle"></div>';
    var O = y
      , R = 0
      , T = 0
      , E = {}
      , I = {};
    for (S = 1,
    w = g.giSeq[h].length; S <= w; ++S)
        if (void 0 !== o[S]) {
            ++R;
            for (var H = "", L = 0, P = i[S].length; L < P && !f; ++L) {
                for (var F = s[S][L].split("; "), M = a[S][L].split("; "), N = "", z = 0, q = F.length; z < q; ++z)
                    "" != F[z] && "not specified" != F[z] && "not provided" != F[z] && (N += F[z] + " (" + M[z] + "); ");
                "" != N && (E[S] = "icn3d-clinvar",
                L == e - 2 && (I[S] = "icn3d-clinvar",
                -1 != N.indexOf("Pathogenic") && (I[S] = "icn3d-clinvar-path"))),
                H += N + " | "
            }
            -1 != H.indexOf("Pathogenic") && (E[S] = "icn3d-clinvar-path"),
            "icn3d-clinvar" != E[S] && "icn3d-clinvar-path" != E[S] || ++T
        }
    if (0 == R && !m)
        return $("#" + g.pre + "dt_clinvar_" + h).html(""),
        $("#" + g.pre + "ov_clinvar_" + h).html(""),
        $("#" + g.pre + "tt_clinvar_" + h).html(""),
        $("#" + g.pre + "dt_snp_" + h).html(""),
        $("#" + g.pre + "ov_snp_" + h).html(""),
        $("#" + g.pre + "tt_snp_" + h).html(""),
        "";
    if (0 == T && m)
        return $("#" + g.pre + "dt_clinvar_" + h).html(""),
        $("#" + g.pre + "ov_clinvar_" + h).html(""),
        $("#" + g.pre + "tt_clinvar_" + h).html(""),
        "";
    var j = m ? T : R;
    if (b += 1 == e ? '<span class="icn3d-residueNum" title="residue count">' + j + " Res</span>" : '<span class="icn3d-residueNum"></span>',
    u)
        return b + "<br>";
    b += '<span class="icn3d-seqLine">';
    var U = ""
      , B = 0
      , G = 0;
    for (S = 1,
    w = g.giSeq[h].length; S <= w; ++S)
        if (p) {
            if (void 0 !== o[S]) {
                var V = X = g.giSeq[h][S - 1];
                1 < X.length && (V = X[0] + "..");
                var W = (Z = S >= g.matchedPos[h] && S - 1 - g.matchedPos[h] < v.chainsSeq[h].length ? v.chainsSeq[h][S - 1 - g.matchedPos[h]].resi : g.baseResi[h] + 1 + S - 1) + V + ">";
                for (H = "",
                L = 0,
                P = i[S].length; L < P; ++L)
                    if (W += i[S][L],
                    !f) {
                        for (F = s[S][L].split("; "),
                        M = a[S][L].split("; "),
                        N = "",
                        z = 0,
                        q = F.length; z < q; ++z)
                            "" != F[z] && "not specified" != F[z] && "not provided" != F[z] && (N += F[z] + " (" + M[z] + "); ");
                        H += N + " | "
                    }
                b += g.insertGapOverview(h, S - 1);
                var Y = g.cfg.blast_rep_id == h ? Math.round(g.seqAnnWidth * (S - 1) / (g.maxAnnoLength + g.nTotalGap) - B - G) : Math.round(g.seqAnnWidth * (S - 1) / g.maxAnnoLength - B - G);
                m ? "icn3d-clinvar" != E[S] && "icn3d-clinvar-path" != E[S] || 0 <= Y && (b += '<div style="display:inline-block; width:' + Y + 'px;">&nbsp;</div>',
                b += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + W + '">&nbsp;</div>',
                B += Y,
                G += 1) : 0 < Y && (b += '<div style="display:inline-block; width:' + Y + 'px;">&nbsp;</div>',
                b += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + W + '">&nbsp;</div>',
                B += Y,
                G += 1)
            }
        } else if (b += g.insertGap(h, S - 1, "-"),
        void 0 !== o[S])
            if (m || 1 != e) {
                var X;
                V = X = g.giSeq[h][S - 1];
                1 < X.length && (V = X[0] + "..");
                var Q, Z = S >= g.matchedPos[h] && S - 1 - g.matchedPos[h] < v.chainsSeq[h].length ? v.chainsSeq[h][S - 1 - g.matchedPos[h]].resi : g.baseResi[h] + 1 + S - 1, K = "", J = (W = "<div class='snptip'>",
                P = i[S].length,
                0), ee = 0;
                if (2 == e && (J = 0,
                ee = P),
                m) {
                    Q = 1;
                    var te = 0;
                    for (L = J; L < P && L < ee; ++L) {
                        ie = h + "_" + Z + "_" + i[S][L],
                        D = g.isMobile() ? "none" : "button",
                        ne = !0;
                        v.residues.hasOwnProperty(h + "_" + Z) || (ne = !1);
                        for (F = s[S][L].split("; "),
                        M = a[S][L].split("; "),
                        N = "",
                        re = 0,
                        z = 0,
                        q = F.length; z < q; ++z)
                            "" != F[z] && "not specified" != F[z] && "not provided" != F[z] && (0 < re ? N += "; " : 0 !== L && 1 !== L || (U = 'disease="' + F[z] + '"'),
                            N += F[z] + " (" + M[z] + ")",
                            ++re);
                        "" != N && (te < Q && (K += i[S][L]),
                        W += Z + V + ">" + i[S][L],
                        W += ": " + N,
                        ne && (W += "<br>" + g.addSnpButton(ie, "snpin3d", "3D with scap", "SNP in 3D with scap", 70, D) + "&nbsp;&nbsp;",
                        W += g.addSnpButton(ie, "snpinter", "Interactions", "SNP Interactions in 3D", 70, D) + "&nbsp;&nbsp;",
                        W += g.addSnpButton(ie, "snppdb", "PDB", "Download SNP PDB", 35, D)),
                        W += "<br>Links: <a href='https://www.ncbi.nlm.nih.gov/clinvar/?term=" + r[S][L] + "[AlleleID]' target='_blank'>ClinVar</a>, <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[S][L] + "' target='_blank'>dbSNP (rs" + n[S][L] + ")</a>",
                        L < P - 1 && (W += "<br><br>"),
                        ++te)
                    }
                    Q < te && 2 == e && (K += "..")
                } else {
                    Q = 1;
                    for (var L = J; L < P && L < ee; ++L) {
                        var ie = h + "_" + Z + "_" + i[S][L]
                          , D = g.isMobile() ? "none" : "button"
                          , ne = !0;
                        if (v.residues.hasOwnProperty(h + "_" + Z) || (ne = !1),
                        L < Q && (K += i[S][L]),
                        W += Z + V + ">" + i[S][L],
                        f)
                            ne && (W += "<br>" + g.addSnpButton(ie, "snpin3d", "3D with scap", "SNP in 3D with scap", 70, D) + "&nbsp;&nbsp;",
                            W += g.addSnpButton(ie, "snpinter", "Interactions", "SNP Interactions in 3D", 70, D) + "&nbsp;&nbsp;",
                            W += g.addSnpButton(ie, "snppdb", "PDB", "Download SNP PDB", 35, D)),
                            0 != n[S][L] && (W += "<br>Link: <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[S][L] + "' target='_blank'>dbSNP (rs" + n[S][L] + ")</a>"),
                            L < P - 1 && (W += "<br><br>");
                        else {
                            for (var F = s[S][L].split("; "), M = a[S][L].split("; "), N = "", re = 0, z = 0, q = F.length; z < q; ++z)
                                "" != F[z] && "not specified" != F[z] && "not provided" != F[z] && (0 < re ? N += "; " : 0 !== L && 1 !== L || (U = 'disease="' + F[z] + '"'),
                                N += F[z] + " (" + M[z] + ")",
                                ++re);
                            "" != N ? (W += ": " + N,
                            ne && (W += "<br>" + g.addSnpButton(ie, "snpin3d", "3D with scap", "SNP in 3D with scap", 70, D) + "&nbsp;&nbsp;",
                            W += g.addSnpButton(ie, "snpinter", "Interactions", "SNP Interactions in 3D", 70, D) + "&nbsp;&nbsp;",
                            W += g.addSnpButton(ie, "snppdb", "PDB", "Download SNP PDB", 35, D)),
                            W += "<br>Links: <a href='https://www.ncbi.nlm.nih.gov/clinvar/?term=" + r[S][L] + "[AlleleID]' target='_blank'>ClinVar</a>, <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[S][L] + "' target='_blank'>dbSNP (rs" + n[S][L] + ")</a>") : (ne && (W += "<br>" + g.addSnpButton(ie, "snpin3d", "3D with scap", "SNP in 3D with scap", 70, D) + "&nbsp;&nbsp;",
                            W += g.addSnpButton(ie, "snpinter", "Interactions", "SNP Interactions in 3D", 70, D) + "&nbsp;&nbsp;",
                            W += g.addSnpButton(ie, "snppdb", "PDB", "Download SNP PDB", 35, D)),
                            W += "<br>Link: <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[S][L] + "' target='_blank'>dbSNP (rs" + n[S][L] + ")</a>"),
                            L < P - 1 && (W += "<br><br>")
                        }
                    }
                    Q < P && 2 == e && (K += "..")
                }
                W += "</div>",
                m ? "icn3d-clinvar" == E[S] || "icn3d-clinvar-path" == E[S] ? b += 1 == e ? "<span>&dArr;</span>" : "" == K || " " == K ? "<span>-</span>" : '<span id="' + O + "_" + g.pre + h + "_" + Z + '" label title="' + W + '" ' + U + ' class="icn3d-tooltip icn3d-residue ' + I[S] + '">' + K + "</span>" : b += "<span>-</span>" : b += "" == K || " " == K ? "<span>-</span>" : f ? '<span id="' + O + "_" + g.pre + h + "_" + Z + '" label title="' + W + '" class="icn3d-tooltip icn3d-residue ' + I[S] + '">' + K + "</span>" : '<span id="' + O + "_" + g.pre + h + "_" + Z + '" label title="' + W + '" ' + U + ' class="icn3d-tooltip icn3d-residue ' + I[S] + '">' + K + "</span>"
            } else
                b += "<span>&dArr;</span>";
        else
            b += "<span>-</span>";
    return b += 1 == e ? '<span class="icn3d-residueNum" title="residue count">&nbsp;' + j + " Residues</span>" : '<span class="icn3d-residueNum"></span>',
    b += "</span>",
    b += "<br>"
}
,
iCn3DUI.prototype.processSnpClinvar = function(e, t, i, n, r) {
    var s = this
      , o = (s.icn3d,
    '<div id="' + s.pre + t + '_snpseq_sequence" class="icn3d-dl_sequence">')
      , a = o
      , l = o
      , d = '<div id="' + s.pre + t + '_clinvarseq_sequence" class="icn3d-dl_sequence">'
      , c = d
      , h = d
      , p = !n || r ? e.data : e.split("\n")
      , m = {}
      , u = {}
      , f = {};
    void 0 === s.resi2disease_nonempty[t] && (s.resi2disease_nonempty[t] = {});
    for (var g = {}, v = {}, b = {}, y = {}, C = {}, _ = "", S = 0, w = p.length; S < w; ++S)
        if ("" != p[S]) {
            var A = !n || r ? p[S] : p[S].split("\t")
              , x = A[3];
            if (x == _)
                continue;
            var k = (_ = x).substr(0, x.length - 3)
              , D = Math.round(k)
              , O = (x.substr(x.length - 3, 1),
            x.substr(x.length - 1, 1))
              , R = A[4]
              , T = n ? "" : A[5]
              , E = n ? "" : A[6]
              , I = n ? "" : A[7];
            y[D + s.baseResi[t]] = 1,
            "" != E && (C[D + s.baseResi[t]] = 1),
            u[D] = S + 1,
            void 0 === m[D] && (m[D] = []),
            m[D].push(O),
            void 0 === v[D] && (v[D] = []),
            v[D].push(R),
            void 0 === b[D] && (b[D] = []),
            b[D].push(T),
            void 0 === f[D] && (f[D] = []),
            f[D].push(E),
            "" != E && (void 0 === s.resi2disease_nonempty[t][D] && (s.resi2disease_nonempty[t][D] = []),
            s.resi2disease_nonempty[t][D].push(E)),
            void 0 === g[D] && (g[D] = []),
            g[D].push(I)
        }
    var H = Object.keys(y)
      , L = Object.keys(C);
    if (n) {
        var P = !1;
        o += s.getSnpLine(1, 2, m, v, b, f, u, g, H, L, 1, t, !1, P, void 0, n),
        o += s.getSnpLine(2, 2, m, v, b, f, u, g, H, L, 0, t, !1, P, void 0, n),
        l += s.getSnpLine(1, 2, m, v, b, f, u, g, H, L, 1, t, !1, P, !0, n),
        l += s.getSnpLine(2, 2, m, v, b, f, u, g, H, L, 0, t, !1, P, !0, n),
        a += s.getSnpLine(1, 2, m, v, b, f, u, g, H, L, 1, t, !0, P, void 0, n),
        o += "</div>",
        a += "</div>",
        l += "</div>",
        $("#" + s.pre + "dt_snp_" + t).html(o),
        $("#" + s.pre + "ov_snp_" + t).html(a),
        $("#" + s.pre + "tt_snp_" + t).html(l)
    } else
        P = !0,
        d += s.getSnpLine(1, 2, m, v, b, f, u, g, H, L, 1, t, !1, P, void 0, n),
        d += s.getSnpLine(2, 2, m, v, b, f, u, g, H, L, 0, t, !1, P, void 0, n),
        h += s.getSnpLine(1, 2, m, v, b, f, u, g, H, L, 1, t, !1, P, !0, n),
        h += s.getSnpLine(2, 2, m, v, b, f, u, g, H, L, 0, t, !1, P, !0, n),
        c += s.getSnpLine(1, 2, m, v, b, f, u, g, H, L, 1, t, !0, P, void 0, n),
        d += "</div>",
        c += "</div>",
        h += "</div>",
        $("#" + s.pre + "dt_clinvar_" + t).html(d),
        $("#" + s.pre + "ov_clinvar_" + t).html(c),
        $("#" + s.pre + "tt_clinvar_" + t).html(h),
        s.navClinVar(t, i);
    s.enableHlSeq(),
    n ? (s.bAjaxSnp = !0,
    void 0 !== s.deferredSnp && s.deferredSnp.resolve()) : (s.bAjaxClinvar = !0,
    void 0 !== s.deferredClinvar && s.deferredClinvar.resolve())
}
,
iCn3DUI.prototype.showClinvarPart2 = function(n, i, e) {
    var r = this
      , t = (r.icn3d,
    "https://www.ncbi.nlm.nih.gov/Structure/vastdyn/vastdyn.cgi?chainid_clinvar=" + i);
    $.ajax({
        url: t,
        dataType: "jsonp",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            if (e && e.data && 0 < e.data.length) {
                var t = e;
                r.processSnpClinvar(t, n, i, !1)
            } else
                r.processNoClinvar(n)
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : r.processNoClinvar(n)
        }
    })
}
,
iCn3DUI.prototype.showSnp = function(e, t) {
    this.icn3d;
    this.showSnpClinvar(e, t, !0)
}
,
iCn3DUI.prototype.showClinvar = function(e, t) {
    this.icn3d;
    this.showSnpClinvar(e, t, !1)
}
,
iCn3DUI.prototype.showSnpClinvar = function(r, s, o) {
    var a = this
      , e = (a.icn3d,
    a.baseUrl + "vastdyn/vastdyn.cgi?chainid=" + s);
    $.ajax({
        url: e,
        dataType: "jsonp",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            var t = e.snpgi
              , i = e.gi;
            if (o)
                a.showSnpPart2(r, s, t);
            else {
                var n = t;
                [6137708, 1942289, 224510717, 2624886, 253723219, 2554905, 75765331, 3660278, 312207882, 319443632, 342350956, 1827805, 109157826, 1065265, 40889086, 6730307, 163931185, 494469, 163931091, 60594093, 55669745, 18655489, 17942684, 6980537, 166235465, 6435586, 4139398, 4389047, 364506122, 78101667, 262118402, 20664221, 2624640, 158430173, 494395, 28948777, 34810587, 13399647, 3660342, 261278854, 342350965, 384482350, 378792570, 15988303, 213424334, 4558333, 2098365, 10835631, 3318817, 374074330, 332639529, 122919696, 4389286, 319443573, 2781341, 67464020, 194709238, 210061039, 364506106, 28949044, 40889076, 161172338, 17943181, 4557976, 62738484, 365813173, 6137343, 350610552, 17942703, 576308, 223674070, 15826518, 1310997, 93279697, 4139395, 255311799, 157837067, 361132363, 357380836, 146387678, 383280379, 1127268, 299856826, 13786789, 1311054, 46015217, 3402130, 381353319, 30750059, 218766885, 340707375, 27065817, 355333104, 2624634, 62738384, 241913553, 304446010].includes(i) && (n = i),
                a.showClinvarPart2(r, s, n)
            }
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : o ? a.processNoSnp(r) : a.processNoClinvar(r)
        }
    })
}
,
iCn3DUI.prototype.showSnpPart2 = function(n, i, e) {
    var r = this;
    r.icn3d;
    if (void 0 !== e) {
        var t = "https://www.ncbi.nlm.nih.gov/projects/SNP/beVarSearch.cgi?appname=iCn3D&format=bed&report=pdb2bed&connect=MSSNPSUBMISSION1&gi=" + e;
        $.ajax({
            url: t,
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                if (e) {
                    r.processSnpClinvar(e, n, i, !0)
                } else {
                    var t = "https://www.ncbi.nlm.nih.gov/Structure/vastdyn/vastdyn.cgi?chainid_snp=" + i;
                    $.ajax({
                        url: t,
                        dataType: "jsonp",
                        cache: !0,
                        tryCount: 0,
                        retryLimit: 1,
                        success: function(e) {
                            if (e && e.data && 0 < e.data.length) {
                                r.processSnpClinvar(e, n, i, !0, !0)
                            } else
                                r.processNoSnp(n)
                        },
                        error: function(e, t, i) {
                            this.tryCount++,
                            this.tryCount <= this.retryLimit ? $.ajax(this) : r.processNoSnp(n)
                        }
                    })
                }
            },
            error: function(e, t, i) {
                this.tryCount++,
                this.tryCount <= this.retryLimit ? $.ajax(this) : r.processNoSnp(n)
            }
        })
    } else
        r.processNoSnp(n),
        console.log("No gi was found for the chain " + i + "...")
}
,
iCn3DUI.prototype.processNoClinvar = function(e) {
    this.icn3d;
    console.log("No ClinVar data were found for the protein " + e + "..."),
    $("#" + this.pre + "dt_clinvar_" + e).html(""),
    $("#" + this.pre + "ov_clinvar_" + e).html(""),
    this.enableHlSeq(),
    this.bAjaxClinvar = !0,
    void 0 !== this.deferredClinvar && this.deferredClinvar.resolve()
}
,
iCn3DUI.prototype.processNoSnp = function(e) {
    this.icn3d;
    console.log("No SNP data were found for the protein " + e + "..."),
    $("#" + this.pre + "dt_snp_" + e).html(""),
    $("#" + this.pre + "ov_snp_" + e).html(""),
    this.enableHlSeq(),
    this.bAjaxSnp = !0,
    void 0 !== this.deferredSnp && this.deferredSnp.resolve()
}
,
iCn3DUI.prototype.showCddSiteAll = function() {
    var K = this
      , J = K.icn3d
      , r = $.map(K.protein_chainid, function(e) {
        return e
    })
      , ee = Object.keys(K.protein_chainid)
      , e = K.baseUrl + "cdannots/cdannots.fcgi?fmt&queries=" + r;
    $.ajax({
        url: e,
        dataType: "jsonp",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            for (var t = {}, i = 0, n = e.data.length; i < n; ++i) {
                var r = e.data[i];
                r._id;
                t[Z = ee[i]] = 1;
                for (var s = '<div id="' + K.pre + Z + '_cddseq_sequence" class="icn3d-cdd icn3d-dl_sequence">', o = s, a = s, l = r.doms, d = void 0 !== l ? l.length : 0, c = 0; c < d; ++c) {
                    var h = l[c].acc
                      , p = l[c].type;
                    p = "domain";
                    var m = l[c].title.split(":")[0]
                      , u = l[c].defline;
                    14 < (z = p + ": " + m).length && (z = z.substr(0, 14) + "...");
                    for (var f = p + ": " + m, g = l[c].locs, v = 0, b = g.length; v < b; ++v) {
                        for (var y = [], C = [], _ = {}, S = 0, w = 0, A = g[v].segs.length; w < A; ++w) {
                            var x = Math.round(g[v].segs[w].from)
                              , k = Math.round(g[v].segs[w].to);
                            y.push(x + K.baseResi[Z]),
                            C.push(k + K.baseResi[Z]);
                            for (var D = x; D <= k; ++D)
                                _[D] = 1;
                            S += k - x + 1
                        }
                        a += (q = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + h + '" from="' + y + '" to="' + C + '" shorttitle="' + z + '" setname="' + Z + "_" + p + "_" + c + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + z + " </div>") + (j = '<span class="icn3d-residueNum" title="residue count">' + S.toString() + " Res</span>") + "<br>",
                        s += q + j + (U = '<span class="icn3d-seqLine">'),
                        o += '<div style="width:20px; display:inline-block;"><span id="' + K.pre + Z + "_" + h + "_" + v + '_cddseq_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + K.pre + Z + "_" + h + "_" + v + '_cddseq_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div>',
                        o += '<div style="width:100px!important;" class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + h + '" from="' + y + '" to="' + C + '" shorttitle="' + z + '" index="' + c + '" setname="' + Z + "_" + p + "_" + c + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + z + " </div>",
                        o += j + U;
                        for (var O = p + c.toString(), R = (D = 0,
                        K.giSeq[Z].length); D < R; ++D)
                            if (s += K.insertGap(Z, D, "-"),
                            _.hasOwnProperty(D)) {
                                var T = X = K.giSeq[Z][D];
                                1 < X.length && (T = X[0] + "..");
                                var E = D >= K.matchedPos[Z] && D - K.matchedPos[Z] < J.chainsSeq[Z].length ? J.chainsSeq[Z][D - K.matchedPos[Z]].resi : K.baseResi[Z] + 1 + D;
                                s += '<span id="' + O + "_" + K.pre + Z + "_" + E + '" title="' + T + E + '" class="icn3d-residue">' + X + "</span>"
                            } else
                                s += "<span>-</span>";
                        var I = J.getFirstCalphaAtomObj(J.chains[Z])
                          , H = void 0 === I.color || "FFFFFF" === I.color.getHexString() ? "DDDDDD" : I.color.getHexString()
                          , L = void 0 !== I.color ? H : "CCCCCC";
                        if (K.cfg.blast_rep_id != Z)
                            for (D = 0,
                            R = y.length; D < R; ++D) {
                                o += '<div style="display:inline-block; width:' + (Q = 0 == D ? Math.round(K.seqAnnWidth * (y[D] - K.baseResi[Z] - 1) / K.maxAnnoLength) : Math.round(K.seqAnnWidth * (y[D] - C[D - 1] - 1) / K.maxAnnoLength)) + 'px;">&nbsp;</div>',
                                o += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + L + "; width:" + Math.round(K.seqAnnWidth * (C[D] - y[D] + 1) / K.maxAnnoLength) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + (c + 1).toString() + '" from="' + y + '" to="' + C + '" shorttitle="' + z + '" index="' + c + '" setname="' + Z + "_domain_" + c + "_" + v + '" id="' + Z + "_domain_" + c + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + m + " </div>"
                            }
                        else {
                            var P = []
                              , F = [];
                            for (D = 0,
                            R = y.length; D < R; ++D) {
                                P.push(y[D]);
                                for (var M = y[D]; M <= C[D]; ++M)
                                    void 0 !== K.targetGapHash && K.targetGapHash.hasOwnProperty(M) && (F.push(M - 1),
                                    P.push(M));
                                F.push(C[D])
                            }
                            for (D = 0,
                            R = P.length; D < R; ++D) {
                                o += K.insertGapOverview(Z, P[D]),
                                o += '<div style="display:inline-block; width:' + (Q = 0 == D ? Math.round(K.seqAnnWidth * (P[D] - K.baseResi[Z] - 1) / (K.maxAnnoLength + K.nTotalGap)) : Math.round(K.seqAnnWidth * (P[D] - F[D - 1] - 1) / (K.maxAnnoLength + K.nTotalGap))) + 'px;">&nbsp;</div>',
                                o += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + L + "; width:" + Math.round(K.seqAnnWidth * (F[D] - P[D] + 1) / (K.maxAnnoLength + K.nTotalGap)) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + (c + 1).toString() + '" from="' + P + '" to="' + F + '" shorttitle="' + z + '" index="' + c + '" setname="' + Z + "_domain_" + c + "_" + v + '" id="' + Z + "_domain_" + c + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + m + " </div>"
                            }
                        }
                        U = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + S.toString() + " Residues</span>",
                        U += "</span>",
                        s += U += "<br>",
                        o += U,
                        o += '<div id="' + K.pre + Z + "_" + h + "_" + v + '_cddseq" style="display:none; white-space:normal;" class="icn3d-box">' + u + ' (<a href="' + K.baseUrl + "cdd/cddsrv.cgi?uid=" + h + '" target="_blank" class="icn3d-blue">open details view...</a>)</div>'
                    }
                }
                s += "</div>",
                o += "</div>",
                a += "</div>",
                $("#" + K.pre + "dt_cdd_" + Z).html(s),
                $("#" + K.pre + "ov_cdd_" + Z).html(o),
                $("#" + K.pre + "tt_cdd_" + Z).html(a),
                a = o = s = '<div id="' + K.pre + Z + '_siteseq_sequence" class="icn3d-dl_sequence">';
                var N = e.data[i].sites;
                d = void 0 !== N ? N.length : 0;
                for (c = 0; c < d; ++c) {
                    var z, q, j, U;
                    m = N[c].srcdom,
                    p = N[c].type,
                    S = N[c].sz;
                    17 < (z = "site: " + N[c].title).length && (z = z.substr(0, 17) + "...");
                    f = N[c].title;
                    var B, G = [];
                    for (D = 0,
                    R = N[c].locs.length; D < R; ++D) {
                        M = 0;
                        for (var V = (B = N[c].locs[D].coords).length; M < V; ++M)
                            G.push(Math.round(B[M]) + K.baseResi[Z])
                    }
                    a += (q = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" site="site" posarray="' + G.toString() + '" shorttitle="' + z + '" setname="' + Z + "_site_" + c + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + z + " </div>") + (j = '<span class="icn3d-residueNum" title="residue count">' + S.toString() + " Res</span>") + "<br>",
                    s += q + j + (U = '<span class="icn3d-seqLine">'),
                    o += q + j + U;
                    O = "site" + c.toString();
                    var W = 0
                      , Y = 0;
                    for (D = 0,
                    R = K.giSeq[Z].length; D < R; ++D)
                        if (s += K.insertGap(Z, D, "-"),
                        -1 != B.indexOf(D)) {
                            var X;
                            T = X = K.giSeq[Z][D];
                            1 < X.length && (T = X[0] + "..");
                            var Q;
                            E = D >= K.matchedPos[Z] && D - K.matchedPos[Z] < J.chainsSeq[Z].length ? J.chainsSeq[Z][D - K.matchedPos[Z]].resi : K.baseResi[Z] + 1 + D;
                            s += '<span id="' + O + "_" + K.pre + Z + "_" + E + '" title="' + T + E + '" class="icn3d-residue">' + X + "</span>",
                            o += K.insertGapOverview(Z, D),
                            0 <= (Q = K.cfg.blast_rep_id == Z ? Math.round(K.seqAnnWidth * D / (K.maxAnnoLength + K.nTotalGap) - W - Y) : Math.round(K.seqAnnWidth * D / K.maxAnnoLength - W - Y)) && (o += '<div style="display:inline-block; width:' + Q + 'px;">&nbsp;</div>',
                            o += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + T + E + '">&nbsp;</div>',
                            W += Q,
                            Y += 1)
                        } else
                            s += "<span>-</span>";
                    U = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + S.toString() + " Residues</span>",
                    U += "</span>",
                    s += U += "<br>",
                    o += U
                }
                s += "</div>",
                o += "</div>",
                a += "</div>",
                $("#" + K.pre + "dt_site_" + Z).html(s),
                $("#" + K.pre + "ov_site_" + Z).html(o),
                $("#" + K.pre + "tt_site_" + Z).html(a)
            }
            for (var Z in K.protein_chainid)
                t.hasOwnProperty(Z) || ($("#" + K.pre + "dt_cdd_" + Z).html(""),
                $("#" + K.pre + "ov_cdd_" + Z).html(""),
                $("#" + K.pre + "tt_cdd_" + Z).html(""),
                $("#" + K.pre + "dt_site_" + Z).html(""),
                $("#" + K.pre + "ov_site_" + Z).html(""),
                $("#" + K.pre + "tt_site_" + Z).html(""));
            K.enableHlSeq(),
            K.bAjaxCddSite = !0,
            void 0 !== K.deferredAnnoCddSite && K.deferredAnnoCddSite.resolve()
        },
        error: function(e, t, i) {
            if (this.tryCount++,
            this.tryCount <= this.retryLimit)
                $.ajax(this);
            else {
                for (var n in console.log("No CDD data were found for the protein " + r + "..."),
                K.protein_chainid)
                    $("#" + K.pre + "dt_cdd_" + n).html(""),
                    $("#" + K.pre + "ov_cdd_" + n).html(""),
                    $("#" + K.pre + "tt_cdd_" + n).html(""),
                    $("#" + K.pre + "dt_site_" + n).html(""),
                    $("#" + K.pre + "ov_site_" + n).html(""),
                    $("#" + K.pre + "tt_site_" + n).html("");
                K.enableHlSeq(),
                K.bAjaxCddSite = !0,
                void 0 !== K.deferredAnnoCddSite && K.deferredAnnoCddSite.resolve()
            }
        }
    })
}
,
iCn3DUI.prototype.showDomainPerStructure = function(s) {
    var a = this
      , e = a.icn3d
      , l = Object.keys(e.structures)
      , d = l[s]
      , t = a.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&domain&molinfor&uid=" + d;
    if (0 == s && void 0 !== a.mmdb_data)
        for (var i in a.protein_chainid)
            -1 !== i.indexOf(d) && a.showDomainWithData(i, a.mmdb_data);
    else if (void 0 !== a.mmdb_dataArray[s])
        for (var i in a.protein_chainid)
            -1 !== i.indexOf(d) && a.showDomainWithData(i, a.mmdb_dataArray[s]);
    else
        $.ajax({
            url: t,
            dataType: "json",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                for (var t in a.mmdb_dataArray[s] = e,
                a.protein_chainid)
                    -1 !== t.indexOf(d) && a.showDomainWithData(t, a.mmdb_dataArray[s]);
                if (a.enableHlSeq(),
                a.bAjax3ddomain = !0,
                a.bAjaxDoneArray[s] = !0,
                void 0 !== a.deferred3ddomain)
                    if (void 0 === a.cfg.align || void 0 === a.cfg.chainalign || a.bRealign)
                        a.deferred3ddomain.resolve();
                    else {
                        for (var i = !0, n = 0, r = l.length; n < r; ++n)
                            i = i && a.bAjaxDoneArray[n];
                        i && a.deferred3ddomain.resolve()
                    }
            },
            error: function(e, t, i) {
                if (this.tryCount++,
                this.tryCount <= this.retryLimit)
                    $.ajax(this);
                else {
                    for (var n in console.log("No 3D domain data were found for the protein " + d + "..."),
                    a.protein_chainid)
                        -1 !== n.indexOf(d) && ($("#" + a.pre + "dt_domain_" + n).html(""),
                        $("#" + a.pre + "ov_domain_" + n).html(""),
                        $("#" + a.pre + "tt_domain_" + n).html(""));
                    if (a.enableHlSeq(),
                    a.bAjax3ddomain = !0,
                    bAjaxDone1 = !0,
                    void 0 !== a.deferred3ddomain)
                        if (void 0 === a.cfg.align || void 0 === a.cfg.chainalign)
                            a.deferred3ddomain.resolve();
                        else {
                            for (var r = !0, s = 0, o = l.length; s < o; ++s)
                                r = r && a.bAjaxDoneArray[s];
                            r && a.deferred3ddomain.resolve()
                        }
                }
            }
        })
}
,
iCn3DUI.prototype.showDomainAll = function() {
    var e = this.icn3d
      , t = Object.keys(e.structures);
    this.mmdb_dataArray = [],
    this.bAjaxDoneArray = [];
    for (var i = 0, n = t.length; i < n; ++i)
        this.bAjaxDoneArray[i] = !1;
    for (i = 0,
    n = t.length; i < n; ++i)
        this.showDomainPerStructure(i)
}
,
iCn3DUI.prototype.showDomainWithData = function(e, t) {
    var i, n, r, s = this, o = s.icn3d, a = '<div id="' + s.pre + e + '_domainseq_sequence" class="icn3d-dl_sequence">', l = a, d = a, c = e.indexOf("_"), h = e.substr(c + 1), p = t.moleculeInfor;
    for (var m in p)
        if (p[m].chain === h) {
            n = p[r = m].name;
            break
        }
    void 0 !== r && void 0 !== t.domains[r] && (i = t.domains[r].domains),
    void 0 === i && (i = []);
    for (var u = 0, f = i.length; u < f; ++u) {
        for (var g = "3D domain " + (u + 1).toString() + " of " + n, v = 17 < g.length ? g.substr(0, 17) + "..." : g, b = i[u].intervals, y = {}, C = {}, _ = [], S = [], w = {}, A = 0, x = 0, k = b.length; x < k; ++x) {
            var D = Math.round(b[x][0]) - 1
              , O = Math.round(b[x][1]) - 1;
            if (!y.hasOwnProperty(D) && !C.hasOwnProperty(O)) {
                y[D] = 1,
                C[O] = 1,
                _.push(D + s.baseResi[e]),
                S.push(O + s.baseResi[e]),
                A += O - D + 1;
                for (var R = D; R <= O; ++R)
                    w[R + 1] = 1
            }
        }
        var T = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" 3ddomain="' + (u + 1).toString() + '" from="' + _ + '" to="' + S + '" shorttitle="' + v + '" index="' + u + '" setname="' + e + "_3d_domain_" + (u + 1).toString() + '" anno="sequence" chain="' + e + '" title="' + g + '">' + v + " </div>"
          , E = '<span class="icn3d-residueNum" title="residue count">' + A.toString() + " Res</span>";
        d += T + E + "<br>";
        var I = '<span class="icn3d-seqLine">';
        a += T + E + I,
        l += T + E + I;
        var H = "domain3d" + u.toString();
        for (x = 0,
        k = s.giSeq[e].length; x < k; ++x)
            if (a += s.insertGap(e, x, "-"),
            w.hasOwnProperty(x + 1)) {
                var L = s.giSeq[e][x]
                  , P = L;
                1 < L.length && (P = L[0] + "..");
                c = x >= s.matchedPos[e] && x - s.matchedPos[e] < o.chainsSeq[e].length ? o.chainsSeq[e][x - s.matchedPos[e]].resi : s.baseResi[e] + 1 + x;
                a += '<span id="' + H + "_" + s.pre + e + "_" + c + '" title="' + P + c + '" class="icn3d-residue">' + L + "</span>"
            } else
                a += "<span>-</span>";
        var F = o.getFirstCalphaAtomObj(o.chains[e])
          , M = void 0 === F.color || "FFFFFF" === F.color.getHexString() ? "DDDDDD" : F.color.getHexString()
          , N = void 0 !== F.color ? M : "CCCCCC";
        if (s.cfg.blast_rep_id != e)
            for (x = 0,
            k = _.length; x < k; ++x) {
                l += '<div style="display:inline-block; width:' + (0 == x ? Math.round(s.seqAnnWidth * (_[x] - s.baseResi[e] - 1) / s.maxAnnoLength) : Math.round(s.seqAnnWidth * (_[x] - S[x - 1] - 1) / s.maxAnnoLength)) + 'px;">&nbsp;</div>',
                l += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + N + "; width:" + Math.round(s.seqAnnWidth * (S[x] - _[x] + 1) / s.maxAnnoLength) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" 3ddomain="' + (u + 1).toString() + '" from="' + _ + '" to="' + S + '" shorttitle="' + v + '" index="' + u + '" setname="' + e + "_3d_domain_" + (u + 1).toString() + '" id="' + e + "_3d_domain_" + u + '" anno="sequence" chain="' + e + '" title="' + g + '">3D domain ' + (u + 1).toString() + "</div>"
            }
        else {
            var z = []
              , q = [];
            for (x = 0,
            k = _.length; x < k; ++x) {
                z.push(_[x]);
                for (R = _[x]; R <= S[x]; ++R)
                    void 0 !== s.targetGapHash && s.targetGapHash.hasOwnProperty(R) && (q.push(R - 1),
                    z.push(R));
                q.push(S[x])
            }
            for (x = 0,
            k = z.length; x < k; ++x) {
                l += s.insertGapOverview(e, z[x]),
                l += '<div style="display:inline-block; width:' + (0 == x ? Math.round(s.seqAnnWidth * (z[x] - s.baseResi[e] - 1) / (s.maxAnnoLength + s.nTotalGap)) : Math.round(s.seqAnnWidth * (z[x] - q[x - 1] - 1) / (s.maxAnnoLength + s.nTotalGap))) + 'px;">&nbsp;</div>',
                l += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + N + "; width:" + Math.round(s.seqAnnWidth * (q[x] - z[x] + 1) / (s.maxAnnoLength + s.nTotalGap)) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" 3ddomain="' + (u + 1).toString() + '" from="' + z + '" to="' + q + '" shorttitle="' + v + '" index="' + u + '" setname="' + e + "_3d_domain_" + (u + 1).toString() + '" id="' + e + "_3d_domain_" + u + '" anno="sequence" chain="' + e + '" title="' + g + '">3D domain ' + (u + 1).toString() + "</div>"
            }
        }
        I = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + A.toString() + " Residues</span>",
        I += "</span>",
        a += I += "<br>",
        l += I
    }
    a += "</div>",
    l += "</div>",
    d += "</div>",
    $("#" + s.pre + "dt_domain_" + e).html(a),
    $("#" + s.pre + "ov_domain_" + e).html(l),
    $("#" + s.pre + "tt_domain_" + e).html(d)
}
,
iCn3DUI.prototype.showInteraction = function(e, t) {
    var i = this;
    i.icn3d;
    void 0 !== i.chainname2residues || void 0 === i.cfg.mmdbid && void 0 === i.cfg.gi && void 0 === i.cfg.blast_rep_id && void 0 === i.cfg.align && void 0 === i.cfg.chainalign ? i.showInteraction_base(e, t) : setTimeout(function() {
        i.showInteraction_base(e, t)
    }, 1e3)
}
,
iCn3DUI.prototype.showInteraction_base = function(e, t) {
    var i = this
      , n = i.icn3d;
    void 0 === i.chainname2residues && (i.chainname2residues = {});
    var r = Object.keys(n.chains)
      , s = e;
    if (!(4 < (q = Math.round(s.indexOf("_"))))) {
        var o = n.getFirstCalphaAtomObj(n.chains[s]);
        if (void 0 === i.chainname2residues[s]) {
            i.chainname2residues[s] = {};
            var a = r.length;
            if (100 < a && void 0 === i.cfg.mmdbid && void 0 === i.cfg.gi && void 0 === i.cfg.blast_rep_id && void 0 === i.cfg.align && void 0 === i.cfg.chainalign)
                return $("#" + i.pre + "dt_interaction_" + e).html(""),
                void $("#" + i.pre + "ov_interaction_" + e).html("");
            for (var l = 0; l < a; ++l) {
                var d = r[l];
                if (d !== s && (d.substr(0, d.indexOf("_")) === s.substr(0, s.indexOf("_")) && !(4 < (q = Math.round(s.indexOf("_")))))) {
                    var c, h = n.getFirstCalphaAtomObj(n.chains[d]);
                    n.chemicals.hasOwnProperty(h.serial) ? c = "chemical" : n.nucleotides.hasOwnProperty(h.serial) ? c = "nucleotide" : n.ions.hasOwnProperty(h.serial) ? c = "ion" : n.proteins.hasOwnProperty(h.serial) ? c = "protein" : n.water.hasOwnProperty(h.serial) && (c = "water");
                    var p = n.getAtomsWithinAtom(n.hash2Atoms(n.chains[s]), n.hash2Atoms(n.chains[d]), 4);
                    if (0 != Object.keys(p).length) {
                        var m = {};
                        for (var u in p) {
                            m[(o = n.atoms[u]).structure + "_" + o.chain + "_" + o.resi] = 1
                        }
                        var f = d.substr(d.indexOf("_") + 1) + " (" + c + ")";
                        i.chainname2residues[s][f] = Object.keys(m)
                    }
                }
            }
        }
        var g = '<div id="' + i.pre + e + '_interseq_sequence" class="icn3d-dl_sequence">'
          , v = g
          , b = g
          , y = 0;
        for (var C in i.chainname2residues[e]) {
            var _ = i.chainname2residues[e][C]
              , S = "Interact ." + C;
            17 < S.length && (S = S.substr(0, 17) + "...");
            for (var w = "Interact ." + C, A = [], x = 0, k = _.length; x < k; ++x) {
                var D = _[x]
                  , O = Math.round(D.substr(_[x].lastIndexOf("_") + 1))
                  , R = Object.keys(n.residues[D])[0];
                (n.proteins.hasOwnProperty(R) || n.nucleotides.hasOwnProperty(R)) && A.push(O)
            }
            var T = A.length;
            if (0 != T) {
                var E = C.replace(/\s/g, "")
                  , I = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" interaction="' + (y + 1).toString() + '" posarray="' + A.toString() + '" shorttitle="' + S + '" setname="' + e + "_" + E + '" anno="sequence" chain="' + e + '" title="' + w + '">' + S + " </div>"
                  , H = '<span class="icn3d-residueNum" title="residue count">' + T.toString() + " Res</span>";
                b += I + H + "<br>";
                var L = '<span class="icn3d-seqLine">';
                g += I + H + L,
                v += I + H + L;
                var P = "inter" + y.toString()
                  , F = 0
                  , M = 0;
                for (x = 0,
                k = i.giSeq[e].length; x < k; ++x)
                    if (g += i.insertGap(e, x, "-"),
                    -1 != A.indexOf(x + 1 + i.baseResi[e])) {
                        var N = i.giSeq[e][x]
                          , z = N;
                        1 < N.length && (z = N[0] + "..");
                        var q = x >= i.matchedPos[e] && x - i.matchedPos[e] < n.chainsSeq[e].length ? n.chainsSeq[e][x - i.matchedPos[e]].resi : i.baseResi[e] + 1 + x;
                        g += '<span id="' + P + "_" + i.pre + e + "_" + q + '" title="' + N + q + '" class="icn3d-residue">' + z + "</span>",
                        v += i.insertGapOverview(e, x);
                        var j = i.cfg.blast_rep_id == e ? Math.round(i.seqAnnWidth * x / (i.maxAnnoLength + i.nTotalGap) - F - M) : Math.round(i.seqAnnWidth * x / i.maxAnnoLength - F - M);
                        0 <= j && (v += '<div style="display:inline-block; width:' + j + 'px;">&nbsp;</div>',
                        v += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + z + q + '">&nbsp;</div>',
                        F += j,
                        M += 1)
                    } else
                        g += "<span>-</span>";
                L = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + T.toString() + " Residues</span>",
                L += "</span>",
                g += L += "<br>",
                v += L,
                ++y
            }
        }
        g += "</div>",
        v += "</div>",
        b += "</div>",
        $("#" + i.pre + "dt_interaction_" + e).html(g),
        $("#" + i.pre + "ov_interaction_" + e).html(v),
        $("#" + i.pre + "tt_interaction_" + e).html(b),
        i.isMobile() ? (i.selectSequenceMobile(),
        i.selectChainMobile()) : i.selectSequenceNonMobile()
    }
}
,
iCn3DUI.prototype.showSsbond = function(e, t) {
    var i = this;
    void 0 === i.icn3d.ssbondpnts ? setTimeout(function() {
        i.showSsbond_base(e, t)
    }, 1e3) : i.showSsbond_base(e, t)
}
,
iCn3DUI.prototype.showSsbond_base = function(e, t) {
    var i = this.icn3d
      , n = t
      , r = {}
      , s = n.substr(0, n.indexOf("_"))
      , o = i.ssbondpnts[s];
    if (void 0 === o)
        return $("#" + this.pre + "dt_ssbond_" + e).html(""),
        $("#" + this.pre + "ov_ssbond_" + e).html(""),
        void $("#" + this.pre + "tt_ssbond_" + e).html("");
    for (var a = 0, l = o.length; a < l; a += 2) {
        var d = o[a]
          , c = o[a + 1]
          , h = d.substr(0, d.lastIndexOf("_"))
          , p = c.substr(0, c.lastIndexOf("_"));
        n === h && (void 0 === r[d] && (r[d] = []),
        r[d].push(c)),
        n === p && (void 0 === r[c] && (r[c] = []),
        r[c].push(d))
    }
    var m = Object.keys(r);
    this.showAnnoType(e, t, "ssbond", "Disulfide Bonds", m, r)
}
,
iCn3DUI.prototype.showCrosslink = function(e, t) {
    var i = this;
    void 0 === i.icn3d.clbondpnts ? setTimeout(function() {
        i.showCrosslink_base(e, t)
    }, 1e3) : i.showCrosslink_base(e, t)
}
,
iCn3DUI.prototype.showCrosslink_base = function(e, t) {
    var i = this.icn3d
      , n = t
      , r = {}
      , s = n.substr(0, n.indexOf("_"))
      , o = i.clbondpnts[s];
    if (void 0 === o)
        return $("#" + this.pre + "dt_crosslink_" + e).html(""),
        $("#" + this.pre + "ov_crosslink_" + e).html(""),
        void $("#" + this.pre + "tt_crosslink_" + e).html("");
    for (var a = 0, l = o.length; a < l; a += 2) {
        var d = o[a]
          , c = o[a + 1];
        d.substr(0, d.lastIndexOf("_"));
        n === c.substr(0, c.lastIndexOf("_")) && (void 0 === r[c] && (r[c] = []),
        r[c].push(d))
    }
    var h = Object.keys(r);
    this.showAnnoType(e, t, "crosslink", "Cross-Linkages", h, r)
}
,
iCn3DUI.prototype.showTransmem = function(e, t) {
    var i = this;
    void 0 === i.icn3d.ssbondpnts ? setTimeout(function() {
        i.showTransmem_base(e, t)
    }, 1e3) : i.showTransmem_base(e, t)
}
,
iCn3DUI.prototype.showTransmem_base = function(e, t) {
    var i = this.icn3d
      , n = {};
    for (var r in i.chains[t]) {
        var s = i.atoms[r];
        if (s.coord.z < i.halfBilayerSize && s.coord.z > -i.halfBilayerSize)
            n[s.structure + "_" + s.chain + "_" + s.resi] = 1
    }
    var o = Object.keys(n);
    this.showAnnoType(e, t, "transmem", "Transmembrane domain", o)
}
,
iCn3DUI.prototype.showAnnoType = function(e, t, i, n, r, s) {
    var o = this
      , a = o.icn3d
      , l = '<div id="' + o.pre + e + "_" + i + 'seq_sequence" class="icn3d-dl_sequence">'
      , d = l
      , c = l;
    if (0 == r.length)
        return $("#" + o.pre + "dt_" + i + "_" + e).html(""),
        $("#" + o.pre + "ov_" + i + "_" + e).html(""),
        void $("#" + o.pre + "tt_" + i + "_" + e).html("");
    var h = n;
    17 < n.length && (n = n.substr(0, 17) + "...");
    for (var p = [], m = 0, u = r.length; m < u; ++m) {
        var f = r[m]
          , g = Math.round(f.substr(r[m].lastIndexOf("_") + 1));
        p.push(g)
    }
    var v = p.length
      , b = i
      , y = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" ' + i + '="" posarray="' + p.toString() + '" shorttitle="' + n + '" setname="' + e + "_" + b + '" anno="sequence" chain="' + e + '" title="' + h + '">' + n + " </div>"
      , C = '<span class="icn3d-residueNum" title="residue count">' + v.toString() + " Res</span>";
    c += y + C + "<br>";
    var _ = '<span class="icn3d-seqLine">';
    l += y + C + _,
    d += y + C + _;
    var S = i
      , w = 0
      , A = 0;
    for (m = 0,
    u = o.giSeq[e].length; m < u; ++m)
        if (l += o.insertGap(e, m, "-"),
        -1 != p.indexOf(m + 1 + o.baseResi[e])) {
            var x = o.giSeq[e][m]
              , k = x;
            1 < x.length && (k = x[0] + "..");
            var D = m >= o.matchedPos[e] && m - o.matchedPos[e] < a.chainsSeq[e].length ? a.chainsSeq[e][m - o.matchedPos[e]].resi : o.baseResi[e] + 1 + m;
            f = e + "_" + (m + 1 + o.baseResi[e]).toString(),
            n = x + (m + 1 + o.baseResi[e]).toString();
            if ("ssbond" == i) {
                if (n = "Residue " + f + " has disulfide bond with",
                void 0 !== s[f])
                    for (var O = 0, R = s[f].length; O < R; ++O)
                        n += " residue " + s[f][O]
            } else if ("crosslink" == i && (n = "Residue " + f + " has cross-linkage with",
            void 0 !== s[f]))
                for (O = 0,
                R = s[f].length; O < R; ++O)
                    n += " residue " + s[f][O];
            l += '<span id="' + S + "_" + o.pre + e + "_" + D + '" title="' + n + '" class="icn3d-residue">' + k + "</span>",
            d += o.insertGapOverview(e, m);
            var T = o.cfg.blast_rep_id == e ? Math.round(o.seqAnnWidth * m / (o.maxAnnoLength + o.nTotalGap) - w - A) : Math.round(o.seqAnnWidth * m / o.maxAnnoLength - w - A);
            0 <= T && (d += '<div style="display:inline-block; width:' + T + 'px;">&nbsp;</div>',
            d += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + n + '">&nbsp;</div>',
            w += T,
            A += 1)
        } else
            l += "<span>-</span>";
    _ = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + v.toString() + " Residues</span>",
    _ += "</span>",
    l += _ += "<br>",
    d += _,
    l += "</div>",
    d += "</div>",
    c += "</div>",
    $("#" + o.pre + "dt_" + i + "_" + e).html(l),
    $("#" + o.pre + "ov_" + i + "_" + e).html(d),
    $("#" + o.pre + "tt_" + i + "_" + e).html(c)
}
,
iCn3DUI.prototype.hideAllAnno = function() {
    this.icn3d;
    this.hideAllAnnoBase(),
    $("[id^=" + this.pre + "custom]").hide()
}
,
iCn3DUI.prototype.hideAllAnnoBase = function() {
    this.icn3d;
    this.setAnnoSeqBase(!1)
}
,
iCn3DUI.prototype.setAnnoSeqBase = function(e) {
    this.icn3d;
    var t = ["site", "snp", "clinvar", "cdd", "domain", "interaction", "ssbond", "crosslink", "transmem"];
    for (var i in t) {
        var n = t[i];
        e ? $("[id^=" + this.pre + n + "]").show() : $("[id^=" + this.pre + n + "]").hide()
    }
}
,
iCn3DUI.prototype.setAnnoTabBase = function(e) {
    this.icn3d;
    var t = ["all", "binding", "snp", "clinvar", "cdd", "3dd", "interact", "custom", "ssbond", "crosslink", "transmem"];
    for (var i in t) {
        var n = t[i];
        $("#" + this.pre + "anno_" + n).length && ($("#" + this.pre + "anno_" + n)[0].checked = e)
    }
}
,
iCn3DUI.prototype.setAnnoTabAll = function() {
    var e = this;
    e.icn3d;
    e.setAnnoTabBase(!0),
    e.setAnnoSeqBase(!0),
    e.updateClinvar(),
    e.updateSnp(),
    e.updateDomain(),
    e.updateInteraction(),
    e.updateSsbond(),
    e.updateCrosslink(),
    e.updateTransmem()
}
,
iCn3DUI.prototype.hideAnnoTabAll = function() {
    this.icn3d;
    this.setAnnoTabBase(!1),
    this.hideAllAnno()
}
,
iCn3DUI.prototype.resetAnnoTabAll = function() {
    var e = this;
    e.icn3d;
    $("#" + e.pre + "anno_binding").length && $("#" + e.pre + "anno_binding")[0].checked && $("[id^=" + e.pre + "site]").show(),
    $("#" + e.pre + "anno_snp").length && $("#" + e.pre + "anno_snp")[0].checked && ($("[id^=" + e.pre + "snp]").show(),
    e.bSnpShown = !1,
    e.updateSnp()),
    $("#" + e.pre + "anno_clinvar").length && $("#" + e.pre + "anno_clinvar")[0].checked && ($("[id^=" + e.pre + "clinvar]").show(),
    e.bClinvarShown = !1,
    e.updateClinvar()),
    $("#" + e.pre + "anno_cdd").length && $("#" + e.pre + "anno_cdd")[0].checked && $("[id^=" + e.pre + "cdd]").show(),
    $("#" + e.pre + "anno_3dd").length && $("#" + e.pre + "anno_3dd")[0].checked && ($("[id^=" + e.pre + "domain]").show(),
    e.bDomainShown = !1,
    e.updateDomain()),
    $("#" + e.pre + "anno_interact").length && $("#" + e.pre + "anno_interact")[0].checked && ($("[id^=" + e.pre + "interaction]").show(),
    e.bInteractionShown = !1,
    e.updateInteraction()),
    $("#" + e.pre + "anno_custom").length && $("#" + e.pre + "anno_custom")[0].checked && $("[id^=" + e.pre + "custom]").show(),
    $("#" + e.pre + "anno_ssbond").length && $("#" + e.pre + "anno_ssbond")[0].checked && ($("[id^=" + e.pre + "ssbond]").show(),
    e.bSSbondShown = !1,
    e.updateSsbond()),
    $("#" + e.pre + "anno_crosslink").length && $("#" + e.pre + "anno_crosslink")[0].checked && ($("[id^=" + e.pre + "crosslink]").show(),
    e.bCrosslinkShown = !1,
    e.updateCrosslink()),
    $("#" + e.pre + "anno_transmem").length && $("#" + e.pre + "anno_transmem")[0].checked && ($("[id^=" + e.pre + "transmem]").show(),
    e.bTranememShown = !1,
    e.updateTransmem())
}
,
iCn3DUI.prototype.setAnnoTabCustom = function() {
    this.icn3d;
    $("[id^=" + this.pre + "custom]").show(),
    $("#" + this.pre + "anno_custom").length && ($("#" + this.pre + "anno_custom")[0].checked = !0)
}
,
iCn3DUI.prototype.hideAnnoTabCustom = function() {
    this.icn3d;
    $("[id^=" + this.pre + "custom]").hide(),
    $("#" + this.pre + "anno_custom").length && ($("#" + this.pre + "anno_custom")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabClinvar = function() {
    this.icn3d;
    $("[id^=" + this.pre + "clinvar]").show(),
    $("#" + this.pre + "anno_clinvar").length && ($("#" + this.pre + "anno_clinvar")[0].checked = !0),
    this.updateClinvar()
}
,
iCn3DUI.prototype.hideAnnoTabClinvar = function() {
    this.icn3d;
    $("[id^=" + this.pre + "clinvar]").hide(),
    $("#" + this.pre + "anno_clinvar").length && ($("#" + this.pre + "anno_clinvar")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabSnp = function() {
    this.icn3d;
    $("[id^=" + this.pre + "snp]").show(),
    $("#" + this.pre + "anno_snp").length && ($("#" + this.pre + "anno_snp")[0].checked = !0),
    this.updateSnp()
}
,
iCn3DUI.prototype.hideAnnoTabSnp = function() {
    this.icn3d;
    $("[id^=" + this.pre + "snp]").hide(),
    $("#" + this.pre + "anno_snp").length && ($("#" + this.pre + "anno_snp")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabCdd = function() {
    this.icn3d;
    $("[id^=" + this.pre + "cdd]").show(),
    $("#" + this.pre + "anno_cdd").length && ($("#" + this.pre + "anno_cdd")[0].checked = !0)
}
,
iCn3DUI.prototype.hideAnnoTabCdd = function() {
    this.icn3d;
    $("[id^=" + this.pre + "cdd]").hide(),
    $("#" + this.pre + "anno_cdd").length && ($("#" + this.pre + "anno_cdd")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTab3ddomain = function() {
    this.icn3d;
    $("[id^=" + this.pre + "domain]").show(),
    $("#" + this.pre + "anno_3dd").length && ($("#" + this.pre + "anno_3dd")[0].checked = !0),
    this.updateDomain()
}
,
iCn3DUI.prototype.hideAnnoTab3ddomain = function() {
    this.icn3d;
    $("[id^=" + this.pre + "domain]").hide(),
    $("#" + this.pre + "anno_3dd").length && ($("#" + this.pre + "anno_3dd")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabSite = function() {
    this.icn3d;
    $("[id^=" + this.pre + "site]").show(),
    $("#" + this.pre + "anno_binding").length && ($("#" + this.pre + "anno_binding")[0].checked = !0)
}
,
iCn3DUI.prototype.hideAnnoTabSite = function() {
    this.icn3d;
    $("[id^=" + this.pre + "site]").hide(),
    $("#" + this.pre + "anno_binding").length && ($("#" + this.pre + "anno_binding")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabInteraction = function() {
    this.icn3d;
    $("[id^=" + this.pre + "interaction]").show(),
    $("#" + this.pre + "anno_interact").length && ($("#" + this.pre + "anno_interact")[0].checked = !0),
    this.updateInteraction()
}
,
iCn3DUI.prototype.hideAnnoTabInteraction = function() {
    this.icn3d;
    $("[id^=" + this.pre + "interaction]").hide(),
    $("#" + this.pre + "anno_interact").length && ($("#" + this.pre + "anno_interact")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabSsbond = function() {
    this.icn3d;
    $("[id^=" + this.pre + "ssbond]").show(),
    $("#" + this.pre + "anno_ssbond").length && ($("#" + this.pre + "anno_ssbond")[0].checked = !0),
    this.updateSsbond()
}
,
iCn3DUI.prototype.hideAnnoTabSsbond = function() {
    this.icn3d;
    $("[id^=" + this.pre + "ssbond]").hide(),
    $("#" + this.pre + "anno_ssbond").length && ($("#" + this.pre + "anno_ssbond")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabCrosslink = function() {
    this.icn3d;
    $("[id^=" + this.pre + "crosslink]").show(),
    $("#" + this.pre + "anno_crosslink").length && ($("#" + this.pre + "anno_crosslink")[0].checked = !0),
    this.updateCrosslink()
}
,
iCn3DUI.prototype.hideAnnoTabCrosslink = function() {
    this.icn3d;
    $("[id^=" + this.pre + "crosslink]").hide(),
    $("#" + this.pre + "anno_crosslink").length && ($("#" + this.pre + "anno_crosslink")[0].checked = !1)
}
,
iCn3DUI.prototype.setAnnoTabTransmem = function() {
    this.icn3d;
    $("[id^=" + this.pre + "transmem]").show(),
    $("#" + this.pre + "anno_transmem").length && ($("#" + this.pre + "anno_transmem")[0].checked = !0),
    this.updateTransmem()
}
,
iCn3DUI.prototype.hideAnnoTabTransmem = function() {
    this.icn3d;
    $("[id^=" + this.pre + "transmem]").hide(),
    $("#" + this.pre + "anno_transmem").length && ($("#" + this.pre + "anno_transmem")[0].checked = !1)
}
,
iCn3DUI.prototype.setTabs = function() {
    var t = this;
    t.icn3d;
    $("#" + t.pre + "dl_addtrack_tabs").tabs(),
    $("#" + t.pre + "dl_anno_view_tabs").tabs(),
    $("#" + t.pre + "anno_all").click(function(e) {
        $("#" + t.pre + "anno_all")[0].checked ? (t.setAnnoTabAll(),
        t.setLogCmd("set annotation all", !0)) : (t.hideAnnoTabAll(),
        t.setLogCmd("hide annotation all", !0))
    }),
    $("#" + t.pre + "anno_binding").click(function(e) {
        $("#" + t.pre + "anno_binding")[0].checked ? (t.setAnnoTabSite(),
        t.setLogCmd("set annotation site", !0)) : (t.hideAnnoTabSite(),
        t.setLogCmd("hide annotation site", !0))
    }),
    $("#" + t.pre + "anno_snp").click(function(e) {
        $("#" + t.pre + "anno_snp")[0].checked ? (t.setAnnoTabSnp(),
        t.setLogCmd("set annotation snp", !0)) : (t.hideAnnoTabSnp(),
        t.setLogCmd("hide annotation snp", !0))
    }),
    $("#" + t.pre + "anno_clinvar").click(function(e) {
        $("#" + t.pre + "anno_clinvar")[0].checked ? (t.setAnnoTabClinvar(),
        t.setLogCmd("set annotation clinvar", !0)) : (t.hideAnnoTabClinvar(),
        t.setLogCmd("hide annotation clinvar", !0))
    }),
    $("#" + t.pre + "anno_cdd").click(function(e) {
        t.clickCdd()
    }),
    $("#" + t.pre + "anno_3dd").click(function(e) {
        $("#" + t.pre + "anno_3dd")[0].checked ? (t.setAnnoTab3ddomain(),
        t.setLogCmd("set annotation 3ddomain", !0)) : (t.hideAnnoTab3ddomain(),
        t.setLogCmd("hide annotation 3ddomain", !0))
    }),
    $("#" + t.pre + "anno_interact").click(function(e) {
        $("#" + t.pre + "anno_interact")[0].checked ? (t.setAnnoTabInteraction(),
        t.setLogCmd("set annotation interaction", !0)) : (t.hideAnnoTabInteraction(),
        t.setLogCmd("hide annotation interaction", !0))
    }),
    $("#" + t.pre + "anno_custom").click(function(e) {
        $("#" + t.pre + "anno_custom")[0].checked ? (t.setAnnoTabCustom(),
        t.setLogCmd("set annotation custom", !0)) : (t.hideAnnoTabCustom(),
        t.setLogCmd("hide annotation custom", !0))
    }),
    $("#" + t.pre + "anno_ssbond").click(function(e) {
        $("#" + t.pre + "anno_ssbond")[0].checked ? (t.setAnnoTabSsbond(),
        t.setLogCmd("set annotation ssbond", !0)) : (t.hideAnnoTabSsbond(),
        t.setLogCmd("hide annotation ssbond", !0))
    }),
    $("#" + t.pre + "anno_crosslink").click(function(e) {
        $("#" + t.pre + "anno_crosslink")[0].checked ? (t.setAnnoTabCrosslink(),
        t.setLogCmd("set annotation crosslink", !0)) : (t.hideAnnoTabCrosslink(),
        t.setLogCmd("hide annotation crosslink", !0))
    }),
    $("#" + t.pre + "anno_transmem").click(function(e) {
        $("#" + t.pre + "anno_transmem").length && $("#" + t.pre + "anno_transmem")[0].checked ? (t.setAnnoTabTransmem(),
        t.setLogCmd("set annotation transmembrane", !0)) : (t.hideAnnoTabTransmem(),
        t.setLogCmd("hide annotation transmembrane", !0))
    })
}
,
iCn3DUI.prototype.clickCdd = function() {
    this.icn3d;
    0 < $("[id^=" + this.pre + "cdd]").length && ($("#" + this.pre + "anno_cdd")[0].checked ? (this.setAnnoTabCdd(),
    this.setLogCmd("set annotation cdd", !0)) : (this.hideAnnoTabCdd(),
    this.setLogCmd("hide annotation cdd", !0)))
}
,
iCn3DUI.prototype.setToolTip = function() {
    this.icn3d;
    $("[id^=" + this.pre + "snp]").add("[id^=" + this.pre + "clinvar]").add("[id^=" + this.pre + "ssbond]").add("[id^=" + this.pre + "crosslink]").tooltip({
        content: function() {
            return $(this).prop("title")
        },
        show: null,
        close: function(e, t) {
            t.tooltip.hover(function() {
                $(this).stop(!0).fadeTo(400, 1)
            }, function() {
                $(this).fadeOut("400", function() {
                    $(this).remove()
                })
            })
        }
    })
}
,
iCn3DUI.prototype.showAnnoSelectedChains = function() {
    var e = this.icn3d
      , t = {};
    for (var i in e.hAtoms) {
        t[n = (r = e.atoms[i]).structure + "_" + r.chain] = 1
    }
    for (var n in $("#" + this.pre + "dl_annotations > .icn3d-annotation").hide(),
    t) {
        var r;
        if ($("#" + this.pre + "anno_" + n).length && $("#" + this.pre + "anno_" + n).show(),
        void 0 !== (r = e.getFirstCalphaAtomObj(e.chains[n])).resn) {
            var s = e.residueName2Abbr(r.resn.substr(0, 3));
            $("#" + this.pre + "anno_" + s).show()
        }
    }
}
,
iCn3DUI.prototype.showAnnoAllChains = function() {
    this.icn3d;
    $("#" + this.pre + "dl_annotations > .icn3d-annotation").show()
}
,
iCn3DUI.prototype.setAnnoView = function(e) {
    this.icn3d;
    "detailed view" === e ? (this.view = "detailed view",
    $("#" + this.pre + "dl_anno_view_tabs").tabs("option", "active", 1)) : (this.view = "overview",
    $("#" + this.pre + "dl_anno_view_tabs").tabs("option", "active", 0))
}
,
iCn3DUI.prototype.setAnnoDisplay = function(e, t) {
    this.icn3d;
    var i = ["giseq", "custom", "site", "snp", "clinvar", "cdd", "domain", "interaction", "ssbond", "crosslink", "transmem"];
    for (var n in i) {
        var r = i[n];
        $("[id^=" + this.pre + t + "_" + r + "]").attr("style", e)
    }
}
,
iCn3DUI.prototype.showFixedTitle = function() {
    this.icn3d;
    this.setAnnoDisplay("display:block;", "tt")
}
,
iCn3DUI.prototype.hideFixedTitle = function() {
    this.icn3d;
    this.setAnnoDisplay("display:none!important;", "tt")
}
,
iCn3DUI.prototype.setAnnoViewAndDisplay = function(e) {
    var t = this;
    t.icn3d;
    if ("detailed view" === e) {
        t.setAnnoView("detailed view");
        var i = "display:block;";
        t.setAnnoDisplay(i, "dt"),
        $("#" + t.pre + "seqguide_wrapper").attr("style", i),
        i = "display:none;",
        t.setAnnoDisplay(i, "ov")
    } else {
        t.setAnnoView("overview"),
        t.hideFixedTitle();
        i = "display:none;";
        t.setAnnoDisplay(i, "dt"),
        $("#" + t.pre + "seqguide_wrapper").attr("style", i),
        i = "display:block;",
        t.setAnnoDisplay(i, "ov")
    }
}
,
iCn3DUI.prototype.defineSecondary = function(e, t) {
    var i = this
      , n = i.icn3d;
    $("#" + i.pre + "dl_definedsets").hasClass("ui-dialog-content") && $("#" + i.pre + "dl_definedsets").dialog("isOpen") || (i.openDlg("dl_definedsets", "Select sets"),
    $("#" + i.pre + "atomsCustom").resizable());
    var r, s, o = {}, a = !1, l = 0, d = 0, c = e + "_C(Nterm";
    n.hAtoms = {};
    for (var h = 0, p = n.chainsSeq[e].length; h < p; ++h) {
        var m = e + "_" + n.chainsSeq[e][h].resi;
        if (n.residues.hasOwnProperty(m)) {
            var u = n.getFirstCalphaAtomObj(n.residues[m])
              , f = n.secondaries[m];
            "H" == f ? (u.ssbegin && (++l,
            0 < Object.keys(o).length && (s = r + "H" + l + ")",
            "coil" == t && (i.selectResidueList(o, s, s, a, !0),
            a = a || !0),
            o = {},
            0)),
            r = e + "_H" + l,
            o[m] = 1,
            u.ssend && (c = e + "_C(H" + l,
            "helix" == t && (i.selectResidueList(o, r, r, a, !0),
            a = a || !0),
            o = {},
            0)) : "E" == f ? (u.ssbegin && (++d,
            0 < Object.keys(o).length && (s = r + "S" + d + ")",
            "coil" == t && (i.selectResidueList(o, s, s, a, !0),
            a = a || !0),
            o = {},
            0)),
            r = e + "_S" + d,
            o[m] = 1,
            u.ssend && (c = e + "_C(S" + d,
            "sheet" == t && (i.selectResidueList(o, r, r, a, !0),
            a = a || !0),
            o = {},
            0)) : (r = c + "-",
            o[m] = 1)
        }
    }
    0 < Object.keys(o).length && (s = r + "Cterm)",
    "coil" == t && i.selectResidueList(o, s, s, a, !0))
}
,
iCn3DUI.prototype.simplifyText = function(e) {
    this.icn3d;
    var t, i = "", n = !1, r = -1;
    for (t = 0,
    il = e.length; t < il; ++t)
        "-" == e[t] || " " == e[t] ? (n && t !== r && (i += r + 1 == t - 1 ? (r + 1 + 1).toString() + " " + e.substr(r + 1, t - 1 - r) + ", " : (r + 1 + 1).toString() + "-" + (t - 1 + 1).toString() + " " + e.substr(r + 1, t - 1 - r) + ", ",
        n = !1),
        r = t) : n = !0;
    return n && t == il && (i += r + 1 == t - 1 ? (r + 1 + 1).toString() + " " + e.substr(r + 1, t - 1 - r) + ", " : (r + 1 + 1).toString() + "-" + (t - 1 + 1).toString() + " " + e.substr(r + 1, t - 1 - r) + ", "),
    i
}
,
iCn3DUI.prototype.alignSequenceToStructure = function(e, t, i) {
    var n, r, s = this.icn3d;
    void 0 !== t.data && (n = t.data[0].query,
    r = (r = t.data[0].targets[e.replace(/_/g, "")]).hsps[0]);
    var o = "";
    if (void 0 !== n && void 0 !== r) {
        var a = r.scores.e_value.toPrecision(2);
        1e-200 < a && (a = parseFloat(a).toExponential());
        r.scores.bit_score;
        for (var l = t.targets[e.replace(/_/g, "")].seqdata, d = n.seqdata, c = r.segs, h = {}, p = 0, m = c.length; p < m; ++p)
            for (var u = c[p], f = 0; f <= u.orito - u.orifrom; ++f)
                h[f + u.orifrom] = f + u.from;
        var g = [];
        for (p = 0,
        m = l.length; p < m; ++p)
            if (h.hasOwnProperty(p)) {
                o += d[h[p]];
                var v = this.getColorhexFromBlosum62(l[p], d[h[p]]);
                g.push("#" + v);
                var b = p + 1;
                for (var y in s.residues[e + "_" + b]) {
                    var C = s.thr("#" + v);
                    s.atoms[y].color = C,
                    s.atomPrevColors[y] = C
                }
            } else
                o += "-",
                g.push("");
        i += ", E: " + a
    } else
        o += "cannot be aligned";
    this.showNewTrack(e, i, o, g, h, "seq"),
    this.updateHlAll(),
    s.draw(),
    this.setLogCmd("add track | chainid " + e + " | title " + i + " | text " + this.simplifyText(o) + " | type seq", !0)
}
,
iCn3DUI.prototype.resetAnnoAll = function() {
    this.icn3d;
    $("[id^=" + this.pre + "dt_]").html(""),
    $("[id^=" + this.pre + "tt_]").html(""),
    $("[id^=" + this.pre + "ov_]").html(""),
    this.processSeqData(this.chainid_seq),
    this.setAnnoViewAndDisplay("detailed view"),
    this.resetAnnoTabAll()
}
,
iCn3DUI.prototype.clickAddTrackButton = function() {
    var z = this;
    z.icn3d;
    $(document).on("click", "#" + z.pre + "addtrack_button1", function(e) {
        z.icn3d;
        e.stopImmediatePropagation(),
        dialog.dialog("close");
        var t = $("#" + z.pre + "track_chainid").val()
          , i = $("#" + z.pre + "track_gi").val()
          , n = isNaN(i) ? "Acc " + i : "gi " + i;
        $.ajax({
            url: "https://www.ncbi.nlm.nih.gov/Structure/pwaln/pwaln.fcgi?from=track",
            type: "POST",
            data: {
                targets: t,
                queries: i
            },
            dataType: "jsonp",
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                z.alignSequenceToStructure(t, e, n)
            },
            error: function(e, t, i) {
                this.tryCount++,
                this.tryCount <= this.retryLimit && $.ajax(this)
            }
        })
    }),
    $(document).on("click", "#" + z.pre + "addtrack_button2", function(e) {
        z.icn3d;
        e.stopImmediatePropagation(),
        dialog.dialog("close");
        var t = $("#" + z.pre + "track_chainid").val()
          , i = $("#" + z.pre + "track_fasta").val()
          , n = $("#" + z.pre + "fasta_title").val();
        $.ajax({
            url: "https://www.ncbi.nlm.nih.gov/Structure/pwaln/pwaln.fcgi?from=track",
            type: "POST",
            data: {
                targets: t,
                queries: i
            },
            dataType: "jsonp",
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                z.alignSequenceToStructure(t, e, n)
            },
            error: function(e, t, i) {
                this.tryCount++,
                this.tryCount <= this.retryLimit && $.ajax(this)
            }
        })
    }),
    $(document).on("click", "#" + z.pre + "addtrack_button2b", function(e) {
        var t = z.icn3d;
        e.stopImmediatePropagation(),
        dialog.dialog("close");
        for (var i = $("#" + z.pre + "track_chainid").val(), n = $("#" + z.pre + "fasta_startpos").val(), r = "identity" == $("#" + z.pre + "colorseqby").val() ? "identity" : "custom", s = $("#" + z.pre + "track_fastaalign").val().split(">"), o = s[1].indexOf("\n"), a = (s[1].substr(0, o),
        s[1].substr(o + 1).replace(/\n/g, "")), l = [], d = [], c = 2, h = s.length; c < h; ++c) {
            var p = s[c].indexOf("\n")
              , m = s[c].substr(0, p);
            l.push(m);
            var u = s[c].substr(p + 1).replace(/\n/g, "");
            d.push(u)
        }
        var f = void 0;
        for (c = 0,
        h = z.giSeq[i].length; c < h; ++c) {
            (p = c >= z.matchedPos[i] && c - z.matchedPos[i] < t.chainsSeq[i].length ? t.chainsSeq[i][c - z.matchedPos[i]].resi : z.baseResi[i] + 1 + c) == n && (f = c)
        }
        void 0 === f && alert('Please double check the start position before clicking "Add Track"');
        var g, v = "-", b = 0, y = 0, C = 0, _ = !(z.targetGapHash = {}), S = 0, w = 0;
        for (c = 0,
        h = a.length; c < h; ++c)
            "-" == a[c] && a[c] != v && (g = y,
            C = 0),
            "-" == v && a[c] != v && 0 < y && (z.targetGapHash[g + f] = {
                from: g + f,
                to: b + C - 1 + f
            }),
            v = a[c],
            b = y,
            "-" != a[c] ? (++y,
            w = c,
            _ || (S = c,
            _ = !0)) : ++C;
        z.resetAnnoAll();
        var A = ""
          , x = 0;
        for (var c in z.targetGapHash)
            0 < x && (A += " "),
            A += c + "_" + z.targetGapHash[c].from + "_" + z.targetGapHash[c].to,
            ++x;
        z.setLogCmd("msa | " + A, !0);
        for (var k = {}, D = 0, O = d.length; D < O; ++D) {
            for (var R = f + 1, T = "", E = 0; E < f; ++E) {
                if (z.targetGapHash.hasOwnProperty(E))
                    for (var I = 0; I < z.targetGapHash[E].to - z.targetGapHash[E].from + 1; ++I)
                        T += "-";
                T += "-"
            }
            for (E = S; E <= w; ++E)
                0 == D && (k[R] = 0),
                T += d[D][E],
                "-" != a[E] && (a[E] == d[D][E] && ++k[R],
                ++R);
            m = l[D].length < 20 ? l[D] : l[D].substr(0, 20) + "...";
            z.showNewTrack(i, m, T, void 0, void 0, r, void 0, !0),
            z.setLogCmd("add track | chainid " + i + " | title " + m + " | text " + z.simplifyText(T) + " | type " + r + " | color 0 | msa 1", !0)
        }
        if (0 < d.length) {
            void 0 === t.queryresi2score && (t.queryresi2score = {}),
            void 0 === t.queryresi2score[i] && (t.queryresi2score[i] = {});
            var H = d.length;
            for (var R in k) {
                var L = parseInt(k[R] / H * 100);
                t.queryresi2score[i][R] = L
            }
            var P = Object.keys(k)
              , F = Math.min.apply(null, P)
              , M = Math.max.apply(null, P)
              , N = "";
            for (R = F; R <= M; ++R)
                k.hasOwnProperty(R) ? N += Math.round(k[R] / H * 9) : N += "_";
            t.opts.color = "align custom",
            t.setColorByOptions(t.opts, t.hAtoms),
            z.updateHlAll(),
            t.draw(),
            z.setLogCmd("color align custom | " + i + " | range " + F + "_" + M + " | " + N, !0)
        }
    }),
    $(document).on("click", "#" + z.pre + "addtrack_button3", function(e) {
        z.icn3d;
        e.stopImmediatePropagation(),
        dialog.dialog("close");
        var A = $("#" + z.pre + "track_chainid").val()
          , t = $("#" + z.pre + "track_bed")[0].files[0];
        if (t) {
            window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
            var i = new FileReader;
            i.onload = function(e) {
                for (var t, i = e.target.result.split("\n"), n = !1, r = !1, s = 0, o = i.length; s < o; ++s)
                    if ("browser" != i[s].substr(0, 7))
                        if ("track" == i[s].substr(0, 5)) {
                            if (-1 != i[s].toLowerCase().indexOf("itemrgb") && (n = !0),
                            -1 != i[s].toLowerCase().indexOf("colorbystrand=")) {
                                r = !0;
                                var a = i[s].toLowerCase().indexOf("colorbystrand=")
                                  , l = i[s].substr(a)
                                  , d = l.indexOf('"');
                                if (-1 != d) {
                                    var c = l.substr(d + 1)
                                      , h = c.indexOf('"');
                                    if (-1 != d)
                                        t = c.substr(0, h).split(" ")
                                }
                            }
                        } else {
                            if ("" == i[s])
                                continue;
                            var p = i[s].replace(/\s+/g, " ").split(" ");
                            (8 < p.length || p.length < 6) && (r = !1),
                            p.length < 9 && (n = !1);
                            p[0];
                            var m, u, f = p[1], g = p[2], v = p[3];
                            4 < p.length && p[4],
                            5 < p.length && (m = p[5]),
                            6 < p.length && p[6],
                            7 < p.length && p[7],
                            8 < p.length && (u = p[8]),
                            9 < p.length && p[9],
                            10 < p.length && p[10],
                            11 < p.length && p[11];
                            var b = v
                              , y = "51,51,51";
                            n ? y = u : r && ("+" == m && 0 < t.length ? y = t[0] : "-" == m && 1 < t.length ? y = t[1] : "." == m && 2 < t.length && (y = t[2]));
                            for (var C = "", _ = [], S = 0, w = g; S < w; ++S)
                                S < f ? (C += "-",
                                _.push("")) : (C += z.giSeq[A][S],
                                _.push("rgb(" + y + ")"));
                            z.showNewTrack(A, b, C, _, void 0, void 0, y),
                            z.setLogCmd("add track | chainid " + A + " | title " + b + " | text " + z.simplifyText(C) + " | type bed | color " + y, !0)
                        }
            }
            ,
            i.readAsText(t)
        } else
            alert("Please select a file...")
    }),
    $(document).on("click", "#" + z.pre + "addtrack_button4", function(e) {
        z.icn3d;
        e.stopImmediatePropagation(),
        dialog.dialog("close");
        var t = $("#" + z.pre + "track_chainid").val()
          , i = $("#" + z.pre + "track_title").val()
          , n = $("#" + z.pre + "track_text").val()
          , r = z.getFullText(n);
        z.showNewTrack(t, i, r.text, void 0, void 0, "custom", void 0, void 0, r.fromArray, r.toArray),
        z.setLogCmd("add track | chainid " + t + " | title " + i + " | text " + n + " | type custom", !0)
    }),
    $(document).on("click", "#" + z.pre + "addtrack_button5", function(e) {
        var t = z.icn3d;
        e.stopImmediatePropagation(),
        dialog.dialog("close");
        for (var i = $("#" + z.pre + "track_chainid").val(), n = $("#" + z.pre + "track_selection").val(), r = "", s = t.intHash(t.hAtoms, t.chains[i]), o = t.getResiduesFromCalphaAtoms(s), a = [], l = 0, d = z.giSeq[i].length; l < d; ++l) {
            var c = z.giSeq[i][l]
              , h = c;
            1 < c.length && (h = c[0]);
            var p = l >= z.matchedPos[i] && l - z.matchedPos[i] < t.chainsSeq[i].length ? t.chainsSeq[i][l - z.matchedPos[i]].resi : z.baseResi[i] + 1 + l;
            if (o.hasOwnProperty(i + "_" + p)) {
                var m = t.getFirstCalphaAtomObj(t.residues[i + "_" + p])
                  , u = void 0 === m.color || "FFFFFF" === m.color.getHexString().toUpperCase() ? "DDDDDD" : m.color.getHexString()
                  , f = void 0 !== m.color ? u : "CCCCCC";
                r += h,
                a.push("#" + f)
            } else
                r += "-",
                a.push("")
        }
        z.showNewTrack(i, n, r, a, void 0, "selection", void 0),
        z.setLogCmd("add track | chainid " + i + " | title " + n + " | text " + z.simplifyText(r) + " | type selection", !0)
    })
}
,
iCn3DUI.prototype.showNewTrack = function(e, t, i, n, r, s, o, a, l, d) {
    var c = this
      , h = c.icn3d
      , p = !1;
    "cannot be aligned" == i && (p = !0);
    var m = i.replace(/-/g, "").length;
    if (!a)
        if (i.length > c.giSeq[e].length)
            i = i.substr(0, c.giSeq[e].length);
        else if (i.length < c.giSeq[e].length && !p) {
            for (var u = "", f = 0, g = c.giSeq[e].length - i.length; f < g; ++f)
                u += "-";
            i += u
        }
    var v = t.replace(/\s/g, "_").replace(/\./g, "dot").replace(/\W/g, "");
    20 < v.length && (v = v.substr(0, 20));
    var b = c.RESIDUE_WIDTH * i.length + 200;
    $("#" + c.pre + "dt_custom_" + e).append("<div id='" + c.pre + "dt_custom_" + e + "_" + v + "'></div>"),
    $("#" + c.pre + "dt_custom_" + e + "_" + v).width(b),
    $("#" + c.pre + "ov_custom_" + e).append("<div id='" + c.pre + "ov_custom_" + e + "_" + v + "'></div>"),
    $("#" + c.pre + "ov_custom_" + e + "_" + v).width(b),
    $("#" + c.pre + "tt_custom_" + e).append("<div id='" + c.pre + "tt_custom_" + e + "_" + v + "'></div>"),
    $("#" + c.pre + "tt_custom_" + e + "_" + v).width(b);
    var y = '<div id="' + c.pre + 'giseq_sequence" class="icn3d-dl_sequence">'
      , C = y
      , _ = y
      , S = parseInt(10 * Math.random())
      , w = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" custom="' + (S + 1).toString() + '" from="' + l + '" to="' + d + '" shorttitle="' + v + '" index="' + S + '" setname="' + e + "_custom_" + (S + 1).toString() + '" anno="sequence" chain="' + e + '" title="' + t + '">' + v + " </div>"
      , A = '<span class="icn3d-residueNum" title="residue count">' + m.toString() + " Pos</span>";
    _ += w + A + "<br>";
    var x = '<span class="icn3d-seqLine">';
    y += w + A + x,
    C += w + A + x;
    var k = e.indexOf("_")
      , D = "cst" + e.substr(k + 1)
      , O = 0
      , R = 0
      , T = (void 0 === s || "seq" === s || "custom" === s) && -1 == i.indexOf("cannot-be-aligned") && -1 == i.indexOf("cannot be aligned")
      , E = "identity" === s && -1 == i.indexOf("cannot-be-aligned") && -1 == i.indexOf("cannot be aligned")
      , I = {}
      , H = 0
      , L = 1;
    w = "";
    for (f = 0,
    g = i.length; f < g; ++f) {
        var P = f - H;
        a ? c.targetGapHash.hasOwnProperty(P) && !I.hasOwnProperty(P) && (H += c.targetGapHash[P].to - c.targetGapHash[P].from + 1,
        I[P] = 1) : y += c.insertGap(e, f, "-");
        var F = i.charAt(f);
        if (" " != F && "-" != F) {
            var M, N = h.chainsSeq[e][P] ? h.chainsSeq[e][P].name : " ", z = c.getColorhexFromBlosum62(F, N), q = F == N ? "FF0000" : "0000FF", j = L;
            void 0 !== r && (j = r[f] + 1),
            M = void 0 !== n && "" != n[f] ? 'style="color:' + n[f] + '"' : o ? 'style="color:rgb(' + o + ')"' : T ? 'style="color:#' + z + '"' : E ? 'style="color:#' + q + '"' : "",
            y += '<span id="' + D + "_" + c.pre + e + "_" + j + '" title="' + F + j + '" class="icn3d-residue" ' + M + ">" + F + "</span>",
            w += c.insertGapOverview(e, f),
            (Y = c.cfg.blast_rep_id == e ? Math.round(c.seqAnnWidth * f / (c.maxAnnoLength + c.nTotalGap) - O - R) : Math.round(c.seqAnnWidth * f / c.maxAnnoLength - O - R)) < 0 && (Y = 0),
            w += '<div style="display:inline-block; width:' + Y + 'px;">&nbsp;</div>',
            w += '<div style="display:inline-block; background-color:' + (M = void 0 !== n && "" != n[f] ? n[f] : o ? "rgb(" + o + ")" : T ? "#" + z : "#333") + '; width:1px;" title="' + F + (f + 1).toString() + '">&nbsp;</div>',
            O += Y,
            R += 1,
            ++L
        } else
            y += p ? "<span>" + F + "</span>" : "<span>-</span>"
    }
    if (void 0 !== l) {
        w = "";
        var U = []
          , B = [];
        for (f = 0,
        g = l.length; f < g; ++f) {
            U.push(l[f]);
            for (var G = l[f]; G <= d[f]; ++G)
                void 0 !== c.targetGapHash && c.targetGapHash.hasOwnProperty(G) && (B.push(G - 1),
                U.push(G));
            B.push(d[f])
        }
        for (var f in c.nTotalGap = 0,
        c.targetGapHash)
            c.nTotalGap += c.targetGapHash[f].to - c.targetGapHash[f].from + 1;
        var V = h.getFirstCalphaAtomObj(h.chains[e])
          , W = void 0 === V.color || "FFFFFF" === V.color.getHexString() ? "DDDDDD" : V.color.getHexString();
        for (o = void 0 !== V.color ? W : "CCCCCC",
        f = 0,
        g = U.length; f < g; ++f) {
            var Y;
            w += c.insertGapOverview(e, U[f]),
            w += '<div style="display:inline-block; width:' + (Y = 0 == f ? Math.round(c.seqAnnWidth * (U[f] - c.baseResi[e] - 1) / (c.maxAnnoLength + c.nTotalGap)) : Math.round(c.seqAnnWidth * (U[f] - B[f - 1] - 1) / (c.maxAnnoLength + c.nTotalGap))) + 'px;">&nbsp;</div>',
            w += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + o + "; width:" + Math.round(c.seqAnnWidth * (B[f] - U[f] + 1) / (c.maxAnnoLength + c.nTotalGap)) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" custom="' + (S + 1).toString() + '" from="' + U + '" to="' + B + '" shorttitle="' + v + '" index="' + S + '" setname="' + e + "_custom_" + (S + 1).toString() + '" id="' + e + "_custom_" + S + '" anno="sequence" chain="' + e + '" title="' + t + '">' + t + "</div>"
        }
    }
    x = '<span class="icn3d-residueNum" title="residue count">' + m.toString() + " Pos</span>",
    x += "</span>",
    x += "<br>",
    y += x += "</div>",
    C += w + x,
    _ += "</div>",
    $("#" + c.pre + "dt_custom_" + e + "_" + v).html(y),
    $("#" + c.pre + "ov_custom_" + e + "_" + v).html(C),
    $("#" + c.pre + "tt_custom_" + e + "_" + v).html(_)
}
,
iCn3DUI.prototype.checkGiSeq = function(e, t, i, n, r, s, o) {
    var a = this;
    a.icn3d;
    if (20 < o)
        return !1;
    if (void 0 !== a.giSeq && void 0 !== a.giSeq[e]) {
        var l = a.getFullText(i);
        return i = l.text,
        a.showNewTrack(e, t, i, void 0, void 0, n, r, s),
        !1
    }
    setTimeout(function() {
        a.checkGiSeq(e, t, i, n, r, s, o + 1)
    }, 100)
}
,
iCn3DUI.prototype.getFullText = function(e) {
    this.icn3d;
    for (var t = "", i = [], n = [], r = e.split(","), s = -1, o = 0, a = r.length; o < a; ++o) {
        var l = r[o].trim();
        if (0 != l.length) {
            var d = l.split(" ");
            if (2 === d.length) {
                var c, h, p = d[1], m = d[0].split("-");
                if (2 == m.length)
                    c = m[0] - 1,
                    h = m[1] - 1;
                else {
                    if (1 != m.length)
                        continue;
                    h = c = m[0] - 1
                }
                i.push(c),
                n.push(h);
                for (var u = 0; u < c - s - 1; ++u)
                    t += "-";
                var f = h - c + 1;
                p.length > f ? t += p.substr(0, f) : t += p;
                for (u = 0; u < f - p.length; ++u)
                    t += "-";
                s = h
            }
        }
    }
    return {
        text: t,
        fromArray: i,
        toArray: n
    }
}
,
iCn3DUI.prototype.clickShow_selected = function() {
    var t = this;
    t.icn3d;
    $("#" + t.pre + "show_selected").add("#" + t.pre + "mn2_show_selected").click(function(e) {
        t.icn3d;
        t.showSelection(),
        t.setLogCmd("show selection", !0)
    })
}
,
iCn3DUI.prototype.clickHide_selected = function() {
    var t = this;
    t.icn3d;
    $("#" + t.pre + "mn2_hide_selected").click(function(e) {
        t.icn3d;
        t.hideSelection(),
        t.setLogCmd("hide selection", !0)
    })
}
,
iCn3DUI.prototype.showSelection = function() {
    var e = this
      , t = e.icn3d;
    t.dAtoms = {},
    0 == Object.keys(t.hAtoms).length && e.selectAll_base(),
    t.dAtoms = t.cloneHash(t.hAtoms);
    var i = t.centerAtoms(t.hash2Atoms(t.dAtoms));
    t.maxD = i.maxD,
    t.maxD < 5 && (t.maxD = 5),
    t.opts.rotationcenter = "display center",
    e.saveSelectionIfSelected(),
    t.draw(),
    e.update2DdgmContent(),
    e.updateHl2D(),
    e.showAnnoSelectedChains(),
    void 0 !== e.graphStr && (e.graphStr = e.getGraphDataForDisplayed()),
    e.bGraph && e.drawGraph(e.graphStr),
    e.bLinegraph && e.drawLineGraph(e.graphStr),
    e.bScatterplot && e.drawLineGraph(e.graphStr, !0)
}
,
iCn3DUI.prototype.getGraphDataForDisplayed = function() {
    for (var e = this.icn3d, t = JSON.parse(this.graphStr), i = e.getResiduesFromAtoms(e.dAtoms), n = [], r = [], s = {}, o = 0, a = t.nodes.length; o < a; ++o) {
        var l = t.nodes[o]
          , d = l.r.substr(4);
        i.hasOwnProperty(d) && (n.push(l),
        s[l.id] = 1)
    }
    for (o = 0,
    a = t.links.length; o < a; ++o) {
        var c = t.links[o];
        s.hasOwnProperty(c.source) && s.hasOwnProperty(c.target) && r.push(c)
    }
    return t.nodes = n,
    t.links = r,
    this.graphStr = JSON.stringify(t),
    this.graphStr
}
,
iCn3DUI.prototype.hideSelection = function() {
    var e = this.icn3d;
    e.dAtoms = e.exclHash(e.dAtoms, e.hAtoms),
    e.hAtoms = e.cloneHash(e.dAtoms);
    var t = e.centerAtoms(e.hash2Atoms(e.dAtoms));
    e.maxD = t.maxD,
    e.maxD < 5 && (e.maxD = 5),
    e.opts.rotationcenter = "display center",
    this.saveSelectionIfSelected(),
    e.draw(),
    this.update2DdgmContent(),
    this.updateHl2D(),
    this.showAnnoSelectedChains()
}
,
iCn3DUI.prototype.clickModeswitch = function() {
    var t = this;
    t.icn3d;
    $("#" + t.pre + "modeswitch").click(function(e) {
        void 0 !== $("#" + t.pre + "modeswitch")[0] && $("#" + t.pre + "modeswitch")[0].checked ? t.setModeAndDisplay("selection") : t.setModeAndDisplay("all")
    }),
    $("#" + t.pre + "mn6_modeall").click(function(e) {
        t.setModeAndDisplay("all")
    }),
    $("#" + t.pre + "mn6_modeselection").click(function(e) {
        t.setModeAndDisplay("selection")
    })
}
,
iCn3DUI.prototype.selectAll_base = function() {
    var e = this.icn3d;
    for (var t in e.hAtoms = {},
    e.dAtoms = {},
    e.chains)
        e.hAtoms = e.unionHash(e.hAtoms, e.chains[t]),
        e.dAtoms = e.unionHash(e.dAtoms, e.chains[t])
}
,
iCn3DUI.prototype.selectAll = function() {
    var e = this
      , t = e.icn3d;
    e.selectAll_base(),
    t.removeHlObjects(),
    e.removeHl2D(),
    e.removeHlMenus(),
    e.bSelectResidue = !1,
    e.bSelectAlignResidue = !1,
    e.removeSeqResidueBkgd(),
    e.update2DdgmContent(),
    $("#" + e.pre + "dl_annotations > .icn3d-annotation").show(),
    e.setMode("all")
}
,
iCn3DUI.prototype.setModeAndDisplay = function(e) {
    var t = this.icn3d;
    "all" === e ? (this.setMode("all"),
    t.prevHighlightAtoms = t.cloneHash(t.hAtoms),
    this.setLogCmd("set mode all", !0),
    this.selectAll(),
    t.draw()) : (this.setMode("selection"),
    void 0 !== t.prevHighlightAtoms ? t.hAtoms = t.cloneHash(t.prevHighlightAtoms) : this.selectAll(),
    this.setLogCmd("set mode selection", !0),
    this.updateHlAll())
}
,
iCn3DUI.prototype.setMode = function(e) {
    var t = this;
    t.icn3d;
    "all" === e ? ($("#" + t.pre + "modeall").show(),
    $("#" + t.pre + "modeselection").hide(),
    void 0 !== $("#" + t.pre + "modeswitch")[0] && ($("#" + t.pre + "modeswitch")[0].checked = !1),
    $("#" + t.pre + "style").hasClass("icn3d-modeselection") && $("#" + t.pre + "style").removeClass("icn3d-modeselection"),
    $("#" + t.pre + "color").hasClass("icn3d-modeselection") && $("#" + t.pre + "color").removeClass("icn3d-modeselection")) : ($("#" + t.pre + "modeall").hide(),
    $("#" + t.pre + "modeselection").show(),
    void 0 !== $("#" + t.pre + "modeswitch")[0] && ($("#" + t.pre + "modeswitch")[0].checked = !0),
    $("#" + t.pre + "style").hasClass("icn3d-modeselection") || $("#" + t.pre + "style").addClass("icn3d-modeselection"),
    $("#" + t.pre + "color").hasClass("icn3d-modeselection") || $("#" + t.pre + "color").addClass("icn3d-modeselection"))
}
,
iCn3DUI.prototype.saveSelection = function(e, t) {
    var i = this
      , n = i.icn3d;
    if (i.selectedResidues = {},
    i.selectedResidues = n.getResiduesFromCalphaAtoms(n.hAtoms),
    0 < Object.keys(i.selectedResidues).length)
        if (1 == n.pk) {
            i.selectResidueList(n.hAtoms, e, t, void 0, void 0, !0),
            i.updateSelectionNameDesc(),
            i.setLogCmd("select " + i.atoms2spec(n.hAtoms) + " | name " + e, !0)
        } else
            i.selectResidueList(i.selectedResidues, e, t),
            i.updateSelectionNameDesc(),
            i.setLogCmd("select " + i.residueids2spec(Object.keys(i.selectedResidues)) + " | name " + e, !0)
}
,
iCn3DUI.prototype.removeSelection = function() {
    var e = this.icn3d;
    this.bAnnotations || this.removeSeqChainBkgd(),
    e.bCtrl || e.bShift || (this.removeSeqResidueBkgd(),
    this.removeSeqChainBkgd()),
    this.selectedResidues = {},
    this.bSelectResidue = !1,
    e.hAtoms = {},
    e.removeHlObjects(),
    this.removeHl2D()
}
,
iCn3DUI.prototype.updateSelectionNameDesc = function() {
    var e = this.icn3d
      , t = Object.keys(e.defNames2Residues).length + Object.keys(e.defNames2Atoms).length;
    $("#" + this.pre + "seq_command_name").val("seq_" + t),
    $("#" + this.pre + "seq_command_name2").val("seq_" + t),
    $("#" + this.pre + "alignseq_command_name").val("alseq_" + t)
}
,
iCn3DUI.prototype.selectAChain = function(e, t, i, n) {
    var r = this.icn3d;
    t = t.replace(/\s/g, "");
    var s = void 0 !== i || i ? "select alignChain " + e : "select chain " + e;
    void 0 !== n && n ? (r.hAtoms = r.unionHash(r.hAtoms, r.chains[e]),
    void 0 === this.menuHlHash && (this.menuHlHash = {})) : (r.hAtoms = {},
    this.menuHlHash = {}),
    this.menuHlHash[e] = 1;
    var o = i ? r.alnChainsSeq[e] : r.chainsSeq[e];
    chnsSeqLen = void 0 === o ? 0 : o.length;
    for (var a = {}, l = 0, d = chnsSeqLen; l < d; ++l) {
        var c = o[l]
          , h = e + "_" + c.resi
          , p = c.name;
        if ("" !== p && "-" !== p)
            for (var m in a[h] = 1,
            r.residues[h])
                r.hAtoms[m] = 1
    }
    void 0 !== r.defNames2Atoms && r.defNames2Atoms.hasOwnProperty(t) || void 0 !== r.defNames2Residues && r.defNames2Residues.hasOwnProperty(t) || this.addCustomSelection(Object.keys(a), t, t, s, !0);
    i ? this.updateHlAll(void 0, void 0, n, !0) : this.updateHlAll(Object.keys(this.menuHlHash), void 0, n, !0)
}
,
iCn3DUI.prototype.selectResidueList = function(e, t, i, n, r, s) {
    var o = this
      , a = o.icn3d;
    if (void 0 !== e && 0 < Object.keys(e).length) {
        if (void 0 !== n && n ? void 0 === o.menuHlHash && (o.menuHlHash = {}) : (a.hAtoms = {},
        o.menuHlHash = {}),
        s)
            for (var l in e)
                a.hAtoms[l] = 1;
        else
            for (var l in e)
                for (var d in a.residues[l])
                    a.hAtoms[d] = 1;
        var c, h;
        t = t.replace(/\s/g, ""),
        o.menuHlHash[t] = 1,
        h = s ? (c = "select " + o.atoms2spec(a.hAtoms),
        !1) : (c = "select " + o.residueids2spec(Object.keys(e)),
        !0);
        var p = Object.keys(e);
        o.addCustomSelection(p, t, i, c, h),
        void 0 !== r && !r || o.updateHlAll(Object.keys(o.menuHlHash), void 0, n)
    }
}
,
iCn3DUI.prototype.addCustomSelection = function(e, t, i, n, r) {
    var s = this.icn3d;
    r ? s.defNames2Residues[t] = e : s.defNames2Atoms[t] = e,
    s.defNames2Command[t] = n,
    s.defNames2Descr[t] = i,
    this.updateHlMenus([t])
}
,
iCn3DUI.prototype.selectMainChains = function() {
    var e = this.icn3d
      , t = e.cloneHash(e.hAtoms);
    e.hAtoms = e.selectMainChainSubset(t),
    this.showHighlight()
}
,
iCn3DUI.prototype.selectSideChains = function() {
    var e = this.icn3d
      , t = e.cloneHash(e.hAtoms)
      , i = ["C1'", "C1*", "C2'", "C2*", "C3'", "C3*", "C4'", "C4*", "C5'", "C5*", "O3'", "O3*", "O4'", "O4*", "O5'", "O5*", "P", "OP1", "O1P", "OP2", "O2P"];
    for (var n in e.hAtoms = {},
    t)
        (e.proteins.hasOwnProperty(n) && "N" !== e.atoms[n].name && "C" !== e.atoms[n].name && "O" !== e.atoms[n].name && ("CA" !== e.atoms[n].name || "C" !== e.atoms[n].elem) || e.nucleotides.hasOwnProperty(n) && -1 === i.indexOf(e.atoms[n].name)) && (e.hAtoms[n] = 1);
    this.showHighlight()
}
,
iCn3DUI.prototype.selectMainSideChains = function() {
    var e = this.icn3d
      , t = e.getResiduesFromAtoms(e.hAtoms);
    for (var i in e.hAtoms = {},
    t)
        e.hAtoms = e.unionHash(e.hAtoms, e.residues[i]),
        e.dAtoms = e.unionHash(e.dAtoms, e.residues[i]);
    e.draw(),
    this.showHighlight()
}
,
iCn3DUI.prototype.commandSelect = function(e) {
    this.icn3d;
    var t = $("#" + this.pre + "command" + e).val()
      , i = $("#" + this.pre + "command_name" + e).val().replace(/;/g, "_").replace(/\s+/g, "_");
    t && (this.selectByCommand(t, i, i),
    this.setLogCmd("select " + t + " | name " + i, !0))
}
,
iCn3DUI.prototype.clickCommand_apply = function() {
    var t = this;
    t.icn3d;
    $("#" + t.pre + "command_apply").click(function(e) {
        t.icn3d;
        e.preventDefault(),
        t.commandSelect("")
    }),
    $("#" + t.pre + "command_apply2").click(function(e) {
        t.icn3d;
        e.preventDefault(),
        t.commandSelect("2")
    })
}
,
iCn3DUI.prototype.selectCombinedSets = function(e, t) {
    this.icn3d;
    for (var i = e.split(" "), n = [], r = [], s = [], o = "or", a = 0, l = i.length; a < l; ++a)
        "or" !== i[a] && "and" !== i[a] && "not" !== i[a] ? "or" === o ? n.push(i[a]) : "and" === o ? r.push(i[a]) : "not" === o && s.push(i[a]) : o = i[a];
    null !== i && this.combineSets(n, r, s, t)
}
,
iCn3DUI.prototype.selectByCommand = function(e, t, i) {
    var n = this.icn3d;
    if (0 === e.indexOf("saved atoms")) {
        var r = 12
          , s = e.substr(r);
        this.selectCombinedSets(s, t)
    } else {
        for (var o = e.replace(/ AND /g, " and ").replace(/ OR /g, " or ").replace(/ or and /g, " and ").replace(/ and /g, " or and ").replace(/ or not /g, " not ").replace(/ not /g, " or not "), a = ("select" === o.trim().substr(0, 6) ? o.trim().substr(7) : o.trim()).split(" or "), l = {}, d = 0, c = a.length; d < c; ++d) {
            var h = a[d].trim().replace(/\s+/g, " ");
            r = h.indexOf(" ");
            n.hAtoms = {},
            l = "and" === h.substr(0, r).toLowerCase() ? (this.applyCommand("select " + h.substr(r + 1)),
            n.intHash(l, n.hAtoms)) : "not" === h.substr(0, r).toLowerCase() ? (this.applyCommand("select " + h.substr(r + 1)),
            n.exclHash(l, n.hAtoms)) : (this.applyCommand("select " + h),
            n.unionHash(l, n.hAtoms))
        }
        n.hAtoms = n.cloneHash(l);
        var p = Object.keys(n.hAtoms);
        if ("" !== t) {
            this.addCustomSelection(p, t, i, e, !1);
            var m = [t];
            this.changeCustomAtoms(m)
        }
    }
}
,
iCn3DUI.prototype.selectBySpec = function(e, t, i, n) {
    var r = this.icn3d;
    e = "select" === e.trim().substr(0, 6) ? e.trim().substr(7) : e.trim(),
    r.hAtoms = {};
    for (var s, o = e.replace(/\s+/g, " ").replace(/ AND /g, " and ").split(" and "), a = {}, l = {}, d = !0, c = 0, h = o.length; c < h; ++c) {
        var p, m, u, f, g = o[c].indexOf("$"), v = o[c].indexOf("."), b = o[c].indexOf(":"), y = o[c].indexOf("@"), C = o[c];
        -1 === y ? f = ["*"] : (f = C.substr(y + 1).split(","),
        C = C.substr(0, y)),
        -1 === b ? u = "*" : (u = C.substr(b + 1),
        C = C.substr(0, b)),
        -1 === v ? m = "*" : (m = C.substr(v + 1),
        C = C.substr(0, v)),
        -1 === g ? p = "*" : (p = C.substr(g + 1).toUpperCase(),
        C = C.substr(0, g)),
        1 == f.length && "*" !== f[0] && (d = !1);
        var _, S, w, A, x = [], k = [];
        if (x = "*" === p ? Object.keys(r.structures) : p.split(","),
        "*" === m)
            for (var D = Object.keys(r.chains), O = 0, R = D.length; O < R; ++O) {
                _ = (S = D[O]).substr(0, S.indexOf("_")),
                -1 !== x.map(function(e) {
                    return e.toLowerCase()
                }).indexOf(_.toLowerCase()) && k.push(S)
            }
        else
            for (O = 0,
            R = x.length; O < R; ++O) {
                _ = x[O];
                var T = m.split(",");
                for (var E in T)
                    k.push(_ + "_" + T[E])
            }
        var I = u.split(",");
        for (O = 0,
        R = I.length; O < R; ++O) {
            var H = !1
              , L = I[O].indexOf("-")
              , $ = void 0
              , P = void 0
              , F = !1
              , M = !1
              , N = !1;
            if (-1 !== L)
                w = I[O].substr(0, L),
                A = I[O].substr(L + 1),
                H = !0;
            else if ("" === I[O] || isNaN(I[O])) {
                if ("*" === I[O])
                    F = !0;
                else if ("3" === I[O][0] && (I[O].length - 1) % 3 == 0) {
                    P = I[O].toUpperCase().substr(1),
                    N = !0
                } else if ("proteins" !== I[O] && "nucleotides" !== I[O] && "chemicals" !== I[O] && "ions" !== I[O] && "water" !== I[O]) {
                    $ = I[O].toUpperCase(),
                    M = !0
                }
            } else
                A = w = I[O],
                H = !0;
            for (var z = 0, q = k.length; z < q; ++z)
                if (S = k[z],
                H)
                    for (E = parseInt(w); E <= parseInt(A); ++E) {
                        var j = S + "_" + E;
                        for (var U in 0 === c ? a[j] = 1 : a.hasOwnProperty(j) || delete a[j],
                        r.residues[j])
                            for (var B = 0, G = f.length; B < G; ++B) {
                                "*" !== (le = f[B]) && le !== r.atoms[U].name || (0 === c ? l[U] = 1 : l.hasOwnProperty(U) || delete l[U])
                            }
                    }
                else if (S in r.chains) {
                    var V = r.chains[S];
                    for (var U in V) {
                        r.atoms[U].resn.substr(0, 3).toUpperCase();
                        if (F || "proteins" === I[O] && U in r.proteins || "nucleotides" === I[O] && U in r.nucleotides || "chemicals" === I[O] && U in r.chemicals || "ions" === I[O] && U in r.ions || "water" === I[O] && U in r.water) {
                            if (0 === c)
                                a[S + "_" + r.atoms[U].resi] = 1;
                            else {
                                var W = S + "_" + r.atoms[U].resi;
                                a.hasOwnProperty(W) || delete a[W]
                            }
                            for (B = 0,
                            G = f.length; B < G; ++B) {
                                "*" !== (le = f[B]) && le !== r.atoms[U].name || (0 === c ? l[U] = 1 : l.hasOwnProperty(U) || delete l[U])
                            }
                        }
                    }
                    if (M || N) {
                        B = M ? 1 : 3;
                        for (var Y = M ? $ : P, X = "", Q = [], Z = 0, K = r.chainsSeq[S].length; Z < K; ++Z) {
                            if (M)
                                X += 1 == r.chainsSeq[S][Z].name.length ? r.chainsSeq[S][Z].name : " ";
                            else if (N) {
                                var J = r.residueAbbr2Name(r.chainsSeq[S][Z].name);
                                X += 3 == J.length ? J : "   "
                            }
                            Q.push(r.chainsSeq[S][Z].resi)
                        }
                        X = X.toUpperCase();
                        for (var ee = Y.replace(/x/gi, "."), te = [], ie = new RegExp(ee,"i"), ne = X, re = (se = ne.search(ie)) / B; -1 !== se; )
                            te.push(re),
                            re += (se = (ne = ne.substr(se + B)).search(ie)) / B + 1;
                        for (Z = 0,
                        K = te.length; Z < K; ++Z)
                            for (var se = te[Z], oe = 0, ae = Y.length / B; oe < ae; oe += B) {
                                j = S + "_" + Q[oe / B + se];
                                for (var U in 0 === c ? a[j] = 1 : a.hasOwnProperty(j) || delete a[j],
                                r.residues[j])
                                    for (B = 0,
                                    G = f.length; B < G; ++B) {
                                        var le;
                                        "*" !== (le = f[B]) && le !== r.atoms[U].name || (0 === c ? l[U] = 1 : l.hasOwnProperty(U) || delete l[U])
                                    }
                            }
                    }
                }
        }
    }
    if (r.hAtoms = r.cloneHash(l),
    0 == Object.keys(r.hAtoms).length && console.log("No residues were selected. Please try another search."),
    void 0 !== n && !n || this.updateHlAll(),
    s = d ? Object.keys(a) : Object.keys(l),
    "" != t) {
        this.addCustomSelection(s, t, i, e, d);
        var de = [t];
        this.changeCustomAtoms(de)
    }
}
,
iCn3DUI.prototype.showSets = function() {
    var e = this
      , t = e.icn3d;
    e.openDlg("dl_definedsets", "Select sets"),
    $("#" + e.pre + "dl_setsmenu").show(),
    $("#" + e.pre + "dl_setoperations").show(),
    $("#" + e.pre + "dl_command").hide(),
    $("#" + e.pre + "atomsCustom").resizable();
    var i = t.cloneHash(t.hAtoms)
      , n = t.cloneHash(t.dAtoms);
    void 0 !== e.bSetChainsAdvancedMenu && e.bSetChainsAdvancedMenu || (e.setPredefinedInMenu(),
    e.bSetChainsAdvancedMenu = !0),
    t.hAtoms = t.cloneHash(i),
    t.dAtoms = t.cloneHash(n),
    e.updateHlMenus()
}
,
iCn3DUI.prototype.clickCustomAtoms = function() {
    var i = this;
    i.icn3d;
    $("#" + i.pre + "atomsCustom").change(function(e) {
        i.icn3d;
        var t = $(this).val();
        if (null !== t) {
            i.changeCustomAtoms(t, !1),
            i.setLogCmd("select sets " + t.join(" " + i.setOperation + " "), !0),
            i.bSelectResidue = !1
        }
    }),
    $("#" + i.pre + "atomsCustom").focus(function(e) {
        i.icn3d;
        i.isMobile() && $("#" + i.pre + "atomsCustom").val("")
    })
}
,
iCn3DUI.prototype.deleteSelectedSets = function() {
    for (var e = this.icn3d, t = $("#" + this.pre + "atomsCustom").val(), i = 0; i < t.length; ++i) {
        var n = t[i];
        (void 0 !== e.defNames2Atoms && e.defNames2Atoms.hasOwnProperty(n) || void 0 !== e.defNames2Residues && e.defNames2Residues.hasOwnProperty(n)) && (void 0 !== e.defNames2Atoms && e.defNames2Atoms.hasOwnProperty(n) && delete e.defNames2Atoms[n],
        void 0 !== e.defNames2Residues && e.defNames2Residues.hasOwnProperty(n) && delete e.defNames2Residues[n])
    }
    this.updateHlMenus()
}
,
iCn3DUI.prototype.changeCustomAtoms = function(e, t) {
    var i = this
      , n = i.icn3d;
    n.hAtoms = {};
    for (var r = 0; r < e.length; ++r) {
        var s = e[r];
        if (void 0 !== n.defNames2Atoms && n.defNames2Atoms.hasOwnProperty(s) || void 0 !== n.defNames2Residues && n.defNames2Residues.hasOwnProperty(s)) {
            if (void 0 !== n.defNames2Atoms && n.defNames2Atoms.hasOwnProperty(s))
                for (var o = 0, a = (h = n.defNames2Atoms[s]).length; o < a; ++o)
                    n.hAtoms[h[o]] = 1;
            if (void 0 !== n.defNames2Residues && n.defNames2Residues.hasOwnProperty(s)) {
                var l = n.defNames2Residues[s]
                  , d = {};
                for (o = 0,
                a = l.length; o < a; ++o)
                    d = n.unionHash(d, n.residues[l[o]]);
                n.hAtoms = n.unionHash(n.hAtoms, d)
            }
        }
    }
    i.updateHlAll(e, t),
    i.showAnnoSelectedChains(),
    $("#" + i.pre + "command").val(""),
    $("#" + i.pre + "command_name").val("");
    r = 0;
    for (var c = e.length; r < c; ++r) {
        var h = n.defNames2Atoms[e[r]];
        n.defNames2Residues[e[r]],
        n.defNames2Descr[e[r]];
        if (0 === r)
            $("#" + i.pre + "command").val("saved atoms " + e[r]),
            $("#" + i.pre + "command_name").val(e[r]);
        else {
            var p = $("#" + i.pre + "command").val();
            $("#" + i.pre + "command").val(p + " " + i.setOperation + " " + e[r]),
            p = $("#" + i.pre + "command_name").val(),
            $("#" + i.pre + "command_name").val(p + " " + i.setOperation + " " + e[r])
        }
    }
}
,
iCn3DUI.prototype.setHAtomsFromSets = function(e, t) {
    for (var i = this.icn3d, n = 0; n < e.length; ++n) {
        var r = e[n];
        if (void 0 !== i.defNames2Atoms && i.defNames2Atoms.hasOwnProperty(r) || void 0 !== i.defNames2Residues && i.defNames2Residues.hasOwnProperty(r)) {
            if (void 0 !== i.defNames2Atoms && i.defNames2Atoms.hasOwnProperty(r)) {
                var s = i.defNames2Atoms[r];
                if ("or" === t)
                    for (var o = 0, a = s.length; o < a; ++o)
                        i.hAtoms[s[o]] = 1;
                else if ("and" === t) {
                    var l = {};
                    for (o = 0,
                    a = s.length; o < a; ++o)
                        l[s[o]] = 1;
                    i.hAtoms = i.intHash(i.hAtoms, l)
                } else if ("not" === t) {
                    for (l = {},
                    o = 0,
                    a = s.length; o < a; ++o)
                        l[s[o]] = 1;
                    i.hAtoms = i.exclHash(i.hAtoms, l)
                }
            }
            if (void 0 !== i.defNames2Residues && i.defNames2Residues.hasOwnProperty(r)) {
                var d = i.defNames2Residues[r];
                for (l = {},
                o = 0,
                a = d.length; o < a; ++o)
                    l = i.unionHash(l, i.residues[d[o]]);
                "or" === t ? i.hAtoms = i.unionHash(i.hAtoms, l) : "and" === t ? i.hAtoms = i.intHash(i.hAtoms, l) : "not" === t && (i.hAtoms = i.exclHash(i.hAtoms, l))
            }
        }
    }
}
,
iCn3DUI.prototype.updateAdvancedCommands = function(e, t) {
    this.icn3d;
    for (var i = " " + t + " ", n = 0, r = e.length; n < r; ++n)
        if (0 === n && "or" == t)
            $("#" + this.pre + "command").val("saved atoms " + e[n]),
            $("#" + this.pre + "command_name").val(e[n]);
        else {
            var s = $("#" + this.pre + "command").val();
            $("#" + this.pre + "command").val(s + i + e[n]),
            s = $("#" + this.pre + "command_name").val(),
            $("#" + this.pre + "command_name").val(s + i + e[n])
        }
}
,
iCn3DUI.prototype.combineSets = function(e, t, i, n) {
    var r = this
      , s = r.icn3d;
    if (s.hAtoms = {},
    r.setHAtomsFromSets(e, "or"),
    0 == Object.keys(s.hAtoms).length && (s.hAtoms = s.cloneHash(s.atoms)),
    r.setHAtomsFromSets(t, "and"),
    r.setHAtomsFromSets(i, "not"),
    s.bInitial || r.updateHlAll(),
    r.showAnnoSelectedChains(),
    $("#" + r.pre + "command").val(""),
    $("#" + r.pre + "command_name").val(""),
    r.updateAdvancedCommands(e, "or"),
    r.updateAdvancedCommands(t, "and"),
    r.updateAdvancedCommands(i, "not"),
    void 0 !== n) {
        var o = "select " + $("#" + r.pre + "command").val();
        $("#" + r.pre + "command_name").val(n),
        r.addCustomSelection(Object.keys(s.hAtoms), n, n, o, !1)
    }
}
,
iCn3DUI.prototype.setProtNuclLigInMenu = function() {
    var e = this.icn3d;
    if (0 < Object.keys(e.proteins).length && (e.defNames2Residues.proteins = Object.keys(e.getResiduesFromAtoms(e.proteins)),
    e.defNames2Descr.proteins = "proteins",
    e.defNames2Command.proteins = "select :proteins"),
    0 < Object.keys(e.nucleotides).length && (e.defNames2Residues.nucleotides = Object.keys(e.getResiduesFromAtoms(e.nucleotides)),
    e.defNames2Descr.nucleotides = "nucleotides",
    e.defNames2Command.nucleotides = "select :nucleotides"),
    0 < Object.keys(e.chemicals).length)
        if (e.bOpm) {
            var t = {}
              , i = {};
            for (var n in e.chemicals) {
                var r = e.atoms[n]
                  , s = r.structure + "_" + r.chain + "_" + r.resi;
                "DUM" === r.resn ? i[s] = 1 : t[s] = 1
            }
            0 < Object.keys(t).length && (e.defNames2Residues.chemicals = Object.keys(t),
            e.defNames2Descr.chemicals = "chemicals",
            e.defNames2Command.chemicals = "select :chemicals"),
            0 < Object.keys(i).length && (e.defNames2Residues.membrane = Object.keys(i),
            e.defNames2Descr.membrane = "membrane",
            e.defNames2Command.membrane = "select :membrane")
        } else
            e.defNames2Residues.chemicals = Object.keys(e.getResiduesFromAtoms(e.chemicals)),
            e.defNames2Descr.chemicals = "chemicals",
            e.defNames2Command.chemicals = "select :chemicals";
    0 < Object.keys(e.ions).length && (e.defNames2Residues.ions = Object.keys(e.getResiduesFromAtoms(e.ions)),
    e.defNames2Descr.ions = "ions",
    e.defNames2Command.ions = "select :ions"),
    0 < Object.keys(e.water).length && (e.defNames2Residues.water = Object.keys(e.getResiduesFromAtoms(e.water)),
    e.defNames2Descr.water = "water",
    e.defNames2Command.water = "select :water"),
    this.setTransmemInMenu(e.halfBilayerSize, -e.halfBilayerSize)
}
,
iCn3DUI.prototype.setTransmemInMenu = function(e, t, i) {
    var n = this.icn3d;
    if (n.bOpm) {
        var r = {}
          , s = {}
          , o = {};
        for (var a in n.atoms) {
            var l = n.atoms[a]
              , d = l.structure + "_" + l.chain + "_" + l.resi;
            l.coord.z > e ? s[d] = 1 : l.coord.z < t ? o[d] = 1 : "DUM" !== l.resn && (r[d] = 1)
        }
        var c = i ? "2" : "";
        0 < Object.keys(r).length && (n.defNames2Residues["transmembrane" + c] = Object.keys(r),
        n.defNames2Descr["transmembrane" + c] = "transmembrane" + c,
        n.defNames2Command["transmembrane" + c] = "select :transmembrane" + c),
        0 < Object.keys(s).length && (n.defNames2Residues["extracellular" + c] = Object.keys(s),
        n.defNames2Descr["extracellular" + c] = "extracellular" + c,
        n.defNames2Command["extracellular" + c] = "select :extracellular" + c),
        0 < Object.keys(o).length && (n.defNames2Residues["intracellular" + c] = Object.keys(o),
        n.defNames2Descr["intracellular" + c] = "intracellular" + c,
        n.defNames2Command["intracellular" + c] = "select :intracellular" + c)
    }
}
,
iCn3DUI.prototype.setChainsInMenu = function() {
    var e = this.icn3d;
    for (var t in e.chains)
        if (e.chainsSeq[t] && 1 < e.chainsSeq[t].length) {
            e.defNames2Residues[t] = Object.keys(e.getResiduesFromAtoms(e.chains[t]));
            var i = (e.defNames2Descr[t] = t).indexOf("_")
              , n = t.substr(0, i)
              , r = t.substr(i + 1);
            e.defNames2Command[t] = "select $" + n + "." + r
        }
    if (1 == Object.keys(e.structures)) {
        n = Object.keys(e.structures)[0];
        e.defNames2Residues[n] = Object.keys(e.residues),
        e.defNames2Descr[n] = n,
        e.defNames2Command[n] = "select $" + n
    } else {
        for (var s = Object.keys(e.residues), o = {}, a = 0, l = s.length; a < l; ++a) {
            var d = s[a];
            i = d.indexOf("_");
            void 0 === o[n = d.substr(0, i)] && (o[n] = []),
            o[n].push(d)
        }
        for (var n in o)
            e.defNames2Residues[n] = o[n],
            e.defNames2Descr[n] = n,
            e.defNames2Command[n] = "select $" + n
    }
}
,
iCn3DUI.prototype.loadScript = function(e, t) {
    var i = this
      , n = i.icn3d;
    i.bCommandLoad = !0,
    n.bRender = !1,
    n.bStopRotate = !0,
    e = t ? e.replace(/\+/g, " ") : e.replace(/\+/g, " ").replace(/;/g, "\n");
    var r = [];
    0 < n.commands.length && (r[0] = n.commands[0]);
    var s = e.trim().split("\n")
      , o = (n.commands = s)[0].indexOf("command=");
    if (t && -1 != o) {
        var a = s[0].substr(0, o - 1);
        n.commands.splice(0, 1, a)
    }
    i.STATENUMBER = n.commands.length,
    n.commands = r.concat(n.commands),
    i.STATENUMBER = n.commands.length,
    i.CURRENTNUMBER = 0,
    i.bReplay ? i.replayFirstStep(i.CURRENTNUMBER) : i.execCommands(i.CURRENTNUMBER, i.STATENUMBER - 1, i.STATENUMBER)
}
,
iCn3DUI.prototype.replayFirstStep = function(e) {
    var t = this.icn3d;
    t.reinitAfterLoad(),
    t.opts = t.cloneHash(this.opts),
    this.execCommandsBase(e, e, this.STATENUMBER);
    var i = t.commands[e].indexOf(" | ")
      , n = t.commands[e].substr(0, i)
      , r = 20 < n.length ? n.substr(0, 20) + "..." : n
      , s = this.getMenuFromCmd(r);
    $("#" + this.pre + "replay_cmd").html("Cmd: " + r),
    $("#" + this.pre + "replay_menu").html("Menu: " + s),
    this.bCommandLoad = !1,
    this.hideLoading(),
    t.bRender = !0,
    t.draw()
}
,
iCn3DUI.prototype.loadSelection = function(e) {
    this.icn3d;
    for (var t = e.trim().split("\n"), i = 0, n = t.length; i < n; ++i) {
        var r = t[i].split("\t")
          , s = r[0]
          , o = r[1]
          , a = o.indexOf(" ");
        this.selectByCommand(o.substr(a + 1), s, s, !1)
    }
}
,
iCn3DUI.prototype.execCommands = function(e, t, i) {
    var n = this.icn3d;
    n.bRender = !1,
    n.reinitAfterLoad(),
    n.opts = n.cloneHash(this.opts),
    this.execCommandsBase(e, t, i)
}
,
iCn3DUI.prototype.execCommandsBase = function(e, t, i, n) {
    var r, s = this, o = s.icn3d;
    for (r = e; r <= t; ++r) {
        n = r === i - 1;
        if (-1 !== o.commands[r].indexOf("load"))
            return 0 === t && e === t ? void (s.bNotLoadStructure ? (o.hAtoms = o.cloneHash(o.atoms),
            1 === o.commands.length && (s.bAddCommands = !0),
            n && s.renderFinalStep(i)) : $.when(s.applyCommandLoad(o.commands[r])).then(function() {
                1 === o.commands.length && (s.bAddCommands = !0),
                n && s.renderFinalStep(i)
            })) : void (s.bNotLoadStructure ? (o.hAtoms = o.cloneHash(o.atoms),
            s.backForward && s.renderFinalStep(1),
            s.execCommandsBase(r + 1, t, i)) : $.when(s.applyCommandLoad(o.commands[r])).then(function() {
                s.backForward && s.renderFinalStep(1),
                s.execCommandsBase(r + 1, t, i)
            }));
        if (0 == o.commands[r].trim().indexOf("set map") && -1 == o.commands[r].trim().indexOf("set map wireframe")) {
            if (3 == (h = (l = o.commands[r].split("|||"))[0].trim().split(" | ")[0].substr(8).split(" ")).length && "sigma" == h[1]) {
                h[2];
                var a = h[0];
                return void (("2fofc" != a || void 0 !== s.bAjax2fofc && s.bAjax2fofc) && ("fofc" != a || void 0 !== s.bAjaxfofc && s.bAjaxfofc) ? (s.applyCommandMap(l[0].trim()),
                s.execCommandsBase(r + 1, t, i)) : $.when(s.applyCommandMap(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }))
            }
        } else if (0 == o.commands[r].trim().indexOf("set emmap") && -1 == o.commands[r].trim().indexOf("set emmap wireframe")) {
            if (2 == (h = (l = o.commands[r].split("|||"))[0].trim().substr(10).split(" ")).length && "percentage" == h[0]) {
                h[1];
                return void (void 0 !== s.bAjaxEm && s.bAjaxEm ? (s.applyCommandEmmap(l[0].trim()),
                s.execCommandsBase(r + 1, t, i)) : $.when(s.applyCommandEmmap(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }))
            }
        } else {
            if (0 == o.commands[r].trim().indexOf("set phi")) {
                var l = o.commands[r].split("|||");
                return void $.when(s.applyCommandPhi(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                })
            }
            if (0 == o.commands[r].trim().indexOf("set delphi")) {
                l = o.commands[r].split("|||");
                return void $.when(s.applyCommandDelphi(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                })
            }
            if (0 == o.commands[r].trim().indexOf("view annotations")) {
                l = o.commands[r].split("|||");
                return void (0 < Object.keys(o.proteins).length && (void 0 === s.bAjaxCddSite || !s.bAjaxCddSite) ? $.when(s.applyCommandAnnotationsAndCddSite(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }) : (0 < Object.keys(o.proteins).length && s.applyCommandAnnotationsAndCddSiteBase(l[0].trim()),
                s.execCommandsBase(r + 1, t, i)))
            }
            if (0 == o.commands[r].trim().indexOf("set annotation clinvar")) {
                l = o.commands[r].split("|||");
                return void (0 < Object.keys(o.proteins).length && (void 0 === s.bAjaxClinvar || !s.bAjaxClinvar) ? $.when(s.applyCommandClinvar(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }) : (0 < Object.keys(o.proteins).length && s.applyCommandClinvar(l[0].trim()),
                s.execCommandsBase(r + 1, t, i)))
            }
            if (0 == o.commands[r].trim().indexOf("set annotation snp")) {
                l = o.commands[r].split("|||");
                return void (0 < Object.keys(o.proteins).length && (void 0 === s.bAjaxSnp || !s.bAjaxSnp) ? $.when(s.applyCommandSnp(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }) : (0 < Object.keys(o.proteins).length && s.applyCommandSnp(l[0].trim()),
                s.execCommandsBase(r + 1, t, i)))
            }
            if (0 == o.commands[r].trim().indexOf("set annotation 3ddomain")) {
                l = o.commands[r].split("|||");
                return void (0 < Object.keys(o.proteins).length && void 0 === s.mmdb_data && (void 0 === s.bAjax3ddomain || !s.bAjax3ddomain) ? $.when(s.applyCommand3ddomain(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }) : (0 < Object.keys(o.proteins).length && s.applyCommand3ddomain(l[0].trim()),
                s.execCommandsBase(r + 1, t, i)))
            }
            if (0 == o.commands[r].trim().indexOf("set annotation all")) {
                l = o.commands[r].split("|||");
                return void (!(0 < Object.keys(o.proteins).length) || void 0 !== s.bAjaxClinvar && s.bAjaxClinvar || void 0 !== s.bAjaxSnp && s.bAjaxSnp || void 0 !== s.bAjax3ddomain && s.bAjax3ddomain && void 0 !== s.mmdb_data ? !(0 < Object.keys(o.proteins).length) || void 0 !== s.bAjaxClinvar && s.bAjaxClinvar || void 0 !== s.bAjaxSnp && s.bAjaxSnp ? !(0 < Object.keys(o.proteins).length) || void 0 !== s.bAjaxClinvar && s.bAjaxClinvar || void 0 !== s.bAjax3ddomain && s.bAjax3ddomain && void 0 !== s.mmdb_data ? !(0 < Object.keys(o.proteins).length) || void 0 !== s.bAjax3ddomain && s.bAjax3ddomain && void 0 !== s.mmdb_data || void 0 !== s.bAjaxSnp && s.bAjaxSnp ? 0 < Object.keys(o.proteins).length && (void 0 === s.bAjaxClinvar || !s.bAjaxClinvar) ? $.when(s.applyCommandClinvar(l[0].trim())).then(function() {
                    s.setAnnoTabAll(),
                    s.execCommandsBase(r + 1, t, i)
                }) : 0 < Object.keys(o.proteins).length && (void 0 === s.bAjaxSnp || !s.bAjaxSnp) ? $.when(s.applyCommandSnp(l[0].trim())).then(function() {
                    s.setAnnoTabAll(),
                    s.execCommandsBase(r + 1, t, i)
                }) : 0 < Object.keys(o.proteins).length && (void 0 === s.bAjax3ddomain || !s.bAjax3ddomain || void 0 === s.mmdb_data) ? $.when(s.applyCommand3ddomain(l[0].trim())).then(function() {
                    s.setAnnoTabAll(),
                    s.execCommandsBase(r + 1, t, i)
                }) : (0 < Object.keys(o.proteins).length && (s.bAjaxClinvar && s.applyCommandClinvarBase(l[0].trim()),
                s.bAjaxSnp && s.applyCommandSnpBase(l[0].trim()),
                !s.bAjax3ddomain && void 0 === s.mmdb_data || s.applyCommand3ddomainBase(l[0].trim())),
                s.setAnnoTabAll(),
                s.execCommandsBase(r + 1, t, i)) : $.when(s.applyCommand3ddomain(l[0].trim())).then(s.applyCommandSnp(l[0].trim())).then(function() {
                    s.setAnnoTabAll(),
                    s.execCommandsBase(r + 1, t, i)
                }) : $.when(s.applyCommandClinvar(l[0].trim())).then(s.applyCommand3ddomain(l[0].trim())).then(function() {
                    s.setAnnoTabAll(),
                    s.execCommandsBase(r + 1, t, i)
                }) : $.when(s.applyCommandClinvar(l[0].trim())).then(s.applyCommandSnp(l[0].trim())).then(function() {
                    s.setAnnoTabAll(),
                    s.execCommandsBase(r + 1, t, i)
                }) : $.when(s.applyCommandClinvar(l[0].trim())).then(s.applyCommandSnp(l[0].trim())).then(s.applyCommand3ddomain(l[0].trim())).then(function() {
                    s.setAnnoTabAll(),
                    s.execCommandsBase(r + 1, t, i)
                }))
            }
            if (0 == o.commands[r].trim().indexOf("view interactions") && void 0 !== s.cfg.align) {
                l = o.commands[r].split("|||");
                return void (void 0 !== s.b2DShown && s.b2DShown ? s.execCommandsBase(r + 1, t, i) : $.when(s.applyCommandViewinteraction(l[0].trim())).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }))
            }
            if (0 == o.commands[r].trim().indexOf("symmetry")) {
                var d = (c = (l = o.commands[r].split("|||"))[0].trim()).substr(c.indexOf(" ") + 1);
                return o.symmetrytitle = "none" === d ? void 0 : d,
                void ("none" !== d && void 0 === o.symmetryHash ? $.when(s.applyCommandSymmetry(c)).then(function() {
                    s.cfg.notebook || dialog.dialog("close"),
                    o.draw(),
                    s.execCommandsBase(r + 1, t, i)
                }) : (o.draw(),
                s.execCommandsBase(r + 1, t, i)))
            }
            if (0 == o.commands[r].trim().indexOf("symd symmetry")) {
                var c = (l = o.commands[r].split("|||"))[0].trim();
                return void $.when(s.applyCommandSymd(c)).then(function() {
                    o.draw(),
                    s.execCommandsBase(r + 1, t, i)
                })
            }
            if (0 == o.commands[r].trim().indexOf("scap")) {
                c = (l = o.commands[r].split("|||"))[0].trim();
                return void $.when(s.applyCommandScap(c)).then(function() {
                    s.cfg.notebook || dialog.dialog("close"),
                    s.execCommandsBase(r + 1, t, i)
                })
            }
            if (0 == o.commands[r].trim().indexOf("realign on seq align")) {
                var h;
                if (2 == (h = (c = (l = o.commands[r].split("|||"))[0].trim()).split(" | ")).length) {
                    var p = h[1].split(",");
                    o.hAtoms = s.getAtomsFromNameArray(p)
                }
                return void $.when(s.applyCommandRealign(c)).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                })
            }
            if (0 == o.commands[r].trim().indexOf("graph interaction pairs")) {
                c = (l = o.commands[r].split("|||"))[0].trim();
                return void (void 0 === s.bD3 ? $.when(s.applyCommandGraphinteraction(c)).then(function() {
                    s.execCommandsBase(r + 1, t, i)
                }) : (s.applyCommandGraphinteraction(c),
                s.execCommandsBase(r + 1, t, i)))
            }
            s.applyCommand(o.commands[r])
        }
    }
    r !== i && !n || s.renderFinalStep(r)
}
,
iCn3DUI.prototype.setStrengthPara = function(e) {
    var t = this;
    t.icn3d;
    if (5 <= e.length) {
        var i = e[4].split(" ");
        4 <= i.length && ($("#" + t.pre + "hbondthreshold").val(i[1]),
        $("#" + t.pre + "saltbridgethreshold").val(i[2]),
        $("#" + t.pre + "contactthreshold").val(i[3]),
        7 <= i.length && ($("#" + t.pre + "halogenthreshold").val(i[4]),
        $("#" + t.pre + "picationthreshold").val(i[5]),
        $("#" + t.pre + "pistackingthreshold").val(i[6])))
    }
    if (6 == e.length) {
        var n = e[5].split(" ");
        6 <= n.length && ($("#" + t.pre + "dist_ss").val(n[0]),
        $("#" + t.pre + "dist_coil").val(n[1]),
        $("#" + t.pre + "dist_hbond").val(n[2]),
        $("#" + t.pre + "dist_inter").val(n[3]),
        $("#" + t.pre + "dist_ssbond").val(n[4]),
        $("#" + t.pre + "dist_ionic").val(n[5]),
        9 == n.length && ($("#" + t.pre + "dist_halogen").val(n[6]),
        $("#" + t.pre + "dist_pication").val(n[7]),
        $("#" + t.pre + "dist_pistacking").val(n[8])))
    }
}
,
iCn3DUI.prototype.oneStructurePerWindow = function() {
    var e = this.icn3d
      , t = Object.keys(e.structures);
    if (this.cfg.bSidebyside && 2 == t.length) {
        for (var i = t[Object.keys(window.icn3duiHash).indexOf(this.divid)], n = e.structures[i], r = {}, s = 0, o = n.length; s < o; ++s)
            r = e.unionHash(r, e.chains[n[s]]);
        e.dAtoms = e.intHash(r, e.dAtoms),
        e.hAtoms = e.cloneHash(e.dAtoms)
    }
}
,
iCn3DUI.prototype.renderFinalStep = function(e) {
    var t = this
      , i = t.icn3d;
    t.bCommandLoad = !1,
    t.hideLoading(),
    e + 1 === i.commands.length && (t.bAddCommands = !0),
    i.bRender = !0;
    var n = i.commands[e - 1].split("|||");
    if (2 == n.length) {
        var r = JSON.parse(n[1]);
        i._zoomFactor = r.factor,
        i.mouseChange.x = r.mouseChange.x,
        i.mouseChange.y = r.mouseChange.y,
        i.quaternion._x = r.quaternion._x,
        i.quaternion._y = r.quaternion._y,
        i.quaternion._z = r.quaternion._z,
        i.quaternion._w = r.quaternion._w
    }
    if (t.oneStructurePerWindow(),
    1 === e || Object.keys(i.hAtoms).length === Object.keys(i.atoms).length || void 0 !== i.optsHistory[e - 1] && i.optsHistory[e - 1].hasOwnProperty("hlatomcount") && i.optsHistory[e - 1].hlatomcount === Object.keys(i.atoms).length)
        if (i.optsHistory.length >= e) {
            var s = i.optsHistory[e - 1].pk;
            "no" === s ? i.pk = 0 : "atom" === s ? i.pk = 1 : "residue" === s ? i.pk = 2 : "strand" === s && (i.pk = 3),
            t.updateHlAll(),
            i.draw()
        } else
            t.updateHlAll(),
            i.draw();
    else
        t.updateHlAll(),
        i.draw();
    t.cfg.closepopup && (setTimeout(function() {
        t.closeDialogs()
    }, 100),
    t.resizeCanvas(t.WIDTH, t.HEIGHT, !0)),
    t.bTransparentSurface && i.bRender && i.render(),
    void 0 !== t.deferred && t.deferred.resolve(),
    void 0 !== t.deferred2 && t.deferred2.resolve()
}
,
iCn3DUI.prototype.applyCommandLoad = function(l) {
    var d = this
      , e = d.icn3d;
    if (!(void 0 !== e.atoms && 0 < Object.keys(e.atoms).length))
        return d.deferred2 = $.Deferred(function() {
            d.bAddCommands = !1;
            var e = l.split("|||")[0].replace(/\s\s/g, " ").trim().toLowerCase();
            if (-1 !== e.indexOf("load")) {
                var t = e.split(" | ")
                  , i = t[0];
                if (1 < t.length) {
                    var n = t[t.length - 1].indexOf(" ");
                    d.cfg.inpara = t[t.length - 1].substr(n + 1),
                    "undefined" === d.cfg.inpara && (d.cfg.inpara = "")
                }
                var r = i.substr(i.lastIndexOf(" ") + 1);
                if (d.inputid = r,
                -1 !== e.indexOf("load mmtf"))
                    d.cfg.mmtfid = r,
                    d.downloadMmtf(r);
                else if (-1 !== e.indexOf("load pdb"))
                    d.cfg.pdbid = r,
                    d.downloadPdb(r);
                else if (-1 !== e.indexOf("load opm"))
                    d.cfg.opmid = r,
                    d.downloadOpm(r);
                else if (-1 !== e.indexOf("load mmcif"))
                    d.cfg.mmcifid = r,
                    d.downloadMmcif(r);
                else if (-1 !== e.indexOf("load mmdb"))
                    d.cfg.mmdbid = r,
                    d.downloadMmdb(r);
                else if (-1 !== e.indexOf("load gi"))
                    d.cfg.gi = r,
                    d.downloadGi(r);
                else if (-1 !== e.indexOf("load seq_struc_ids"))
                    d.downloadBlast_rep_id(r);
                else if (-1 !== e.indexOf("load cid"))
                    d.cfg.cid = r,
                    d.downloadCid(r);
                else if (-1 !== e.indexOf("load alignment"))
                    d.cfg.align = r,
                    d.downloadAlignment(r);
                else if (-1 !== e.indexOf("load chainalignment"))
                    d.cfg.chainalign = r,
                    d.downloadChainAlignment(r);
                else if (-1 !== e.indexOf("load url")) {
                    var s = t[1]
                      , o = void 0 !== s ? s.indexOf("type ") : -1
                      , a = "pdb";
                    -1 !== o && (a = s.substr(o + 5)),
                    d.cfg.url = r,
                    d.downloadUrl(r, a)
                }
            }
            d.bAddCommands = !0
        }),
        d.deferred2.promise()
}
,
iCn3DUI.prototype.applyCommandMap = function(r) {
    var s = this;
    return s.deferredMap = $.Deferred(function() {
        s.icn3d;
        var e = r.split(" | ")
          , t = e[0].substr(8).split(" ");
        if (3 == t.length && "sigma" == t[1]) {
            var i = t[2]
              , n = t[0];
            2 == e.length ? s.Dsn6ParserBase(e[1], n, i) : s.Dsn6Parser(s.inputid, n, i)
        }
    }),
    s.deferredMap.promise()
}
,
iCn3DUI.prototype.applyCommandEmmap = function(t) {
    var r = this;
    return r.deferredEmmap = $.Deferred(function() {
        var i = r.icn3d
          , n = t.substr(10).split(" ");
        if (2 == n.length && "percentage" == n[0])
            if (void 0 === iCn3DUI.prototype.DensityCifParser) {
                $.ajax({
                    url: "https://www.ncbi.nlm.nih.gov/Structure/icn3d/script/density_cif_parser.min.js",
                    dataType: "script",
                    cache: !0,
                    tryCount: 0,
                    retryLimit: 1,
                    success: function(e) {
                        var t = n[1];
                        r.DensityCifParser(r.inputid, "em", t, i.emd)
                    },
                    error: function(e, t, i) {
                        this.tryCount++,
                        this.tryCount <= this.retryLimit && $.ajax(this)
                    }
                })
            } else {
                var e = n[1];
                r.DensityCifParser(r.inputid, "em", e, i.emd)
            }
    }),
    r.deferredEmmap.promise()
}
,
iCn3DUI.prototype.applyCommandSymmetryBase = function(e) {
    var t = this.icn3d;
    this.retrieveSymmetry(Object.keys(t.structures)[0])
}
,
iCn3DUI.prototype.applyCommandSymmetry = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredSymmetry = $.Deferred(function() {
        t.applyCommandSymmetryBase(e)
    }),
    t.deferredSymmetry.promise()
}
,
iCn3DUI.prototype.applyCommandRealignBase = function(e) {
    this.icn3d;
    this.realignOnSeqAlign()
}
,
iCn3DUI.prototype.applyCommandRealign = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredRealign = new $.Deferred(function() {
        t.applyCommandRealignBase(e)
    }
    ),
    t.deferredRealign.promise()
}
,
iCn3DUI.prototype.applyCommandGraphinteractionBase = function(e) {
    this.icn3d;
    var t = e.split(" | ");
    if (3 <= t.length) {
        var i, n = t[1].split(" "), r = n[0].split(","), s = n[1].split(","), o = -1 !== t[2].indexOf("hbonds"), a = -1 !== t[2].indexOf("salt bridge"), l = -1 !== t[2].indexOf("interactions"), d = -1 !== t[2].indexOf("halogen"), c = -1 !== t[2].indexOf("pi-cation"), h = -1 !== t[2].indexOf("pi-stacking");
        4 <= t.length && (i = "true" == t[3]),
        this.setStrengthPara(t),
        this.viewInteractionPairs(r, s, i, "graph", o, a, l, d, c, h)
    }
}
,
iCn3DUI.prototype.applyCommandGraphinteraction = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredGraphinteraction = $.Deferred(function() {
        t.applyCommandGraphinteractionBase(e)
    }),
    t.deferredGraphinteraction.promise()
}
,
iCn3DUI.prototype.getAxisColor = function(e, t) {
    var i = this.icn3d
      , n = e.substr(0, 1);
    return "C" == n ? i.thr(16711680) : "D" == n ? 2 == t ? i.thr(65535) : i.thr(16711680) : "T" == n ? 2 == t ? i.thr(65535) : i.thr(65280) : "O" == n || "I" == n ? 2 == t ? i.thr(65535) : 3 == t ? i.thr(65280) : i.thr(16711680) : i.thr(16711680)
}
,
iCn3DUI.prototype.getPolygonColor = function(e) {
    var t = this.icn3d
      , i = e.substr(0, 1);
    return "C" == i ? t.thr(16747520) : "D" == i ? t.thr(65535) : "T" == i ? t.thr(15631086) : "O" == i ? t.thr(16753920) : "I" == i ? t.thr(65280) : t.thr(11119017)
}
,
iCn3DUI.prototype.retrieveSymmetry = function(e) {
    var y = this
      , C = y.icn3d
      , t = "https://data.rcsb.org/rest/v1/core/assembly/" + e + "/1";
    $.ajax({
        url: t,
        dataType: "json",
        cache: !0,
        tryCount: 0,
        retryLimit: 1,
        success: function(e) {
            var t, i, n, r = e.rcsb_struct_symmetry;
            if (void 0 !== r) {
                void 0 !== C.rmsd_supr && void 0 !== C.rmsd_supr.rot && (t = C.rmsd_supr.rot,
                i = C.rmsd_supr.trans1,
                n = C.rmsd_supr.trans2),
                C.symmetryHash = {};
                for (var s = 0, o = r.length; s < o; ++s)
                    if ("C1" != r[s].symbol) {
                        var a = "no title";
                        "Pseudo Symmetry" == r[s].kind ? a = r[s].symbol + " (pseudo)" : "Global Symmetry" == r[s].kind ? a = r[s].symbol + " (global)" : "Local Symmetry" == r[s].kind && (a = r[s].symbol + " (local)");
                        for (var l = r[s].rotation_axes, d = [], c = 0, h = l.length; c < h; ++c) {
                            var p = []
                              , m = new THREE.Vector3(l[c].start[0],l[c].start[1],l[c].start[2])
                              , u = new THREE.Vector3(l[c].end[0],l[c].end[1],l[c].end[2]);
                            void 0 !== C.rmsd_supr && void 0 !== C.rmsd_supr.rot && (m = C.transformMemPro(m, t, i, n),
                            u = C.transformMemPro(u, t, i, n)),
                            p.push(m),
                            p.push(u);
                            var f = y.getAxisColor(r[s].symbol, l[c].order)
                              , g = y.getPolygonColor(r[s].symbol);
                            p.push(f),
                            p.push(g),
                            p.push(l[c].order),
                            p.push(r[s].clusters[0].members[0].asym_id),
                            d.push(p)
                        }
                        C.symmetryHash[a] = d
                    }
                if (0 == Object.keys(C.symmetryHash).length)
                    $("#" + y.pre + "dl_symmetry").html("<br>This structure has no symmetry.");
                else {
                    var v = "<option value='none'>None</option>"
                      , b = 0;
                    for (var a in C.symmetryHash) {
                        v += "<option value='" + a + "' " + (0 == b ? "selected" : "") + ">" + a + "</option>",
                        ++b
                    }
                    $("#" + y.pre + "selectSymmetry").html(v)
                }
            } else
                $("#" + y.pre + "dl_symmetry").html("<br>This structure has no symmetry.");
            y.openDlg("dl_symmetry", "Symmetry"),
            void 0 !== y.deferredSymmetry && y.deferredSymmetry.resolve()
        },
        error: function(e, t, i) {
            this.tryCount++,
            this.tryCount <= this.retryLimit ? $.ajax(this) : ($("#" + y.pre + "dl_symmetry").html("<br>This structure has no symmetry."),
            y.openDlg("dl_symmetry", "Symmetry"),
            void 0 !== y.deferredSymmetry && y.deferredSymmetry.resolve())
        }
    })
}
,
iCn3DUI.prototype.applyCommandAnnotationsAndCddSiteBase = function(e) {
    this.icn3d;
    "view annotations" == e && this.showAnnotations()
}
,
iCn3DUI.prototype.applyCommandAnnotationsAndCddSite = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredAnnoCddSite = $.Deferred(function() {
        t.applyCommandAnnotationsAndCddSiteBase(e)
    }),
    t.deferredAnnoCddSite.promise()
}
,
iCn3DUI.prototype.applyCommandClinvarBase = function(e) {
    this.icn3d;
    var t = e.lastIndexOf(" ");
    e.substr(t + 1);
    this.setAnnoTabClinvar()
}
,
iCn3DUI.prototype.applyCommandSnpBase = function(e) {
    this.icn3d;
    var t = e.lastIndexOf(" ");
    e.substr(t + 1);
    this.setAnnoTabSnp()
}
,
iCn3DUI.prototype.applyCommandClinvar = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredClinvar = $.Deferred(function() {
        t.applyCommandClinvarBase(e)
    }),
    t.deferredClinvar.promise()
}
,
iCn3DUI.prototype.applyCommandSnp = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredSnp = $.Deferred(function() {
        t.applyCommandSnpBase(e)
    }),
    t.deferredSnp.promise()
}
,
iCn3DUI.prototype.applyCommand3ddomainBase = function(e) {
    this.icn3d;
    var t = e.lastIndexOf(" ")
      , i = e.substr(t + 1);
    "3ddomain" != i && "all" != i || this.setAnnoTab3ddomain()
}
,
iCn3DUI.prototype.applyCommand3ddomain = function(e) {
    var t = this;
    t.icn3d;
    return t.deferred3ddomain = $.Deferred(function() {
        t.applyCommand3ddomainBase(e)
    }),
    t.deferred3ddomain.promise()
}
,
iCn3DUI.prototype.applyCommandViewinteractionBase = function(e) {
    var t = this.icn3d;
    if (void 0 !== this.cfg.align || void 0 !== this.cfg.chainalign) {
        var i = Object.keys(t.structures);
        this.set2DDiagramsForAlign(i[0].toUpperCase(), i[1].toUpperCase())
    }
}
,
iCn3DUI.prototype.applyCommandViewinteraction = function(e) {
    var t = this;
    t.icn3d;
    return t.deferredViewinteraction = $.Deferred(function() {
        t.applyCommandViewinteractionBase(e)
    }),
    t.deferredViewinteraction.promise()
}
,
iCn3DUI.prototype.getThresholdNameArrays = function(e) {
    var t = this.icn3d;
    if (void 0 === this.bSetChainsAdvancedMenu || !this.bSetChainsAdvancedMenu) {
        var i = t.cloneHash(t.hAtoms);
        this.setPredefinedInMenu(),
        this.bSetChainsAdvancedMenu = !0,
        t.hAtoms = t.cloneHash(i)
    }
    var n, r = e.split(" | "), s = parseFloat(r[0].substr(r[0].lastIndexOf(" ") + 1)), o = [], a = [];
    if (2 <= r.length && 4 < r[1].length) {
        var l = r[1].split(" ");
        1 < l.length && (a = l[1].split(",")),
        2 < l.length && (o = l[2].split(","))
    } else
        a = ["selected"],
        o = ["non-selected"];
    return 3 == r.length && (n = "true" == r[2]),
    {
        threshold: s,
        nameArray2: a,
        nameArray: o,
        bHbondCalc: n
    }
}
,
iCn3DUI.prototype.applyCommand = function(e) {
    var t = this
      , i = t.icn3d;
    t.bAddCommands = !1;
    var n = e.split("|||")[0].replace(/\s+/g, " ").trim()
      , r = n.toLowerCase();
    if ("share link" == r)
        t.shareLink();
    else if ("export state file" != r)
        if (0 == r.indexOf("export canvas"))
            setTimeout(function() {
                var e = r.substr(13).trim();
                i.scaleFactor = "" === e ? 1 : parseInt(e),
                t.shareLink(!0)
            }, 500);
        else if ("export interactions" == r)
            t.exportInteractions();
        else if ("export stl file" == r)
            setTimeout(function() {
                t.exportStlFile("")
            }, 500);
        else if ("export vrml file" == r)
            setTimeout(function() {
                t.exportVrmlFile("")
            }, 500);
        else if ("export stl stabilizer file" == r)
            setTimeout(function() {
                t.hideStabilizer(),
                t.resetAfter3Dprint(),
                t.addStabilizer(),
                t.exportStlFile("_stab")
            }, 500);
        else if ("export vrml stabilizer file" == r)
            setTimeout(function() {
                t.hideStabilizer(),
                t.resetAfter3Dprint(),
                t.addStabilizer(),
                t.exportVrmlFile("_stab")
            }, 500);
        else if ("export pdb" == r)
            t.exportPdb();
        else if ("select all" == r)
            t.selectAll();
        else if ("show all" == r)
            t.showAll();
        else if ("select complement" == r)
            t.selectComplement();
        else if ("set pk atom" == r)
            i.pk = 1,
            i.opts.pk = "atom";
        else if ("set pk off" == r)
            i.pk = 0,
            i.opts.pk = "no",
            i.draw(),
            i.removeHlObjects();
        else if ("set pk residue" == r)
            i.pk = 2,
            i.opts.pk = "residue";
        else if ("set pk strand" == r)
            i.pk = 3,
            i.opts.pk = "strand";
        else if ("set pk domain" == r)
            i.pk = 4,
            i.opts.pk = "domain";
        else if ("set pk chain" == r)
            i.pk = 5,
            i.opts.pk = "chain";
        else if ("set surface wireframe on" == r)
            i.opts.wireframe = "yes",
            i.applySurfaceOptions();
        else if ("set surface wireframe off" == r)
            i.opts.wireframe = "no",
            i.applySurfaceOptions();
        else if ("set map wireframe on" == r)
            i.opts.mapwireframe = "yes",
            i.applyMapOptions();
        else if ("set map wireframe off" == r)
            i.opts.mapwireframe = "no",
            i.applyMapOptions();
        else if ("set emmap wireframe on" == r)
            i.opts.emmapwireframe = "yes",
            i.applyEmmapOptions();
        else if ("set emmap wireframe off" == r)
            i.opts.emmapwireframe = "no",
            i.applyEmmapOptions();
        else if ("set surface neighbors on" == r)
            i.bConsiderNeighbors = !0,
            i.applySurfaceOptions();
        else if ("set surface neighbors off" == r)
            i.bConsiderNeighbors = !1,
            i.applySurfaceOptions();
        else if ("set axis on" == r)
            i.opts.axis = "yes";
        else if ("set pc1 axis" == r)
            i.pc1 = !0,
            i.setPc1Axes();
        else if ("set axis off" == r)
            i.opts.axis = "no",
            i.pc1 = !1;
        else if ("set fog on" == r)
            i.opts.fog = "yes",
            i.setFog(!0);
        else if ("set fog off" == r)
            i.opts.fog = "no",
            i.setFog(!0);
        else if ("set slab on" == r)
            i.opts.slab = "yes";
        else if ("set slab off" == r)
            i.opts.slab = "no";
        else if ("set assembly on" == r)
            i.bAssembly = !0;
        else if ("set assembly off" == r)
            i.bAssembly = !1;
        else if ("set chemicalbinding show" == r)
            t.setOption("chemicalbinding", "show");
        else if ("set chemicalbinding hide" == r)
            t.setOption("chemicalbinding", "hide");
        else if ("set hbonds off" == r)
            i.hideHbonds(),
            i.draw();
        else if ("set salt bridge off" == r)
            i.hideSaltbridge(),
            i.draw();
        else if ("set contact off" == r)
            i.hideContact(),
            i.draw();
        else if ("set halogen pi off" == r)
            i.hideHalogenPi(),
            i.draw();
        else if ("hydrogens" == r)
            t.showHydrogens(),
            i.draw();
        else if ("set hydrogens off" == r)
            t.hideHydrogens(),
            i.draw();
        else if ("close popup" == r)
            t.closeDialogs();
        else if ("set stabilizer off" == r)
            t.hideStabilizer(),
            i.draw();
        else if ("set disulfide bonds off" == r)
            i.opts.ssbonds = "no",
            i.draw();
        else if ("set cross linkage off" == r)
            i.opts.clbonds = "no",
            i.draw();
        else if ("set lines off" == r)
            i.labels.distance = [],
            i.lines.distance = [],
            i.draw();
        else if ("set labels off" == r) {
            for (var s in i.labels)
                i.labels[s] = [];
            i.draw()
        } else if ("set mode all" == r)
            t.setModeAndDisplay("all");
        else if ("set mode selection" == r)
            t.setModeAndDisplay("selection");
        else if ("set view detailed view" == r)
            t.setAnnoViewAndDisplay("detailed view");
        else if ("set view overview" == r)
            t.setAnnoViewAndDisplay("overview");
        else if ("set annotation custom" == r)
            t.setAnnoTabCustom();
        else if ("set annotation interaction" == r)
            t.setAnnoTabInteraction();
        else if ("set annotation cdd" == r)
            t.setAnnoTabCdd();
        else if ("set annotation site" == r)
            t.setAnnoTabSite();
        else if ("set annotation ssbond" == r)
            t.setAnnoTabSsbond();
        else if ("set annotation crosslink" == r)
            t.setAnnoTabCrosslink();
        else if ("set annotation transmembrane" == r)
            t.setAnnoTabTransmem();
        else if ("highlight level up" == r)
            t.switchHighlightLevelUp();
        else if ("highlight level down" == r)
            t.switchHighlightLevelDown();
        else if (0 == r.indexOf("hide annotation")) {
            var o = r.lastIndexOf(" ");
            "all" == (x = r.substr(o + 1)) ? t.hideAnnoTabAll() : "custom" == x ? t.hideAnnoTabCustom() : "clinvar" == x ? t.hideAnnoTabClinvar() : "snp" == x ? t.hideAnnoTabSnp() : "cdd" == x ? t.hideAnnoTabCdd() : "3ddomain" == x ? t.hideAnnoTab3ddomain() : "site" == x ? t.hideAnnoTabSite() : "interaction" == x ? t.hideAnnoTabInteraction() : "ssbond" == x ? t.hideAnnoTabSsbond() : "crosslink" == x ? t.hideAnnoTabCrosslink() : "transmembrane" == x && t.hideAnnoTabTransmem()
        } else if ("add residue labels" == r)
            i.addResiudeLabels(i.hAtoms),
            i.draw();
        else if ("add residue number labels" == r)
            i.addResiudeLabels(i.hAtoms, void 0, void 0, !0),
            i.draw();
        else if ("add atom labels" == r)
            i.addAtomLabels(i.hAtoms),
            i.draw();
        else if ("add chain labels" == r)
            t.addChainLabels(i.hAtoms),
            i.draw();
        else if ("add terminal labels" == r)
            t.addTerminiLabels(i.hAtoms),
            i.draw();
        else if ("rotate left" == r)
            i.bStopRotate = !1,
            t.ROT_DIR = "left",
            t.rotStruc("left");
        else if ("rotate right" == r)
            i.bStopRotate = !1,
            t.ROT_DIR = "right",
            t.rotStruc("right");
        else if ("rotate up" == r)
            i.bStopRotate = !1,
            t.ROT_DIR = "up",
            t.rotStruc("up");
        else if ("rotate down" == r)
            i.bStopRotate = !1,
            t.ROT_DIR = "down",
            t.rotStruc("down");
        else if ("rotate x" == r) {
            var a = new THREE.Vector3(1,0,0)
              , l = .5 * Math.PI;
            i.setRotation(a, l)
        } else if ("rotate y" == r) {
            a = new THREE.Vector3(0,1,0),
            l = .5 * Math.PI;
            i.setRotation(a, l)
        } else if ("rotate z" == r) {
            a = new THREE.Vector3(0,0,1),
            l = .5 * Math.PI;
            i.setRotation(a, l)
        } else if ("reset" === r)
            t.resetAll();
        else if ("reset orientation" === r)
            i.resetOrientation(),
            i.draw();
        else if ("reset thickness" == r)
            t.resetAfter3Dprint(),
            i.draw();
        else if ("clear selection" == r)
            i.removeHlObjects(),
            t.removeHl2D(),
            i.bShowHighlight = !1,
            t.bSelectResidue = !1;
        else if ("zoom selection" == r)
            i.zoominSelection(),
            i.draw();
        else if ("center selection" == r)
            i.centerSelection(),
            i.draw();
        else if ("show selection" == r)
            t.showSelection();
        else if ("hide selection" == r)
            t.hideSelection();
        else if ("output selection" == r)
            t.outputSelection();
        else if ("toggle selection" == r)
            t.toggleSelection();
        else if ("toggle highlight" == r)
            t.toggleHighlight();
        else if ("stabilizer" == r)
            t.addStabilizer(),
            t.prepareFor3Dprint();
        else if ("disulfide bonds" == r)
            t.showSsbonds();
        else if ("cross linkage" == r)
            t.showClbonds();
        else if ("back" == r)
            t.back();
        else if ("forward" == r)
            t.forward();
        else if ("clear all" == r)
            t.selectAll();
        else if ("defined sets" == r)
            t.showSets();
        else if ("delete selected sets" == r)
            t.deleteSelectedSets();
        else if ("view interactions" == r)
            void 0 === t.cfg.mmdbid && void 0 === t.cfg.gi || t.set2DDiagrams(t.inputid);
        else if ("show annotations all chains" == r)
            t.showAnnoAllChains();
        else if ("save color" == r)
            t.saveColor();
        else if ("apply saved color" == r)
            t.applySavedColor();
        else if ("save style" == r)
            t.saveStyle();
        else if ("apply saved style" == r)
            t.applySavedStyle();
        else if ("select main chains" == r)
            t.selectMainChains();
        else if ("select side chains" == r)
            t.selectSideChains();
        else if ("select main side chains" == r)
            t.selectMainSideChains();
        else if ("realign" == r)
            t.realign();
        else if ("area" == r)
            t.calculateArea();
        else if ("table inter count only" == r)
            $(".icn3d-border").hide();
        else if ("table inter details" == r)
            $(".icn3d-border").show();
        else if ("setoption map nothing" == r)
            t.setOption("map", "nothing");
        else if ("setoption emmap nothing" == r)
            t.setOption("emmap", "nothing");
        else if ("setoption phimap nothing" == r)
            t.setOption("phimap", "nothing");
        else if ("setoption phisurface nothing" == r)
            t.setOption("phisurface", "nothing");
        else if (0 == n.indexOf("define helix sets")) {
            var d = n.split(" | ")[1].split(" ")[1];
            t.defineSecondary(d, "helix")
        } else if (0 == n.indexOf("define sheet sets")) {
            d = n.split(" | ")[1].split(" ")[1];
            t.defineSecondary(d, "sheet")
        } else if (0 == n.indexOf("define coil sets")) {
            d = n.split(" | ")[1].split(" ")[1];
            t.defineSecondary(d, "coil")
        } else if (0 == n.indexOf("select interaction")) {
            if (null !== (g = n.substr(n.lastIndexOf(" ") + 1).split(","))) {
                var c = g[0].split("_")[0];
                t.b2DShown || t.download2Ddgm(c.toUpperCase()),
                t.selectInteraction(g[0], g[1])
            }
        } else if (0 == n.indexOf("select saved atoms") || 0 == n.indexOf("select sets")) {
            var h = (y = (n = n.replace(/aligned_protein/g, "protein_aligned")).split(" | "))[0].replace(/,/g, " or ");
            o = 19;
            0 == n.indexOf("select sets") && (o = 12);
            var p = h.substr(o)
              , m = p;
            2 == y.length && (m = y[1].substr(5)),
            t.selectCombinedSets(p, m)
        } else if (-1 !== n.indexOf("select chain"))
            for (var u = 0, f = (g = n.substr(n.lastIndexOf(" ") + 1).split(",")).length; u < f; ++u)
                t.selectAChain(g[u], g[u], !1);
        else if (-1 !== n.indexOf("select alignChain")) {
            var g;
            for (u = 0,
            f = (g = n.substr(n.lastIndexOf(" ") + 1).split(",")).length; u < f; ++u)
                t.selectAChain(g[u], "align_" + g[u], !0)
        } else if (0 == n.indexOf("select zone cutoff")) {
            var v = t.getThresholdNameArrays(n);
            t.pickCustomSphere(v.threshold, v.nameArray2, v.nameArray, v.bHbondCalc),
            t.bSphereCalc = !0
        } else if (0 == r.indexOf("set surface opacity")) {
            var b = r.substr(r.lastIndexOf(" ") + 1);
            i.opts.opacity = parseFloat(b),
            i.applySurfaceOptions(),
            parseInt(100 * b) < 100 && (t.bTransparentSurface = !0)
        } else if (0 == r.indexOf("set label scale")) {
            b = r.substr(r.lastIndexOf(" ") + 1);
            i.labelScale = parseFloat(b)
        } else if (0 == r.indexOf("set surface")) {
            b = r.substr(12);
            i.opts.surface = b,
            i.applySurfaceOptions()
        } else if (0 == r.indexOf("set camera")) {
            b = r.substr(r.lastIndexOf(" ") + 1);
            i.opts.camera = b
        } else if (0 == r.indexOf("set background")) {
            b = r.substr(r.lastIndexOf(" ") + 1);
            "white" == (i.opts.background = b) || "grey" == b ? ($("#" + t.pre + "title").css("color", "black"),
            $("#" + t.pre + "titlelink").css("color", "black")) : ($("#" + t.pre + "title").css("color", t.GREYD),
            $("#" + t.pre + "titlelink").css("color", t.GREYD))
        } else if (0 == n.indexOf("set thickness")) {
            var y = r.split(" | ");
            t.bSetThickness = !0;
            for (u = 1,
            f = y.length; u < f; ++u) {
                var C = (_ = y[u].split(" "))[0];
                b = parseFloat(_[1]);
                "linerad" == C && (i.lineRadius = b),
                "coilrad" == C && (i.coilWidth = b),
                "stickrad" == C && (i.cylinderRadius = b),
                "tracerad" == C && (i.traceRadius = b),
                "ballscale" == C && (i.dotSphereScale = b),
                "ribbonthick" == C && (i.ribbonthickness = b),
                "proteinwidth" == C && (i.helixSheetWidth = b),
                "nucleotidewidth" == C && (i.nucleicAcidWidth = b),
                i.draw()
            }
        } else if (0 == r.indexOf("set highlight color")) {
            "yellow" === (w = r.substr(20)) ? (i.hColor = i.thr(16776960),
            i.matShader = i.setOutlineColor("yellow")) : "green" === w ? (i.hColor = i.thr(65280),
            i.matShader = i.setOutlineColor("green")) : "red" === w && (i.hColor = i.thr(16711680),
            i.matShader = i.setOutlineColor("red")),
            i.draw()
        } else if (0 == r.indexOf("set highlight style")) {
            "outline" === (ce = r.substr(20)) ? i.bHighlight = 1 : "3d" === ce && (i.bHighlight = 2),
            i.draw()
        } else if (0 == r.indexOf("add line")) {
            var _ = (y = r.split(" | "))[1].split(" ")
              , S = y[2].split(" ")
              , w = y[3].substr(y[3].lastIndexOf(" ") + 1)
              , A = "true" === y[4].substr(y[4].lastIndexOf(" ") + 1)
              , x = y[5].substr(y[5].lastIndexOf(" ") + 1);
            t.addLine(parseFloat(_[1]), parseFloat(_[3]), parseFloat(_[5]), parseFloat(S[1]), parseFloat(S[3]), parseFloat(S[5]), w, A, x),
            i.draw()
        } else if (0 == n.indexOf("add label")) {
            var k, D, O, R, T, E = (y = n.split(" | "))[0].substr("add label".length + 1), I = !1;
            for (u = 1,
            f = y.length; u < f; ++u) {
                var H = y[u].split(" ");
                "x" == H[0] ? (I = !0,
                k = H[1],
                D = H[3],
                O = H[5]) : "size" == H[0] ? R = y[u].substr(y[u].lastIndexOf(" ") + 1) : "color" == H[0] ? w = y[u].substr(y[u].lastIndexOf(" ") + 1) : "background" == H[0] ? T = y[u].substr(y[u].lastIndexOf(" ") + 1) : "type" == H[0] && (x = y[u].substr(y[u].lastIndexOf(" ") + 1))
            }
            if (!I) {
                var L = i.centerAtoms(i.hash2Atoms(i.hAtoms));
                k = L.center.x,
                D = L.center.y,
                O = L.center.z
            }
            t.addLabel(E, k, D, O, R, w, T, x),
            i.draw()
        } else if (0 == n.indexOf("msa")) {
            var P = (y = n.split(" | "))[1].split(" ");
            t.targetGapHash = {};
            for (u = 0,
            f = P.length; u < f; ++u) {
                var F = P[u].split("_");
                t.targetGapHash[parseInt(F[0])] = {
                    from: parseInt(F[1]),
                    to: parseInt(F[2])
                }
            }
            t.resetAnnoAll()
        } else if (0 == n.indexOf("add track")) {
            d = (y = n.split(" | "))[1].substr(8);
            var M, N = y[2].substr(6);
            E = y[3].substr(5);
            5 <= y.length && (x = y[4].substr(5)),
            6 <= y.length && (w = y[5].substr(6)),
            7 <= y.length && (M = y[6].substr(4)),
            $("#" + t.pre + "anno_custom")[0].checked = !0,
            $("[id^=" + t.pre + "custom]").show(),
            "0" == w && (w = void 0),
            t.checkGiSeq(d, N, E, x, w, M, 0)
        } else if (0 == r.indexOf("remove one stabilizer")) {
            _ = (y = r.split(" | "))[1].split(" ");
            var z = [];
            z.push(parseInt(_[0])),
            z.push(parseInt(_[1])),
            t.removeOneStabilizer(z),
            i.draw()
        } else if (0 == r.indexOf("add one stabilizer")) {
            _ = (y = r.split(" | "))[1].split(" ");
            void 0 === i.pairArray && (i.pairArray = []),
            i.pairArray.push(parseInt(_[0])),
            i.pairArray.push(parseInt(_[1])),
            i.draw()
        } else if (0 == r.indexOf("select planes z-axis")) {
            if (5 == (y = r.split(" ")).length) {
                var q = parseFloat(y[3])
                  , j = parseFloat(y[4]);
                t.selectBtwPlanes(q, j)
            }
        } else if (0 == r.indexOf("adjust membrane z-axis")) {
            if (5 == (y = r.split(" ")).length) {
                q = parseFloat(y[3]),
                j = parseFloat(y[4]);
                t.adjustMembrane(q, j)
            }
        } else if (0 == r.indexOf("toggle membrane"))
            t.toggleMembrane();
        else if (0 == n.indexOf("calc buried surface")) {
            if (2 == (y = n.split(" | ")).length) {
                var U = (K = y[1].split(" "))[0].split(",")
                  , B = K[1].split(",");
                t.calcBuriedSurface(U, B)
            }
        } else if (0 == n.indexOf("dist")) {
            if (2 == (y = n.split(" | ")).length) {
                B = (K = y[1].split(" "))[0].split(","),
                U = K[1].split(",");
                t.measureDistTwoSets(B, U)
            }
        } else if (0 == n.indexOf("display interaction 3d") || 0 == n.indexOf("view interaction pairs") || 0 == n.indexOf("save1 interaction pairs") || 0 == n.indexOf("save2 interaction pairs") || 0 == n.indexOf("line graph interaction pairs") || 0 == n.indexOf("scatterplot interaction pairs")) {
            if (3 <= (y = n.split(" | ")).length) {
                U = (K = y[1].split(" "))[0].split(","),
                B = K[1].split(",");
                var G, V = -1 !== y[2].indexOf("hbonds"), W = -1 !== y[2].indexOf("salt bridge"), Y = -1 !== y[2].indexOf("interactions"), X = -1 !== y[2].indexOf("halogen"), Q = -1 !== y[2].indexOf("pi-cation"), Z = -1 !== y[2].indexOf("pi-stacking");
                4 <= y.length && (G = "true" == y[3]),
                5 <= y.length && (thresholdArray = y[4].split(" "),
                4 <= thresholdArray.length && ($("#" + t.pre + "hbondthreshold").val(thresholdArray[1]),
                $("#" + t.pre + "saltbridgethreshold").val(thresholdArray[2]),
                $("#" + t.pre + "contactthreshold").val(thresholdArray[3]),
                7 == thresholdArray.length && ($("#" + t.pre + "halogenthreshold").val(thresholdArray[4]),
                $("#" + t.pre + "picationthreshold").val(thresholdArray[5]),
                $("#" + t.pre + "pistackingthreshold").val(thresholdArray[6])))),
                0 == n.indexOf("display interaction 3d") ? x = "3d" : 0 == n.indexOf("view interaction pairs") ? x = "view" : 0 == n.indexOf("save1 interaction pairs") ? x = "save1" : 0 == n.indexOf("save2 interaction pairs") ? x = "save2" : 0 == n.indexOf("line graph interaction pairs") ? x = "linegraph" : 0 == n.indexOf("scatterplot interaction pairs") && (x = "scatterplot"),
                t.viewInteractionPairs(U, B, G, x, V, W, Y, X, Q, Z)
            }
        } else if (0 == n.indexOf("export pairs")) {
            if (3 == (y = n.split(" | ")).length) {
                U = (K = y[1].split(" "))[0].split(","),
                B = K[1].split(",");
                var K, J = y[2].split(" ")[1];
                t.pickCustomSphere(J, U, B, t.bSphereCalc),
                t.bSphereCalc = !0;
                E = t.exportSpherePairs();
                var ee = t.inputid ? t.inputid : "custom";
                t.saveFile(ee + "_sphere_pairs.html", "html", E)
            }
        } else if (0 == n.indexOf("export pqr"))
            t.exportPqr();
        else if (0 == r.indexOf("graph label")) {
            o = r.lastIndexOf(" ");
            var te = r.substr(o + 1);
            $("#" + t.svgid + "_label").val(te),
            $("#" + t.svgid + " text").removeClass(),
            $("#" + t.svgid + " text").addClass(te)
        } else if (0 == r.indexOf("line graph scale")) {
            o = r.lastIndexOf(" ");
            var ie = r.substr(o + 1);
            $("#" + t.linegraphid + "_label").val(ie),
            $("#" + t.linegraphid).attr("width", (t.linegraphWidth * parseFloat(ie)).toString() + "px")
        } else if (0 == r.indexOf("scatterplot scale")) {
            o = r.lastIndexOf(" "),
            ie = r.substr(o + 1);
            $("#" + t.scatterplotid + "_label").val(ie),
            $("#" + t.scatterplot).attr("width", (t.scatterplotWidth * parseFloat(ie)).toString() + "px")
        } else if (0 == r.indexOf("graph force")) {
            o = r.lastIndexOf(" ");
            t.force = parseInt(r.substr(o + 1)),
            $("#" + t.svgid + "_force").val(t.force),
            t.handleForce()
        } else if (0 == r.indexOf("hide edges")) {
            o = r.lastIndexOf(" ");
            t.hideedges = parseInt(r.substr(o + 1)),
            $("#" + t.svgid + "_hideedges").val(t.hideedges),
            t.hideedges ? (t.contactInsideColor = "FFF",
            t.hbondInsideColor = "FFF",
            t.ionicInsideColor = "FFF") : (t.contactInsideColor = "DDD",
            t.hbondInsideColor = "AFA",
            t.ionicInsideColor = "8FF"),
            void 0 !== t.graphStr && i.bRender && t.force && t.drawGraph(t.graphStr)
        } else if (0 == r.indexOf("reset interaction pairs"))
            t.resetInteractionPairs();
        else if (0 == r.indexOf("side by side")) {
            var ne = (y = r.split(" | "))[1];
            window.open(ne, "_blank")
        } else if (0 == n.indexOf("your note")) {
            y = n.split(" | ");
            t.yournote = y[1],
            $("#" + t.pre + "yournote").val(t.yournote),
            document.title = t.yournote
        } else if (0 == r.indexOf("cross structure interaction"))
            i.crossstrucinter = parseInt(r.substr(r.lastIndexOf(" ") + 1)),
            $("#" + t.pre + "crossstrucinter").val(i.crossstrucinter);
        else if ("replay on" == r)
            t.replayon();
        else if ("replay off" == r)
            t.replayoff();
        else if (0 == r.indexOf("pickatom")) {
            var re = parseInt(r.substr(r.lastIndexOf(" ") + 1));
            i.pAtom = i.atoms[re],
            i.showPicking(i.pAtom)
        } else if (0 == n.indexOf("color")) {
            w = (le = n.split(" | "))[0].substr(le[0].indexOf(" ") + 1);
            if ("residue custom" == (i.opts.color = w) && 2 == le.length)
                for (var se in i.customResidueColors = JSON.parse(le[1]),
                i.customResidueColors)
                    i.customResidueColors[se.toUpperCase()] = i.thr("#" + i.customResidueColors[se]);
            else if ("align custom" == w && 3 == le.length) {
                d = le[1];
                var oe = le[2].split(", ");
                i.queryresi2score = {},
                i.queryresi2score[d] = {};
                for (u = 0,
                f = oe.length; u < f; ++u) {
                    var ae = oe[u].split(" ");
                    i.queryresi2score[d][ae[0]] = ae[1]
                }
            } else
                "align custom" == w && 4 == le.length ? t.setQueryresi2score(le) : "area" == w && 2 == le.length && (i.midpercent = le[1],
                $("#" + t.pre + "midpercent").val(i.midpercent));
            i.setColorByOptions(i.opts, i.hAtoms),
            t.updateHlAll(),
            t.updateGraphCOlor()
        } else if (0 == n.indexOf("custom tube")) {
            var le = n.split(" | ");
            t.setQueryresi2score(le),
            t.setStyle("proteins", "custom tube")
        } else if (0 == r.indexOf("style")) {
            var de = (he = r.substr(r.indexOf(" ") + 1)).substr(0, he.indexOf(" "))
              , ce = he.substr(he.indexOf(" ") + 1);
            t.setStyle(de, ce)
        } else if (0 == r.indexOf("window")) {
            var he;
            "aligned sequences" == (he = r.substr(r.indexOf(" ") + 1)) ? t.openDlg("dl_alignment", "Select residues in aligned sequences") : "interaction table" == he ? t.openDlg("dl_allinteraction", "Show interactions") : "interaction graph" == he ? t.openDlg("dl_linegraph", "Show interactions between two lines of residue nodes") : "interaction scatterplot" == he ? t.openDlg("dl_scatterplot", "Show interactions as scatterplot") : "force-directed graph" == he && t.openDlg("dl_graph", "Force-directed graph")
        } else if (0 == r.indexOf("set theme")) {
            w = r.substr(r.lastIndexOf(" ") + 1);
            t.setTheme(w)
        } else if (0 == r.indexOf("set double color")) {
            "on" == (b = r.substr(r.lastIndexOf(" ") + 1)) ? i.bDoublecolor = !0 : "off" == b && (i.bDoublecolor = !1)
        } else if (0 == r.indexOf("adjust dialog")) {
            var pe = r.substr(r.lastIndexOf(" ") + 1);
            t.adjust2DWidth(pe)
        } else if (0 == r.indexOf("glycans cartoon")) {
            b = r.substr(r.lastIndexOf(" ") + 1);
            i.bGlycansCartoon = "yes" == b
        } else if (-1 !== r.indexOf("select displayed set"))
            i.hAtoms = i.cloneHash(i.dAtoms),
            t.updateHlAll();
        else if (-1 !== r.indexOf("select prop")) {
            var me, ue, fe = (y = n.split(" | "))[0].substr("select prop".length + 1);
            if (2 == y.length) {
                var ge = y[1].split("_");
                me = ge[0],
                ue = ge[1]
            }
            t.selectProperty(fe, me, ue)
        } else if (0 == r.indexOf("select") && -1 !== r.indexOf("name")) {
            h = "",
            m = "";
            var ve = "";
            for (u = 0,
            f = (y = n.split(" | ")).length; u < f; ++u) {
                -1 !== (C = y[u]).indexOf("select") ? h = C.substr(C.indexOf(" ") + 1) : -1 !== C.indexOf("name") && (m = C.substr(C.indexOf(" ") + 1))
            }
            ve = m,
            t.selectByCommand(h, m, ve)
        } else if (-1 !== r.indexOf("select $") || -1 !== r.indexOf("select .") || -1 !== r.indexOf("select :") || -1 !== r.indexOf("select @")) {
            h = (y = n.split(" | "))[0].substr(y[0].indexOf(" ") + 1),
            m = "",
            ve = "";
            1 < y.length && (m = y[1].substr(y[1].indexOf(" ") + 1)),
            2 < y.length && (ve = y[2].substr(y[2].indexOf(" ") + 1)),
            -1 !== h.indexOf(" or ") ? t.selectByCommand(h, m, ve) : t.selectBySpec(h, m, ve)
        }
    t.setLogCmd(n, !1),
    t.bAddCommands = !0
}
,
iCn3DUI.prototype.setQueryresi2score = function(e) {
    var t = this.icn3d
      , i = e[1]
      , n = e[2].split(" ")[1].split("_")
      , r = e[3];
    void 0 === t.queryresi2score && (t.queryresi2score = {}),
    t.queryresi2score[i] = {};
    for (var s = parseInt(n[0]), o = 0; s <= parseInt(n[1]); ++s,
    ++o)
        "_" != r[o] && (t.queryresi2score[i][s] = parseInt(r[o]) * (100 / 9))
}
,
iCn3DUI.prototype.getMenuFromCmd = function(e) {
    this.icn3d;
    var t = "Windows > View Sequences & Annotations"
      , i = "Analysis > H-Bonds & Interactions"
      , n = i + " > 2D Graph (Force-Directed)"
      , r = "View > Rotate > Auto Rotation > Rotate "
      , s = "View > Rotate > Rotate 90 deg > "
      , o = "Select > Select on 3D > "
      , a = "Analysis > Label > "
      , l = "File > 3D Printing > ";
    return 0 == (e = e.trim()).indexOf("load") ? "File > Retrieve by ID, Align" : 0 == e.indexOf("set map") && -1 == e.indexOf("set map wireframe") ? "Style > Electron Density" : 0 == e.indexOf("set emmap") && -1 == e.indexOf("set emmap wireframe") ? "Style > EM Density Map" : 0 == e.indexOf("set phi") ? "Analysis > Load Potential > URL (Same Host) Phi/Cube" : 0 == e.indexOf("set delphi") ? "Analysis > DelPhi Potential" : 0 == e.indexOf("setoption map") ? "Style > Remove Map" : 0 == e.indexOf("setoption emmap") ? "Style > Remove EM Map" : 0 == e.indexOf("view annotations") ? t : 0 == e.indexOf("set annotation all") ? t + ': "All" checkbox' : 0 == e.indexOf("set annotation clinvar") ? t + ': "ClinVar" checkbox' : 0 == e.indexOf("set annotation snp") ? t + ': "SNP" checkbox' : 0 == e.indexOf("set annotation 3ddomain") ? t + ': "3D Domains" checkbox' : 0 == e.indexOf("view interactions") ? "Windows > View 2D Diagram" : 0 == e.indexOf("symmetry") ? "Analysis > Symmetry" : 0 == e.indexOf("realign on seq align") ? "File > Realign Selection > on Sequence Alignment" : 0 == e.indexOf("realign") ? "File > Realign Selection > Residue by Residue" : 0 == e.indexOf("graph interaction pairs") ? i + " > 2D Graph (Force-Directed)" : 0 == e.indexOf("export canvas") ? "File > Save Files > iCn3D PNG Image" : "export stl file" == e ? l + "STL" : "export vrml file" == e ? l + "VRML (Color)" : "export stl stabilizer file" == e ? l + "STL W/ Stabilizers" : "export vrml stabilizer file" == e ? l + "VRML (Color, W/ Stabilizers)" : "select all" == e ? 'Select > All; or Toggle to "All" (next to "Help")' : "show all" == e ? "View > View Full Structure" : "select complement" == e ? "Select > Inverse" : "set pk atom" == e ? o + "Atom" : "set pk residue" == e ? o + "Residue" : "set pk strand" == e ? o + "Strand/Helix" : "set pk domain" == e ? o + "3D Domain" : "set pk chain" == e ? o + "Chain" : "set surface wireframe on" == e ? "Style > Surface Wireframe > Yes" : "set surface wireframe off" == e ? "Style > Surface Wireframe > No" : "set map wireframe on" == e ? "Style > Map Wireframe > Yes" : "set map wireframe off" == e ? "Style > Map Wireframe > No" : "set emmap wireframe on" == e ? "Style > EM Map Wireframe > Yes" : "set emmap wireframe off" == e ? "Style > EM Map Wireframe > No" : "set surface neighbors on" == e ? "Style > Surface Type > ... with Context" : "set axis on" == e ? "View > XYZ-axes > Show" : "set axis off" == e ? "View > XYZ-axes > Hide" : "set fog on" == e ? "View > Fog for Selection > On" : "set fog off" == e ? "View > Fog for Selection > Off" : "set slab on" == e ? "View > Slab for Selection > On" : "set slab off" == e ? "View > Slab for Selection > Off" : "set assembly on" == e ? "Analysis > Assembly > Biological Assembly" : "set assembly off" == e ? "Analysis > Assembly > Asymmetric Unit" : "set chemicalbinding show" == e ? "Analysis > Chem. Binding > Show" : "set chemicalbinding hide" == e ? "Analysis > Chem. Binding > Hide" : "set hbonds off" == e || "set salt bridge off" == e || "set contact off" == e || "set halogen pi off" == e ? i + " > Reset" : "hydrogens" == e ? "Style > Hydrogens > Show" : "set hydrogens off" == e ? "Style > Hydrogens > Hide" : "set stabilizer off" == e ? "File > 3D Printing > Remove All Stabilizers" : "set disulfide bonds off" == e ? "Analysis > Disulfide Bonds > Hide" : "set cross linkage off" == e ? "Analysis > Cross-Linkages > Hide" : "set lines off" == e ? "Analysis > Distance > Hide" : "set labels off" == e ? "Analysis > Label > Remove" : "set mode all" == e ? 'Toggle to "All" (next to "Help")' : "set mode selection" == e ? 'Toggle to "Selection" (next to "Help")' : "set view detailed view" == e ? t + ': "Details" tab' : "set view overview" == e ? t + ': "Summary" tab' : "set annotation custom" == e ? t + ': "Custom" checkbox' : "set annotation interaction" == e ? t + ': "Interactions" checkbox' : "set annotation cdd" == e ? t + ': "Conserved Domains" checkbox' : "set annotation site" == e ? t + ': "Functional Sites" checkbox' : "set annotation ssbond" == e ? t + ': "Disulfide Bonds" checkbox' : "set annotation crosslink" == e ? t + ': "Cross-Linkages" checkbox' : "set annotation transmembrane" == e ? t + ': "Transmembrane" checkbox' : "highlight level up" == e ? "Keyboard Arrow Up" : "highlight level down" == e ? "Keyboard Arrow Down" : 0 == e.indexOf("hide annotation") ? t + ": checkboxes off" : "add residue labels" == e ? a + "per Residue" : "add residue number labels" == e ? a + "per Residue & Number" : "add atom labels" == e ? a + "per Atom" : "add chain labels" == e ? a + "per Chain" : "add terminal labels" == e ? a + "N- & C- Termini" : "rotate left" == e ? r + "Left; or Key l" : "rotate right" == e ? r + "Right; or Key j" : "rotate up" == e ? r + "Up; or Key i" : "rotate down" == e ? r + "Down; or Key m" : "rotate x" == e ? s + "X-axis" : "rotate y" == e ? s + "Y-axis" : "rotate z" == e ? s + "Z-axis" : "reset" == e ? "View > Reset > All" : "reset orientation" == e ? "View > Reset > Orientation" : "reset thickness" == e ? "File > 3D Printing > Reset Thickness" : "clear selection" == e ? "Select > Clear Selection" : "zoom selection" == e ? "Select > Zoom in Selection" : "center selection" == e ? "Select > Center Selection" : "show selection" == e ? "Select > View Only Selection" : "hide selection" == e ? "Select > Hide Selection" : "output selection" == e ? "Select > Clear Selection" : "toggle highlight" == e ? "Select > Toggle Highlight" : "stabilizer" == e ? "File > 3D Printing > Add all Stabilizers" : "disulfide bonds" == e ? "Analysis > Disulfide Bonds > Show" : "cross linkage" == e ? "Analysis > Cross-Linkages > Show" : "back" == e ? "View > Undo" : "forward" == e ? "View > Redo" : "clear all" == e ? "Select > Clear Selection" : "defined sets" == e ? "Windows > Defined Sets" : "delete selected sets" == e ? 'Windows > Defined Sets: "Delete Selected Sets" button' : "view interactions" == e ? "Windows > View Interactions" : "show annotations all chains" == e ? t + ': "Show All Chains" button' : "save color" == e ? "Color > Save Color" : "apply saved color" == e ? "Color > Apply Saved Color" : "save style" == e ? "Style > Save Style" : "apply saved style" == e ? "Style > Apply Saved Style" : "select main chains" == e ? "Select > Main Chains" : "select side chains" == e ? "Select > Side Chains" : "select main side chains" == e ? "Select > Main & Side Chains" : "area" == e ? "View > Surface Area" : "table inter count only" == e ? i + ': "Set 1" button: "Show Count Only" button' : "table inter details" == e ? i + ': "Set 1" button: "Show Details" button' : 0 == e.indexOf("define helix sets") ? t + ': "Helix Sets" button' : 0 == e.indexOf("define sheet sets") ? t + ': "Sheet Sets" button' : 0 == e.indexOf("define coil sets") ? t + ': "Coil Sets" button' : 0 == e.indexOf("select interaction") ? "Windows > View 2D Diagram: click on edges" : 0 == e.indexOf("select saved atoms") || 0 == e.indexOf("select sets") ? "Windows > Defined Sets: select in menu" : -1 !== e.indexOf("select chain") ? t + ": click on chain names" : -1 !== e.indexOf("select alignChain") ? "Windows > View Aligned Sequences: click on chain names" : 0 == e.indexOf("select zone cutoff") ? "Select > by Distance" : 0 == e.indexOf("set surface opacity") ? "Style > Surface Opacity" : 0 == e.indexOf("set label scale") ? "View > Label Scale" : 0 == e.indexOf("set surface") ? "Style > Surface Type" : 0 == e.indexOf("set camera") ? "View > Camera" : 0 == e.indexOf("set background") ? "Style > Background" : 0 == e.indexOf("set thickness") ? "File > 3D Printing > Set Thickness" : 0 == e.indexOf("set highlight color") ? "Select > Highlight Color" : 0 == e.indexOf("set highlight style") ? "Select > Highlight Style" : 0 == e.indexOf("add line") || 0 == e.indexOf("add label") ? "Analysis > Distance > between Two Atoms" : 0 == e.indexOf("dist") ? "Analysis > Distance > between Two Sets" : 0 == e.indexOf("msa") ? t + ': "Add Track" button: "FASTA Alignment" button' : 0 == e.indexOf("add track") ? t + ': "Add Track" button' : 0 == e.indexOf("remove one stabilizer") ? "File > 3D Printing > Remove One Stablizer" : 0 == e.indexOf("add one stabilizer") ? "File > 3D Printing > Add One Stablizer" : 0 == e.indexOf("select planes z-axis") ? "View > Select between Two X-Y Planes" : 0 == e.indexOf("adjust membrane z-axis") ? "View > Adjust Membrane" : 0 == e.indexOf("toggle membrane") ? "View > Toggle Membrane" : 0 == e.indexOf("calc buried surface") ? i + ': "Buried Surface Area" button' : 0 == e.indexOf("display interaction 3d") ? i + ': "3D Display Interactions" button' : 0 == e.indexOf("view interaction pairs") ? i + ': "Highlight Interactions in Table" button' : 0 == e.indexOf("save1 interaction pairs") ? i + ': "Set 1" button' : 0 == e.indexOf("save2 interaction pairs") ? i + ': "Set 2" button' : 0 == e.indexOf("line graph interaction pairs") ? i + ': "2D Interaction Network" button' : 0 == e.indexOf("scatterplot interaction pairs") ? i + ': "2D Interaction Map" button' : 0 == e.indexOf("graph label") ? n + ': "Label Size" menu' : 0 == e.indexOf("graph force") ? n + ': "Force on Nodes" menu' : 0 == e.indexOf("hide edges") ? n + ': "Internal Edges" menu' : 0 == e.indexOf("reset interaction pairs") ? i + " > Reset" : 0 == e.indexOf("side by side") ? "View > Side by Side" : 0 == e.indexOf("your note") ? "Windows > Your Notes / Window Title" : 0 == e.indexOf("pickatom") ? "Hold Alt key and click on 3D structure" : 0 == e.indexOf("color") ? "Color menu" : 0 == e.indexOf("custom tube") ? t + ': "Custom Color/Tube" button: "Custom Tube" button' : 0 == e.indexOf("style") ? "Style menu" : -1 !== e.indexOf("select displayed set") ? "Select > Displayed Set" : -1 !== e.indexOf("select prop") ? "Select > by Property" : 0 == e.indexOf("select") && -1 !== e.indexOf("name") ? t + ": drag on residues to select" : -1 !== e.indexOf("select $") || -1 !== e.indexOf("select .") || -1 !== e.indexOf("select :") || -1 !== e.indexOf("select @") ? "Select > Advanced; or other selection" : -1 !== e.indexOf("replay on") ? "File > Replay Each Step > On" : -1 !== e.indexOf("replay off") ? "File > Replay Each Step > Off" : -1 !== e.indexOf("set theme") ? "Style > Theme Color" : -1 !== e.indexOf("set double color") ? "Style > Shade" : ""
}
,
iCn3DUI.prototype.resetAll = function() {
    var e = this.icn3d;
    e.reinitAfterLoad(),
    this.renderFinalStep(1),
    e.bRender && e.render()
}
,
iCn3DUI.prototype.selectResidues = function(e, t) {
    var i = this.icn3d;
    if (void 0 !== e && "" !== e) {
        e = e.substr(e.indexOf("_") + 1),
        this.bSelectResidue = !0,
        $(t).toggleClass("icn3d-highlightSeq");
        var n = e.substr(e.indexOf("_") + 1);
        if (i.residues.hasOwnProperty(n))
            if ($(t).hasClass("icn3d-highlightSeq")) {
                for (var r in i.residues[n])
                    i.hAtoms[r] = 1;
                if (this.selectedResidues[n] = 1,
                this.bAnnotations && void 0 !== $(t).attr("disease")) {
                    var s = $(t).attr("disease")
                      , o = i.centerAtoms(i.hash2Atoms(i.residues[n]));
                    15 < s.length && (s = s.substr(0, 15) + "...");
                    var a = i.LABELSIZE
                      , l = this.GREYD;
                    this.addLabel(s, o.center.x, o.center.y, o.center.z, a, l, void 0, "custom")
                }
            } else {
                for (var d in i.residues[n])
                    delete i.hAtoms[d];
                delete this.selectedResidues[n],
                i.removeHlObjects()
            }
    }
}
,
iCn3DUI.prototype.selectTitle = function(e) {
    var t = this
      , i = t.icn3d;
    if ($(e).hasClass("icn3d-seqTitle")) {
        var n, r, s, o = $(e).attr("chain");
        if (t.bAlignSeq ? t.bSelectAlignResidue = !1 : t.bSelectResidue = !1,
        t.bAnnotations || t.removeSeqChainBkgd(o),
        i.bCtrl || i.bShift || (t.removeSeqResidueBkgd(),
        t.removeSeqChainBkgd(),
        t.currSelectedSets = []),
        $(e).toggleClass("icn3d-highlightSeq"),
        t.bAnnotations ? (n = $(e).attr("setname"),
        r = $(e).attr("title")) : n = t.bAlignSeq ? "align_" + o : o,
        $(e).hasClass("icn3d-highlightSeq"))
            if (t.bAnnotations) {
                if ($(e).hasClass("icn3d-highlightSeq"))
                    if (t.removeHl2D(),
                    void 0 !== $(e).attr("gi")) {
                        i.bCtrl || i.bShift ? (t.currSelectedSets.push(o),
                        t.selectAChain(o, o, !1, !0)) : (t.currSelectedSets = [o],
                        t.selectAChain(o, o, !1)),
                        t.setLogCmd("select chain " + o, !0);
                        y = t.currSelectedSets.join(" or ");
                        1 < t.currSelectedSets.length && t.setLogCmd("select sets " + y, !0)
                    } else {
                        var a = {};
                        if (void 0 !== $(e).attr("domain") || void 0 !== $(e).attr("3ddomain") || void 0 !== $(e).attr("custom")) {
                            t.hlSummaryDomain3ddomain(e);
                            for (var l = $(e).attr("from").split(","), d = $(e).attr("to").split(","), c = 0, h = l.length; c < h; ++c)
                                for (var p = parseInt(l[c]), m = parseInt(d[c]), u = p; u <= m; ++u)
                                    a[f = o + "_" + (u + 1).toString()] = 1;
                            i.bCtrl || i.bShift ? t.selectResidueList(a, n, r, !0) : t.selectResidueList(a, n, r, !1),
                            f = o + "_" + parseInt((p + m) / 2).toString(),
                            s = i.centerAtoms(i.hash2Atoms(i.residues[f]))
                        } else if (void 0 !== $(e).attr("posarray")) {
                            var f, g = $(e).attr("posarray").split(",");
                            for (c = 0,
                            h = g.length; c < h; ++c)
                                a[f = void 0 !== $(e).attr("site") ? o + "_" + (parseInt(g[c]) + 1).toString() : o + "_" + g[c]] = 1;
                            i.bCtrl || i.bShift ? t.selectResidueList(a, n, r, !0) : t.selectResidueList(a, n, r, !1),
                            f = o + "_" + g[parseInt((0 + g.length) / 2)].toString(),
                            s = i.centerAtoms(i.hash2Atoms(i.residues[f]))
                        }
                        for (var v in i.labels)
                            "schematic" !== v && "distance" !== v && (i.labels[v] = []);
                        var b = i.LABELSIZE;
                        void 0 !== s && t.addLabel(r, s.center.x, s.center.y, s.center.z, b, "FFFF00", void 0, "custom"),
                        i.draw(),
                        t.setLogCmd("select " + t.residueids2spec(Object.keys(a)) + " | name " + n, !0),
                        i.bCtrl || i.bShift ? t.currSelectedSets.push(n) : t.currSelectedSets = [n];
                        y = t.currSelectedSets.join(" or ");
                        1 < t.currSelectedSets.length && t.setLogCmd("select sets " + y, !0)
                    }
            } else {
                i.bCtrl || i.bShift ? (t.currSelectedSets.push(n),
                t.selectAChain(o, n, !0, !0)) : (t.currSelectedSets = [n],
                t.selectAChain(o, n, !0)),
                t.bAlignSeq ? t.setLogCmd("select alignChain " + o, !0) : t.setLogCmd("select chain " + o, !0);
                var y = t.currSelectedSets.join(" or ");
                1 < t.currSelectedSets.length && t.setLogCmd("select sets " + y, !0)
            }
        else
            i.removeHlObjects(),
            t.removeHl2D(),
            $("#" + t.pre + "atomsCustom").val("")
    }
}
,
iCn3DUI.prototype.selectSequenceNonMobile = function() {
    var s = this;
    s.icn3d;
    $("#" + s.pre + "dl_sequence2").add("[id^=" + s.pre + "dt_giseq]").add("[id^=" + s.pre + "dt_custom]").add("[id^=" + s.pre + "dt_site]").add("[id^=" + s.pre + "dt_snp]").add("[id^=" + s.pre + "dt_clinvar]").add("[id^=" + s.pre + "dt_cdd]").add("[id^=" + s.pre + "dt_domain]").add("[id^=" + s.pre + "dt_interaction]").add("[id^=" + s.pre + "dt_ssbond]").add("[id^=" + s.pre + "dt_crosslink]").add("[id^=" + s.pre + "dt_transmem]").add("[id^=" + s.pre + "tt_giseq]").add("[id^=" + s.pre + "tt_custom]").add("[id^=" + s.pre + "tt_site]").add("[id^=" + s.pre + "tt_snp]").add("[id^=" + s.pre + "tt_clinvar]").add("[id^=" + s.pre + "tt_cdd]").add("[id^=" + s.pre + "tt_domain]").add("[id^=" + s.pre + "tt_interaction]").add("[id^=" + s.pre + "tt_ssbond]").add("[id^=" + s.pre + "tt_crosslink]").add("[id^=" + s.pre + "tt_transmem]").selectable({
        stop: function() {
            var e = s.icn3d;
            $(this).attr("id") === s.pre + "dl_sequence2" ? (s.bAlignSeq = !0,
            s.bAnnotations = !1) : (s.bAlignSeq = !1,
            s.bAnnotations = !0),
            !1 !== s.bSelectResidue || e.bShift || e.bCtrl || s.removeSelection(),
            $("span.ui-selected", this).each(function() {
                var e = $(this).attr("id");
                void 0 !== e && s.selectResidues(e, this)
            }),
            e.addHlObjects();
            var t = {};
            for (var i in s.selectedResidues) {
                var n = i.lastIndexOf("_");
                t[i.substr(0, n)] = 1
            }
            var r = Object.keys(t);
            s.updateHl2D(r),
            $("div.ui-selected", this).each(function() {
                void 0 !== $(this).attr("chain") && s.selectTitle(this)
            })
        }
    }),
    $("[id^=" + s.pre + "ov_giseq]").add("[id^=" + s.pre + "ov_custom]").add("[id^=" + s.pre + "ov_site]").add("[id^=" + s.pre + "ov_snp]").add("[id^=" + s.pre + "ov_clinvar]").add("[id^=" + s.pre + "ov_cdd]").add("[id^=" + s.pre + "ov_domain]").add("[id^=" + s.pre + "ov_interaction]").add("[id^=" + s.pre + "ov_ssbond]").add("[id^=" + s.pre + "ov_crosslink]").add("[id^=" + s.pre + "ov_transmem]").add("[id^=" + s.pre + "tt_giseq]").add("[id^=" + s.pre + "tt_custom]").add("[id^=" + s.pre + "tt_site]").add("[id^=" + s.pre + "tt_snp]").add("[id^=" + s.pre + "tt_clinvar]").add("[id^=" + s.pre + "tt_cdd]").add("[id^=" + s.pre + "tt_domain]").add("[id^=" + s.pre + "tt_interaction]").add("[id^=" + s.pre + "tt_ssbond]").add("[id^=" + s.pre + "tt_crosslink]").add("[id^=" + s.pre + "tt_transmem]").on("click", ".icn3d-seqTitle", function(e) {
        s.icn3d;
        e.stopImmediatePropagation(),
        s.bAlignSeq = !1,
        s.bAnnotations = !0,
        s.selectTitle(this),
        s.hlSummaryDomain3ddomain(this),
        window.getSelection ? window.getSelection().empty ? window.getSelection().empty() : window.getSelection().removeAllRanges && window.getSelection().removeAllRanges() : document.selection && document.selection.empty()
    })
}
,
iCn3DUI.prototype.hlSummaryDomain3ddomain = function(e) {
    this.icn3d;
    if (void 0 !== $(e).attr("domain")) {
        var t = $(e).attr("index")
          , i = $(e).attr("chain");
        0 !== $("[id^=" + i + "_domain_" + t + "]").length && $("[id^=" + i + "_domain_" + t + "]").addClass("icn3d-highlightSeqBox")
    }
    if (void 0 !== $(e).attr("3ddomain")) {
        t = $(e).attr("index"),
        i = $(e).attr("chain");
        0 !== $("[id^=" + i + "_3d_domain_" + t + "]").length && $("[id^=" + i + "_3d_domain_" + t + "]").addClass("icn3d-highlightSeqBox")
    }
}
,
iCn3DUI.prototype.selectSequenceMobile = function() {
    var a = this;
    a.icn3d;
    $("#" + a.pre + "dl_sequence2").add("[id^=" + a.pre + "giseq]").add("[id^=" + a.pre + "custom]").add("[id^=" + a.pre + "site]").add("[id^=" + a.pre + "clinvar]").add("[id^=" + a.pre + "snp]").add("[id^=" + a.pre + "cdd]").add("[id^=" + a.pre + "domain]").add("[id^=" + a.pre + "interaction]").add("[id^=" + a.pre + "ssbond]").add("[id^=" + a.pre + "crosslink]").add("[id^=" + a.pre + "transmem]").on("click", ".icn3d-residue", function(e) {
        var t = a.icn3d;
        e.stopImmediatePropagation(),
        $(this).attr("id") === a.pre + "dl_sequence2" ? (a.bAlignSeq = !0,
        a.bAnnotations = !1) : (a.bAlignSeq = !1,
        a.bAnnotations = !0);
        var i = $(this).attr("id");
        void 0 !== i && a.selectResidues(i, this),
        t.addHlObjects();
        var n = {};
        for (var r in a.selectedResidues) {
            var s = r.lastIndexOf("_");
            n[r.substr(0, s)] = 1
        }
        a.removeHl2D();
        var o = Object.keys(n);
        a.updateHl2D(o)
    })
}
,
iCn3DUI.prototype.selectChainMobile = function() {
    var t = this;
    t.icn3d;
    $("#" + t.pre + "dl_sequence2").add("[id^=" + t.pre + "giseq]").add("[id^=" + t.pre + "custom]").add("[id^=" + t.pre + "site]").add("[id^=" + t.pre + "clinvar]").add("[id^=" + t.pre + "snp]").add("[id^=" + t.pre + "cdd]").add("[id^=" + t.pre + "domain]").add("[id^=" + t.pre + "interaction]").add("[id^=" + t.pre + "ssbond]").add("[id^=" + t.pre + "crosslink]").add("[id^=" + t.pre + "transmem]").on("click", ".icn3d-seqTitle", function(e) {
        t.icn3d;
        e.stopImmediatePropagation(),
        $(this).attr("id") === t.pre + "dl_sequence2" ? (t.bAlignSeq = !0,
        t.bAnnotations = !1) : (t.bAlignSeq = !1,
        t.bAnnotations = !0),
        t.selectTitle(this),
        t.hlSummaryDomain3ddomain(this)
    })
}
,
iCn3DUI.prototype.removeSeqChainBkgd = function(t) {
    void 0 === t ? $(".icn3d-seqTitle").each(function(e) {
        $(this).removeClass("icn3d-highlightSeq"),
        $(this).removeClass("icn3d-highlightSeqBox")
    }) : $(".icn3d-seqTitle").each(function(e) {
        $(this).attr("chain") !== t && ($(this).removeClass("icn3d-highlightSeq"),
        $(this).removeClass("icn3d-highlightSeqBox"))
    })
}
,
iCn3DUI.prototype.removeSeqResidueBkgd = function() {
    $(".icn3d-residue").each(function(e) {
        $(this).removeClass("icn3d-highlightSeq")
    })
}
,
iCn3DUI.prototype.update2DdgmContent = function() {
    var e = this
      , t = (e.icn3d,
    "");
    void 0 !== e.cfg.mmdbid || void 0 !== e.cfg.gi ? (t += e.draw2Ddgm(e.interactionData, e.inputid, void 0, !0),
    t += e.set2DdgmNote(),
    $("#" + e.pre + "dl_2ddgm").html(t)) : void 0 === e.cfg.align && void 0 === e.cfg.chainalign && !e.bRealign || (t += e.draw2Ddgm(e.interactionData1, e.mmdbidArray[0].toUpperCase(), 0, !0),
    void 0 !== e.mmdbid_q && e.mmdbid_q === e.mmdbid_t ? t += e.draw2Ddgm(e.interactionData2, e.mmdbidArray[0].toUpperCase(), 1, !0) : t += e.draw2Ddgm(e.interactionData2, e.mmdbidArray[1].toUpperCase(), 1, !0),
    t += e.set2DdgmNote(!0),
    $("#" + e.pre + "dl_2ddgm").html(t))
}
,
iCn3DUI.prototype.changeSeqColor = function(e) {
    for (var t = this.icn3d, i = 0, n = e.length; i < n; ++i) {
        var r = e[i]
          , s = t.getFirstCalphaAtomObj(t.residues[r])
          , o = void 0 === s.color || "FFFFFF" === s.color.getHexString().toUpperCase() ? "DDDDDD" : s.color.getHexString()
          , a = void 0 !== s.color ? o : "CCCCCC";
        $("[id=giseq_" + this.pre + r + "]").attr("style", "color:#" + a),
        $("[id=align_" + this.pre + r + "]").attr("style", "color:#" + a),
        (void 0 !== this.cfg.align || void 0 !== this.cfg.chainalign || this.bRealign || this.bSymd) && $("[id=align_" + this.pre + r + "]").attr("style", "color:#" + a)
    }
}
,
iCn3DUI.prototype.removeHlAll = function() {
    this.icn3d;
    this.removeHlObjects(),
    this.removeHlSeq(),
    this.removeHl2D(),
    this.removeHlMenus()
}
,
iCn3DUI.prototype.removeHlObjects = function() {
    this.icn3d.removeHlObjects()
}
,
iCn3DUI.prototype.removeHlSeq = function() {
    this.icn3d;
    this.removeSeqResidueBkgd()
}
,
iCn3DUI.prototype.removeHl2D = function() {
    this.icn3d;
    $("#" + this.pre + "dl_2ddgm rect").attr("stroke", "#000000"),
    $("#" + this.pre + "dl_2ddgm circle").attr("stroke", "#000000"),
    $("#" + this.pre + "dl_2ddgm polygon").attr("stroke", "#000000"),
    $("#" + this.pre + "dl_2ddgm svg line").attr("stroke", "#000000"),
    $("#" + this.pre + "dl_2ddgm rect").attr("stroke-width", 1),
    $("#" + this.pre + "dl_2ddgm circle").attr("stroke-width", 1),
    $("#" + this.pre + "dl_2ddgm polygon").attr("stroke-width", 1),
    $("#" + this.pre + "dl_2ddgm line").attr("stroke-width", 1)
}
,
iCn3DUI.prototype.removeHlMenus = function() {
    this.icn3d;
    $("#" + this.pre + "atomsCustom").val(""),
    $("#" + this.pre + "atomsCustom")[0].blur()
}
,
iCn3DUI.prototype.updateHlAll = function(e, t, i, n) {
    var r = this.icn3d;
    r.prevHighlightAtoms = r.cloneHash(r.hAtoms),
    this.updateHlObjects(n),
    void 0 !== e ? this.updateHlSeqInChain(e, i) : this.updateHlSeq(void 0, void 0, i),
    this.updateHl2D(),
    void 0 !== t && !t || this.updateHlMenus(e)
}
,
iCn3DUI.prototype.updateHlObjects = function(e) {
    var t = this.icn3d;
    t.removeHlObjects(),
    (t.hAtoms && Object.keys(t.hAtoms).length < Object.keys(t.atoms).length || e) && (t.addHlObjects(),
    this.setMode("selection"))
}
,
iCn3DUI.prototype.updateHlSeq = function(e, t, i) {
    var n = this.icn3d;
    void 0 !== i && i || this.removeHlSeq(),
    void 0 === t && (t = n.getResiduesFromCalphaAtoms(n.hAtoms)),
    n.hAtoms && Object.keys(n.hAtoms).length < Object.keys(n.atoms).length && this.hlSeq(Object.keys(t)),
    this.changeSeqColor(Object.keys(t))
}
,
iCn3DUI.prototype.updateHlSeqInChain = function(e, t) {
    var i = this.icn3d;
    if (void 0 !== t && t || this.removeHlSeq(),
    !i.hAtoms || Object.keys(i.hAtoms).length != Object.keys(i.atoms).length)
        for (var n = 0, r = e.length; n < r; ++n) {
            var s = e[n];
            if (-1 !== Object.keys(i.chains).indexOf(s))
                this.hlSeqInChain(s);
            else {
                var o = [];
                void 0 !== i.defNames2Residues[s] && 0 < i.defNames2Residues[s].length && (o = i.defNames2Residues[s]);
                var a = {};
                if (void 0 !== i.defNames2Atoms[s] && 0 < i.defNames2Atoms[s].length) {
                    for (var l = 0, d = i.defNames2Atoms[s].length; l < d; ++l) {
                        var c = i.defNames2Atoms[s][l]
                          , h = i.atoms[c];
                        a[h.structure + "_" + h.chain + "_" + h.resi] = 1
                    }
                    o = o.concat(Object.keys(a))
                }
                this.hlSeq(o)
            }
        }
}
,
iCn3DUI.prototype.updateHl2D = function(e) {
    var t = this
      , i = t.icn3d;
    if (t.removeHl2D(),
    !i.hAtoms || Object.keys(i.hAtoms).length != Object.keys(i.atoms).length) {
        if (void 0 === e) {
            var n = i.getChainsFromAtoms(i.hAtoms);
            e = Object.keys(n)
        }
        if (void 0 !== e)
            for (var r = 0, s = e.length; r < s; ++r) {
                var o = i.intHash(i.chains[e[r]], i.hAtoms)
                  , a = Object.keys(o).length / Object.keys(i.chains[e[r]]).length
                  , l = i.getFirstCalphaAtomObj(o);
                if (void 0 !== i.alnChains[e[r]]) {
                    var d = i.intHash(i.alnChains[e[r]], o);
                    0 < Object.keys(d).length && (l = i.getFirstCalphaAtomObj(d))
                }
                var c = void 0 !== l && void 0 !== l.color ? "#" + l.color.getHexString() : "#FFFFFF"
                  , h = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[r] + "] rect[class='icn3d-hlnode']")
                  , p = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[r] + "] rect[class='icn3d-basenode']");
                void 0 !== h && (t.highlightNode("rect", h, p, a),
                $(h).attr("fill", c)),
                h = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[r] + "] circle[class='icn3d-hlnode']"),
                p = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[r] + "] circle[class='icn3d-basenode']"),
                void 0 !== h && (t.highlightNode("circle", h, p, a),
                $(h).attr("fill", c)),
                h = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[r] + "] polygon[class='icn3d-hlnode']"),
                p = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[r] + "] polygon[class='icn3d-basenode']"),
                void 0 !== h && (t.highlightNode("polygon", h, p, a),
                $(h).attr("fill", c))
            }
        if (void 0 !== t.lineArray2d)
            for (r = 0,
            s = t.lineArray2d.length; r < s; r += 2)
                $("#" + t.pre + "dl_2ddgm g[chainid1=" + t.lineArray2d[r] + "][chainid2=" + t.lineArray2d[r + 1] + "] line").attr("stroke", t.ORANGE);
        i.prevHighlightAtoms = i.cloneHash(i.hAtoms),
        t.setMode("selection")
    }
}
,
iCn3DUI.prototype.updateHlMenus = function(e) {
    this.icn3d;
    void 0 === e && (e = []);
    var t = this.setAtomMenu(e);
    $("#" + this.pre + "atomsCustom").length && ($("#" + this.pre + "atomsCustom").html(t),
    $("#" + this.pre + "atomsCustom")[0].blur())
}
,
iCn3DUI.prototype.setAtomMenu = function(e) {
    var t = this.icn3d
      , i = ""
      , n = void 0 !== t.defNames2Residues ? Object.keys(t.defNames2Residues) : []
      , r = void 0 !== t.defNames2Atoms ? Object.keys(t.defNames2Atoms) : []
      , s = n.concat(r).sort()
      , o = [];
    $.each(s, function(e, t) {
        -1 === $.inArray(t, o) && o.push(t)
    });
    for (var a = 0, l = o.length; a < l; ++a) {
        var d, c, h = o[a];
        if (void 0 !== t.defNames2Atoms && t.defNames2Atoms.hasOwnProperty(h)) {
            var p = t.defNames2Atoms[h];
            0 < p.length && (d = t.atoms[p[0]])
        } else if (void 0 !== t.defNames2Residues && t.defNames2Residues.hasOwnProperty(h)) {
            var m = t.defNames2Residues[h];
            0 < m.length && (c = t.residues[m[0]]) && (d = t.atoms[Object.keys(c)[0]])
        }
        var u = void 0 === d || void 0 === d.color || "FFFFFF" === d.color.getHexString().toUpperCase() ? "DDDDDD" : d.color.getHexString()
          , f = void 0 !== d && void 0 !== d.color ? u : "000000";
        -1 != e.indexOf(h) ? i += "<option value='" + h + "' style='color:#" + f + "' selected='selected'>" + h + "</option>" : i += "<option value='" + h + "' style='color:#" + f + "'>" + h + "</option>"
    }
    return i
}
,
iCn3DUI.prototype.setPredefinedInMenu = function() {
    var e = this
      , t = e.icn3d;
    if (e.setChainsInMenu(),
    e.setProtNuclLigInMenu(),
    void 0 !== e.cfg.mmdbid || void 0 !== e.cfg.gi || void 0 !== e.cfg.chainalign)
        for (var i in t.tddomains)
            e.selectResidueList(t.tddomains[i], i, i, !1, !1);
    if ((void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign) && e.bFullUi) {
        e.selectResidueList(e.consHash1, e.conservedName1, e.conservedName1, !1, !1),
        e.selectResidueList(e.consHash2, e.conservedName2, e.conservedName2, !1, !1),
        e.selectResidueList(e.nconsHash1, e.nonConservedName1, e.nonConservedName1, !1, !1),
        e.selectResidueList(e.nconsHash2, e.nonConservedName2, e.nonConservedName2, !1, !1),
        e.selectResidueList(e.nalignHash1, e.notAlignedName1, e.notAlignedName1, !1, !1),
        e.selectResidueList(e.nalignHash2, e.notAlignedName2, e.notAlignedName2, !1, !1);
        var n = {};
        for (var r in t.alnChains)
            n = t.unionHash(n, t.alnChains[r]);
        var s = {}
          , o = {};
        for (var a in n) {
            var l = t.atoms[a]
              , d = l.structure + "_" + l.chain;
            s[d + "_" + l.resi] = 1,
            o[d] = 1
        }
        var c = "select " + e.residueids2spec(Object.keys(s));
        e.addCustomSelection(Object.keys(s), "protein_aligned", "aligned protein and nucleotides", c, !0)
    }
}
,
iCn3DUI.prototype.hlSeq = function(e) {
    this.icn3d;
    for (var t = {}, i = 0, n = e.length; i < n; ++i) {
        var r = e[i]
          , s = $("[id=giseq_" + this.pre + r + "]");
        0 !== s.length && s.addClass("icn3d-highlightSeq"),
        0 !== (s = $("[id=align_" + this.pre + r + "]")).length && s.addClass("icn3d-highlightSeq");
        var o = r.lastIndexOf("_");
        t[a = r.substr(0, o)] = 1
    }
    for (var a in t)
        0 !== $("#giseq_summary_" + this.pre + a).length && $("#giseq_summary_" + this.pre + a).addClass("icn3d-highlightSeqBox")
}
,
iCn3DUI.prototype.hlSeqInChain = function(e) {
    for (var t = this.icn3d, i = 0, n = t.chainsSeq[e].length; i < n; ++i) {
        var r = e + "_" + t.chainsSeq[e][i].resi;
        0 !== $("#giseq_" + this.pre + r).length && $("#giseq_" + this.pre + r).addClass("icn3d-highlightSeq"),
        0 !== $("#align_" + this.pre + r).length && $("#align_" + this.pre + r).addClass("icn3d-highlightSeq")
    }
    0 !== $("#giseq_summary_" + this.pre + e).length && $("#giseq_summary_" + this.pre + e).addClass("icn3d-highlightSeqBox")
}
,
iCn3DUI.prototype.toggleHighlight = function() {
    var e = this.icn3d;
    0 < e.prevHighlightObjects.length || 0 < e.prevHighlightObjects_ghost.length ? (this.clearHighlight(),
    e.bShowHighlight = !1) : (this.showHighlight(),
    e.bShowHighlight = !0)
}
,
iCn3DUI.prototype.clearHighlight = function() {
    var e = this.icn3d;
    e.labels.picking = [],
    e.draw(),
    e.removeHlObjects(),
    this.removeHl2D(),
    e.bRender && e.render(),
    this.removeSeqChainBkgd(),
    this.removeSeqResidueBkgd(),
    this.bSelectResidue = !1
}
,
iCn3DUI.prototype.showHighlight = function() {
    this.icn3d.addHlObjects(),
    this.updateHlAll()
}
,
iCn3DUI.prototype.highlightChains = function(e) {
    var t = this.icn3d;
    t.removeHlObjects(),
    this.removeHl2D(),
    t.addHlObjects(),
    this.updateHl2D(e);
    for (var i = {}, n = 0, r = e.length; n < r; ++n) {
        var s = e[n];
        for (var o in t.chainsSeq[s]) {
            var a = t.chainsSeq[s][o]
              , l = s + "_" + a.resi;
            "" !== a.name && "-" !== a.name && (i[l] = 1)
        }
    }
    this.hlSeq(Object.keys(i))
}
,
iCn3DUI.prototype.setTools = function() {
    this.icn3d;
    var e = "";
    return e += this.divStr + "selection' style='display:none;'><div style='position:absolute; z-index:555; float:left; display:table-row; margin: 32px 0px 0px 3px;'>",
    e += "<table style='margin-top: 3px; width:100px;'><tr valign='center'>",
    e += this.setTools_base(),
    e += "</tr></table>",
    e += "</div></div>"
}
,
iCn3DUI.prototype.setButton = function(e, t, i, n, r) {
    this.icn3d;
    return r = void 0 !== r ? "color:" + r : "",
    "<div style='margin:3px 0px 0px 10px;'><button style='-webkit-appearance:" + e + "; height:36px;" + (this.isMobile() ? " background-color:#DDDDDD;" : "") + "' id='" + this.pre + t + "'><span style='white-space:nowrap;" + r + "' class='icn3d-commandTitle' title='" + i + "'>" + n + "</span></button></div>"
}
,
iCn3DUI.prototype.setTools_base = function() {
    var e = this
      , t = (e.icn3d,
    "")
      , i = e.isMobile() ? "none" : "button"
      , n = "<td valign='top'>";
    return void 0 === e.cfg.align && void 0 === e.cfg.chainalign || (t += n + e.setButton(i, "alternate", "Alternate the structures", 'Alternate<br/>(Key "a")', e.ORANGE) + "</td>"),
    t += n + e.setButton(i, "saveimage", "Save iCn3D PNG Image", "Save iCn3D<br/>PNG Image") + "</td>",
    void 0 === e.cfg.cid && (t += n + e.setButton(i, "hbondsYes", "View H-Bonds & Interactions", "H-Bonds &<br/> Interactions") + "</td>"),
    t += n + e.setButton(i, "show_selected", "View ONLY the selected atoms", "View Only<br/>Selection") + "</td>",
    t += n + e.setButton(i, "toggleHighlight", "Turn on and off the 3D highlight in the viewer", "Toggle<br/>Highlight") + "</td>",
    void 0 === e.cfg.cid && (t += n + e.setButton(i, "removeLabels", "Remove Labels", "Remove<br/>Labels") + "</td>"),
    t
}
,
iCn3DUI.prototype.setTopMenusHtmlMobile = function(e, t, i) {
    var n = this
      , r = (n.icn3d,
    "");
    if (r += "<div style='position:relative;'>",
    r += n.divStr + "popup' class='icn3d-text icn3d-popup'></div>",
    r += n.setReplayHtml(),
    !n.isMobile()) {
        var s = n.WIDTH - 40 + 5;
        r += n.buttonStr + "fullscreen' style='position:absolute; z-index:1999; display:block; padding:0px; margin: 7px 0px 0px " + s + "px; width:30px; height:34px; border-radius:4px; border:none;' title='Full screen'>",
        r += "<svg fill='#1c94c4' viewBox='0 0 24 24' width='24' height='24'>",
        r += "<path d='M0 0h24v24H0z' fill='none'></path>",
        r += "<path d='M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z'></path>",
        r += "</svg>",
        r += "</button>"
    }
    r += "\x3c!--https://forum.jquery.com/topic/looking-for-a-jquery-horizontal-menu-bar--\x3e",
    r += n.divStr + "mnlist' style='position:absolute; z-index:999; float:left; display:block; margin: 5px 0px 0px 5px;'>",
    r += "<div>",
    r += "<accordion id='" + n.pr2e + "accordion0' class='icn3d-accordion'>",
    n.cfg.notebook ? r += "<h3 style='width:20px; height:24px; position:relative'><span style='position:absolute; left:3px; top:4px;'>&#9776;</span></h3>" : r += "<h3 style='width:20px; height:20px; position:relative'><span style='position:absolute; left:7px; top:8px;'>&#9776;</span></h3>",
    r += "<div>";
    var o = "<li><span class='icn3d-menu-color'";
    r += "<ul class='icn3d-mn'>",
    r += o + ">File</span>",
    r += n.setMenu1_base(),
    r += o + ">Select</span>",
    r += n.setMenu2_base(),
    r += o + ">View</span>",
    r += n.setMenu2b_base(),
    r += o + " id='" + n.pre + "style'>Style</span>",
    r += n.setMenu3_base(),
    r += o + " id='" + n.pre + "color'>Color</span>",
    r += n.setMenu4_base(),
    r += o + ">Analysis</span>",
    r += n.setMenu5_base(),
    r += o + ">Help</span>",
    r += n.setMenu6_base(),
    r += "<li><div style='position:relative; margin-top:-6px;'>" + t,
    r += "<div class='icn3d-commandTitle' style='margin-top: 3px; white-space: nowrap;'>" + i,
    void 0 !== n.cfg.align && (r += "<li><span id='" + n.pre + "alternate2' class='icn3d-menu-color' title='Alternate the structures'>Alternate</span>"),
    r += "</ul>",
    r += "</div>",
    r += "</accordion>",
    r += "</div>",
    r += "</div>";
    var a = "white" == n.opts.background || "grey" == n.opts.background ? "black" : n.GREYD;
    if (r += n.divStr + "title' class='icn3d-commandTitle' style='font-size:1.2em; font-weight:normal; position:absolute; z-index:1; float:left; display:block; margin: 12px 0px 0px 40px; color:" + a + "; width:" + (n.WIDTH - 40).toString() + "px'></div>",
    r += n.divStr + "viewer' style='position:relative; width:100%; height:100%; background-color: " + n.GREYD + ";'>",
    r += n.divStr + "mnLogSection'>",
    r += "<div style='height: " + n.MENU_HEIGHT + "px;'></div>",
    r += "</div>",
    void 0 === n.cfg.mmtfid) {
        var l = n.realHeight < 300 ? "top:100px; font-size: 1.2em;" : "top:180px; font-size: 1.8em;";
        r += n.divStr + "wait' style='position:absolute; left:50px; " + l + " color: #444444;'>Loading data...</div>"
    }
    r += "<canvas id='" + n.pre + "canvas' style='width:100%; height: 100%; background-color: #000;'>Your browser does not support WebGL.</canvas>",
    void 0 !== n.cfg.showcommand && !n.cfg.showcommand || (r += n.setLogWindow()),
    r += "</div>",
    r += "</div>",
    r += n.setDialogs(),
    r += n.setCustomDialogs(),
    $("#" + e).html(r),
    $("accordion").accordion({
        collapsible: !0,
        active: !1,
        heightStyle: "content"
    }),
    $("accordion div").removeClass("ui-accordion-content ui-corner-all ui-corner-bottom ui-widget-content"),
    $(".icn3d-mn").menu({
        position: {
            my: "left top",
            at: "right top"
        }
    }),
    $(".icn3d-mn").hover(function() {}, function() {
        $("accordion").accordion("option", "active", "none")
    }),
    $("#" + n.pre + "accordion0").hover(function() {
        $("#" + n.pre + "accordion0 div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion0 div").css("display", "none")
    })
}
,
iCn3DUI.prototype.setReplayHtml = function(e) {
    this.icn3d;
    var t = "";
    return t += this.divStr + "replay' style='display:none; position:absolute; z-index:9999; top:" + parseInt(this.HEIGHT - 100).toString() + "px; left:20px;'>",
    t += "<div title='Click to replay one step'><svg style='cursor:pointer;' fill='#f8b84e' viewBox='0 0 60 60' width='40' height='40'>",
    t += '<circle style="fill:#f8b84e;" cx="29" cy="29" r="29"/>',
    t += "<g>",
    t += '<polygon style="fill:#FFFFFF;" points="44,29 22,44 22,29.273 22,14"/>',
    t += '<path style="fill:#FFFFFF;" d="M22,45c-0.16,0-0.321-0.038-0.467-0.116C21.205,44.711,21,44.371,21,44V14c0-0.371,0.205-0.711,0.533-0.884c0.328-0.174,0.724-0.15,1.031,0.058l22,15C44.836,28.36,45,28.669,45,29s-0.164,0.64-0.437,0.826l-22,15C22.394,44.941,22.197,45,22,45z M23,15.893v26.215L42.225,29L23,15.893z"/>',
    t += "</g>",
    t += "</svg></div>",
    t += this.divStr + "replay_menu' style='background-color:#DDDDDD; padding:3px; font-weight:bold;'></div>",
    t += this.divStr + "replay_cmd' style='background-color:#DDDDDD; padding:3px; max-width:250px'></div>",
    t += "</div>"
}
,
iCn3DUI.prototype.setTopMenusHtml = function(e, t, i) {
    var n = this
      , r = (n.icn3d,
    "");
    r += "<div style='position:relative;'>",
    r += n.divStr + "popup' class='icn3d-text icn3d-popup'></div>",
    r += n.setReplayHtml(),
    r += "\x3c!--https://forum.jquery.com/topic/looking-for-a-jquery-horizontal-menu-bar--\x3e",
    r += n.divStr + "mnlist' style='position:absolute; z-index:999; float:left; display:table-row; margin-top: -2px;'>",
    r += "<table border='0' cellpadding='0' cellspacing='0' width='100'><tr>";
    var s = '<td valign="top">';
    if (r += s + n.setMenu1() + "</td>",
    n.cfg.simplemenu || (r += s + n.setMenu2() + "</td>"),
    r += s + n.setMenu2b() + "</td>",
    r += s + n.setMenu3() + "</td>",
    r += s + n.setMenu4() + "</td>",
    n.cfg.simplemenu || (r += s + n.setMenu5() + "</td>",
    r += s + n.setMenu6() + "</td>",
    r += s + "<div style='position:relative; margin-left:6px;'>" + t,
    r += "<div class='icn3d-commandTitle' style='min-width:40px; margin-top: 3px; white-space: nowrap;'>" + i,
    r += s + '<div class="icn3d-commandTitle" style="white-space:nowrap; margin-top:10px; border-left:solid 1px #888888"><span id="' + n.pre + 'selection_expand" class="icn3d-expand icn3d-link" title="Expand">' + n.space2 + "Show Toolbar" + n.space2 + '</span><span id="' + n.pre + 'selection_shrink" class="icn3d-shrink icn3d-link" style="display:none;" title="Shrink">' + n.space2 + "Hide Toolbar" + n.space2 + "</span></div></td>",
    r += s + '<div class="icn3d-commandTitle" style="white-space:nowrap; margin-top:8px; border-left:solid 1px #888888">' + n.space2 + '<input type="text" id="' + n.pre + 'search_seq" size="10" placeholder="one-letter seq."> <button style="white-space:nowrap;" id="' + n.pre + 'search_seq_button">Search Seq.</button> <a style="text-decoration: none;" href="' + n.baseUrl + 'icn3d/icn3d.html#selectb" target="_blank" title="Specification tips">?</a></div></td>'),
    r += "</tr>",
    r += "</table>",
    r += "</div>",
    r += n.setTools(),
    r += n.divStr + "title' class='icn3d-commandTitle' style='font-size:1.2em; font-weight:normal; position:absolute; z-index:1; float:left; display:table-row; margin: 85px 0px 0px 5px; color:" + n.GREYD + "; width:" + n.WIDTH + "px'></div>",
    r += n.divStr + "viewer' style='position:relative; width:100%; height:100%; background-color: " + n.GREYD + ";'>",
    r += n.divStr + "mnLogSection'>",
    r += "<div style='height: " + n.MENU_HEIGHT + "px;'></div>",
    r += " </div>",
    void 0 === n.cfg.mmtfid) {
        var o = n.realHeight < 300 ? "top:100px; font-size: 1.2em;" : "top:180px; font-size: 1.8em;";
        r += n.divStr + "wait' style='position:absolute; left:50px; " + o + " color: #444444;'>Loading data...</div>"
    }
    r += "<canvas id='" + n.pre + "canvas' style='width:100%; height: 100%; background-color: #000;'>Your browser does not support WebGL.</canvas>",
    void 0 !== n.cfg.showcommand && !n.cfg.showcommand || (r += n.setLogWindow()),
    r += "</div>",
    r += "</div>",
    r += n.setDialogs(),
    r += n.setCustomDialogs(),
    $("#" + e).html(r),
    $("accordion").accordion({
        collapsible: !0,
        active: !1,
        heightStyle: "content"
    }),
    $("accordion div").removeClass("ui-accordion-content ui-corner-all ui-corner-bottom ui-widget-content"),
    $(".icn3d-mn").menu({
        position: {
            my: "left top",
            at: "right top"
        }
    }),
    $(".icn3d-mn").hover(function() {}, function() {
        $("accordion").accordion("option", "active", "none")
    }),
    $("#" + n.pre + "accordion1").hover(function() {
        $("#" + n.pre + "accordion1 div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion1 div").css("display", "none")
    }),
    $("#" + n.pre + "accordion2").hover(function() {
        $("#" + n.pre + "accordion2 div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion2 div").css("display", "none")
    }),
    $("#" + n.pre + "accordion2b").hover(function() {
        $("#" + n.pre + "accordion2b div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion2b div").css("display", "none")
    }),
    $("#" + n.pre + "accordion3").hover(function() {
        $("#" + n.pre + "accordion3 div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion3 div").css("display", "none")
    }),
    $("#" + n.pre + "accordion4").hover(function() {
        $("#" + n.pre + "accordion4 div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion4 div").css("display", "none")
    }),
    $("#" + n.pre + "accordion5").hover(function() {
        $("#" + n.pre + "accordion5 div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion5 div").css("display", "none")
    }),
    $("#" + n.pre + "accordion6").hover(function() {
        $("#" + n.pre + "accordion6 div").css("display", "block")
    }, function() {
        $("#" + n.pre + "accordion6 div").css("display", "none")
    })
}
,
iCn3DUI.prototype.getLink = function(e, t) {
    this.icn3d;
    return "<li><span id='" + this.pre + e + "' class='icn3d-link'>" + t + "</span></li>"
}
,
iCn3DUI.prototype.getLinkWrapper = function(e, t, i) {
    this.icn3d;
    return "<li id='" + this.pre + i + "'><span id='" + this.pre + e + "' class='icn3d-link'>" + t + "</span></li>"
}
,
iCn3DUI.prototype.getRadio = function(e, t, i, n) {
    this.icn3d;
    var r = n ? " checked" : "";
    return "<li><label for='" + this.pre + t + "' class='icn3d-rad'>" + this.inputRadioStr + "name='" + this.pre + e + "' class='" + this.pre + e + "' v='" + i + "' id='" + this.pre + t + "'" + r + "><span class='ui-icon ui-icon-blank'></span> <span class='icn3d-rad-text'>" + i + "</span></label></li>"
}
,
iCn3DUI.prototype.getRadioColor = function(e, t, i, n, r) {
    this.icn3d;
    var s = r ? " checked" : "";
    return "<li><label for='" + this.pre + t + "' class='icn3d-rad'>" + this.inputRadioStr + "name='" + this.pre + e + "' id='" + this.pre + t + "'" + s + "><span class='ui-icon ui-icon-blank'></span> <span class='icn3d-color-rad-text' color='" + n + "'><span style='background-color:#" + n + "'>" + this.space3 + "</span> " + i + "</span></label></li>"
}
,
iCn3DUI.prototype.setMenu1 = function() {
    this.icn3d;
    var e = "";
    return e += "<div class='icn3d-menu'>",
    e += "<accordion id='" + this.pre + "accordion1' class='icn3d-accordion'>",
    e += "<h3>File</h3>",
    e += "<div>",
    e += this.setMenu1_base(),
    e += "</div>",
    e += "</accordion>",
    e += "</div>"
}
,
iCn3DUI.prototype.setMenu1_base = function() {
    var e = this
      , t = (e.icn3d,
    "");
    return t += "<ul class='icn3d-mn'>",
    t += "<li><span>Retrieve by ID</span>",
    t += "<ul>",
    t += e.getLink("mn1_mmdbid", "MMDB ID"),
    t += e.getLink("mn1_mmtfid", "MMTF ID"),
    t += e.getLink("mn1_pdbid", "PDB ID"),
    t += e.getLink("mn1_opmid", "OPM PDB ID"),
    t += e.getLink("mn1_mmcifid", "mmCIF ID"),
    t += e.getLink("mn1_gi", "NCBI gi"),
    t += e.getLink("mn1_cid", "PubChem CID"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Open File</span>",
    t += "<ul>",
    t += e.getLink("mn1_pdbfile", "PDB File"),
    t += e.getLink("mn1_mmciffile", "mmCIF File"),
    t += e.getLink("mn1_mol2file", "Mol2 File"),
    t += e.getLink("mn1_sdffile", "SDF File"),
    t += e.getLink("mn1_xyzfile", "XYZ File"),
    t += e.getLink("mn1_urlfile", "URL (Same Host) "),
    t += "<li>-</li>",
    t += e.getLink("mn1_pngimage", "iCn3D PNG Image"),
    t += e.getLink("mn1_state", "State/Script File"),
    t += e.getLink("mn1_fixedversion", "Share Link in Archived Ver."),
    t += e.getLink("mn1_selection", "Selection File"),
    t += "<li>-</li>",
    t += "<li><span>Electron Density (DSN6)</span>",
    t += "<ul>",
    t += e.getLink("mn1_dsn6", "Local File"),
    t += e.getLink("mn1_dsn6url", "URL (Same Host)"),
    t += "</ul>",
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Align</span>",
    t += "<ul>",
    t += e.getLink("mn1_blast_rep_id", "Sequence to Structure"),
    t += e.getLink("mn1_align", "Structure to Structure"),
    t += e.getLink("mn1_chainalign", "Chain to Chain"),
    t += "</ul>",
    t += "</li>",
    t += "<li id='" + e.pre + "mn2_realignWrap'><span>Realign Selection</span>",
    t += "<ul>",
    t += e.getRadio("mn2_realign", "mn2_realignonseqalign", "on Sequence Alignment", !0),
    t += e.getRadio("mn2_realign", "mn2_realignresbyres", "Residue by Residue"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>3D Printing</span>",
    t += "<ul>",
    void 0 === e.cfg.cid ? (t += e.getLink("mn1_exportVrmlStab", "VRML (Color, W/  Stabilizers)"),
    t += e.getLink("mn1_exportStlStab", "STL (W/  Stabilizers)"),
    t += "<li>-</li>",
    t += e.getLink("mn1_exportVrml", "VRML (Color)"),
    t += e.getLink("mn1_exportStl", "STL"),
    t += "<li>-</li>",
    t += e.getLink("mn1_stabilizerYes", "Add All  Stabilizers"),
    t += e.getLink("mn1_stabilizerNo", "Remove All  Stabilizers"),
    t += "<li>-</li>",
    t += e.getLink("mn1_stabilizerOne", "Add One  Stabilizer"),
    t += e.getLink("mn1_stabilizerRmOne", "Remove One  Stabilizer"),
    t += "<li>-</li>",
    t += e.getLink("mn1_thicknessSet", "Set Thickness"),
    t += e.getLink("mn1_thicknessReset", "Reset Thickness")) : (t += e.getLink("mn1_exportVrml", "VRML (Color)"),
    t += e.getLink("mn1_exportStl", "STL")),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Save Files</span>",
    t += "<ul>",
    t += "<li><span>iCn3D PNG Image</span>",
    t += "<ul>",
    t += e.getLink("mn1_exportCanvas", "Original Size"),
    t += e.getLink("mn1_exportCanvas2", "2X Large"),
    t += e.getLink("mn1_exportCanvas4", "4X Large"),
    t += e.getLink("mn1_exportCanvas8", "8X Large"),
    t += "</ul>",
    t += "</li>",
    t += e.getLink("mn1_exportState", "State File"),
    t += e.getLink("mn1_exportSelections", "Selection File"),
    t += e.getLink("mn1_exportCounts", "Residue Counts"),
    t += e.getLink("mn1_exportPdbRes", "PDB"),
    t += "<li><br/></li>",
    t += "</ul>",
    t += "</li>",
    t += e.getLink("mn1_sharelink", "Share Link"),
    t += e.getLink("mn1_replayon", "Replay Each Step"),
    t += "<li><br/></li>",
    t += "</ul>"
}
,
iCn3DUI.prototype.setMenu2 = function() {
    this.icn3d;
    var e = "";
    return e += "<div class='icn3d-menu'>",
    e += "<accordion id='" + this.pre + "accordion2' class='icn3d-accordion'>",
    e += "<h3>Select</h3>",
    e += "<div>",
    e += this.setMenu2_base(),
    e += "</div>",
    e += "</accordion>",
    e += "</div>"
}
,
iCn3DUI.prototype.setMenu2_base = function() {
    var e = this
      , t = (e.icn3d,
    "");
    return t += "<ul class='icn3d-mn'>",
    t += e.getLink("mn2_definedsets", "Defined Sets"),
    t += e.getLink("mn2_selectall", "All"),
    t += e.getLink("mn2_selectdisplayed", "Displayed Set"),
    t += e.getLink("mn2_aroundsphere", "by Distance"),
    t += "<li><span>by Property</span>",
    t += "<ul>",
    t += e.getLink("mn2_propPos", "Positive"),
    t += e.getLink("mn2_propNeg", "Negative"),
    t += e.getLink("mn2_propHydro", "Hydrophobic"),
    t += e.getLink("mn2_propPolar", "Polar"),
    t += e.getLink("mn2_propBfactor", "B-factor"),
    t += e.getLink("mn2_propSolAcc", "Solvent Accessibility"),
    t += "</ul>",
    t += "</li>",
    t += e.getLink("mn2_selectcomplement", "Inverse"),
    t += e.getLink("mn2_selectmainchains", "Main Chains"),
    t += e.getLink("mn2_selectsidechains", "Side Chains"),
    t += e.getLink("mn2_selectmainsidechains", "Main & Side Chains"),
    t += e.getLink("mn2_command", "Advanced"),
    void 0 === e.cfg.cid ? (t += "<li><span>Select on 3D</span>",
    t += "<ul>",
    t += '<li>"Alt"+Click: start selection</li>',
    t += '<li>"Ctrl"+Click: union selection</li>',
    t += '<li>"Shift"+Click: range Selection</li>',
    t += "<li>-</li>",
    t += e.getRadio("mn2_pk", "mn2_pkChain", "Chain"),
    void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi || (t += e.getRadio("mn2_pk", "mn2_pkDomain", "3D Domain")),
    t += e.getRadio("mn2_pk", "mn2_pkStrand", "Strand/Helix"),
    t += e.getRadio("mn2_pk", "mn2_pkResidue", "Residue", !0),
    t += e.getRadio("mn2_pk", "mn2_pkYes", "Atom"),
    t += e.getRadio("mn2_pk", "mn2_pkNo", "None"),
    t += "</ul>",
    t += "</li>") : e.isMobile() ? t += "<li><span>Touch to pick</span>" : t += '<li><span>Picking with<br>"Alt" + Click</span>',
    t += "<li>-</li>",
    t += e.getLink("mn2_saveselection", "Save Selection"),
    t += e.getLink("clearall", "Clear Selection"),
    t += "<li>-</li>",
    t += "<li><span>Highlight Color</span>",
    t += "<ul>",
    t += e.getRadio("mn2_hl_clr", "mn2_hl_clrYellow", "Yellow", !0),
    t += e.getRadio("mn2_hl_clr", "mn2_hl_clrGreen", "Green"),
    t += e.getRadio("mn2_hl_clr", "mn2_hl_clrRed", "Red"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Highlight Style</span>",
    t += "<ul>",
    t += e.getRadio("mn2_hl_style", "mn2_hl_styleOutline", "Outline", !0),
    t += e.getRadio("mn2_hl_style", "mn2_hl_styleObject", "3D Objects"),
    t += "</ul>",
    t += "</li>",
    t += e.getLink("toggleHighlight2", "Toggle Highlight"),
    t += "<li><br/></li>",
    t += "</ul>"
}
,
iCn3DUI.prototype.setMenu2b = function() {
    this.icn3d;
    var e = "";
    return e += "<div class='icn3d-menu'>",
    e += "<accordion id='" + this.pre + "accordion2b' class='icn3d-accordion'>",
    e += "<h3>View</h3>",
    e += "<div>",
    e += this.setMenu2b_base(),
    e += "</div>",
    e += "</accordion>",
    e += "</div>"
}
,
iCn3DUI.prototype.setMenu2b_base = function() {
    var e = this
      , t = (e.icn3d,
    "");
    return t += "<ul class='icn3d-mn'>",
    t += e.getLink("mn2_show_selected", "View Only <br>Selection"),
    t += e.getLink("mn2_hide_selected", "Hide Selection"),
    t += e.getLink("mn2_selectedcenter", "Zoom in Selection"),
    t += e.getLink("mn6_center", "Center Selection"),
    t += e.getLink("mn2_fullstru", "View Full Structure"),
    t += "<li id='" + e.pre + "mn2_alternateWrap'><span id='" + e.pre + "mn2_alternate' class='icn3d-link'>Alternate (Key \"a\")</span></li>",
    void 0 !== e.cfg.opmid ? (t += "<li id='" + e.pre + "togglememli'><span id='" + e.pre + "togglemem' class='icn3d-link'>Toggle Membrane</span></li>",
    t += "<li id='" + e.pre + "adjustmemli'><span id='" + e.pre + "adjustmem' class='icn3d-link'>Adjust Membrane</span></li>",
    t += "<li id='" + e.pre + "selectplaneli'><span id='" + e.pre + "selectplane' class='icn3d-link'>Select between<br>Two X-Y Planes</span></li>") : (t += "<li id='" + e.pre + "togglememli' style='display:none'><span id='" + e.pre + "togglemem' class='icn3d-link'>Toggle Membrane</span></li>",
    t += "<li id='" + e.pre + "adjustmemli' style='display:none'><span id='" + e.pre + "adjustmem' class='icn3d-link'>Adjust Membrane</span></li>",
    t += "<li id='" + e.pre + "selectplaneli' style='display:none'><span id='" + e.pre + "selectplane' class='icn3d-link'>Select between<br>Two X-Y Planes</span></li>"),
    t += "<li>-</li>",
    t += e.getLink("mn6_sidebyside", "Side by Side"),
    t += "<li><span>Rotate</span>",
    t += "<ul>",
    t += "<li><span>Rotate 90&deg;</span>",
    t += "<ul>",
    t += e.getRadio("mn6_rotate90", "mn6_rotatex", "X-axis (Shift + Key M)"),
    t += e.getRadio("mn6_rotate90", "mn6_rotatey", "Y-axis (Shift + Key J)"),
    t += e.getRadio("mn6_rotate90", "mn6_rotatez", "Z-axis"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Auto Rotation</span>",
    t += "<ul>",
    t += e.getRadio("mn6_rotate", "mn6_rotateleft", "Rotate Left"),
    t += e.getRadio("mn6_rotate", "mn6_rotateright", "Rotate Right"),
    t += e.getRadio("mn6_rotate", "mn6_rotateup", "Rotate Up"),
    t += e.getRadio("mn6_rotate", "mn6_rotatedown", "Rotate Down"),
    t += "</ul>",
    t += "</li>",
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Camera</span>",
    t += "<ul>",
    t += e.getRadio("mn6_camera", "mn6_cameraPers", "Perspective", !0),
    t += e.getRadio("mn6_camera", "mn6_cameraOrth", "Orthographic"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Fog for Selection</span>",
    t += "<ul>",
    t += e.getRadio("mn6_showfog", "mn6_showfogYes", "On"),
    t += e.getRadio("mn6_showfog", "mn6_showfogNo", "Off", !0),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Slab for Selection</span>",
    t += "<ul>",
    t += e.getRadio("mn6_showslab", "mn6_showslabYes", "On"),
    t += e.getRadio("mn6_showslab", "mn6_showslabNo", "Off", !0),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>XYZ-axes</span>",
    t += "<ul>",
    t += e.getRadio("mn6_showaxis", "mn6_showaxisYes", "Original"),
    t += e.getRadio("mn6_showaxis", "mn6_showaxisSel", "Prin. Comp. on Sel."),
    t += e.getRadio("mn6_showaxis", "mn6_showaxisNo", "Hide", !0),
    t += "</ul>",
    t += "</li>",
    t += "<li>-</li>",
    t += "<li><span>Reset</span>",
    t += "<ul>",
    t += e.getRadio("mn6_reset", "reset", "All"),
    t += e.getRadio("mn6_reset", "mn6_resetOrientation", "Orientation"),
    t += "</ul>",
    t += "</li>",
    t += e.getLink("mn6_back", "Undo"),
    t += e.getLink("mn6_forward", "Redo"),
    t += e.getLink("mn6_fullscreen", "Full Screen"),
    t += "<li><br/></li>",
    t += "</ul>"
}
,
iCn3DUI.prototype.setMenu3 = function() {
    this.icn3d;
    var e = "";
    return e += "<div class='icn3d-menu'>",
    e += "<accordion id='" + this.pre + "accordion3' class='icn3d-accordion'>",
    e += "<h3 id='" + this.pre + "style'>Style</h3>",
    e += "<div>",
    e += this.setMenu3_base(),
    e += "</div>",
    e += "</accordion>",
    e += "</div>"
}
,
iCn3DUI.prototype.setMenu3_base = function() {
    var e = this
      , t = (e.icn3d,
    "");
    t += "<ul class='icn3d-mn'>",
    void 0 === e.cfg.cid && (t += "<li><span>Proteins</span>",
    t += "<ul>",
    void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? t += e.getRadio("mn3_proteins", "mn3_proteinsRibbon", "Ribbon") : t += e.getRadio("mn3_proteins", "mn3_proteinsRibbon", "Ribbon", !0),
    t += e.getRadio("mn3_proteins", "mn3_proteinsStrand", "Strand"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsCylinder", "Cylinder and Plate"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsSchematic", "Schematic"),
    void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? t += e.getRadio("mn3_proteins", "mn3_proteinsCalpha", "C Alpha Trace", !0) : t += e.getRadio("mn3_proteins", "mn3_proteinsCalpha", "C Alpha Trace"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsBackbone", "Backbone"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsBfactor", "B-factor Tube"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsLines", "Lines"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsStick", "Stick"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsBallstick", "Ball and Stick"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsSphere", "Sphere"),
    t += e.getRadio("mn3_proteins", "mn3_proteinsNo", "Hide"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Side Chains</span>",
    t += "<ul>",
    t += e.getRadio("mn3_sidec", "mn3_sidecLines", "Lines"),
    t += e.getRadio("mn3_sidec", "mn3_sidecStick", "Stick"),
    t += e.getRadio("mn3_sidec", "mn3_sidecBallstick", "Ball and Stick"),
    t += e.getRadio("mn3_sidec", "mn3_sidecSphere", "Sphere"),
    t += e.getRadio("mn3_sidec", "mn3_sidecNo", "Hide", !0),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Nucleotides</span>",
    t += "<ul>",
    t += e.getRadio("mn3_nucl", "mn3_nuclCartoon", "Cartoon", !0),
    t += e.getRadio("mn3_nucl", "mn3_nuclPhos", "O3' Trace"),
    t += e.getRadio("mn3_nucl", "mn3_nuclBackbone", "Backbone"),
    t += e.getRadio("mn3_nucl", "mn3_nuclSchematic", "Schematic"),
    t += e.getRadio("mn3_nucl", "mn3_nuclLines", "Lines"),
    t += e.getRadio("mn3_nucl", "mn3_nuclStick", "Stick"),
    t += e.getRadio("mn3_nucl", "mn3_nuclBallstick", "Ball and Stick"),
    t += e.getRadio("mn3_nucl", "mn3_nuclSphere", "Sphere"),
    t += e.getRadio("mn3_nucl", "mn3_nuclNo", "Hide"),
    t += "</ul>",
    t += "</li>"),
    t += "<li><span>Chemicals</span>",
    t += "<ul>",
    t += e.getRadio("mn3_lig", "mn3_ligLines", "Lines"),
    void 0 === e.cfg.cid ? (t += e.getRadio("mn3_lig", "mn3_ligStick", "Stick", !0),
    t += e.getRadio("mn3_lig", "mn3_ligBallstick", "Ball and Stick")) : (t += e.getRadio("mn3_lig", "mn3_ligStick", "Stick"),
    t += e.getRadio("mn3_lig", "mn3_ligBallstick", "Ball and Stick", !0)),
    t += e.getRadio("mn3_lig", "mn3_ligSchematic", "Schematic"),
    t += e.getRadio("mn3_lig", "mn3_ligSphere", "Sphere"),
    t += e.getRadio("mn3_lig", "mn3_ligNo", "Hide"),
    t += "</ul>",
    t += "</li>",
    void 0 !== e.cfg.cid ? (t += "<li><span>Hydrogens</span>",
    t += "<ul>",
    t += e.getRadio("mn3_hydrogens", "mn3_hydrogensYes", "Show", !0),
    t += e.getRadio("mn3_hydrogens", "mn3_hydrogensNo", "Hide")) : (t += "<li><span>Glycans</span>",
    t += "<ul>",
    t += e.getRadio("mn3_glycansCart", "mn3_glycansCartYes", "Add Cartoon", !0),
    t += e.getRadio("mn3_glycansCart", "mn3_glycansCartNo", "Remove Cartoon")),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Ions</span>",
    t += "<ul>",
    t += e.getRadio("mn3_ions", "mn3_ionsSphere", "Sphere", !0),
    t += e.getRadio("mn3_ions", "mn3_ionsDot", "Dot"),
    t += e.getRadio("mn3_ions", "mn3_ionsNo", "Hide"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Water</span>",
    t += "<ul>",
    t += e.getRadio("mn3_water", "mn3_waterSphere", "Sphere"),
    t += e.getRadio("mn3_water", "mn3_waterDot", "Dot"),
    t += e.getRadio("mn3_water", "mn3_waterNo", "Hide", !0),
    t += "</ul>",
    t += "</li>",
    t += e.getLink("mn3_setThickness", "Set Thickness"),
    t += "<li>-</li>",
    t += e.getLink("mn3_styleSave", "Save Style"),
    t += e.getLink("mn3_styleApplySave", "Apply Saved Style"),
    t += "<li>-</li>",
    t += "<li><span>Surface Type</span>",
    t += "<ul>",
    t += e.getRadio("mn5_surface", "mn5_surfaceVDW", "Van der Waals"),
    t += e.getRadio("mn5_surface", "mn5_surfaceVDWContext", "VDW with Context"),
    t += e.getRadio("mn5_surface", "mn5_surfaceMolecular", "Molecular Surface"),
    t += e.getRadio("mn5_surface", "mn5_surfaceMolecularContext", "MS with Context"),
    t += e.getRadio("mn5_surface", "mn5_surfaceSAS", "Solvent Accessible"),
    t += e.getRadio("mn5_surface", "mn5_surfaceSASContext", "SA with Context"),
    t += "</ul>",
    t += "</li>",
    t += e.getLink("mn5_surfaceNo", "Remove Surface"),
    t += "<li><span>Surface Opacity</span>",
    t += "<ul>",
    t += e.getRadio("mn5_opacity", "mn5_opacity10", "1.0", !0);
    for (var i = 9; 0 < i; --i)
        t += e.getRadio("mn5_opacity", "mn5_opacity0" + i, "0." + i);
    return t += "</ul>",
    t += "</li>",
    t += "<li><span>Surface <br>Wireframe</span>",
    t += "<ul>",
    t += e.getRadio("mn5_wireframe", "mn5_wireframeYes", "Yes"),
    t += e.getRadio("mn5_wireframe", "mn5_wireframeNo", "No", !0),
    t += "</ul>",
    t += "</li>",
    void 0 === e.cfg.cid && void 0 === e.cfg.align && void 0 === e.cfg.chainalign && (t += "<li>-</li>",
    t += "<li id='" + e.pre + "mapWrapper1'><span>Electron Density</span>",
    t += "<ul>",
    t += e.getRadio("mn5_elecmap", "mn5_elecmap2fofc", "2Fo-Fc Map"),
    t += e.getRadio("mn5_elecmap", "mn5_elecmapfofc", "Fo-Fc Map"),
    t += "</ul>",
    t += "</li>",
    t += e.getLinkWrapper("mn5_elecmapNo", "Remove Map", "mapWrapper2"),
    t += "<li id='" + e.pre + "mapWrapper3'><span>Map <br>Wireframe</span>",
    t += "<ul>",
    t += e.getRadio("mn5_mapwireframe", "mn5_mapwireframeYes", "Yes", !0),
    t += e.getRadio("mn5_mapwireframe", "mn5_mapwireframeNo", "No"),
    t += "</ul>",
    t += "</li>",
    void 0 === e.cfg.mmtfid && (t += e.getLinkWrapper("mn5_emmap", "EM Density Map", "emmapWrapper1"),
    t += e.getLinkWrapper("mn5_emmapNo", "Remove EM Map", "emmapWrapper2"),
    t += "<li id='" + e.pre + "emmapWrapper3'><span>EM Map <br>Wireframe</span>",
    t += "<ul>",
    t += e.getRadio("mn5_emmapwireframe", "mn5_emmapwireframeYes", "Yes", !0),
    t += e.getRadio("mn5_emmapwireframe", "mn5_emmapwireframeNo", "No"),
    t += "</ul>",
    t += "</li>")),
    t += "<li>-</li>",
    t += "<li><span>Background</span>",
    t += "<ul>",
    t += e.getRadio("mn6_bkgd", "mn6_bkgdTransparent", "Transparent", !0),
    t += e.getRadio("mn6_bkgd", "mn6_bkgdBlack", "Black"),
    t += e.getRadio("mn6_bkgd", "mn6_bkgdGrey", "Grey"),
    t += e.getRadio("mn6_bkgd", "mn6_bkgdWhite", "White"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Dialog Color</span>",
    t += "<ul>",
    t += e.getRadio("mn6_theme", "mn6_themeBlue", "Blue", !0),
    t += e.getRadio("mn6_theme", "mn6_themeOrange", "Orange"),
    t += e.getRadio("mn6_theme", "mn6_themeBlack", "Black"),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Two-color Helix</span>",
    t += "<ul>",
    t += e.getRadio("mn6_doublecolor", "mn6_doublecolorYes", "Yes"),
    t += e.getRadio("mn6_doublecolor", "mn6_doublecolorNo", "No", !0),
    t += "</ul>",
    t += "</li>",
    t += "<li><br/></li>",
    t += "</ul>"
}
,
iCn3DUI.prototype.setMenu4 = function() {
    this.icn3d;
    var e = "";
    return e += "<div class='icn3d-menu'>",
    e += "<accordion id='" + this.pre + "accordion4' class='icn3d-accordion'>",
    e += "<h3 id='" + this.pre + "color'>Color</h3>",
    e += "<div>",
    e += this.setMenu4_base(),
    e += "</div>",
    e += "</accordion>",
    e += "</div>"
}
,
iCn3DUI.prototype.setMenu4_base = function() {
    var e = this
      , t = (e.icn3d,
    "");
    return t += "<ul class='icn3d-mn'>",
    t += "<li><span style='padding-left:2.3em;'>Unicolor</span>",
    t += "<ul>",
    t += "<li><span>Red</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrRed1", "Red", "F00"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed2", "Indian Red", "CD5C5C"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed3", "Light Coral", "F08080"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed4", "Salmon", "FA8072"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed5", "Dark Salmon", "E9967A"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed6", "Light Salmon", "FFA07A"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed7", "Crimson", "DC143C"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed8", "Fire Brick", "B22222"),
    t += e.getRadioColor("mn4_clr", "mn4_clrRed9", "Dark Red", "8B0000"),
    t += "</ul>",
    t += "<li><span>Pink</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrPink1", "Pink", "FFC0CB"),
    t += e.getRadioColor("mn4_clr", "mn4_clrPink2", "Light Pink", "FFB6C1"),
    t += e.getRadioColor("mn4_clr", "mn4_clrPink3", "Hot Pink", "FF69B4"),
    t += e.getRadioColor("mn4_clr", "mn4_clrPink4", "Deep Pink", "FF1493"),
    t += e.getRadioColor("mn4_clr", "mn4_clrPink5", "Medium Violet Red", "C71585"),
    t += e.getRadioColor("mn4_clr", "mn4_clrPink6", "Pale Violet Red", "DB7093"),
    t += "</ul>",
    t += "<li><span>Orange</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrOran1", "Orange", "FFA500"),
    t += e.getRadioColor("mn4_clr", "mn4_clrOran2", "Dark Orange", "FF8C00"),
    t += e.getRadioColor("mn4_clr", "mn4_clrOran3", "Orange Red", "FF4500"),
    t += e.getRadioColor("mn4_clr", "mn4_clrOran4", "Tomato", "FF6347"),
    t += e.getRadioColor("mn4_clr", "mn4_clrOran5", "Coral", "FF7F50"),
    t += e.getRadioColor("mn4_clr", "mn4_clrOran6", "Light Salmon", "FFA07A"),
    t += "</ul>",
    t += "<li><span>Yellow</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw1", "Yellow", "FF0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw2", "Gold", "FFD700"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw3", "Light Yellow", "FFFFE0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw4", "Lemon Chiffon", "FFFACD"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw5", "Light Golden Rod", "FAFAD2"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw6", "Papaya Whip", "FFEFD5"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw7", "Moccasin", "FFE4B5"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw8", "Peach Puff", "FFDAB9"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw9", "Pale Golden Rod", "EEE8AA"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw10", "Khaki", "F0E68C"),
    t += e.getRadioColor("mn4_clr", "mn4_clrYllw11", "Dark Khaki", "BDB76B"),
    t += "</ul>",
    t += "<li><span>Magenta</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt1", "Magenta", "F0F"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt2", "Orchid", "DA70D6"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt3", "Violet", "EE82EE"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt4", "Plum", "DDA0DD"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt5", "Thistle", "D8BFD8"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt6", "Lavender", "E6E6FA"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt7", "Medium Orchid", "BA55D3"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt8", "Medium Purple", "9370DB"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt9", "Rebecca Purple", "663399"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt10", "Blue Violet", "8A2BE2"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt11", "Dark Violet", "9400D3"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt12", "Dark Orchid", "9932CC"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt13", "Dark Magenta", "8B008B"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt14", "Purple", "800080"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt15", "Indigo", "4B0082"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt16", "Slat Blue", "6A5ACD"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt17", "Dark Slate Blue", "483D8B"),
    t += e.getRadioColor("mn4_clr", "mn4_clrMgnt18", "Medium Slat Blue", "6A5ACD"),
    t += "</ul>",
    t += "<li><span>Green</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn1", "Green", "0F0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn2", "Dark Green", "006400"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn3", "Yellow Green", "9ACD32"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn4", "Olive Drab", "6B8E23"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn5", "Olive", "808000"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn6", "Dark Olive Green", "556B2F"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn7", "Medium Aquamarine", "66CDAA"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn8", "Dark Sea Green", "8FBC8B"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn9", "Lignt Sea Green", "20B2AA"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn10", "Dark Cyan", "008B8B"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn11", "Teal", "008080"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn12", "Forest Green", "228B22"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn13", "Sea Green", "2E8B57"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn14", "Medium Sea Green", "3CB371"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn15", "Spring Green", "00FF7F"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn16", "Medium Spring", "00FA9A"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn17", "Light Green", "90EE90"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn18", "Pale Green", "98FB98"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn19", "Lime Green", "32CD32"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn20", "Lawn Green", "7CFC00"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn21", "Chartreuse", "7FFF00"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGrn22", "Green Yellow", "ADFF2F"),
    t += "</ul>",
    t += "<li><span>Cyan</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrCyan1", "Cyan", "0FF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrCyan2", "Light Cyan", "E0FFFF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrCyan3", "Pale Turquoise", "AFEEEE"),
    t += e.getRadioColor("mn4_clr", "mn4_clrCyan4", "Aquamarine", "7FFFD4"),
    t += e.getRadioColor("mn4_clr", "mn4_clrCyan5", "Turquoise", "40E0D0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrCyan6", "Medium Turquoise", "48D1CC"),
    t += e.getRadioColor("mn4_clr", "mn4_clrCyan7", "Dark Turquoise", "00CED1"),
    t += "</ul>",
    t += "<li><span>Blue</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue1", "Blue", "00F"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue2", "Medium Blue", "0000CD"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue3", "Dark Blue", "00008B"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue4", "Navy", "000080"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue5", "Midnight Blue", "191970"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue6", "Royal Blue", "4169E1"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue7", "Medium Slate Blue", "7B68EE"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue8", "Corn Flower Blue", "6495ED"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue9", "Dodger Blue", "1E90FF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue10", "Deep Sky Blue", "00BFFF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue11", "Light Sky Blue", "87CEFA"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue12", "Sky Blue", "87CEEB"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue13", "Light Blue", "ADD8E6"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue14", "Powder Blue", "B0E0E6"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue15", "Light Steel Blue", "B0C4DE"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue16", "Steel Blue", "4682B4"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBlue17", "Cadet Blue", "5F9EA0"),
    t += "</ul>",
    t += "<li><span>Brown</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown1", "Brown", "A52A2A"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown2", "Maroon", "800000"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown3", "Sienna", "A0522D"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown4", "Saddle Brown", "8B4513"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown5", "Chocolate", "D2691E"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown6", "Peru", "CD853F"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown7", "Dark Golden Rod", "B8860B"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown8", "Golden Rod", "DAA520"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown9", "Sandy Brown", "F4A460"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown10", "Rosy Brown", "BC8F8F"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown11", "Tan", "D2B48C"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown12", "Burlywood", "DEB887"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown13", "Wheat", "F5DEB3"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown14", "Navajo White", "FFDEAD"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown15", "Bisque", "FFE4C4"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown16", "Blanched Almond", "FFEBCD"),
    t += e.getRadioColor("mn4_clr", "mn4_clrBrown17", "Corn Silk", "FFF8DC"),
    t += "</ul>",
    t += "<li><span>White</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite1", "White", "FFF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite2", "Snow", "FFFAFA"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite3", "Honey Dew", "F0FFF0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite4", "Mint Cream", "F5FFFA"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite5", "Azure", "F0FFFF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite6", "Alice Blue", "F0F8FF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite7", "Ghost White", "F8F8FF"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite8", "White Smoke", "F5F5F5"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite9", "Sea Shell", "FFF5EE"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite10", "Beige", "F5F5DC"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite11", "Old Lace", "FDF5E6"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite12", "Floral White", "FFFAF0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite13", "Ivory", "FFFFF0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite14", "Antique White", "FAEBD7"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite15", "Linen", "FAF0E6"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite16", "Lavenderblush", "FFF0F5"),
    t += e.getRadioColor("mn4_clr", "mn4_clrWhite17", "Misty Rose", "FFE4E1"),
    t += "</ul>",
    t += "<li><span>Grey</span>",
    t += "<ul>",
    t += e.getRadioColor("mn4_clr", "mn4_clrGray1", "Gray", "808080"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray2", "Dim Gray", "696969"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray3", "Light Slate Gray", "778899"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray4", "Slate Gray", "708090"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray5", "Dark Slate Gray", "2F4F4F"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray6", "Black", "000000"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray7", "Dark Gray", "A9A9A9"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray8", "Silver", "C0C0C0"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray9", "Light Gray", "D3D3D3"),
    t += e.getRadioColor("mn4_clr", "mn4_clrGray10", "Gainsboro", "DCDCDC"),
    t += "</ul>",
    t += "</ul>",
    t += e.getRadio("mn4_clr", "mn4_clrCustom", "Color Picker"),
    t += "<li>-</li>",
    void 0 === e.cfg.cid ? (t += e.getRadio("mn4_clr", "mn4_clrSpectrum", "Spectrum"),
    t += "<li><span style='padding-left:2.3em;'>Secondary</span>",
    t += "<ul>",
    t += e.getRadio("mn4_clr", "mn4_clrSSGreen", "Sheet in Green"),
    t += e.getRadio("mn4_clr", "mn4_clrSSYellow", "Sheet in Yellow"),
    t += e.getRadio("mn4_clr", "mn4_clrSSSpectrum", "Spectrum"),
    t += "</ul>",
    t += e.getRadio("mn4_clr", "mn4_clrCharge", "Charge"),
    e.cfg.notebook || (t += e.getRadio("mn4_clr", "mn1_delphi2", 'DelPhi<br><span style="padding-left:1.5em;">Potential</span>')),
    t += e.getRadio("mn4_clr", "mn4_clrHydrophobic", 'Wimley-White<br><span style="padding-left:1.5em;">Hydrophobicity</span>'),
    t += "<li><span style='padding-left:2.3em;'>B-factor</span>",
    t += "<ul>",
    t += e.getRadio("mn4_clr", "mn4_clrBfactor", "Original"),
    t += e.getRadio("mn4_clr", "mn4_clrBfactorNorm", "Percentile"),
    t += "</ul>",
    t += e.getRadio("mn4_clr", "mn4_clrArea", 'Solvent<br><span style="padding-left:1.5em;">Accessibility</span>'),
    void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign || void 0 !== e.cfg.blast_rep_id ? t += e.getRadio("mn4_clr", "mn4_clrChain", "Chain") : t += e.getRadio("mn4_clr", "mn4_clrChain", "Chain", !0),
    void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi || (t += e.getRadio("mn4_clr", "mn4_clrdomain", "3D Domain")),
    t += "<li><span style='padding-left:2.3em;'>Residue</span>",
    t += "<ul>",
    t += e.getRadio("mn4_clr", "mn4_clrResidue", "Default"),
    t += e.getRadio("mn4_clr", "mn4_clrResidueCustom", "Custom"),
    t += "</ul>",
    t += e.getRadio("mn4_clr", "mn4_clrAtom", "Atom"),
    void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? (t += e.getRadio("mn4_clr", "mn4_clrIdentity", "Identity", !0),
    t += e.getRadio("mn4_clr", "mn4_clrConserved", "Conservation")) : void 0 !== e.cfg.blast_rep_id && (t += e.getRadio("mn4_clr", "mn4_clrIdentity", "Identity"),
    t += e.getRadio("mn4_clr", "mn4_clrConserved", "Conservation", !0))) : (t += e.getRadio("mn4_clr", "mn1_delphi2", 'DelPhi<br><span style="padding-left:1.5em;">Potential</span>'),
    t += e.getRadio("mn4_clr", "mn4_clrAtom", "Atom", !0)),
    t += "<li>-</li>",
    t += e.getLink("mn4_clrSave", "Save Color"),
    t += e.getLink("mn4_clrApplySave", "Apply Saved Color"),
    t += "<li><br/></li>",
    t += "</ul>"
}
,
iCn3DUI.prototype.setMenu5 = function() {
    this.icn3d;
    var e = "";
    return e += "<div class='icn3d-menu'>",
    e += "<accordion id='" + this.pre + "accordion5' class='icn3d-accordion'>",
    e += "<h3 id='" + this.pre + "analysis' style='font-size:1.2em'>&nbsp;Analysis</h3>",
    e += "<div>",
    e += this.setMenu5_base(),
    e += "</div>",
    e += "</accordion>",
    e += "</div>"
}
,
iCn3DUI.prototype.setMenu5_base = function() {
    var e = this
      , t = (e.icn3d,
    "");
    t += "<ul class='icn3d-mn'>",
    void 0 === e.cfg.cid && (t += e.getLink("mn6_selectannotations", "View Sequences<br>& Annotations"),
    (void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign || e.bRealign || e.bSymd) && (t += e.getLink("mn2_alignment", "View Aligned<br>Sequences")),
    void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi && void 0 === e.cfg.blast_rep_id && void 0 === e.cfg.align && void 0 === e.cfg.chainalign || (t += e.getLink("mn2_2ddgm", "View 2D Diagram")),
    t += e.getLink("definedsets2", "Defined Sets"),
    t += "<li>-</li>",
    t += e.getLink("mn6_hbondsYes", "H-Bonds <br>& Interactions"),
    t += "<li><span>Bring to Front</span>",
    t += "<ul>",
    t += e.getLink("mn1_window_table", "Interaction Table"),
    t += e.getLink("mn1_window_linegraph", "2D Interaction Network"),
    t += e.getLink("mn1_window_scatterplot", "2D Interaction Map"),
    t += e.getLink("mn1_window_graph", "2D Graph (Force-Directed)"),
    t += "</ul>",
    t += "</li>",
    t += "<li>-</li>"),
    e.cfg.notebook || (t += e.getLink("mn1_delphi", "DelPhi Potential"),
    t += "<li><span>Load PQR/Phi</span>",
    t += "<ul>",
    t += e.getLink("mn1_phi", "Local PQR/Phi/Cube File"),
    t += e.getLink("mn1_phiurl", "URL PQR/Phi/Cube File"),
    t += "</ul>",
    t += e.getLink("delphipqr", "Download PQR"),
    t += "<li>-</li>"),
    t += "<li><span>Distance</span>",
    t += "<ul>",
    t += e.getRadio("mn6_distance", "mn6_distanceYes", "between Two Atoms"),
    t += e.getRadio("mn6_distance", "mn6_distTwoSets", "between Two Sets"),
    t += e.getRadio("mn6_distance", "mn6_distanceNo", "Hide", !0),
    t += "</ul>",
    t += "</li>",
    t += e.getLink("mn6_area", "Surface Area"),
    t += "<li><span>Label</span>",
    t += "<ul>",
    t += e.getRadio("mn6_addlabel", "mn6_addlabelYes", "by Picking Atoms"),
    t += e.getRadio("mn6_addlabel", "mn6_addlabelSelection", "per Selection"),
    t += e.getRadio("mn6_addlabel", "mn6_addlabelAtoms", "per Atom"),
    void 0 === e.cfg.cid && (t += e.getRadio("mn6_addlabel", "mn6_addlabelResidues", "per Residue"),
    t += e.getRadio("mn6_addlabel", "mn6_addlabelResnum", "per Residue & Number"),
    t += e.getRadio("mn6_addlabel", "mn6_addlabelChains", "per Chain"),
    t += e.getRadio("mn6_addlabel", "mn6_addlabelTermini", "N- & C-Termini")),
    t += e.getRadio("mn6_addlabel", "mn6_addlabelNo", "Remove", !0),
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Label Scale</span>",
    t += "<ul>";
    for (var i = 1; i <= 9; ++i)
        t += 3 == i ? e.getRadio("mn6_labelscale", "mn6_labelscale0" + i, "0." + i, !0) : e.getRadio("mn6_labelscale", "mn6_labelscale0" + i, "0." + i);
    for (i = 1; i <= 4; i *= 2)
        t += e.getRadio("mn6_labelscale", "mn6_labelscale" + i + "0", i + ".0");
    if (t += "</ul>",
    t += "</li>",
    t += "<li>-</li>",
    void 0 === e.cfg.cid) {
        t += "<li><span>Chem. Binding</span>",
        t += "<ul>",
        t += e.getRadio("mn6_chemicalbinding", "mn6_chemicalbindingshow", "Show"),
        t += e.getRadio("mn6_chemicalbinding", "mn6_chemicalbindinghide", "Hide", !0),
        t += "</ul>",
        t += "</li>",
        t += "<li><span>Disulfide Bonds</span>",
        t += "<ul>",
        t += e.getRadio("mn6_ssbonds", "mn6_ssbondsYes", "Show", !0),
        t += e.getRadio("mn6_ssbonds", "mn6_ssbondsExport", "Export Pairs"),
        t += e.getRadio("mn6_ssbonds", "mn6_ssbondsNo", "Hide"),
        t += "</ul>",
        t += "</li>",
        t += "<li><span>Cross-Linkages</span>",
        t += "<ul>",
        t += e.getRadio("mn6_clbonds", "mn6_clbondsYes", "Show", !0),
        t += e.getRadio("mn6_clbonds", "mn6_clbondsExport", "Export Pairs"),
        t += e.getRadio("mn6_clbonds", "mn6_clbondsNo", "Hide"),
        t += "</ul>",
        t += "</li>";
        var n = void 0 !== e.cfg.mmtfid || void 0 !== e.cfg.pdbid || void 0 !== e.cfg.opmid || void 0 !== e.cfg.mmcifid || void 0 !== e.cfg.mmdbid || void 0 !== e.cfg.gi || void 0 !== e.cfg.blast_rep_id;
        n && (t += "<li id='" + e.pre + "assemblyWrapper'><span>Assembly</span>",
        t += "<ul>",
        t += e.getRadio("mn6_assembly", "mn6_assemblyYes", "Biological Assembly", !0),
        t += e.getRadio("mn6_assembly", "mn6_assemblyNo", "Asymmetric Unit"),
        t += "</ul>",
        t += "</li>"),
        t += "<li><span>Symmetry</span>",
        t += "<ul>",
        n && (t += e.getLink("mn6_symmetry", "from RCSB (precalculated)")),
        t += e.getLink("mn6_symd", "from SymD (Dynamic)"),
        t += "</ul>",
        t += "</li>",
        t += "<li>-</li>"
    }
    return t += e.getLink("mn6_yournote", "Your Note /<br>Window Title"),
    void 0 !== e.cfg.cid ? (t += "<li><span>Links</span>",
    t += "<ul>",
    t += e.getLink("mn1_link_structure", "Compound Summary"),
    t += e.getLink("mn1_link_vast", "Similar Compounds"),
    t += e.getLink("mn1_link_bind", "Structures Bound")) : (t += "<li><span>Links</span>",
    t += "<ul>",
    t += e.getLink("mn1_link_structure", "Structure Summary"),
    t += e.getLink("mn1_link_vast", "Similar Structures"),
    t += e.getLink("mn1_link_pubmed", "Literature"),
    t += e.getLink("mn1_link_protein", "Protein")),
    t += "</ul>",
    t += "</li>",
    t += "<li><br/></li>",
    t += "</ul>"
}
,
iCn3DUI.prototype.setMenu6 = function() {
    this.icn3d;
    var e = "";
    return e += "<div class='icn3d-menu'>",
    e += "<accordion id='" + this.pre + "accordion6' class='icn3d-accordion'>",
    e += "<h3>Help</h3>",
    e += "<div>",
    e += this.setMenu6_base(),
    e += "</div>",
    e += "</accordion>",
    e += "</div>"
}
,
iCn3DUI.prototype.setMenu6_base = function() {
    var e = this
      , t = (e.icn3d,
    "")
      , i = "<li><a href='";
    return t += "<ul class='icn3d-mn'>",
    t += i + e.baseUrl + "icn3d/docs/icn3d_about.html' target='_blank'>About iCn3D<span style='font-size:0.9em'> " + e.REVISION + "</span></a></li>",
    t += i + e.baseUrl + "icn3d/docs/icn3d_publications.html' target='_blank'>Citing iCn3D</a></li>",
    t += i + e.baseUrl + "icn3d/docs/icn3d_help.html' target='_blank'>Help Doc</a></li>",
    t += i + e.baseUrl + "icn3d/icn3d.html#gallery' target='_blank'>Gallery</a></li>",
    t += "<li><span>Web APIs</span>",
    t += "<ul>",
    t += i + e.baseUrl + "icn3d/icn3d.html#HowToUse' target='_blank'>How to Embed</a></li>",
    t += i + e.baseUrl + "icn3d/icn3d.html#parameters' target='_blank'>URL Parameters</a></li>",
    t += i + e.baseUrl + "icn3d/icn3d.html#commands' target='_blank'>Commands</a></li>",
    t += "</ul>",
    t += "</li>",
    t += i + "https://github.com/ncbi/icn3d' target='_blank'>Source Code</a></li>",
    t += "<li>-</li>",
    t += "<li><span>Transform Hints</span>",
    t += "<ul>",
    t += "<li><span>Rotate</span>",
    t += "<ul>",
    t += "<li>Left Mouse</li>",
    t += "<li>Key l: Left</li>",
    t += "<li>Key j: Right</li>",
    t += "<li>Key i: Up</li>",
    t += "<li>Key m: Down</li>",
    t += "<li>Shift + Key l: Left 90&deg;</li>",
    t += "<li>Shift + Key j: Right 90&deg;</li>",
    t += "<li>Shift + Key i: Up 90&deg;</li>",
    t += "<li>Shift + Key m: Down 90&deg;</li>",
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Zoom</span>",
    t += "<ul>",
    t += "<li>Middle Mouse</li>",
    t += "<li>Key z: Zoom in</li>",
    t += "<li>Key x: Zoom out</li>",
    t += "</ul>",
    t += "</li>",
    t += "<li><span>Translate</span>",
    t += "<ul>",
    t += "<li>Right Mouse</li>",
    t += "</ul>",
    t += "</li>",
    t += "</ul>",
    t += "</li>",
    t += i + e.baseUrl + "icn3d/icn3d.html#HowToUseStep5' target='_blank'>Selection Hints</a></li>",
    t += "<li><br/></li>",
    t += "</ul>"
}
,
iCn3DUI.prototype.setLogWindow = function() {
    this.icn3d;
    var e = "";
    return e += this.divStr + "cmdlog' style='float:left; margin-top: -5px; width: 100%;'>",
    e += "<textarea id='" + this.pre + "logtext' rows='2' style='width: 100%; height: " + this.CMD_HEIGHT + "px; padding: 0px; border: 0px; background-color: " + this.GREYD + ";'></textarea>",
    e += "</div>"
}
,
iCn3DUI.prototype.setAdvanced = function(e) {
    var t = this
      , i = (t.icn3d,
    void 0 === e ? "" : e)
      , n = t.cfg.notebook ? "icn3d-hidden" : ""
      , r = t.divStr + "dl_advanced" + i + "' class='" + n + "'>";
    return r += "<table width='500'><tr><td valign='top'><table cellspacing='0'>",
    r += "<tr><td><b>Select:</b></td><td>" + t.inputTextStr + "id='" + t.pre + "command" + i + "' placeholder='$[structures].[chains]:[residues]@[atoms]' size='60'></td></tr>",
    r += "<tr><td><b>Name:</b></td><td>" + t.inputTextStr + "id='" + t.pre + "command_name" + i + "' placeholder='my_selection' size='60'></td></tr>",
    r += "<tr><td colspan='2' align='left'>" + t.space3 + t.buttonStr + "command_apply" + i + "'><b>Save Selection to Defined Sets</b></button></td></tr>",
    r += "</table></td>",
    r += "</tr>",
    r += "<tr><td>",
    r += 'Specification Tips: <div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + t.pre + "specguide" + i + '_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + t.pre + "specguide" + i + '_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div><br>',
    r += t.divStr + "specguide" + i + "' style='display:none; width:500px' class='icn3d-box'>",
    r += '<b>Specification:</b> In the selection "$1HHO,4N7N.A,B,C:5-10,LV,3AlaVal,chemicals@CA,C":',
    r += '<ul><li>"$1HHO,4N7N" uses "$" to indicate structure selection.<br/>',
    r += '<li>".A,B,C" uses "." to indicate chain selection.<br/>',
    r += '<li>":5-10,LV,3LeuVal,chemicals" uses the colon ":" to indicate residue selection. Residue selection could be residue number (5-10), one-letter IUPAC residue name abbreviations (LV), three-letter residue names (AlaVal, "3" indicates each residue name has three letters), or predefined names: "proteins", "nucleotides", "chemicals", "ions", and "water". IUPAC abbreviations can be written either as a contiguous string (e.g., ":LV"), in order to find all instances of that sequence in the structure, or they can be separated by commas (e.g., ":L,V") to select all residues of a given type in the structure (in the latter case, select all Leucine and Valine in the structure).<br/>',
    r += '<li>"@CA,C" uses "@" to indicate atom selection.<br/>',
    r += '<li>Partial definition is allowed, e.g., ":1-10" selects all residue IDs 1-10 in all chains.<br/>',
    r += '<li>Different selections can be unioned (with "<b>or</b>", default), intersected (with "<b>and</b>"), or negated (with "<b>not</b>"). For example, ":1-10 or :K" selects all residues 1-10 and all Lys residues. ":1-10 and :K" selects all Lys residues in the range of residue number 1-10. ":1-10 or not :K" selects all residues 1-10, which are not Lys residues.<br/>',
    r += '<li>The wild card character "X" or "x" can be used to represent any character.',
    r += "</ul>",
    r += "<b>Set Operation:</b>",
    r += '<ul><li>Users can select multiple sets in the menu "Select > Defined Sets".<br/>',
    r += '<li>Different sets can be unioned (with "<b>or</b>", default), intersected (with "<b>and</b>"), or negated (with "<b>not</b>"). For example, if the "Defined Sets" menu has four sets ":1-10", ":11-20", ":5-15", and ":7-8", the command "saved atoms :1-10 or :11-20 and :5-15 not :7-8" unions all residues 1-10 and 11-20 to get the residues 1-20, then intersects with the residues 5-15 to get the residues 5-15, then exclude the residues 7-8 to get the final residues 5-6 and 9-15.</ul>',
    r += "<b>Full commands in url or command window:</b>",
    r += "<ul><li>Select without saving the set: select $1HHO,4N7N.A,B,C:5-10,LV,chemicals@CA,C<br/>",
    r += "<li>Select and save: select $1HHO,4N7N.A,B,C:5-10,LV,chemicals@CA,C | name my_name</ul>",
    r += "</div>",
    r += "</td></tr></table>",
    r += "</div>"
}
,
iCn3DUI.prototype.getOptionHtml = function(e, t) {
    this.icn3d;
    var i = "";
    this.optionStr = "<option value=";
    for (var n = 0, r = e.length; n < r; ++n) {
        var s = e[n];
        i += n == t ? this.optionStr + "'" + s + "' selected>" + s + "</option>" : this.optionStr + "'" + s + "'>" + s + "</option>"
    }
    return i
}
,
iCn3DUI.prototype.getPotentialHtml = function(e, t) {
    var i, n, r = this, s = (r.icn3d,
    "");
    "delphi" == e ? i = "delphi" : "local" == e ? (name0 = "pqr",
    i = "phi",
    n = "cube") : "url" == e && (name0 = "pqrurl",
    i = "phiurl",
    n = "cubeurl"),
    s += r.divStr + "dl_" + i + "' class='" + t + "'>",
    s += r.divStr + "dl_" + i + "_tabs' style='border:0px;'>",
    s += "<ul>",
    s += "<li><a href='#" + r.pre + i + "tab1'>Equipotential Map</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab2'>Surface with Potential</a></li>",
    s += "</ul>",
    s += r.divStr + i + "tab1'>",
    "delphi" == e && (s += r.addGsizeSalt(i) + "<br>"),
    s += "<span style='white-space:nowrap;font-weight:bold;'>Potential contour at: <select id='" + r.pre + i + "contour'>";
    var o;
    s += r.getOptionHtml(["0.5", "1", "2", "4", "6", "8", "10"], 1),
    s += "</select> kT/e (25.6mV at 298K)</span><br/><br/>",
    "delphi" == e ? (s += r.buttonStr + "reload_" + i + "file' style='margin-top: 6px;'>Equipotential Map</button>",
    s += r.buttonStr + i + "mapNo' style='margin-left:30px;'>Remove Map</button><br>") : "local" == e ? (s += r.divStr + i + "tab1_tabs' style='border:0px;'>",
    s += "<ul>",
    s += "<li><a href='#" + r.pre + i + "tab1_" + name0 + "'>PQR</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab1_" + i + "'>Phi</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab1_" + n + "'>Cube</a></li>",
    s += "</ul>",
    o = "<span style='margin-left:30px'>" + r.buttonStr + i + "mapNo'>Remove Map</button></span></div>",
    s += r.divStr + i + "tab1_" + name0 + "'>",
    s += r.addGsizeSalt(name0) + "<br>",
    s += "<b>PQR File</b>: " + r.inputFileStr + "id='" + r.pre + name0 + "file'> <br><br>" + r.buttonStr + "reload_" + name0 + "file' style='margin-top: 6px;'>Equipotential Map</button>" + o,
    s += r.divStr + i + "tab1_" + i + "'>",
    s += "<b>Phi File</b>: " + r.inputFileStr + "id='" + r.pre + i + "file'> <br><br>" + r.buttonStr + "reload_" + i + "file' style='margin-top: 6px;'>Equipotential Map</button>" + o,
    s += r.divStr + i + "tab1_" + n + "'>",
    s += "<b>Cube File</b>: " + r.inputFileStr + "id='" + r.pre + n + "file'> <br><br>" + r.buttonStr + "reload_" + n + "file' style='margin-top: 6px;'>Equipotential Map</button>" + o,
    s += "</div>") : "url" == e && (s += r.divStr + i + "tab1_tabs' style='border:0px;'>",
    s += "<ul>",
    s += "<li><a href='#" + r.pre + i + "tab1_" + name0 + "2'>PQR</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab1_" + i + "2'>Phi</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab1_" + n + "2'>Cube</a></li>",
    s += "</ul>",
    o = "<span style='margin-left:30px'>" + r.buttonStr + i + "mapNo'>Remove Map</button></span></div>",
    s += r.divStr + i + "tab1_" + name0 + "2'>",
    s += r.addGsizeSalt(name0) + "<br>",
    s += "<b>PQR URL</b> in the same host: " + r.inputTextStr + "id='" + r.pre + name0 + "file'> <br><br>" + r.buttonStr + "reload_" + name0 + "file' style='margin-top: 6px;'>Equipotential Map</button>" + o,
    s += r.divStr + i + "tab1_" + i + "2'>",
    s += "<b>Phi URL</b> in the same host: " + r.inputTextStr + "id='" + r.pre + i + "file'> <br><br>" + r.buttonStr + "reload_" + i + "file' style='margin-top: 6px;'>Equipotential Map</button>" + o,
    s += r.divStr + i + "tab1_" + n + "2'>",
    s += "<b>Cube URL</b> in the same host: " + r.inputTextStr + "id='" + r.pre + n + "file'> <br><br>" + r.buttonStr + "reload_" + n + "file' style='margin-top: 6px;'>Equipotential Map</button>" + o,
    s += "</div>"),
    s += "<br>" + r.getFootHtml(e, i + "tab1_foot"),
    s += "</div>",
    s += r.divStr + i + "tab2'>",
    "delphi" == e && (s += r.addGsizeSalt(i) + "<br>"),
    s += "<span style='white-space:nowrap;font-weight:bold;'>Surface with max potential at: <select id='" + r.pre + i + "contour2'>";
    s += r.getOptionHtml(["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"], 2),
    s += "</select> kT/e (25.6mV at 298K)</span><br/><br/>",
    s += "<b>Surface</b>: <select id='" + r.pre + i + "surftype'>",
    s += "<option value='21'>Van der Waals</option>",
    s += "<option value='22' selected>Molecular Surface</option>",
    s += "<option value='23'>Solvent Accessible</option>",
    s += "</select>",
    s += "<span style='margin-left:20px'><b>Opacity</b>: <select id='" + r.pre + i + "surfop'>";
    return s += r.getOptionHtml(["1.0", "0.9", "0.8", "0.7", "0.6", "0.5", "0.4", "0.3", "0.2", "0.1"], 0),
    s += "</select></span>",
    s += "<span style='margin-left:20px'><b>Wireframe</b>: <select id='" + r.pre + i + "surfwf'>",
    s += "<option value='yes'>Yes</option>",
    s += "<option value='no' selected>No</option>",
    s += "</select></span><br/>",
    s += "<br/>",
    "delphi" == e ? (s += r.buttonStr + "reload_" + i + "file2' style='margin-top: 6px;'>Surface with Potential</button>",
    s += r.buttonStr + i + "mapNo2' style='margin-left:30px;'>Remove Surface</button><br>") : "local" == e ? (s += r.divStr + i + "tab2_tabs' style='border:0px;'>",
    s += "<ul>",
    s += "<li><a href='#" + r.pre + i + "tab2_" + name0 + "'>PQR</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab2_" + i + "'>Phi</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab2_" + n + "'>Cube</a></li>",
    s += "</ul>",
    o = "<span style='margin-left:30px'>" + r.buttonStr + i + "mapNo2'>Remove Surface</button></span></div>",
    s += r.divStr + i + "tab2_" + name0 + "'>",
    s += r.addGsizeSalt(name0 + "2") + "<br>",
    s += "<b>PQR File</b>: " + r.inputFileStr + "id='" + r.pre + name0 + "file2'> <br><br>" + r.buttonStr + "reload_" + name0 + "file2' style='margin-top: 6px;'>Surface with Potential</button>" + o,
    s += r.divStr + i + "tab2_" + i + "'>",
    s += "<b>Phi File</b>: " + r.inputFileStr + "id='" + r.pre + i + "file2'> <br><br>" + r.buttonStr + "reload_" + i + "file2' style='margin-top: 6px;'>Surface with Potential</button>" + o,
    s += r.divStr + i + "tab2_" + n + "'>",
    s += "<b>Cube File</b>: " + r.inputFileStr + "id='" + r.pre + n + "file2'> <br><br>" + r.buttonStr + "reload_" + n + "file2' style='margin-top: 6px;'>Surface with Potential</button>" + o,
    s += "</div>") : "url" == e && (s += r.divStr + i + "tab2_tabs' style='border:0px;'>",
    s += "<ul>",
    s += "<li><a href='#" + r.pre + i + "tab2_" + name0 + "2'>PQR</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab2_" + i + "2'>Phi</a></li>",
    s += "<li><a href='#" + r.pre + i + "tab2_" + n + "2'>Cube</a></li>",
    s += "</ul>",
    o = "<span style='margin-left:30px'>" + r.buttonStr + i + "mapNo2'>Remove Surface</button></span></div>",
    s += r.divStr + i + "tab2_" + name0 + "2'>",
    s += r.addGsizeSalt(name0 + "2") + "<br>",
    s += "<b>PQR URL</b> in the same host: " + r.inputTextStr + "id='" + r.pre + name0 + "file2'> <br><br>" + r.buttonStr + "reload_" + name0 + "file2' style='margin-top: 6px;'>Surface with Potential</button>" + o,
    s += r.divStr + i + "tab2_" + i + "2'>",
    s += "<b>Phi URL</b> in the same host: " + r.inputTextStr + "id='" + r.pre + i + "file2'> <br><br>" + r.buttonStr + "reload_" + i + "file2' style='margin-top: 6px;'>Surface with Potential</button>" + o,
    s += r.divStr + i + "tab2_" + n + "2'>",
    s += "<b>Cube URL</b> in the same host: " + r.inputTextStr + "id='" + r.pre + n + "file2'> <br><br>" + r.buttonStr + "reload_" + n + "file2' style='margin-top: 6px;'>Surface with Potential</button>" + o,
    s += "</div>"),
    s += "<br>" + r.getFootHtml(e, i + "tab2_foot"),
    s += "</div>",
    s += "</div>",
    s += "</div>"
}
,
iCn3DUI.prototype.setDialogs = function() {
    var e = this
      , t = e.icn3d
      , i = "";
    e.optionStr = "<option value=",
    i += "\x3c!-- dialog will not be part of the form --\x3e";
    var n = e.cfg.notebook ? "" : "icn3d-hidden"
      , r = e.cfg.notebook ? "icn3d-hidden" : "";
    i += e.divStr + "alldialogs' class='" + n + " icn3d-dialog'>",
    i += e.divStr + "dl_2ddgm' class='" + r + " icn3d-dl_2ddgm'>",
    i += "</div>",
    i += e.divStr + "dl_alignment' class='" + r + "' style='background-color:white;'>",
    i += e.divStr + "symd_info'></div>",
    i += e.divStr + "alignseqguide_wrapper'><br>" + e.setAlignSequenceGuide() + "</div>",
    i += e.divStr + "dl_sequence2' class='icn3d-dl_sequence'>",
    i += "</div>",
    i += "</div>",
    i += e.divStr + "dl_definedsets' class='" + r + "'>",
    i += e.divStr + "dl_setsmenu'>",
    i += "<b>Defined Sets:</b> <br/>",
    i += "<select id='" + e.pre + "atomsCustom' multiple size='6' style='min-width:130px;'>",
    i += "</select>",
    i += "<div style='margin: 6px 0 6px 0;'>" + e.buttonStr + "deletesets'><b>Delete Selected Sets</b></button></div>",
    i += '        <b>Set Operations</b>: <div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + e.pre + 'dl_command_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + e.pre + 'dl_command_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div><br>',
    i += "</div>",
    i += e.divStr + "dl_command' style='display:none;'>",
    i += e.divStr + "dl_setoperations'>",
    i += "<label for='" + e.pre + "setOr'>" + e.inputRadioStr + "name='" + e.pre + "setOperation' id='" + e.pre + "setOr' checked> Union (or) </label><br/>",
    i += "<label for='" + e.pre + "setAnd'>" + e.inputRadioStr + "name='" + e.pre + "setOperation' id='" + e.pre + "setAnd'> Intersection (and) </label><br/>",
    i += "<label for='" + e.pre + "setNot'>" + e.inputRadioStr + "name='" + e.pre + "setOperation' id='" + e.pre + "setNot'> Exclusion (not) </label>",
    i += "</div><br>",
    i += e.setAdvanced(),
    i += "</div>",
    i += "</div>",
    i += e.setAdvanced(2),
    i += e.divStr + "dl_mmtfid' class='" + r + "'>",
    i += "MMTF ID: " + e.inputTextStr + "id='" + e.pre + "mmtfid' value='1TUP' size=8> ",
    i += e.buttonStr + "reload_mmtf'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_pdbid' class='" + r + "'>",
    i += "PDB ID: " + e.inputTextStr + "id='" + e.pre + "pdbid' value='1TUP' size=8> ",
    i += e.buttonStr + "reload_pdb'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_opmid' class='" + r + "'>",
    i += "<a href='https://opm.phar.umich.edu' target='_blank'>Orientations of Proteins in Membranes(OPM)</a> PDB ID: " + e.inputTextStr + "id='" + e.pre + "opmid' value='6JXR' size=8> ",
    i += e.buttonStr + "reload_opm'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_pdbfile' class='" + r + "'>",
    i += 'Note: Several PDB files could be concatenated into a single PDB file. Use the line "ENDMDL" to separate PDB files.<br><br>',
    i += "PDB File: " + e.inputFileStr + " id='" + e.pre + "pdbfile' size=8> ",
    i += e.buttonStr + "reload_pdbfile'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_rescolorfile' class='" + r + "'>",
    i += '<div style="width:450px;">The custom JSON file on residue colors has the following format for proteins ("ALA" and "ARG") and nucleotides ("G" and "A"):<br>',
    i += '{"ALA":"#C8C8C8", "ARG":"#145AFF", ..., "G":"#008000", "A":"#6080FF", ...}</div><br>',
    i += "Residue Color File: " + e.inputFileStr + "id='" + e.pre + "rescolorfile' size=8> ",
    i += e.buttonStr + "reload_rescolorfile'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_customcolor' class='" + r + "'>",
    i += " <input type='hidden' id='" + e.pre + "customcolor_chainid' value=''>",
    i += '<div style="width:450px;">The custom file for the structure has two columns separated by space or tab: ',
    i += 'residue number, and score in the range of 0-100. If you click "Custom Color" button, ',
    i += 'scores 0 and 100 mean blue and red, respectively. If you click "Custom Tube", ',
    i += 'the selected residues will be displayed in a style similar to "B-factor Tube".</div><br>',
    i += "Custom File: " + e.inputFileStr + "id='" + e.pre + "cstcolorfile' size=8> ",
    i += e.buttonStr + "reload_customcolorfile' style='margin-left:15px'>Custom Color</button>",
    i += e.buttonStr + "reload_customtubefile' style='margin-left:15px'>Custom Tube</button>",
    i += "</div>",
    i += e.divStr + "dl_align' class='" + r + "'>",
    i += "Enter the PDB IDs or MMDB IDs of two structures that have been found to be similar by <A HREF=' " + e.baseUrl + "vastplus/vastplus.cgi'>VAST+</A> : <br/><br/>ID1: " + e.inputTextStr + "id='" + e.pre + "alignid1' value='1HHO' size=8>" + e.space3 + e.space3 + "ID2: " + e.inputTextStr + "id='" + e.pre + "alignid2' value='4N7N' size=8><br/><br/>",
    i += e.buttonStr + "reload_align_ori'>All Matching Molecules Superposed</button>" + e.space3 + e.buttonStr + "reload_align_refined'>Invariant Substructure Superposed</button>",
    i += "</div>",
    i += e.divStr + "dl_chainalign' class='" + r + "'>",
    i += "Enter the PDB chain IDs in the form of pdbid_chain (e.g., 1HHO_A, case sensitive): <br/><br/>ID1: " + e.inputTextStr + "id='" + e.pre + "chainalignid1' value='1HHO_A' size=8>" + e.space3 + e.space3 + "ID2: " + e.inputTextStr + "id='" + e.pre + "chainalignid2' value='4N7N_A' size=8><br/><br/>",
    i += e.buttonStr + "reload_chainalign'>Align</button><br/><br/>",
    i += '<div style=\'width:450px\'>(Note: To align chains in custom PDB files, you could concatenate PDB files in a single PDB file with the separation line "ENDMDL". Then load it in "Open File > PDB File" in the "File" menu and click "View Sequences & Annotations" in the "Window" menu. Finally select two chains in the sequence window and click "Realign Selection" in the "File" menu.)</div>',
    i += "</div>",
    i += e.divStr + "dl_mol2file' class='" + r + "'>",
    i += "Mol2 File: " + e.inputFileStr + "id='" + e.pre + "mol2file' size=8> ",
    i += e.buttonStr + "reload_mol2file'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_sdffile' class='" + r + "'>",
    i += "SDF File: " + e.inputFileStr + "id='" + e.pre + "sdffile' size=8> ",
    i += e.buttonStr + "reload_sdffile'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_xyzfile' class='" + r + "'>",
    i += "XYZ File: " + e.inputFileStr + "id='" + e.pre + "xyzfile' size=8> ",
    i += e.buttonStr + "reload_xyzfile'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_urlfile' class='" + r + "'>",
    i += "File type: ",
    i += "<select id='" + e.pre + "filetype'>",
    i += e.optionStr + "'pdb' selected>pdb</option>",
    i += e.optionStr + "'mol2'>mol2</option>",
    i += e.optionStr + "'sdf'>sdf</option>",
    i += e.optionStr + "'xyz'>xyz</option>",
    i += "</select><br/>",
    i += "URL in the same host: " + e.inputTextStr + "id='" + e.pre + "urlfile' size=20><br/> ",
    i += e.buttonStr + "reload_urlfile'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_mmciffile' class='" + r + "'>",
    i += "mmCIF File: " + e.inputFileStr + "id='" + e.pre + "mmciffile' value='1TUP' size=8> ",
    i += e.buttonStr + "reload_mmciffile'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_mmcifid' class='" + r + "'>",
    i += "mmCIF ID: " + e.inputTextStr + "id='" + e.pre + "mmcifid' value='1TUP' size=8> ",
    i += e.buttonStr + "reload_mmcif'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_mmdbid' class='" + r + "'>",
    i += "MMDB or PDB ID: " + e.inputTextStr + "id='" + e.pre + "mmdbid' value='1TUP' size=8> ",
    i += e.buttonStr + "reload_mmdb'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_blast_rep_id' style='max-width:500px;' class='" + r + "'>",
    i += "Enter a Sequence ID (or FASTA sequence) and the aligned Structure ID, which can be found using the <a href='https://blast.ncbi.nlm.nih.gov/Blast.cgi?PROGRAM=blastp&PAGE_TYPE=BlastSearch&DATABASE=pdb' target='_blank'>BLAST</a> search against the pdb database with the Sequence ID or FASTA sequence as input.<br><br> ",
    i += "<b>Sequence ID</b> (NCBI protein accession of a sequence): " + e.inputTextStr + "id='" + e.pre + "query_id' value='NP_001108451.1' size=8><br> ",
    i += "or FASTA sequence: <br><textarea id='" + e.pre + "query_fasta' rows='5' style='width: 100%; height: " + e.LOG_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>",
    i += "<b>Structure ID</b> (NCBI protein accession of a chain of a 3D structure): " + e.inputTextStr + "id='" + e.pre + "blast_rep_id' value='1TSR_A' size=8><br> ",
    i += e.buttonStr + "reload_blast_rep_id'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_yournote' class='" + r + "'>",
    i += 'Your note will be saved in the HTML file when you click "File > Save Files > iCn3D PNG Image".<br><br>',
    i += "<textarea id='" + e.pre + "yournote' rows='5' style='width: 100%; height: " + e.LOG_HEIGHT + "px; padding: 0px; border: 0px;' placeholder='Enter your note here'></textarea><br>",
    i += e.buttonStr + "applyyournote'>Save</button>",
    i += "</div>",
    i += e.divStr + "dl_gi' class='" + r + "'>",
    i += "Protein gi: " + e.inputTextStr + "id='" + e.pre + "gi' value='1310960' size=8> ",
    i += e.buttonStr + "reload_gi'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_cid' class='" + r + "'>",
    i += "PubChem CID: " + e.inputTextStr + "id='" + e.pre + "cid' value='2244' size=8> ",
    i += e.buttonStr + "reload_cid'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_pngimage' class='" + r + "'>",
    i += "iCn3D PNG image: " + e.inputFileStr + "id='" + e.pre + "pngimage'><br/>",
    i += e.buttonStr + "reload_pngimage' style='margin-top: 6px;'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_state' class='" + r + "'>",
    i += "State file: " + e.inputFileStr + "id='" + e.pre + "state'><br/>",
    i += e.buttonStr + "reload_state' style='margin-top: 6px;'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_fixedversion' style='max-width:500px' class='" + r + "'>",
    i += "To show the original view with the archived version of iCn3D, you can choose one of the options:<br><br>",
    i += '1. If your Share Link URL was generated after June 30, 2020, you can paste your URL below and click "Show Originial View".<br><br>',
    i += "Share Link URL: " + e.inputTextStr + "id='" + e.pre + "sharelinkurl' size=60><br>",
    i += e.buttonStr + "reload_fixedversion'>Show Original View</button><br><br>",
    i += '2. If your URL was generated before June 30, 2020, you can find the archived version of iCn3D <a href=\'https://www.ncbi.nlm.nih.gov/Structure/icn3d/icn3d.html#log\' target=\'_blank\'>online</a>, e.g., "2.1.0". Then paste your Share Link URL into the browser to see the expanded full-length URL. Finally replace "full.html" with "full_2.1.0.html" in the URL.<br><br>',
    i += "</div>",
    i += e.divStr + "dl_selection' class='" + r + "'>",
    i += "Selection file: " + e.inputFileStr + "id='" + e.pre + "selectionfile'><br/>",
    i += e.buttonStr + "reload_selectionfile' style='margin-top: 6px;'>Load</button>",
    i += "</div>",
    i += e.divStr + "dl_dsn6' class='" + r + "'>",
    i += "<b>Note</b>: Always load a PDB file before loading DSN6 files. <br/><br/><br/>",
    i += "<span style='white-space:nowrap;font-weight:bold;'>2fofc contour at: <select id='" + e.pre + "dsn6sigma2fofc'>";
    var s = ["0", "0.5", "1", "1.5", "2", "3", "4", "5", "6", "7", "8", "9", "10"];
    i += e.getOptionHtml(s, 3),
    i += "</select> &sigma;</span><br/>",
    i += e.inputFileStr + "id='" + e.pre + "dsn6file2fofc'> " + e.buttonStr + "reload_dsn6file2fofc' style='margin-top: 6px;'>Load</button><br><br><br/>",
    i += "<span style='white-space:nowrap;font-weight:bold;'>fofc contour at: <select id='" + e.pre + "dsn6sigmafofc'>",
    i += e.getOptionHtml(s, 5),
    i += "</select> &sigma;</span><br/>",
    i += e.inputFileStr + "id='" + e.pre + "dsn6filefofc'> " + e.buttonStr + "reload_dsn6filefofc' style='margin-top: 6px;'>Load</button><br><br><br>",
    i += e.buttonStr + "elecmapNo4'>Remove Map</button><br>",
    i += "</div>",
    i += e.divStr + "dl_dsn6url' class='" + r + "'>",
    i += "<b>Note</b>: Always load a PDB file before loading DSN6 files. <br/><br/><br/>",
    i += "<span style='white-space:nowrap;font-weight:bold;'>2fofc contour at: <select id='" + e.pre + "dsn6sigmaurl2fofc'>",
    i += e.getOptionHtml(s, 3),
    i += "</select> &sigma;</span><br/>",
    i += "URL in the same host: " + e.inputTextStr + "id='" + e.pre + "dsn6fileurl2fofc' size=20>" + e.space3 + e.buttonStr + "reload_dsn6fileurl2fofc' style='margin-top: 6px;'>Load</button><br><br><br/>",
    i += "<span style='white-space:nowrap;font-weight:bold;'>fofc contour at: <select id='" + e.pre + "dsn6sigmaurlfofc'>",
    i += e.getOptionHtml(s, 5),
    i += "</select> &sigma;</span><br/>",
    i += "URL in the same host: " + e.inputTextStr + "id='" + e.pre + "dsn6fileurlfofc' size=20>" + e.space3 + e.buttonStr + "reload_dsn6fileurlfofc' style='margin-top: 6px;'>Load</button><br><br><br/>",
    i += e.buttonStr + "elecmapNo5'>Remove Map</button><br>",
    i += "</div>",
    i += e.divStr + "dl_clr' class='" + r + "'>",
    i += "Click in the input box to use the color picker:<br><br> ",
    i += "Custom Color: " + e.inputTextStr + "id='" + e.pre + "colorcustom' value='FF0000' size=8> ",
    i += e.buttonStr + "applycustomcolor'>Apply</button>",
    i += "</div>",
    i += e.getPotentialHtml("delphi", r),
    i += e.getPotentialHtml("local", r),
    i += e.getPotentialHtml("url", r),
    i += e.divStr + "dl_symmetry' class='" + r + "'><br>",
    i += e.divNowrapStr + "Symmetry: <select id='" + e.pre + "selectSymmetry'>",
    i += "</select>" + e.space3,
    i += e.buttonStr + "applysymmetry'>Apply</button>" + e.space3,
    i += e.buttonStr + "clearsymmetry'>Clear</button></div>",
    i += "</div>",
    i += e.divStr + "dl_symd' style='max-width:400px' class='" + r + "'><br>",
    i += "</div>",
    i += e.divStr + "dl_hbonds' class='" + r + "'>",
    i += "1. Choose interaction types and their thresholds:<br>",
    i += "<div class='icn3d-box'><table border=0 width=450><tr>",
    i += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_hbond' checked>Hydrogen Bonds <span style='background-color:#" + e.hbondColor + "'>" + e.space3 + "</span></td>",
    i += "<td>",
    i += e.divNowrapStr + " <select id='" + e.pre + "hbondthreshold'>";
    var o = ["3.2", "3.3", "3.4", "3.5", "3.6", "3.7", "3.8", "3.9", "4.0", "4.1", "4.2"];
    i += e.getOptionHtml(o, 6),
    i += "</select> &#197;" + e.space3 + "</div></td>",
    i += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_saltbridge' checked>Salt Bridge/Ionic <span style='background-color:#" + e.ionicColor + "'>" + e.space3 + "</span></td>",
    i += "<td>",
    i += e.divNowrapStr + " <select id='" + e.pre + "saltbridgethreshold'>";
    var a = ["3", "4", "5", "6", "7", "8"];
    i += e.getOptionHtml(a, 3),
    i += "</select> &#197;" + e.space3 + "</div></td>",
    i += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_contact' checked>Contacts/Interactions <span style='background-color:#" + e.contactColor + "'>" + e.space3 + "</span></td>",
    i += "<td>",
    i += e.divNowrapStr + " <select id='" + e.pre + "contactthreshold'>",
    i += e.getOptionHtml(a, 1),
    i += "</select> &#197;" + e.space3 + "</div></td>",
    i += "</tr>",
    i += "<tr>",
    i += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_halogen' checked>Halogen Bonds <span style='background-color:#" + e.halogenColor + "'>" + e.space3 + "</span></td>",
    i += "<td>",
    i += e.divNowrapStr + " <select id='" + e.pre + "halogenthreshold'>",
    i += e.getOptionHtml(o, 6),
    i += "</select> &#197;" + e.space3 + "</div></td>",
    i += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_pication' checked>&pi;-Cation <span style='background-color:#" + e.picationColor + "'>" + e.space3 + "</span></td>",
    i += "<td>",
    i += e.divNowrapStr + " <select id='" + e.pre + "picationthreshold'>",
    i += e.getOptionHtml(a, 3),
    i += "</select> &#197;" + e.space3 + "</div></td>",
    i += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_pistacking' checked>&pi;-Stacking <span style='background-color:#" + e.pistackingColor + "'>" + e.space3 + "</span></td>",
    i += "<td>",
    i += e.divNowrapStr + " <select id='" + e.pre + "pistackingthreshold'>",
    i += e.getOptionHtml(["3", "4", "5"], 99),
    i += e.optionStr + "'5.5' selected>5.5</option>",
    i += e.getOptionHtml(["6", "7", "8"], 99),
    i += "</select> &#197;" + e.space3 + "</div></td>",
    i += "</tr></table></div>",
    i += "<table border=0 width=400 cellspacing=10><tr><td>",
    i += e.divNowrapStr + "2. Select the first set:</div>",
    i += "<div style='text-indent:1.1em'><select style='max-width:200px' id='" + e.pre + "atomsCustomHbond2' multiple size='5' style='min-width:130px;'>",
    i += "</select></div>",
    i += "</td><td>",
    i += e.divNowrapStr + "3. Select the second set:</div>",
    i += "<div style='text-indent:1.1em'><select style='max-width:200px' id='" + e.pre + "atomsCustomHbond' multiple size='5' style='min-width:130px;'>",
    i += "</select></div>",
    i += "</td></tr></table>",
    void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? (i += "<div>4. <b>Cross Structure Interactions</b>: <select id='" + e.pre + "crossstrucinter'>",
    i += e.optionStr + "'1'>Yes</option>",
    i += e.optionStr + "'0' selected>No</option>",
    i += "</select></div><br>",
    i += "<div style='text-indent:1.1em'>" + e.buttonStr + "applyhbonds'>3D Display Interactions</button></div><br>") : i += "<div>4. " + e.buttonStr + "applyhbonds'>3D Display Interactions</button></div><br>",
    i += "<div style='text-indent:1.1em'>" + e.buttonStr + "hbondWindow'>Highlight Interactions in Table</button><span style='margin-left:30px; font-wieght:bold'>Sort Interactions on</span>: " + e.buttonStr + "sortSet1'> Set 1</button>" + e.buttonStr + "sortSet2' style='margin-left:20px'>Set 2</button></div><br>",
    i += "<div style='text-indent:1.1em'>" + e.buttonStr + "hbondLineGraph'>2D Interaction Network</button> to show interactions between two lines of residue nodes</div><br>",
    i += "<div style='text-indent:1.1em'>" + e.buttonStr + "hbondScatterplot'>2D Interaction Map</button> to show interactions as map</div><br>";
    var l = ': </td><td><input style="margin-left:-12px" type="text" id="';
    i += "<div style='text-indent:1.1em'>" + e.buttonStr + "hbondGraph'>2D Graph (Force-Directed)</button> to show interactions with strength parameters in 0-200:</div>",
    i += '<div style="text-indent:1.1em"><table><tr><td>Helix or Sheet' + l + e.pre + 'dist_ss" size="4" value="100"></td>',
    i += "<td>Coil or Nucleotide" + l + e.pre + 'dist_coil" size="4" value="50"></td>',
    i += "<td>Disulfide Bonds" + l + e.pre + 'dist_ssbond" size="4" value="50"></td></tr>',
    i += "<tr><td>Hydrogen Bonds" + l + e.pre + 'dist_hbond" size="4" value="50"></td>',
    i += "<td>Salt Bridge/Ionic" + l + e.pre + 'dist_ionic" size="4" value="50"></td>',
    i += "<td>Contacts" + l + e.pre + 'dist_inter" size="4" value="25"></td></tr>',
    i += "<tr><td>Halogen Bonds" + l + e.pre + 'dist_halogen" size="4" value="50"></td>',
    i += "<td>&pi;-Cation" + l + e.pre + 'dist_pication" size="4" value="50"></td>',
    i += "<td>&pi;-Stacking" + l + e.pre + 'dist_pistacking" size="4" value="50"></td></tr></table></div>',
    i += '<div style="text-indent:1.1em">(Note: you can also adjust thresholds at #1 to add/remove interactions.)</div><br>',
    i += "<div style='text-indent:1.1em'>" + e.buttonStr + "areaWindow'>Buried Surface Area</button></div><br>",
    i += "<div>5. " + e.buttonStr + "hbondReset'>Reset</button> and select new sets</div>",
    i += "</div>",
    i += e.divStr + "dl_realign' class='" + r + "'>",
    i += e.divNowrapStr + "1. Select sets from two structures below <br>or use your current selection:</div><br>",
    i += "<div style='text-indent:1.1em'><select id='" + e.pre + "atomsCustomRealign' multiple size='5' style='min-width:130px;'>",
    i += "</select></div>",
    i += "<div>2. " + e.buttonStr + "applyRealign'>Realign</button></div><br>",
    i += "</div>",
    i += e.divStr + "dl_allinteraction' style='background-color:white' class='" + r + "'>",
    i += "</div>",
    i += e.divStr + "dl_interactionsorted' style='background-color:white' class='" + r + "'>",
    i += "</div>",
    i += e.divStr + "dl_linegraph' style='background-color:white' class='" + r + "'>",
    i += e.divNowrapStr + '<div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + e.pre + 'dl_linegraphcolor_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="display:none; width:15px;" title="Expand"></span><span id="' + e.pre + 'dl_linegraphcolor_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="width:15px;" title="Shrink"></span></div>',
    i += e.space2 + "Hold Ctrl key to select multiple nodes/lines.</div>",
    i += e.divStr + "dl_linegraphcolor' style='display:block;'>",
    i += e.setColorHints(),
    i += "</div><br>";
    var d = '<button class="icn3d-commandTitle" style="-webkit-appearance:button; height:24px;background-color:#DDD;" id="';
    e.linegraphid = e.pre + "linegraph",
    i += e.divNowrapStr + d + e.linegraphid + '_svg">SVG</button>' + e.space2,
    i += d + e.linegraphid + '_png">PNG</button>' + e.space2,
    i += d + e.linegraphid + '_json">JSON</button>' + e.space4,
    i += "<b>Scale</b>: <select id='" + e.linegraphid + "_scale'>";
    var c = ["0.1", "0.2", "0.4", "0.6", "0.8", "1", "2", "4", "6", "8", "10"];
    i += e.getOptionHtml(c, 5),
    i += "</select></div><br>",
    i += '<div id="' + e.pre + 'linegraphDiv"></div>',
    i += "</div>",
    i += e.divStr + "dl_scatterplot' style='background-color:white' class='" + r + "'>",
    i += e.divNowrapStr + "Hold Ctrl key to select multiple nodes." + e.space3,
    i += '<div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + e.pre + 'dl_scatterplotcolor_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + e.pre + 'dl_scatterplotcolor_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div></div>',
    i += e.divStr + "dl_scatterplotcolor' style='display:none;'>",
    i += e.setColorHints(),
    i += "</div>",
    e.scatterplotid = e.pre + "scatterplot",
    i += e.divNowrapStr + d + e.scatterplotid + '_svg">SVG</button>' + e.space2,
    i += d + e.scatterplotid + '_png">PNG</button>' + e.space2,
    i += d + e.scatterplotid + '_json">JSON</button>' + e.space4,
    i += "<b>Scale</b>: <select id='" + e.scatterplotid + "_scale'>",
    i += e.getOptionHtml(c, 5),
    i += "</select></div><br>",
    i += '<div id="' + e.pre + 'scatterplotDiv"></div>',
    i += "</div>",
    i += e.divStr + "dl_elecmap2fofc' class='" + r + "'>",
    i += "<span style='white-space:nowrap;font-weight:bold;'>Contour at: <select id='" + e.pre + "sigma2fofc'>",
    i += e.getOptionHtml(s, 3),
    i += "</select> &sigma;</span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "applymap2fofc'>Display</button></span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "elecmapNo2'>Remove Map</button></span>",
    i += "</div>",
    i += e.divStr + "dl_elecmapfofc' class='" + r + "'>",
    i += "<span style='white-space:nowrap;font-weight:bold;'>Contour at: <select id='" + e.pre + "sigmafofc'>",
    i += e.getOptionHtml(s, 5),
    i += "</select> &sigma;</span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "applymapfofc'>Display</button></span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "elecmapNo3'>Remove Map</button></span>",
    i += "</div>",
    i += e.divStr + "dl_emmap' class='" + r + "'>",
    i += "<span style='white-space:nowrap;font-weight:bold;'>Contour at: <select id='" + e.pre + "empercentage'>",
    i += e.getOptionHtml(["0", "10", "20", "30", "40", "50", "60", "70", "80", "90", "100"], 3),
    i += "</select> % of maximum EM values</span><br><span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "applyemmap'>Display</button></span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "emmapNo2'>Remove EM Map</button></span>",
    i += "</div>",
    i += e.divStr + "dl_aroundsphere' class='" + r + "'>",
    i += e.divNowrapStr + "1. Select the first set:</div>",
    i += "<div style='text-indent:1.1em'><select id='" + e.pre + "atomsCustomSphere2' multiple size='3' style='min-width:130px;'>",
    i += "</select></div><br>",
    i += e.divNowrapStr + "2. Sphere with a radius: " + e.inputTextStr + "id='" + e.pre + "radius_aroundsphere' value='4' size='2'> &#197;</div><br/>",
    i += e.divNowrapStr + "3. Select the second set to apply the sphere:</div>",
    i += "<div style='text-indent:1.1em'><select id='" + e.pre + "atomsCustomSphere' multiple size='3' style='min-width:130px;'>",
    i += "</select></div><br>",
    i += e.divNowrapStr + "4. " + e.buttonStr + "applypick_aroundsphere'>Display</button> the sphere around the first set of atoms</div><br>",
    i += "<div style='text-indent:1.1em'>" + e.buttonStr + "sphereExport'>Save</button> interacting/contacting residue pairs in a file</div>",
    i += "</div>",
    i += e.divStr + "dl_adjustmem' class='" + r + "'>",
    i += "<b>Note</b>: The membranes are parallel to the X-Y plane. The center of the membranes is at Z = 0. <br/><br/>",
    i += e.divNowrapStr + "1. Extracellular membrane Z-axis position: " + e.inputTextStr + "id='" + e.pre + "extra_mem_z' value='' size='3'> &#197;</div><br/>",
    i += e.divNowrapStr + "2. intracellular membrane Z-axis position: " + e.inputTextStr + "id='" + e.pre + "intra_mem_z' value='' size='3'> &#197;</div><br/>",
    i += e.divNowrapStr + "3. " + e.buttonStr + "apply_adjustmem'>Display</button> the adjusted membranes</div><br>",
    i += "</div>",
    i += e.divStr + "dl_selectplane' class='" + r + "'>",
    i += "<b>Note</b>: The membranes are parallel to the X-Y plane. The center of the membranes is at Z = 0. <br/><br/>",
    i += e.divNowrapStr + "1. Z-axis position of the first X-Y plane: " + e.inputTextStr + "id='" + e.pre + "selectplane_z1' value='15' size='3'> &#197;</div><br/>",
    i += e.divNowrapStr + "2. Z-axis position of the second X-Y plane: " + e.inputTextStr + "id='" + e.pre + "selectplane_z2' value='-15' size='3'> &#197;</div><br/>",
    i += e.divNowrapStr + "3. " + e.buttonStr + "apply_selectplane'>Save</button> the region between the planes to Defined Sets</div><br>",
    i += "</div>",
    i += e.divStr + "dl_addlabel' class='" + r + "'>",
    i += "1. Text: " + e.inputTextStr + "id='" + e.pre + "labeltext' value='Text' size=4><br/>",
    i += "2. Size: " + e.inputTextStr + "id='" + e.pre + "labelsize' value='18' size=4 maxlength=2><br/>",
    i += "3. Color: " + e.inputTextStr + "id='" + e.pre + "labelcolor' value='ffff00' size=4><br/>",
    i += "4. Background: " + e.inputTextStr + "id='" + e.pre + "labelbkgd' value='cccccc' size=4><br/>",
    e.isMobile() ? i += e.spanNowrapStr + "5. Touch TWO atoms</span><br/>" : i += e.spanNowrapStr + '5. Pick TWO atoms while holding "Alt" key</span><br/>',
    i += e.spanNowrapStr + "6. " + e.buttonStr + "applypick_labels'>Display</button></span>",
    i += "</div>",
    i += e.divStr + "dl_addlabelselection' class='" + r + "'>",
    i += "1. Text: " + e.inputTextStr + "id='" + e.pre + "labeltext2' value='Text' size=4><br/>",
    i += "2. Size: " + e.inputTextStr + "id='" + e.pre + "labelsize2' value='18' size=4 maxlength=2><br/>",
    i += "3. Color: " + e.inputTextStr + "id='" + e.pre + "labelcolor2' value='ffff00' size=4><br/>",
    i += "4. Background: " + e.inputTextStr + "id='" + e.pre + "labelbkgd2' value='cccccc' size=4><br/>",
    i += e.spanNowrapStr + "5. " + e.buttonStr + "applyselection_labels'>Display</button></span>",
    i += "</div>",
    i += e.divStr + "dl_distance' class='" + r + "'>",
    e.isMobile() ? i += e.spanNowrapStr + "1. Touch TWO atoms</span><br/>" : i += e.spanNowrapStr + '1. Pick TWO atoms while holding "Alt" key</span><br/>',
    i += e.spanNowrapStr + "2. Color: " + e.inputTextStr + "id='" + e.pre + "distancecolor' value='ffff00' size=4><br/>",
    i += e.spanNowrapStr + "3. " + e.buttonStr + "applypick_measuredistance'>Display</button></span>",
    i += "</div>",
    i += e.divStr + "dl_stabilizer' class='" + r + "'>",
    e.isMobile() ? i += e.spanNowrapStr + "1. Touch TWO atoms</span><br/>" : i += e.spanNowrapStr + '1. Pick TWO atoms while holding "Alt" key</span><br/>',
    i += e.spanNowrapStr + "2. Color: " + e.inputTextStr + "id='" + e.pre + "stabilizercolor' value='ffffff' size=4><br/>",
    i += e.spanNowrapStr + "3. " + e.buttonStr + "applypick_stabilizer'>Add</button></span>",
    i += "</div>",
    i += e.divStr + "dl_disttwosets' class='" + r + "'>",
    i += e.spanNowrapStr + "1. Select two sets</span><br/>",
    i += "<table border=0 width=400 cellspacing=10><tr><td>",
    i += e.divNowrapStr + "First set:</div>",
    i += "<div style='text-indent:1.1em'><select style='max-width:200px' id='" + e.pre + "atomsCustomDist2' multiple size='5' style='min-width:130px;'>",
    i += "</select></div>",
    i += "</td><td>",
    i += e.divNowrapStr + "Second set:</div>",
    i += "<div style='text-indent:1.1em'><select style='max-width:200px' id='" + e.pre + "atomsCustomDist' multiple size='5' style='min-width:130px;'>",
    i += "</select></div>",
    i += "</td></tr></table>",
    i += e.spanNowrapStr + "2. Color: " + e.inputTextStr + "id='" + e.pre + "distancecolor2' value='ffff00' size=4><br/><br/>",
    i += e.spanNowrapStr + "3. " + e.buttonStr + "applydist2'>Display</button></span>",
    i += "</div>",
    i += e.divStr + "dl_stabilizer_rm' class='" + r + "'>",
    e.isMobile() ? i += e.spanNowrapStr + "1. Touch TWO atoms</span><br/>" : i += e.spanNowrapStr + '1. Pick TWO atoms while holding "Alt" key</span><br/>',
    i += e.spanNowrapStr + "2. " + e.buttonStr + "applypick_stabilizer_rm'>Remove</button></span>",
    i += "</div>",
    i += e.divStr + "dl_thickness' class='" + r + "'>",
    i += e.setThicknessHtml("3dprint"),
    i += "</div>",
    i += e.divStr + "dl_thickness2' class='" + r + "'>",
    i += e.setThicknessHtml("style"),
    i += "</div>",
    i += e.divStr + "dl_addtrack' class='" + r + "'>",
    i += " <input type='hidden' id='" + e.pre + "track_chainid' value=''>",
    i += e.divStr + "dl_addtrack_tabs' style='border:0px;'>",
    i += "<ul>",
    i += "<li><a href='#" + e.pre + "tracktab1'>NCBI gi/Accession</a></li>",
    i += "<li><a href='#" + e.pre + "tracktab2'>FASTA</a></li>",
    i += "<li><a href='#" + e.pre + "tracktab2b'>FASTA Alignment</a></li>",
    i += "<li><a href='#" + e.pre + "tracktab3'>BED File</a></li>",
    i += "<li><a href='#" + e.pre + "tracktab4'>Custom</a></li>",
    i += "<li><a href='#" + e.pre + "tracktab5'>Current Selection</a></li>",
    i += "</ul>",
    i += e.divStr + "tracktab1'>",
    i += "NCBI gi/Accession: " + e.inputTextStr + "id='" + e.pre + "track_gi' placeholder='gi' size=16> <br><br>",
    i += e.buttonStr + "addtrack_button1'>Add Track</button>",
    i += "</div>",
    i += e.divStr + "tracktab2'>",
    i += "FASTA Title: " + e.inputTextStr + "id='" + e.pre + "fasta_title' placeholder='track title' size=16> <br><br>",
    i += "FASTA sequence: <br><textarea id='" + e.pre + "track_fasta' rows='5' style='width: 100%; height: " + 2 * e.LOG_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>",
    i += e.buttonStr + "addtrack_button2'>Add Track</button>",
    i += "</div>",
    i += e.divStr + "tracktab2b'>",
    i += "<div style='width:600px'>The full protein sequences with gaps are listed one by one. The sequence of the structure is listed at the top. If there are non-gap residues (e.g., from RefSeq) outside of the sequence of the structure, please remove them. Each sequence has a title line starting with \">\".</div><br>",
    i += "<b>FASTA alignment sequences</b>:<br>",
    i += "<textarea id='" + e.pre + "track_fastaalign' rows='5' style='width: 100%; height: " + 2 * e.LOG_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>",
    i += "Position of the first residue in Sequences & Annotations window: " + e.inputTextStr + "id='" + e.pre + "fasta_startpos' value='1' size=2> <br><br>",
    i += "Color Sequence by: <select id='" + e.pre + "colorseqby'>",
    i += e.optionStr + "'identity' selected>Identity</option>",
    i += e.optionStr + "'conservation'>Conservation</option>",
    i += "</select> <br><br>",
    i += e.buttonStr + "addtrack_button2b'>Add Track(s)</button>",
    i += "</div>",
    i += e.divStr + "tracktab3'>",
    i += "BED file: " + e.inputFileStr + "id='" + e.pre + "track_bed' size=16> <br><br>",
    i += e.buttonStr + "addtrack_button3'>Add Track</button>",
    i += "</div>",
    i += e.divStr + "tracktab4'>",
    i += "Track Title: " + e.inputTextStr + "id='" + e.pre + "track_title' placeholder='track title' size=16> <br><br>",
    i += 'Track Text (e.g., "152 G, 155-156 RR" defines a character "G" at the position 152 and two continuous characters "RR" at positions from 155 to 156. The starting position is 1): <br>',
    i += "<textarea id='" + e.pre + "track_text' rows='5' style='width: 100%; height: " + 2 * e.MENU_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>",
    i += e.buttonStr + "addtrack_button4'>Add Track</button>",
    i += "</div>",
    i += e.divStr + "tracktab5'>",
    i += "Track Title: " + e.inputTextStr + "id='" + e.pre + "track_selection' placeholder='track title' size=16> <br><br>",
    i += e.buttonStr + "addtrack_button5'>Add Track</button>",
    i += "</div>",
    i += "</div>",
    i += "</div>",
    i += e.divStr + "dl_saveselection' class='" + r + "'>";
    var h = t ? Object.keys(t.defNames2Atoms).length : 1;
    i += "Name: " + e.inputTextStr + "id='" + e.pre + "seq_command_name' value='seq_" + h + "' size='5'> <br>",
    i += "<button style='white-space:nowrap;' id='" + e.pre + "seq_saveselection'>Save</button> <button style='white-space:nowrap; margin-left:20px;' id='" + e.pre + "seq_clearselection'>Clear</button><br/><br/>",
    i += "</div>",
    i += e.divStr + "dl_copyurl' style='width:500px;' class='" + r + "'>",
    i += 'Please copy one of the URLs below. They show the same result.<br>(To add a title to share link, click "Windows > Your Note" and click "File > Share Link" again.)<br><br>',
    i += "Original URL with commands: <br><textarea id='" + e.pre + "ori_url' rows='4' style='width:100%'></textarea><br><br>",
    i += "Short URL: (To replace this URL, send a pull request to update share.html at <a href='https://github.com/ncbi/icn3d' target='_blank'>iCn3D GitHub</a>)<br>" + e.inputTextStr + "id='" + e.pre + "short_url' value='' style='width:100%'><br><br>",
    i += "</div>",
    i += e.divStr + "dl_selectannotations' class='" + r + " icn3d-annotation' style='background-color:white;'>",
    i += e.divStr + "dl_annotations_tabs'>",
    i += e.divStr + "dl_anno_view_tabs' style='border:0px; height:33px;'>",
    i += "<ul>",
    i += "<li><a href='#" + e.pre + "anno_tmp1' id='" + e.pre + "anno_summary'>Summary</a></li>",
    i += "<li><a href='#" + e.pre + "anno_tmp2' id='" + e.pre + "anno_details'>Details</a></li>",
    i += "</ul>",
    i += e.divStr + "anno_tmp1'>",
    i += "</div>",
    i += e.divStr + "anno_tmp2'>",
    i += "</div>",
    i += "</div>",
    i += "<div class='icn3d-box' style='width:520px;'><b>Annotations:&nbsp;</b><br><table border=0><tr>";
    var p = "<td style='min-width:110px;'><span style='white-space:nowrap'>"
      , m = "<td style='min-width:130px;'><span style='white-space:nowrap'>";
    return i += p + e.inputCheckStr + "id='" + e.pre + "anno_all'>All" + e.space2 + "</span></td>",
    i += m + e.inputCheckStr + "id='" + e.pre + "anno_cdd' checked>Conserved Domains" + e.space2 + "</span></td>",
    i += p + e.inputCheckStr + "id='" + e.pre + "anno_clinvar'>ClinVar" + e.space2 + "</span></td>",
    i += p + e.inputCheckStr + "id='" + e.pre + "anno_binding'>Functional Sites" + e.space2 + "</span></td>",
    i += "</tr><tr>",
    i += p + e.inputCheckStr + "id='" + e.pre + "anno_custom'>Custom" + e.space2 + "</span></td>",
    i += m + e.inputCheckStr + "id='" + e.pre + "anno_3dd'>3D Domains" + e.space2 + "</span></td>",
    i += p + e.inputCheckStr + "id='" + e.pre + "anno_snp'>SNPs" + e.space2 + "</span></td>",
    i += p + e.inputCheckStr + "id='" + e.pre + "anno_interact'>Interactions" + e.space2 + "</span></td>",
    i += "<td></td>",
    i += "</tr><tr>",
    i += p + e.inputCheckStr + "id='" + e.pre + "anno_ssbond'>Disulfide Bonds" + e.space2 + "</span></td>",
    i += p + e.inputCheckStr + "id='" + e.pre + "anno_crosslink'>Cross-Linkages" + e.space2 + "</span></td>",
    void 0 !== e.cfg.opmid ? i += "<td style='min-width:110px;'><span id='" + e.pre + "anno_transmemli' style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "anno_transmem'>Transmembrane" + e.space2 + "</span></td>" : i += "<td style='min-width:110px;'><span id='" + e.pre + "anno_transmemli' style='display:none; white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "anno_transmem'>Transmembrane" + e.space2 + "</span></td>",
    i += "<td></td>",
    i += "</tr></table></div>",
    i += "<button style='white-space:nowrap; margin-left:5px;' id='" + e.pre + "showallchains'>Show All Chains</button><br>",
    i += e.divStr + "seqguide_wrapper' style='display:none'><br>" + e.setSequenceGuide("2") + "</div>",
    i += "</div><br/><hr><br>",
    i += e.divStr + "dl_annotations'>",
    i += "</div>",
    i += "</div>",
    i += e.divStr + "dl_graph' style='background-color:white;' class='" + r + "'>",
    e.svgid = e.pre + "icn3d_viz",
    i += "<style>",
    i += "#" + e.svgid + " svg { border: 1px solid; font: 13px sans-serif; text-anchor: end; }",
    i += "#" + e.svgid + " .node { stroke: #eee; stroke-width: 1.5px; }",
    i += ".node .selected { stroke: " + e.ORANGE + "; }",
    i += ".link { stroke: #999; stroke-opacity: 0.6; }",
    i += "</style>",
    i += e.divNowrapStr + "<b>Zoom</b>: mouse wheel; " + e.space3 + " <b>Move</b>: left button; " + e.space3 + " <b>Select Multiple Nodes</b>: Ctrl Key and drag an Area" + e.space3,
    i += '<div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + e.pre + 'dl_svgcolor_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + e.pre + 'dl_svgcolor_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div></div>',
    i += e.divStr + "dl_svgcolor' style='display:none;'>",
    i += e.divNowrapStr + '<span style="margin-left:33px">Click "View > H-Bonds & Interactions" to adjust parameters and relaunch the graph</span></div>',
    i += e.divNowrapStr + '<span style="margin-left:33px; color:#00FF00; font-weight:bold">Green</span>: H-Bonds; ',
    i += '<span style="color:#00FFFF; font-weight:bold">Cyan</span>: Salt Bridge/Ionic; ',
    i += '<span style="font-weight:bold">Grey</span>: contacts; ',
    i += '<span style="color:' + e.ORANGE + '; font-weight:bold">Orange</span>: disulfide bonds</div>',
    i += e.divNowrapStr + '<span style="margin-left:33px; color:#FF00FF; font-weight:bold">Magenta</span>: Halogen Bonds; ',
    i += '<span style="color:#FF0000; font-weight:bold">Red</span>: &pi;-Cation; ',
    i += '<span style="color:#0000FF; font-weight:bold">Blue</span>: &pi;-Stacking</div>',
    i += "</div>",
    i += e.divNowrapStr + d + e.svgid + '_svg">SVG</button>' + e.space2,
    i += d + e.svgid + '_png">PNG</button>' + e.space2,
    i += d + e.svgid + '_json">JSON</button>',
    i += e.space3 + "<b>Force on Nodes</b>: <select id='" + e.svgid + "_force'>",
    i += e.optionStr + "'0'>No</option>",
    i += e.optionStr + "'1'>X-axis</option>",
    i += e.optionStr + "'2'>Y-axis</option>",
    i += e.optionStr + "'3'>Circle</option>",
    i += e.optionStr + "'4' selected>Random</option>",
    i += "</select>",
    i += e.space3 + "<b>Label Size</b>: <select id='" + e.svgid + "_label'>",
    l = "icn3d-node-text",
    i += e.optionStr + "'" + l + "0'>No</option>",
    i += e.optionStr + "'" + l + "4'>4px</option>",
    i += e.optionStr + "'" + l + "8' selected>8px</option>",
    i += e.optionStr + "'" + l + "12'>12px</option>",
    i += e.optionStr + "'" + l + "16'>16px</option>",
    i += e.optionStr + "'" + l + "24'>24px</option>",
    i += e.optionStr + "'" + l + "32'>32px</option>",
    i += "</select>",
    i += e.space3 + "<b>Internal Edges</b>: <select id='" + e.svgid + "_hideedges'>",
    i += e.optionStr + "'1' selected>Hide</option>",
    i += e.optionStr + "'0'>Show</option>",
    i += "</select>",
    i += "</div>",
    i += '<svg id="' + e.svgid + '" style="margin-top:6px;"></svg>',
    i += "</div>",
    i += e.divStr + "dl_area' class='" + r + "'>",
    i += "Solvent Accessible Surface Area (SASA) calculated using the <a href='https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0008140' target='_blank'>EDTSurf algorithm</a>: <br>",
    i += '(0-20% out is considered "in". 50-100% out is considered "out".)<br><br>',
    i += "<b>Toal</b>: " + e.inputTextStr + "id='" + e.pre + "areavalue' value='' size='10'> &#8491;<sup>2</sup><br><br>",
    i += "<div id='" + e.pre + "areatable' style='max-height:400px; overflow:auto'></div>",
    i += "</div>",
    i += e.divStr + "dl_colorbyarea' class='" + r + "'>",
    i += "<div style='width:500px'>Color each residue based on the percentage of solvent accessilbe surface area. The color ranges from blue, to white, to red for a percentage of 0, 35 (variable), and 100, respectively.</div><br>",
    i += "<b>Middle Percentage (White)</b>: " + e.inputTextStr + "id='" + e.pre + "midpercent' value='35' size='10'>% <br><br>",
    i += "<button style='white-space:nowrap;' id='" + e.pre + "applycolorbyarea'>Color</button><br/><br/>",
    i += "</div>",
    i += e.divStr + "dl_rmsd' class='" + r + "'>",
    i += "<br><b>Alignment RMSD</b>: " + e.inputTextStr + "id='" + e.pre + "realignrmsd' value='35' size='10'>&#8491;<br><br>",
    i += "</div>",
    i += e.divStr + "dl_buriedarea' class='" + r + "'>",
    i += "</div>",
    i += e.divStr + "dl_propbypercentout' class='" + r + "'>",
    i += "<div style='width:400px'>Select residue based on the percentage of solvent accessilbe surface area. The values are in the range of 0-100.</div><br>",
    i += "<b>Min Percentage</b>: " + e.inputTextStr + "id='" + e.pre + "minpercentout' value='0' size='10'>% <br>",
    i += "<b>Max Percentage</b>: " + e.inputTextStr + "id='" + e.pre + "maxpercentout' value='100' size='10'>% <br>",
    i += "<button style='white-space:nowrap;' id='" + e.pre + "applypropbypercentout'>Apply</button><br/><br/>",
    i += "</div>",
    i += e.divStr + "dl_propbybfactor' class='" + r + "'>",
    i += "<div style='width:400px'>Select residue based on B-factor. The values are in the range of 0-100.</div><br>",
    i += "<b>Min B-factor</b>: " + e.inputTextStr + "id='" + e.pre + "minbfactor' value='0' size='10'>% <br>",
    i += "<b>Max B-factor</b>: " + e.inputTextStr + "id='" + e.pre + "maxbfactor' value='100' size='10'>% <br>",
    i += "<button style='white-space:nowrap;' id='" + e.pre + "applypropbybfactor'>Apply</button><br/><br/>",
    i += "</div>",
    i += "</div>",
    i += "\x3c!--/form--\x3e"
}
,
iCn3DUI.prototype.setColorHints = function() {
    this.icn3d;
    var e = "";
    return e += this.divNowrapStr + '<span style="margin-left:33px; color:#00FF00; font-weight:bold">Green</span>: H-Bonds; ',
    e += '<span style="color:#00FFFF; font-weight:bold">Cyan</span>: Salt Bridge/Ionic; ',
    e += '<span style="font-weight:bold">Grey</span>: contacts</div>',
    e += this.divNowrapStr + '<span style="margin-left:33px; color:#FF00FF; font-weight:bold">Magenta</span>: Halogen Bonds; ',
    e += '<span style="color:#FF0000; font-weight:bold">Red</span>: &pi;-Cation; ',
    e += '<span style="color:#0000FF; font-weight:bold">Blue</span>: &pi;-Stacking</div>'
}
,
iCn3DUI.prototype.setThicknessHtml = function(e) {
    var t = this
      , i = (t.icn3d,
    "")
      , n = "3dprint" == e ? "1" : "0.1"
      , r = "3dprint" == e ? "1.2" : "0.3"
      , s = "3dprint" == e ? "0.8" : "0.4"
      , o = "3dprint" == e ? "1" : "0.2"
      , a = "3dprint" == e ? "1" : "0.2"
      , l = "3dprint" == e ? "2" : "1.3"
      , d = "3dprint" == e ? "1.4" : "0.8"
      , c = "3dprint" == e ? "0.6" : "0.3";
    return i += "<b>Line Radius</b>: " + t.inputTextStr + "id='" + t.pre + "linerad_" + e + "' value='" + n + "' size=4>" + t.space3 + "(for stabilizers, hydrogen bonds, distance lines, default 0.1)<br/>",
    i += "<b>Coil Radius</b>: " + t.inputTextStr + "id='" + t.pre + "coilrad_" + e + "' value='" + r + "' size=4>" + t.space3 + "(for coils, default 0.3)<br/>",
    i += "<b>Stick Radius</b>: " + t.inputTextStr + "id='" + t.pre + "stickrad_" + e + "' value='" + s + "' size=4>" + t.space3 + "(for sticks, default 0.4)<br/>",
    i += "<b>Trace Radius</b>: " + t.inputTextStr + "id='" + t.pre + "tracerad_" + e + "' value='" + o + "' size=4>" + t.space3 + "(for C alpha trace, O3' trace, default 0.2)<br/>",
    i += "<b>Ribbon Thickness</b>: " + t.inputTextStr + "id='" + t.pre + "ribbonthick_" + e + "' value='" + a + "' size=4>" + t.space3 + "(for helix and sheet ribbons, nucleotide ribbons, default 0.2)<br/>",
    i += "<b>Protein Ribbon Width</b>: " + t.inputTextStr + "id='" + t.pre + "prtribbonwidth_" + e + "' value='" + l + "' size=4>" + t.space3 + "(for helix and sheet ribbons, default 1.3)<br/>",
    i += "<b>Nucleotide Ribbon Width</b>: " + t.inputTextStr + "id='" + t.pre + "nucleotideribbonwidth_" + e + "' value='" + d + "' size=4>" + t.space3 + "(for nucleotide ribbons, default 0.8)<br/>",
    i += "<b>Ball Scale</b>: " + t.inputTextStr + "id='" + t.pre + "ballscale_" + e + "' value='" + c + "' size=4>" + t.space3 + "(for styles 'Ball and Stick' and 'Dot', default 0.3)<br/>",
    i += t.spanNowrapStr + "" + t.buttonStr + "apply_thickness_" + e + "'>Preview</button></span>"
}
,
iCn3DUI.prototype.setSequenceGuide = function(e, t) {
    var i = this
      , n = i.icn3d
      , r = ""
      , s = n ? Object.keys(n.defNames2Atoms).length : 1;
    t ? r += i.divStr + "seqguide" + e + "'>" : (r += '<div style="width:20px; margin-left:3px; display:inline-block;"><span id="' + i.pre + "seqguide" + e + '_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + i.pre + "seqguide" + e + '_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div> ',
    r += "<div style='min-width:200px; display:inline-block;'><b>Selection:</b> Name: " + i.inputTextStr + "id='" + i.pre + "seq_command_name" + e + "' value='seq_" + s + "' size='5'> " + i.space2 + "<button style='white-space:nowrap;' id='" + i.pre + "seq_saveselection" + e + "'>Save</button> <button style='white-space:nowrap; margin-left:20px;' id='" + i.pre + "seq_clearselection" + e + "'>Clear</button></div><br/>",
    r += i.divStr + "seqguide" + e + "' style='display:none; white-space:normal;' class='icn3d-box'>"),
    r += i.getSelectionHints();
    return r += "<b>Residue labeling:</b> standard residue with coordinates: UPPER case letter; nonstandard residue with coordinates: the first UPPER case letter plus a period except that water residue uses the letter 'O'; residue missing coordinates: lower case letter." + (i.isMac() && !i.isMobile() ? "<br/><br/><b>Turn on scroll bar:</b> System preferences -> General -> show scroll bars -> check Always" : "") + "<br/></div>"
}
,
iCn3DUI.prototype.setAlignSequenceGuide = function(e, t) {
    var i = this
      , n = i.icn3d
      , r = "";
    var s = n ? Object.keys(n.defNames2Atoms).length : 1;
    r += '<div style="width:20px; margin-left:3px; display:inline-block;"><span id="' + i.pre + 'alignseqguide_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + i.pre + 'alignseqguide_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div> ',
    r += "<div style='min-width:200px; display:inline-block;''><b>Selection:</b> Name: " + i.inputTextStr + "id='" + i.pre + "alignseq_command_name' value='alseq_" + s + "' size='10'> " + i.space2 + "<button style='white-space:nowrap;' id='" + i.pre + "alignseq_saveselection'>Save</button> <button style='white-space:nowrap; margin-left:20px;' id='" + i.pre + "alignseq_clearselection'>Clear</button></div><br/>",
    r += i.divStr + "alignseqguide' style='display:none; white-space:normal;' class='icn3d-box'>",
    r += i.getSelectionHints();
    return r += "<b>Residue labeling:</b> aligned residue with coordinates: UPPER case letter; non-aligned residue with coordinates: lower case letter which can be highlighted; residue missing coordinates: lower case letter which can NOT be highlighted." + (i.isMac() && !i.isMobile() ? "<br/><br/><b>Turn on scroll bar:</b> System preferences -> General -> show scroll bars -> check Always" : "") + "<br/></div>"
}
,
iCn3DUI.prototype.getSelectionHints = function() {
    this.icn3d;
    var e = "";
    this.isMobile() ? e += '<b>Select Aligned Sequences:</b> touch to select, touch again to deselect, multiple selection is allowed without Ctrl key, click "Save Selection" to save the current selection.<br/>' : (e += '<b>Select on 1D sequences:</b> drag to select, drag again to deselect, multiple selection is allowed without Ctrl key, click "Save Selection" to save the current selection.<br/><br/>',
    e += "<b>Select on 2D interaction diagram:</b> click on the nodes or lines. The nodes are chains and can be united with the Ctrl key. The lines are interactions and can NOT be united. Each click on the lines selects half of the lines, i.e., select the interacting residues in one of the two chains.<br/><br/>",
    e += "<b>Select on 3D structures:</b> " + (this.isMobile() ? "use finger to pick" : 'hold "Alt" and use mouse to pick') + ', click the second time to deselect, hold "Ctrl" to union selection, hold "Shift" to select a range, press the up/down arrow to switch among atom/residue/strand/chain/structure, click "Save Selection" to save the current selection.<br/><br/>',
    e += '<b>Save the current selection</b> (either on 3D structure, 2D interactions, or 1D sequence): open the menu "Select -> Save Selection", specify the name and description for the selection, and click "Save".<br/><br/>');
    return e
}
,
iCn3DUI.prototype.getAlignSequencesAnnotations = function(e, t, i, n, r) {
    var s = this.icn3d
      , o = ""
      , a = 0
      , l = {};
    if (void 0 !== e)
        for (var d = 0, c = e.length; d < c; ++d)
            l[e[d]] = 1;
    var h, p = Object.keys(s.hAtoms).length == Object.keys(s.atoms).length && h && (void 0 === t || t);
    p && (s.hAtoms = {});
    var m, u, f = 0, g = 0;
    for (var d in s.alnChains) {
        0 == f && (m = d),
        u = r && 0 < f ? m : d,
        p && (s.hAtoms = s.unionHash(s.hAtoms, s.alnChains[d]));
        var v = []
          , b = ""
          , y = void 0 !== s.alnChainsSeq[d] ? s.alnChainsSeq[d].length : 0;
        a < y && (a = y);
        var C = u.indexOf("_")
          , _ = u.substr(0, C)
          , S = u.substr(C + 1);
        b += "<span class='icn3d-residueNum' title='starting residue number'>" + (void 0 !== s.alnChainsSeq[d][0] ? s.alnChainsSeq[d][0].resi : "") + "</span>",
        h = !(void 0 === e || !l.hasOwnProperty(u));
        for (var w = 0, A = y; w < A; ++w) {
            var x = "";
            "" === s.alnChainsSeq[d][w].resi || isNaN(s.alnChainsSeq[d][w].resi) || (x = _ + "_" + S + "_" + s.alnChainsSeq[d][w].resi,
            s.alnChainsSeq[d][w].color);
            var k, D = "class='icn3d-residue";
            if ((void 0 === n || n) && (h || void 0 !== i && "" !== x && -1 !== i.indexOf(x)) && (D = "class='icn3d-residue icn3d-highlightSeq"),
            D += "" === x ? "'" : " " + s.alnChainsSeq[d][w].class + "'",
            s.residues.hasOwnProperty(x)) {
                var O = s.getFirstCalphaAtomObj(s.residues[x]);
                k = void 0 !== O.color ? "#" + O.color.getHexString() + ";" : "#000000;"
            } else
                k = "#000000;";
            if ("#FFFFFF;" === k.toUpperCase() && (k = this.GREYD),
            r && 0 == w) {
                b += "<span style='width:" + 10 * g + "px'></span>"
            }
            "" !== x ? -1 != s.alnChainsSeq[d][w].resi ? b += "<span id='align_" + this.pre + x + "' " + D + " style='color:" + k + "' title='" + s.alnChainsSeq[d][w].resn + s.alnChainsSeq[d][w].resi + "'>" + s.alnChainsSeq[d][w].resn + "</span>" : b += "<span>" + s.alnChainsSeq[d][w].resn + "</span>" : b += "<span title='" + s.alnChainsSeq[d][w].resn + s.alnChainsSeq[d][w].resi + "'>" + s.alnChainsSeq[d][w].resn + "</span>"
        }
        b += "<span class='icn3d-residueNum' title='ending residue number'>" + (void 0 !== s.alnChainsSeq[d][y - 1] ? s.alnChainsSeq[d][y - 1].resi : "") + "</span>";
        for (var R = void 0 !== s.alnChainsAnno[d] ? s.alnChainsAnno[d].length : 0, T = 0, E = R; T < E; ++T) {
            v[T] = "";
            var I = 0 == T && 7 <= R ? s.alnChainsAnTtl[d][4][0] : u;
            v[T] += "<span class='icn3d-residueNum'></span>";
            for (w = 0,
            A = s.alnChainsAnno[d][T].length; w < A; ++w) {
                var H = s.alnChainsAnno[d][T][w];
                if ("H" == H || "E" == H || "c" == H || "o" == H)
                    if ("H" == H)
                        v[T] += w % 2 == 0 ? '<span class="icn3d-helix">&nbsp;</span>' : '<span class="icn3d-helix2">&nbsp;</span>';
                    else if ("E" == H) {
                        if (void 0 !== s.alnChainsSeq[I][w]) {
                            x = I + "_" + s.alnChainsSeq[I][w].resi;
                            if (s.residues.hasOwnProperty(x))
                                s.getFirstCalphaAtomObj(s.residues[x]).ssend ? v[T] += '<span class="icn3d-sheet2">&nbsp;</span>' : v[T] += '<span class="icn3d-sheet">&nbsp;</span>'
                        }
                    } else
                        v[T] += "c" == H ? '<span class="icn3d-coil">&nbsp;</span>' : "o" == H ? '<span class="icn3d-other">&nbsp;</span>' : "<span></span>";
                else
                    v[T] += "<span>" + H + "</span>"
            }
            v[T] += "<span class='icn3d-residueNum'></span>"
        }
        var L = d
          , $ = void 0 !== s.pdbid_chain2title ? s.pdbid_chain2title[u] : "";
        for (T = R - 1; 0 <= T; --T) {
            var P = s.alnChainsAnTtl[d][T][0];
            "SS" == P && (P = ""),
            o += "<div class='icn3d-residueLine' style='white-space:nowrap;'><div class='icn3d-seqTitle' anno='" + T + "'>" + P + "</div>" + v[T] + "<br/></div>"
        }
        o += '<div class="icn3d-seqTitle icn3d-link icn3d-blue" chain="' + d + '" anno="sequence" title="' + $ + '">' + L + ' </div><span class="icn3d-seqLine">' + b + "</span><br/>",
        0 < f && (g += y),
        ++f
    }
    return {
        sequencesHtml: o,
        maxSeqCnt: a
    }
}
,
iCn3DUI.prototype.addGsizeSalt = function(e) {
    this.icn3d;
    var t = "";
    t += "<span style='white-space:nowrap;font-weight:bold;'>Grid Size: <select id='" + this.pre + e + "gsize'>";
    t += this.getOptionHtml(["65", "97", "129"], 0),
    t += "</select></span>",
    t += "<span style='white-space:nowrap;font-weight:bold;margin-left:30px;'>Salt Concentration: <select id='" + this.pre + e + "salt'>";
    return t += this.getOptionHtml(["0", "0.15"], 1),
    t += "</select> M</span><br/>"
}
,
iCn3DUI.prototype.getFootHtml = function(e, t) {
    this.icn3d;
    var i = "<div style='width:500px;'>";
    return "delphi" == e ? this.cfg.cid ? i += "<b>Note</b>: Partial charges (MMFF94) are from PubChem Compound SDF files.<br/><br/>" : (i += "<b>Note</b>: Only the selected residues are used for <a href='http://honig.c2b2.columbia.edu/delphi'>DelPhi</a> potential calculation by solving linear Poisson-Boltzmann equation.",
    i += '<div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + this.pre + t + '_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + this.pre + t + '_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div><br>',
    i += this.divStr + t + "' style='display:none;'>",
    i += "<br>The hydrogens and partial charges of proteins and nucleotides are added using <a href='http://compbio.clemson.edu/pka_webserver'>DelPhiPKa</a> with the Amber charge and size files. The hydrogens of ligands are added using <a href='http://openbabel.org/wiki/Main_Page'>Open Babel</a>. The partial charges of ligands are calculated using <a href='http://ambermd.org/antechamber/ac.html'>Antechamber</a> with the Gasteiger charge method. All partial charges are calculated at pH 7.<br/><br/>",
    i += 'Lipids are treated as ligands. Please use "HETATM" instead of "ATOM  " for each lipid atom in your PDB file. Each phosphate in lipids is assigned with a charge of -1. You can download PQR and modify it, or prepare your PQR file using other tools. Then load the PQR file at the menu "Analysis > Load PQR/Potential".<br/><br/>',
    i += "</div>") : (i += "<b>Note</b>: Always load a PDB file before loading a PQR or DelPhi potential file.",
    i += '<div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + this.pre + t + '_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + this.pre + t + '_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div><br>',
    i += this.divStr + t + "' style='display:none;'>",
    i += 'The PDB file can be loaded in the URL with "pdbid=" or at "File > Open File". The PQR file can be prepared at the menu "Analysis > Download PQR" with your modification or using other tools. The DelPhi potential file can be calculated at <a href=\'http://compbio.clemson.edu/sapp/delphi_webserver/\'>DelPhi Web Server</a> and be exported as a Cube file. ',
    "url" == e && (i += "The PQR or potential file can be accessed in a URL if it is located in the same host as iCn3D."),
    i += "<br/><br/>",
    i += "</div>"),
    i += "</div>"
}
,
iCn3DUI.prototype.allEventFunctions = function() {
    var b = this;
    b.clickCustomAtoms(),
    b.clickShow_selected(),
    b.clickHide_selected(),
    b.clickCommand_apply(),
    b.click2Ddgm(),
    b.clickAddTrackButton(),
    b.windowResize(),
    b.setTabs(),
    b.switchHighlightLevel(),
    b.clickModeswitch(),
    b.isMobile() ? (b.selectSequenceMobile(),
    b.selectChainMobile()) : b.selectSequenceNonMobile(),
    $("#" + b.pre + "back").add("#" + b.pre + "mn6_back").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.setLogCmd("back", !1),
        b.back()
    }),
    $("#" + b.pre + "forward").add("#" + b.pre + "mn6_forward").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.setLogCmd("forward", !1),
        b.forward()
    }),
    $("#" + b.pre + "fullscreen").add("#" + b.pre + "mn6_fullscreen").click(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        (b = b.setIcn3dui($(this).attr("id"))).setLogCmd("enter full screen", !1),
        t.bFullscreen = !0,
        b.WIDTH = $(window).width(),
        b.HEIGHT = $(window).height(),
        t.setWidthHeight(b.WIDTH, b.HEIGHT),
        t.draw(),
        b.openFullscreen($("#" + b.pre + "canvas")[0])
    }),
    $(document).bind("fullscreenchange webkitfullscreenchange mozfullscreenchange msfullscreenchange", function(e) {
        var t = b.icn3d;
        document.fullscreenElement || document.webkitFullscreenElement || document.mozFullscreenElement || document.msFullscreenElement || (b.setLogCmd("exit full screen", !1),
        t.bFullscreen = !1,
        b.setViewerWidthHeight(),
        t.setWidthHeight(b.WIDTH, b.HEIGHT),
        t.draw())
    }),
    $("#" + b.pre + "toggle").add("#" + b.pre + "mn2_toggle").click(function(e) {
        b.icn3d;
        b.toggleSelection(),
        b.setLogCmd("toggle selection", !0)
    }),
    $("#" + b.pre + "mn2_hl_clrYellow").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("set highlight color yellow", !0),
        t.hColor = t.thr(16776960),
        t.matShader = t.setOutlineColor("yellow"),
        t.draw()
    }),
    $("#" + b.pre + "mn2_hl_clrGreen").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("set highlight color green", !0),
        t.hColor = t.thr(65280),
        t.matShader = t.setOutlineColor("green"),
        t.draw()
    }),
    $("#" + b.pre + "mn2_hl_clrRed").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("set highlight color red", !0),
        t.hColor = t.thr(16711680),
        t.matShader = t.setOutlineColor("red"),
        t.draw()
    }),
    $("#" + b.pre + "mn2_hl_styleOutline").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("set highlight style outline", !0),
        t.bHighlight = 1,
        b.showHighlight()
    }),
    $("#" + b.pre + "mn2_hl_styleObject").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("set highlight style 3d", !0),
        t.bHighlight = 2,
        b.showHighlight()
    }),
    $("#" + b.pre + "mn2_hl_styleNone").click(function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.clearHighlight(),
        b.setLogCmd("clear selection", !0)
    }),
    $("#" + b.pre + "alternate").add("#" + b.pre + "mn2_alternate").add("#" + b.pre + "alternate2").click(function(e) {
        var t = b.icn3d;
        t.bAlternate = !0,
        t.alternateStructures(),
        t.bAlternate = !1;
        var i = Object.keys(b.structures);
        b.setLogCmd("select $" + i[t.ALTERNATE_STRUCTURE] + " | name stru" + t.ALTERNATE_STRUCTURE, !0),
        b.setLogCmd("show selection", !0)
    }),
    $("#" + b.pre + "mn2_realignresbyres").click(function(e) {
        b.icn3d;
        b.realign(),
        b.setLogCmd("realign", !0)
    }),
    $("#" + b.pre + "mn2_realignonseqalign").click(function(e) {
        var t = b.icn3d;
        if (void 0 === b.bSetChainsAdvancedMenu || !b.bSetChainsAdvancedMenu) {
            var i = t.cloneHash(t.hAtoms);
            b.setPredefinedInMenu(),
            b.bSetChainsAdvancedMenu = !0,
            t.hAtoms = t.cloneHash(i)
        }
        var n = b.setAtomMenu(["protein"]);
        $("#" + b.pre + "atomsCustomRealign").length && $("#" + b.pre + "atomsCustomRealign").html(n),
        $("#" + b.pre + "atomsCustomRealign2").length && $("#" + b.pre + "atomsCustomRealign2").html(n),
        t.bRender && b.openDlg("dl_realign", "Please select two sets to realign"),
        $("#" + b.pre + "atomsCustomRealign").resizable(),
        $("#" + b.pre + "atomsCustomRealign2").resizable()
    }),
    $("#" + b.pre + "applyRealign").click(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var i = $("#" + b.pre + "atomsCustomRealign").val();
        0 < i.length && (t.hAtoms = b.getAtomsFromNameArray(i)),
        b.realignOnSeqAlign(),
        0 < i.length ? b.setLogCmd("realign on seq align | " + i, !0) : b.setLogCmd("realign on seq align", !0)
    }),
    $("#" + b.pre + "mn1_mmtfid").click(function(e) {
        b.icn3d;
        b.openDlg("dl_mmtfid", "Please input MMTF ID")
    }),
    $("#" + b.pre + "mn1_pdbid").click(function(e) {
        b.icn3d;
        b.openDlg("dl_pdbid", "Please input PDB ID")
    }),
    $("#" + b.pre + "mn1_opmid").click(function(e) {
        b.icn3d;
        b.openDlg("dl_opmid", "Please input OPM PDB ID")
    }),
    $("#" + b.pre + "mn1_align").click(function(e) {
        b.icn3d;
        b.openDlg("dl_align", "Align two 3D structures")
    }),
    $("#" + b.pre + "mn1_chainalign").click(function(e) {
        b.icn3d;
        b.openDlg("dl_chainalign", "Align two chains of 3D structures")
    }),
    $("#" + b.pre + "mn1_pdbfile").click(function(e) {
        b.icn3d;
        (b = b.setIcn3dui($(this).attr("id"))).openDlg("dl_pdbfile", "Please input PDB File")
    }),
    $("#" + b.pre + "mn1_mol2file").click(function(e) {
        b.icn3d;
        b.openDlg("dl_mol2file", "Please input Mol2 File")
    }),
    $("#" + b.pre + "mn1_sdffile").click(function(e) {
        b.icn3d;
        b.openDlg("dl_sdffile", "Please input SDF File")
    }),
    $("#" + b.pre + "mn1_xyzfile").click(function(e) {
        b.icn3d;
        b.openDlg("dl_xyzfile", "Please input XYZ File")
    }),
    $("#" + b.pre + "mn1_urlfile").click(function(e) {
        b.icn3d;
        b.openDlg("dl_urlfile", "Load data by URL")
    }),
    $("#" + b.pre + "mn1_fixedversion").click(function(e) {
        b.icn3d;
        b.openDlg("dl_fixedversion", "Open Share Link URL in the archived version of iCn3D")
    }),
    $("#" + b.pre + "reload_fixedversion").click(function(e) {
        b.icn3d;
        var t = $("#" + b.pre + "sharelinkurl").val();
        b.setLogCmd("open " + t, !1),
        localStorage.setItem("fixedversion", "1"),
        window.open(t, "_blank")
    }),
    $("#" + b.pre + "mn1_mmciffile").click(function(e) {
        b.icn3d;
        b.openDlg("dl_mmciffile", "Please input mmCIF File")
    }),
    $("#" + b.pre + "mn1_mmcifid").click(function(e) {
        b.icn3d;
        b.openDlg("dl_mmcifid", "Please input mmCIF ID")
    }),
    $("#" + b.pre + "mn1_mmdbid").click(function(e) {
        b.icn3d;
        b.openDlg("dl_mmdbid", "Please input MMDB or PDB ID")
    }),
    $("#" + b.pre + "mn1_blast_rep_id").click(function(e) {
        b.icn3d;
        b.openDlg("dl_blast_rep_id", "Align sequence to structure")
    }),
    $("#" + b.pre + "mn1_gi").click(function(e) {
        b.icn3d;
        b.openDlg("dl_gi", "Please input protein gi")
    }),
    $("#" + b.pre + "mn1_cid").click(function(e) {
        b.icn3d;
        b.openDlg("dl_cid", "Please input PubChem CID")
    }),
    $("#" + b.pre + "mn1_pngimage").click(function(e) {
        b.icn3d;
        b.openDlg("dl_pngimage", "Please input the PNG image")
    }),
    $("#" + b.pre + "mn1_state").click(function(e) {
        b.icn3d;
        b.openDlg("dl_state", "Please input the state file")
    }),
    $("#" + b.pre + "mn1_selection").click(function(e) {
        b.icn3d;
        b.openDlg("dl_selection", "Please input the selection file")
    }),
    $("#" + b.pre + "mn1_dsn6").click(function(e) {
        b.icn3d;
        b.openDlg("dl_dsn6", "Please input the DSN6 file to display electron density map")
    }),
    $("#" + b.pre + "mn1_delphi").add("#" + b.pre + "mn1_delphi2").click(function(e) {
        b.icn3d.loadPhiFrom = "delphi",
        $("#" + b.pre + "dl_delphi_tabs").tabs(),
        b.openDlg("dl_delphi", "Please set parameters to display DelPhi potential map")
    }),
    $("#" + b.pre + "mn1_phi").click(function(e) {
        b.icn3d.loadPhiFrom = "phi",
        $("#" + b.pre + "dl_phi_tabs").tabs(),
        $("#" + b.pre + "phitab1_tabs").tabs(),
        $("#" + b.pre + "phitab2_tabs").tabs(),
        b.openDlg("dl_phi", "Please input local phi or cube file to display DelPhi potential map")
    }),
    $("#" + b.pre + "mn1_phiurl").click(function(e) {
        b.icn3d.loadPhiFrom = "phiurl",
        $("#" + b.pre + "dl_phiurl_tabs").tabs(),
        $("#" + b.pre + "phiurltab1_tabs").tabs(),
        $("#" + b.pre + "phiurltab2_tabs").tabs(),
        b.openDlg("dl_phiurl", "Please input URL phi or cube file to display DelPhi potential map")
    }),
    $("#" + b.pre + "mn1_dsn6url").click(function(e) {
        b.icn3d;
        b.openDlg("dl_dsn6url", "Please input the DSN6 file to display electron density map")
    }),
    $("#" + b.pre + "mn1_exportState").click(function(e) {
        b.icn3d;
        b.setLogCmd("export state file", !1);
        var t = b.inputid ? b.inputid : "custom";
        b.saveFile(t + "_statefile.txt", "command")
    }),
    $("#" + b.pre + "mn1_exportPdbRes").click(function(e) {
        b.icn3d;
        b.exportPdb(),
        b.setLogCmd("export pdb", !0)
    }),
    $("#" + b.pre + "delphipdb").add("#" + b.pre + "phipdb").add("#" + b.pre + "phiurlpdb").click(function(e) {
        b.icn3d;
        var t = b.getSelectedResiduePDB();
        b.setLogCmd("export PDB of selected residues", !1);
        var i = b.inputid ? b.inputid : "custom";
        b.saveFile(i + "_icn3d_residues.pdb", "text", [t])
    }),
    $("#" + b.pre + "delphipqr").add("#" + b.pre + "phipqr").add("#" + b.pre + "phiurlpqr").click(function(e) {
        b.icn3d;
        b.exportPqr(),
        b.setLogCmd("export pqr", !0)
    }),
    $("#" + b.pre + "mn1_exportStl").click(function(e) {
        b.icn3d;
        b.setLogCmd("export stl file", !1),
        b.exportStlFile("")
    }),
    $("#" + b.pre + "mn1_exportVrml").click(function(e) {
        b.icn3d;
        b.setLogCmd("export vrml file", !1),
        b.exportVrmlFile("")
    }),
    $("#" + b.pre + "mn1_exportStlStab").click(function(e) {
        b.icn3d;
        b.setLogCmd("export stl stabilizer file", !1),
        b.hideStabilizer(),
        b.resetAfter3Dprint(),
        b.addStabilizer(),
        b.exportStlFile("_stab")
    }),
    $("#" + b.pre + "mn1_exportVrmlStab").click(function(e) {
        b.icn3d;
        b.setLogCmd("export vrml stabilizer file", !1),
        b.hideStabilizer(),
        b.resetAfter3Dprint(),
        b.addStabilizer(),
        b.exportVrmlFile("_stab")
    }),
    $("#" + b.pre + "mn6_exportInteraction").click(function(e) {
        b.icn3d;
        b.setLogCmd("export interactions", !1),
        void 0 !== b.cfg.mmdbid && b.retrieveInteractionData(),
        b.exportInteractions()
    }),
    $("#" + b.pre + "mn1_exportCanvas").add("#" + b.pre + "saveimage").click(function(e) {
        b.icn3d;
        b.setLogCmd("export canvas", !1);
        b.shareLink(!0)
    }),
    $("#" + b.pre + "mn1_exportCanvas2").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("export canvas 2", !1),
        t.scaleFactor = 2,
        b.shareLink(!0)
    }),
    $("#" + b.pre + "mn1_exportCanvas4").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("export canvas 4", !1),
        t.scaleFactor = 4,
        b.shareLink(!0)
    }),
    $("#" + b.pre + "mn1_exportCanvas8").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("export canvas 8", !1),
        t.scaleFactor = 8,
        b.shareLink(!0)
    }),
    $("#" + b.pre + "mn1_exportCounts").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("export counts", !1);
        var i = '<html><body><div style="text-align:center"><br><b>Total Count for atoms with coordinates</b>:<br/><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Structure Count</th><th>Chain Count</th><th>Residue Count</th><th>Atom Count</th></tr>';
        i += "<tr><td>" + Object.keys(t.structures).length + "</td><td>" + Object.keys(t.chains).length + "</td><td>" + Object.keys(t.residues).length + "</td><td>" + Object.keys(t.atoms).length + "</td></tr>",
        i += "</table><br/>",
        i += "<b>Counts by Chain for atoms with coordinates</b>:<br/><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Structure</th><th>Chain</th><th>Residue Count</th><th>Atom Count</th></tr>";
        for (var n = Object.keys(t.chains), r = 0, s = n.length; r < s; ++r) {
            var o = n[r]
              , a = o.indexOf("_")
              , l = o.substr(0, a)
              , d = o.substr(a + 1)
              , c = {}
              , h = t.chains[o];
            for (var p in h)
                c[t.atoms[p].resi] = 1;
            i += "<tr><td>" + l + "</td><td>" + d + "</td><td>" + Object.keys(c).length + "</td><td>" + Object.keys(t.chains[o]).length + "</td></tr>"
        }
        i += "</table><br/></div></body></html>";
        var m = b.inputid ? b.inputid : "custom";
        b.saveFile(m + "_counts.html", "html", i)
    }),
    $("#" + b.pre + "mn1_exportSelections").click(function(e) {
        var t = b.icn3d;
        if (b.setLogCmd("export all selections", !1),
        void 0 === b.bSetChainsAdvancedMenu || !b.bSetChainsAdvancedMenu) {
            var i = t.cloneHash(t.hAtoms);
            b.setPredefinedInMenu(),
            b.bSetChainsAdvancedMenu = !0,
            t.hAtoms = t.cloneHash(i)
        }
        var n = b.exportCustomAtoms()
          , r = b.inputid ? b.inputid : "custom";
        b.saveFile(r + "_selections.txt", "text", [n])
    }),
    $("#" + b.pre + "mn1_sharelink").click(function(e) {
        b.icn3d;
        b.shareLink()
    }),
    $("#" + b.pre + "mn1_replayon").click(function(e) {
        b.icn3d;
        b.replayon(),
        b.setLogCmd("replay on", !0)
    }),
    $("#" + b.pre + "mn1_replayoff").click(function(e) {
        b.icn3d;
        b.replayoff(),
        b.setLogCmd("replay off", !0)
    }),
    $("#" + b.pre + "mn1_link_structure").click(function(e) {
        b.icn3d;
        var t = b.getLinkToStructureSummary(!0);
        window.open(t, "_blank")
    }),
    $("#" + b.pre + "mn1_link_bind").click(function(e) {
        b.icn3d;
        url = "https://www.ncbi.nlm.nih.gov/pccompound?LinkName=pccompound_structure&from_uid=" + b.inputid,
        b.setLogCmd("link to 3D protein structures bound to CID " + b.inputid + ": " + url, !1),
        window.open(url, "_blank")
    }),
    $("#" + b.pre + "mn1_link_vast").click(function(e) {
        var t = b.icn3d;
        if (void 0 === b.inputid)
            i = "https://www.ncbi.nlm.nih.gov/pccompound?term=" + t.molTitle,
            b.setLogCmd("link to compounds " + t.molTitle + ": " + i, !1);
        else {
            if (void 0 !== b.cfg.cid)
                i = "https://www.ncbi.nlm.nih.gov/pccompound?LinkName=pccompound_pccompound_3d&from_uid=" + b.inputid,
                b.setLogCmd("link to compounds with structure similar to CID " + b.inputid + ": " + i, !1);
            else {
                var i, n = b.inputid.split("_");
                1 === n.length ? (i = b.baseUrl + "vastplus/vastplus.cgi?uid=" + b.inputid,
                b.setLogCmd("link to structures similar to " + b.inputid + ": " + i, !1)) : 2 === n.length && (i = b.baseUrl + "vastplus/vastplus.cgi?uid=" + n[0],
                b.setLogCmd("link to structures similar to " + n[0] + ": " + i, !1))
            }
            window.open(i, "_blank")
        }
    }),
    $("#" + b.pre + "mn1_link_pubmed").click(function(e) {
        var t = b.icn3d;
        if (void 0 === b.inputid)
            n = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + t.molTitle,
            b.setLogCmd("link to literature about " + t.molTitle + ": " + n, !1),
            window.open(n, "_blank");
        else if (void 0 !== b.pmid) {
            1 === (i = b.pmid.toString().split("_")).length ? (n = "https://www.ncbi.nlm.nih.gov/pubmed/" + b.pmid,
            b.setLogCmd("link to PubMed ID " + b.pmid + ": " + n, !1)) : 2 === i.length && (n = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + i[0] + " OR " + i[1],
            b.setLogCmd("link to PubMed IDs " + i[0] + ", " + i[1] + ": " + n, !1)),
            window.open(n, "_blank")
        } else if (isNaN(b.inputid)) {
            var i, n;
            1 === (i = b.inputid.toString().split("_")).length ? (n = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + b.inputid,
            b.setLogCmd("link to literature about PDB " + b.inputid + ": " + n, !1)) : 2 === i.length && (n = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + i[0] + " OR " + i[1],
            b.setLogCmd("link to literature about PDB " + i[0] + " OR " + i[1] + ": " + n, !1)),
            window.open(n, "_blank")
        } else
            void 0 !== b.cfg.cid ? alert("No literature information is available for this compound in the SDF file.") : alert("No literature information is available for this structure.")
    }),
    $("#" + b.pre + "mn1_link_protein").click(function(e) {
        for (var t = b.icn3d, i = Object.keys(t.structures), n = Object.keys(t.chains), r = "", s = 0, o = n.length; s < o; ++s) {
            var a = t.getFirstCalphaAtomObj(t.chains[n[s]]);
            t.proteins.hasOwnProperty(a.serial) && 6 == n[s].length && (r += n[s] + "[accession] OR ")
        }
        0 < r.length && (r = r.substr(0, r.length - 4));
        var l = "https://www.ncbi.nlm.nih.gov/protein/?term=" + r;
        b.setLogCmd("link to Entrez protein about PDB " + i + ": " + l, !1),
        window.open(l, "_blank")
    }),
    $("#" + b.pre + "mn6_selectannotations").click(function(e) {
        b.icn3d;
        b.showAnnotations(),
        b.setLogCmd("view annotations", !0)
    }),
    $("#" + b.pre + "mn2_selectall").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("select all", !0),
        b.selectAll(),
        b.removeHlAll(),
        t.draw()
    }),
    $("#" + b.pre + "clearall").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("clear all", !0),
        b.bSelectResidue = !1,
        b.selectAll(),
        b.removeHlAll(),
        t.draw()
    }),
    $("#" + b.pre + "mn2_selectdisplayed").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("select displayed set", !0),
        t.hAtoms = t.cloneHash(t.dAtoms),
        b.updateHlAll()
    }),
    $("#" + b.pre + "mn2_fullstru").click(function(e) {
        b.icn3d;
        b.setLogCmd("show all", !0),
        b.showAll()
    }),
    $("#" + b.pre + "mn2_selectcomplement").click(function(e) {
        var t = b.icn3d;
        Object.keys(t.hAtoms).length < Object.keys(t.atoms).length && (b.setLogCmd("select complement", !0),
        b.selectComplement())
    }),
    $("#" + b.pre + "mn2_selectmainchains").click(function(e) {
        b.icn3d;
        b.setLogCmd("select main chains", !0),
        b.selectMainChains()
    }),
    $("#" + b.pre + "mn2_selectsidechains").click(function(e) {
        b.icn3d;
        b.setLogCmd("select side chains", !0),
        b.selectSideChains()
    }),
    $("#" + b.pre + "mn2_selectmainsidechains").click(function(e) {
        b.icn3d;
        b.setLogCmd("select main side chains", !0),
        b.selectMainSideChains()
    }),
    $("#" + b.pre + "mn2_propPos").click(function(e) {
        b.icn3d;
        b.setLogCmd("select prop positive", !0),
        b.selectProperty("positive")
    }),
    $("#" + b.pre + "mn2_propNeg").click(function(e) {
        b.icn3d;
        b.setLogCmd("select prop negative", !0),
        b.selectProperty("negative")
    }),
    $("#" + b.pre + "mn2_propHydro").click(function(e) {
        b.icn3d;
        b.setLogCmd("select prop hydrophobic", !0),
        b.selectProperty("hydrophobic")
    }),
    $("#" + b.pre + "mn2_propPolar").click(function(e) {
        b.icn3d;
        b.setLogCmd("select prop polar", !0),
        b.selectProperty("polar")
    }),
    $("#" + b.pre + "mn2_propBfactor").click(function(e) {
        b.icn3d;
        b.openDlg("dl_propbybfactor", "Select residue based on B-factor")
    }),
    $("#" + b.pre + "mn2_propSolAcc").click(function(e) {
        b.icn3d;
        b.openDlg("dl_propbypercentout", "Select residue based on the percentage of solvent accessilbe surface area")
    }),
    $("#" + b.pre + "applypropbybfactor").click(function(e) {
        b.icn3d;
        var t = $("#" + b.pre + "minbfactor").val()
          , i = $("#" + b.pre + "maxbfactor").val();
        b.setLogCmd("select prop b factor | " + t + "_" + i, !0),
        b.selectProperty("b factor", t, i)
    }),
    $("#" + b.pre + "applypropbypercentout").click(function(e) {
        b.icn3d;
        var t = $("#" + b.pre + "minpercentout").val()
          , i = $("#" + b.pre + "maxpercentout").val();
        b.setLogCmd("select prop percent out | " + t + "_" + i, !0),
        b.selectProperty("percent out", t, i)
    }),
    $("#" + b.pre + "mn2_alignment").click(function(e) {
        b.icn3d;
        b.openDlg("dl_alignment", "Select residues in aligned sequences"),
        b.setLogCmd("window aligned sequences", !0)
    }),
    $("#" + b.pre + "mn1_window_table").click(function(e) {
        b.icn3d;
        b.openDlg("dl_allinteraction", "Show interactions"),
        b.setLogCmd("window interaction table", !0)
    }),
    $("#" + b.pre + "mn1_window_linegraph").click(function(e) {
        b.icn3d;
        b.openDlg("dl_linegraph", "Show interactions between two lines of residue nodes"),
        b.setLogCmd("window interaction graph", !0)
    }),
    $("#" + b.pre + "mn1_window_scatterplot").click(function(e) {
        b.icn3d;
        b.openDlg("dl_scatterplot", "Show interactions as map"),
        b.setLogCmd("window interaction scatterplot", !0)
    }),
    $("#" + b.pre + "mn1_window_graph").click(function(e) {
        b.icn3d;
        b.openDlg("dl_graph", "Force-directed graph"),
        b.setLogCmd("window force-directed graph", !0)
    }),
    $("#" + b.pre + "mn6_yournote").click(function(e) {
        b.icn3d;
        b.openDlg("dl_yournote", "Your note about the current display")
    }),
    $("#" + b.pre + "applyyournote").click(function(e) {
        b.icn3d;
        b.yournote = $("#" + b.pre + "yournote").val(),
        document.title = b.yournote,
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("your note | " + b.yournote, !0)
    }),
    $("#" + b.pre + "mn2_command").click(function(e) {
        b.icn3d;
        b.openDlg("dl_advanced2", "Select by specification")
    }),
    $("#" + b.pre + "mn2_definedsets").add("#" + b.pre + "definedsets").add("#" + b.pre + "definedsets2").click(function(e) {
        b.icn3d;
        b.showSets(),
        b.setLogCmd("defined sets", !0)
    }),
    $("#" + b.pre + "setOr").click(function(e) {
        b.icn3d;
        b.setOperation = "or"
    }),
    $("#" + b.pre + "setAnd").click(function(e) {
        b.icn3d;
        b.setOperation = "and"
    }),
    $("#" + b.pre + "setNot").click(function(e) {
        b.icn3d;
        b.setOperation = "not"
    }),
    $("#" + b.pre + "mn2_pkNo").click(function(e) {
        var t = b.icn3d;
        t.pk = 0,
        t.opts.pk = "no",
        b.setLogCmd("set pk off", !0),
        t.draw(),
        t.removeHlObjects()
    }),
    $("#" + b.pre + "mn2_pkYes").click(function(e) {
        var t = b.icn3d;
        t.pk = 1,
        t.opts.pk = "atom",
        b.setLogCmd("set pk atom", !0)
    }),
    $("#" + b.pre + "mn2_pkResidue").click(function(e) {
        var t = b.icn3d;
        t.pk = 2,
        t.opts.pk = "residue",
        b.setLogCmd("set pk residue", !0)
    }),
    $("#" + b.pre + "mn2_pkStrand").click(function(e) {
        var t = b.icn3d;
        t.pk = 3,
        t.opts.pk = "strand",
        b.setLogCmd("set pk strand", !0)
    }),
    $("#" + b.pre + "mn2_pkDomain").click(function(e) {
        var t = b.icn3d;
        t.pk = 4,
        t.opts.pk = "domain",
        b.setLogCmd("set pk domain", !0)
    }),
    $("#" + b.pre + "mn2_pkChain").click(function(e) {
        var t = b.icn3d;
        t.pk = 5,
        t.opts.pk = "chain",
        b.setLogCmd("set pk chain", !0)
    }),
    $("#" + b.pre + "adjustmem").click(function(e) {
        b.icn3d;
        b.openDlg("dl_adjustmem", "Adjust the Z-axis positions of the membrane")
    }),
    $("#" + b.pre + "togglemem").click(function(e) {
        b.icn3d;
        b.toggleMembrane(),
        b.setLogCmd("toggle membrane", !0)
    }),
    $("#" + b.pre + "selectplane").click(function(e) {
        b.icn3d;
        b.openDlg("dl_selectplane", "Select a region between two planes")
    }),
    $("#" + b.pre + "mn2_aroundsphere").click(function(e) {
        var t = b.icn3d;
        if (void 0 === b.bSetChainsAdvancedMenu || !b.bSetChainsAdvancedMenu) {
            var i = t.cloneHash(t.hAtoms);
            b.setPredefinedInMenu(),
            b.bSetChainsAdvancedMenu = !0,
            t.hAtoms = t.cloneHash(i)
        }
        var n = b.setAtomMenu(["protein"]);
        $("#" + b.pre + "atomsCustomSphere").length && $("#" + b.pre + "atomsCustomSphere").html("  <option value='non-selected' selected>non-selected</option><option value='selected'>selected</option>" + n),
        $("#" + b.pre + "atomsCustomSphere2").length && $("#" + b.pre + "atomsCustomSphere2").html("  <option value='selected' selected>selected</option>" + n),
        b.openDlg("dl_aroundsphere", "Select a sphere around a set of residues"),
        b.bSphereCalc = !1,
        $("#" + b.pre + "atomsCustomSphere").resizable(),
        $("#" + b.pre + "atomsCustomSphere2").resizable()
    }),
    $("#" + b.pre + "mn2_select_chain").add("#" + b.pre + "definedSets").click(function(e) {
        b.icn3d;
        b.openDlg("dl_select_chain", "Select Structure/Chain/Custom Selection")
    }),
    $("#" + b.pre + "mn3_proteinsRibbon").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "ribbon"),
        b.setLogCmd("style proteins ribbon", !0)
    }),
    $("#" + b.pre + "mn3_proteinsStrand").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "strand"),
        b.setLogCmd("style proteins strand", !0)
    }),
    $("#" + b.pre + "mn3_proteinsCylinder").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "cylinder and plate"),
        b.setLogCmd("style proteins cylinder and plate", !0)
    }),
    $("#" + b.pre + "mn3_proteinsSchematic").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "schematic"),
        b.setLogCmd("style proteins schematic", !0)
    }),
    $("#" + b.pre + "mn3_proteinsCalpha").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "c alpha trace"),
        b.setLogCmd("style proteins c alpha trace", !0)
    }),
    $("#" + b.pre + "mn3_proteinsBackbone").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "backbone"),
        b.setLogCmd("style proteins backbone", !0)
    }),
    $("#" + b.pre + "mn3_proteinsBfactor").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "b factor tube"),
        b.setLogCmd("style proteins b factor tube", !0)
    }),
    $("#" + b.pre + "mn3_proteinsLines").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "lines"),
        b.setLogCmd("style proteins lines", !0)
    }),
    $("#" + b.pre + "mn3_proteinsStick").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "stick"),
        b.setLogCmd("style proteins stick", !0)
    }),
    $("#" + b.pre + "mn3_proteinsBallstick").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "ball and stick"),
        b.setLogCmd("style proteins ball and stick", !0)
    }),
    $("#" + b.pre + "mn3_proteinsSphere").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "sphere"),
        b.setLogCmd("style proteins sphere", !0)
    }),
    $("#" + b.pre + "mn3_proteinsNo").click(function(e) {
        b.icn3d;
        b.setStyle("proteins", "nothing"),
        b.setLogCmd("style proteins nothing", !0)
    }),
    $("#" + b.pre + "mn3_sidecLines").click(function(e) {
        b.icn3d;
        b.setStyle("sidec", "lines"),
        b.setLogCmd("style sidec lines", !0)
    }),
    $("#" + b.pre + "mn3_sidecStick").click(function(e) {
        b.icn3d;
        b.setStyle("sidec", "stick"),
        b.setLogCmd("style sidec stick", !0)
    }),
    $("#" + b.pre + "mn3_sidecBallstick").click(function(e) {
        b.icn3d;
        b.setStyle("sidec", "ball and stick"),
        b.setLogCmd("style sidec ball and stick", !0)
    }),
    $("#" + b.pre + "mn3_sidecSphere").click(function(e) {
        b.icn3d;
        b.setStyle("sidec", "sphere"),
        b.setLogCmd("style sidec sphere", !0)
    }),
    $("#" + b.pre + "mn3_sidecNo").click(function(e) {
        b.icn3d;
        b.setStyle("sidec", "nothing"),
        b.setLogCmd("style sidec nothing", !0)
    }),
    $("#" + b.pre + "mn3_nuclCartoon").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "nucleotide cartoon"),
        b.setLogCmd("style nucleotides nucleotide cartoon", !0)
    }),
    $("#" + b.pre + "mn3_nuclBackbone").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "backbone"),
        b.setLogCmd("style nucleotides backbone", !0)
    }),
    $("#" + b.pre + "mn3_nuclSchematic").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "schematic"),
        b.setLogCmd("style nucleotides schematic", !0)
    }),
    $("#" + b.pre + "mn3_nuclPhos").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "o3 trace"),
        b.setLogCmd("style nucleotides o3 trace", !0)
    }),
    $("#" + b.pre + "mn3_nuclLines").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "lines"),
        b.setLogCmd("style nucleotides lines", !0)
    }),
    $("#" + b.pre + "mn3_nuclStick").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "stick"),
        b.setLogCmd("style nucleotides stick", !0)
    }),
    $("#" + b.pre + "mn3_nuclBallstick").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "ball and stick"),
        b.setLogCmd("style nucleotides ball and stick", !0)
    }),
    $("#" + b.pre + "mn3_nuclSphere").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "sphere"),
        b.setLogCmd("style nucleotides sphere", !0)
    }),
    $("#" + b.pre + "mn3_nuclNo").click(function(e) {
        b.icn3d;
        b.setStyle("nucleotides", "nothing"),
        b.setLogCmd("style nucleotides nothing", !0)
    }),
    $("#" + b.pre + "mn3_ligLines").click(function(e) {
        b.icn3d;
        b.setStyle("chemicals", "lines"),
        b.setLogCmd("style chemicals lines", !0)
    }),
    $("#" + b.pre + "mn3_ligStick").click(function(e) {
        b.icn3d;
        b.setStyle("chemicals", "stick"),
        b.setLogCmd("style chemicals stick", !0)
    }),
    $("#" + b.pre + "mn3_ligBallstick").click(function(e) {
        b.icn3d;
        b.setStyle("chemicals", "ball and stick"),
        b.setLogCmd("style chemicals ball and stick", !0)
    }),
    $("#" + b.pre + "mn3_ligSchematic").click(function(e) {
        b.icn3d;
        b.setStyle("chemicals", "schematic"),
        b.setLogCmd("style chemicals schematic", !0)
    }),
    $("#" + b.pre + "mn3_ligSphere").click(function(e) {
        b.icn3d;
        b.setStyle("chemicals", "sphere"),
        b.setLogCmd("style chemicals sphere", !0)
    }),
    $("#" + b.pre + "mn3_ligNo").click(function(e) {
        b.icn3d;
        b.setStyle("chemicals", "nothing"),
        b.setLogCmd("style chemicals nothing", !0)
    }),
    $("#" + b.pre + "mn3_glycansCartYes").click(function(e) {
        var t = b.icn3d;
        t.bGlycansCartoon = !0,
        t.draw(),
        b.setLogCmd("glycans cartoon yes", !0)
    }),
    $("#" + b.pre + "mn3_glycansCartNo").click(function(e) {
        var t = b.icn3d;
        t.bGlycansCartoon = !1,
        t.draw(),
        b.setLogCmd("glycans cartoon no", !0)
    }),
    $("#" + b.pre + "mn3_hydrogensYes").click(function(e) {
        var t = b.icn3d;
        b.showHydrogens(),
        t.draw(),
        b.setLogCmd("hydrogens", !0)
    }),
    $("#" + b.pre + "mn3_hydrogensNo").click(function(e) {
        var t = b.icn3d;
        b.hideHydrogens(),
        t.draw(),
        b.setLogCmd("set hydrogens off", !0)
    }),
    $("#" + b.pre + "mn3_ionsSphere").click(function(e) {
        b.icn3d;
        b.setStyle("ions", "sphere"),
        b.setLogCmd("style ions sphere", !0)
    }),
    $("#" + b.pre + "mn3_ionsDot").click(function(e) {
        b.icn3d;
        b.setStyle("ions", "dot"),
        b.setLogCmd("style ions dot", !0)
    }),
    $("#" + b.pre + "mn3_ionsNo").click(function(e) {
        b.icn3d;
        b.setStyle("ions", "nothing"),
        b.setLogCmd("style ions nothing", !0)
    }),
    $("#" + b.pre + "mn3_waterSphere").click(function(e) {
        b.icn3d;
        b.setStyle("water", "sphere"),
        b.setLogCmd("style water sphere", !0)
    }),
    $("#" + b.pre + "mn3_waterDot").click(function(e) {
        b.icn3d;
        b.setStyle("water", "dot"),
        b.setLogCmd("style water dot", !0)
    }),
    $("#" + b.pre + "mn3_waterNo").click(function(e) {
        b.icn3d;
        b.setStyle("water", "nothing"),
        b.setLogCmd("style water nothing", !0)
    }),
    $("#" + b.pre + "mn4_clrSpectrum").click(function(e) {
        b.icn3d;
        b.setOption("color", "spectrum"),
        b.setLogCmd("color spectrum", !0)
    }),
    $("#" + b.pre + "mn4_clrChain").click(function(e) {
        b.icn3d;
        b.setOption("color", "chain"),
        b.setLogCmd("color chain", !0)
    }),
    $("#" + b.pre + "mn4_clrdomain").click(function(e) {
        b.icn3d;
        b.setOption("color", "domain"),
        b.setLogCmd("color domain", !0)
    }),
    $("#" + b.pre + "mn4_clrSSGreen").click(function(e) {
        b.icn3d.sheetcolor = "green",
        b.setOption("color", "secondary structure green"),
        b.setLogCmd("color secondary structure green", !0)
    }),
    $("#" + b.pre + "mn4_clrSSYellow").click(function(e) {
        b.icn3d.sheetcolor = "yellow",
        b.setOption("color", "secondary structure yellow"),
        b.setLogCmd("color secondary structure yellow", !0)
    }),
    $("#" + b.pre + "mn4_clrSSSpectrum").click(function(e) {
        b.icn3d;
        b.setOption("color", "secondary structure spectrum"),
        b.setLogCmd("color secondary structure spectrum", !0)
    }),
    $("#" + b.pre + "mn4_clrResidue").click(function(e) {
        b.icn3d;
        b.setOption("color", "residue"),
        b.setLogCmd("color residue", !0)
    }),
    $("#" + b.pre + "mn4_clrResidueCustom").click(function(e) {
        b.icn3d;
        b.openDlg("dl_rescolorfile", "Please input the file on residue colors")
    }),
    $("#" + b.pre + "reload_rescolorfile").click(function(e) {
        var n = b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var t = $("#" + b.pre + "rescolorfile")[0].files[0];
        if (t) {
            b.fileSupport();
            var i = new FileReader;
            i.onload = function(e) {
                var t = e.target.result.replace(/#/g, "");
                for (var i in n.customResidueColors = JSON.parse(t),
                n.customResidueColors)
                    n.customResidueColors[i.toUpperCase()] = n.thr("#" + n.customResidueColors[i]);
                b.setOption("color", "residue custom"),
                b.setLogCmd("color residue custom | " + t, !0)
            }
            ,
            i.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_customcolorfile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setCustomFile("color")
    }),
    $("#" + b.pre + "reload_customtubefile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setCustomFile("tube")
    }),
    $("#" + b.pre + "mn4_clrCharge").click(function(e) {
        b.icn3d;
        b.setOption("color", "charge"),
        b.setLogCmd("color charge", !0)
    }),
    $("#" + b.pre + "mn4_clrHydrophobic").click(function(e) {
        b.icn3d;
        b.setOption("color", "hydrophobic"),
        b.setLogCmd("color hydrophobic", !0)
    }),
    $("#" + b.pre + "mn4_clrAtom").click(function(e) {
        b.icn3d;
        b.setOption("color", "atom"),
        b.setLogCmd("color atom", !0)
    }),
    $("#" + b.pre + "mn4_clrBfactor").click(function(e) {
        b.icn3d;
        b.setOption("color", "b factor"),
        b.setLogCmd("color b factor", !0)
    }),
    $("#" + b.pre + "mn4_clrArea").click(function(e) {
        b.icn3d;
        b.openDlg("dl_colorbyarea", "Color based on residue's solvent accessibility")
    }),
    $("#" + b.pre + "applycolorbyarea").click(function(e) {
        var t = b.icn3d;
        t.midpercent = $("#" + b.pre + "midpercent").val(),
        b.setOption("color", "area"),
        b.setLogCmd("color area | " + t.midpercent, !0)
    }),
    $("#" + b.pre + "mn4_clrBfactorNorm").click(function(e) {
        b.icn3d;
        b.setOption("color", "b factor percentile"),
        b.setLogCmd("color b factor percentile", !0)
    }),
    $("#" + b.pre + "mn4_clrIdentity").click(function(e) {
        b.icn3d;
        b.setOption("color", "identity"),
        b.setLogCmd("color identity", !0)
    }),
    $("#" + b.pre + "mn4_clrConserved").click(function(e) {
        b.icn3d;
        b.setOption("color", "conservation"),
        b.setLogCmd("color conservation", !0)
    }),
    $("#" + b.pre + "mn4_clrCustom").click(function(e) {
        b.icn3d;
        b.openDlg("dl_clr", "Color picker")
    }),
    $(document).on("click", ".icn3d-color-rad-text", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("color");
        b.setOption("color", t),
        b.setLogCmd("color " + t, !0)
    }),
    $("#" + b.pre + "mn4_clrSave").click(function(e) {
        b.icn3d;
        b.saveColor(),
        b.setLogCmd("save color", !0)
    }),
    $("#" + b.pre + "mn4_clrApplySave").click(function(e) {
        b.icn3d;
        b.applySavedColor(),
        b.setLogCmd("apply saved color", !0)
    }),
    $("#" + b.pre + "mn3_styleSave").click(function(e) {
        b.icn3d;
        b.saveStyle(),
        b.setLogCmd("save style", !0)
    }),
    $("#" + b.pre + "mn3_styleApplySave").click(function(e) {
        b.icn3d;
        b.applySavedStyle(),
        b.setLogCmd("apply saved style", !0)
    }),
    $("#" + b.pre + "mn5_neighborsYes").click(function(e) {
        var t = b.icn3d;
        t.bConsiderNeighbors = !0,
        t.removeLastSurface(),
        t.applySurfaceOptions(),
        t.bRender && t.render(),
        b.setLogCmd("set surface neighbors on", !0)
    }),
    $("#" + b.pre + "mn5_neighborsNo").click(function(e) {
        var t = b.icn3d;
        t.bConsiderNeighbors = !1,
        t.removeLastSurface(),
        t.applySurfaceOptions(),
        t.bRender && t.render(),
        b.setLogCmd("set surface neighbors off", !0)
    }),
    $("#" + b.pre + "mn5_surfaceVDW").click(function(e) {
        b.icn3d.bConsiderNeighbors = !1,
        b.setOption("surface", "Van der Waals surface"),
        b.setLogCmd("set surface Van der Waals surface", !0)
    }),
    $("#" + b.pre + "mn5_surfaceSAS").click(function(e) {
        b.icn3d.bConsiderNeighbors = !1,
        b.setOption("surface", "solvent accessible surface"),
        b.setLogCmd("set surface solvent accessible surface", !0)
    }),
    $("#" + b.pre + "mn5_surfaceMolecular").click(function(e) {
        b.icn3d.bConsiderNeighbors = !1,
        b.setOption("surface", "molecular surface"),
        b.setLogCmd("set surface molecular surface", !0)
    }),
    $("#" + b.pre + "mn5_surfaceVDWContext").click(function(e) {
        b.icn3d.bConsiderNeighbors = !0,
        b.setOption("surface", "Van der Waals surface with context"),
        b.setLogCmd("set surface Van der Waals surface with context", !0)
    }),
    $("#" + b.pre + "mn5_surfaceSASContext").click(function(e) {
        b.icn3d.bConsiderNeighbors = !0,
        b.setOption("surface", "solvent accessible surface with context"),
        b.setLogCmd("set surface solvent accessible surface with context", !0)
    }),
    $("#" + b.pre + "mn5_surfaceMolecularContext").click(function(e) {
        b.icn3d.bConsiderNeighbors = !0,
        b.setOption("surface", "molecular surface with context"),
        b.setLogCmd("set surface molecular surface with context", !0)
    }),
    $("#" + b.pre + "mn5_surfaceNo").click(function(e) {
        b.icn3d;
        b.setOption("surface", "nothing"),
        b.setLogCmd("set surface nothing", !0)
    }),
    $("." + b.pre + "mn5_opacity").each(function() {
        var t = $(this).attr("v");
        $(this).click(function(e) {
            b.icn3d;
            b.setOption("opacity", t),
            b.setLogCmd("set surface opacity " + t, !0)
        })
    }),
    $("#" + b.pre + "mn5_wireframeYes").click(function(e) {
        b.icn3d;
        b.setOption("wireframe", "yes"),
        b.setLogCmd("set surface wireframe on", !0)
    }),
    $("#" + b.pre + "mn5_wireframeNo").click(function(e) {
        b.icn3d;
        b.setOption("wireframe", "no"),
        b.setLogCmd("set surface wireframe off", !0)
    }),
    $("#" + b.pre + "mn5_elecmap2fofc").click(function(e) {
        b.icn3d;
        b.openDlg("dl_elecmap2fofc", "2Fo-Fc Electron Density Map")
    }),
    $("#" + b.pre + "mn5_elecmapfofc").click(function(e) {
        b.icn3d;
        b.openDlg("dl_elecmapfofc", "Fo-Fc Electron Density Map")
    }),
    $("#" + b.pre + "mn5_elecmapNo").add("#" + b.pre + "elecmapNo2").add("#" + b.pre + "elecmapNo3").add("#" + b.pre + "elecmapNo4").add("#" + b.pre + "elecmapNo5").click(function(e) {
        b.icn3d;
        b.setOption("map", "nothing"),
        b.setLogCmd("setoption map nothing", !0)
    }),
    $("#" + b.pre + "delphimapNo").add("#" + b.pre + "phimapNo").add("#" + b.pre + "phiurlmapNo").add("#" + b.pre + "mn1_phimapNo").click(function(e) {
        b.icn3d;
        b.setOption("phimap", "nothing"),
        b.setLogCmd("setoption phimap nothing", !0)
    }),
    $("#" + b.pre + "delphimapNo2").add("#" + b.pre + "phimapNo2").add("#" + b.pre + "phiurlmapNo2").click(function(e) {
        b.icn3d;
        b.setOption("phisurface", "nothing"),
        b.setLogCmd("setoption phisurface nothing", !0)
    }),
    $("#" + b.pre + "applymap2fofc").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = parseFloat($("#" + b.pre + "sigma2fofc").val());
        b.Dsn6Parser(b.inputid, "2fofc", t),
        b.setLogCmd("set map 2fofc sigma " + t, !0)
    }),
    $("#" + b.pre + "applymapfofc").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = parseFloat($("#" + b.pre + "sigmafofc").val());
        b.Dsn6Parser(b.inputid, "fofc", t),
        b.setLogCmd("set map fofc sigma " + t, !0)
    }),
    $("#" + b.pre + "mn5_mapwireframeYes").click(function(e) {
        b.icn3d;
        b.setOption("mapwireframe", "yes"),
        b.setLogCmd("set map wireframe on", !0)
    }),
    $("#" + b.pre + "mn5_mapwireframeNo").click(function(e) {
        b.icn3d;
        b.setOption("mapwireframe", "no"),
        b.setLogCmd("set map wireframe off", !0)
    }),
    $("#" + b.pre + "mn5_emmap").click(function(e) {
        b.icn3d;
        b.openDlg("dl_emmap", "EM Density Map")
    }),
    $("#" + b.pre + "mn5_emmapNo").add("#" + b.pre + "emmapNo2").click(function(e) {
        b.icn3d;
        b.setOption("emmap", "nothing"),
        b.setLogCmd("setoption emmap nothing", !0)
    }),
    $("#" + b.pre + "applyemmap").click(function(e) {
        var t = b.icn3d;
        e.preventDefault();
        var i = parseFloat($("#" + b.pre + "empercentage").val());
        if (void 0 === iCn3DUI.prototype.DensityCifParser) {
            var n = b.baseUrl + "icn3d/script/density_cif_parser.min.js";
            $.ajax({
                url: n,
                dataType: "script",
                cache: !0,
                tryCount: 0,
                retryLimit: 1,
                success: function(e) {
                    b.DensityCifParser(b.inputid, "em", i, t.emd),
                    b.setLogCmd("set emmap percentage " + i, !0)
                },
                error: function(e, t, i) {
                    this.tryCount++,
                    this.tryCount <= this.retryLimit && $.ajax(this)
                }
            })
        } else
            b.DensityCifParser(b.inputid, "em", i, t.emd),
            b.setLogCmd("set emmap percentage " + i, !0)
    }),
    $("#" + b.pre + "mn5_emmapwireframeYes").click(function(e) {
        b.icn3d;
        b.setOption("emmapwireframe", "yes"),
        b.setLogCmd("set emmap wireframe on", !0)
    }),
    $("#" + b.pre + "mn5_emmapwireframeNo").click(function(e) {
        b.icn3d;
        b.setOption("emmapwireframe", "no"),
        b.setLogCmd("set emmap wireframe off", !0)
    }),
    $("#" + b.pre + "mn6_assemblyYes").click(function(e) {
        var t = b.icn3d;
        t.bAssembly = !0,
        b.setLogCmd("set assembly on", !0),
        t.draw()
    }),
    $("#" + b.pre + "mn6_assemblyNo").click(function(e) {
        var t = b.icn3d;
        t.bAssembly = !1,
        b.setLogCmd("set assembly off", !0),
        t.draw()
    }),
    $("#" + b.pre + "mn6_addlabelAtoms").click(function(e) {
        var t = b.icn3d;
        t.addAtomLabels(t.hAtoms),
        b.saveSelectionIfSelected(),
        b.setLogCmd("add atom labels", !0),
        t.draw()
    }),
    $("#" + b.pre + "mn6_addlabelResidues").click(function(e) {
        var t = b.icn3d;
        t.addResiudeLabels(t.hAtoms),
        b.saveSelectionIfSelected(),
        b.setLogCmd("add residue labels", !0),
        t.draw()
    }),
    $("#" + b.pre + "mn6_addlabelResnum").click(function(e) {
        var t = b.icn3d;
        t.addResiudeLabels(t.hAtoms, void 0, void 0, !0),
        b.saveSelectionIfSelected(),
        b.setLogCmd("add residue number labels", !0),
        t.draw()
    }),
    $("#" + b.pre + "mn6_addlabelChains").click(function(e) {
        var t = b.icn3d;
        b.addChainLabels(t.hAtoms),
        b.saveSelectionIfSelected(),
        b.setLogCmd("add chain labels", !0),
        t.draw()
    }),
    $("#" + b.pre + "mn6_addlabelTermini").click(function(e) {
        var t = b.icn3d;
        b.addTerminiLabels(t.hAtoms),
        b.saveSelectionIfSelected(),
        b.setLogCmd("add terminal labels", !0),
        t.draw()
    }),
    $("#" + b.pre + "mn6_addlabelYes").click(function(e) {
        var t = b.icn3d;
        b.openDlg("dl_addlabel", "Add custom labels by selection"),
        t.pk = 1,
        t.opts.pk = "atom",
        t.pickpair = !0,
        t.pAtomNum = 0
    }),
    $("#" + b.pre + "mn6_addlabelSelection").click(function(e) {
        b.icn3d;
        b.openDlg("dl_addlabelselection", "Add custom labels by the selected")
    }),
    $("#" + b.pre + "mn2_saveselection").click(function(e) {
        b.icn3d;
        b.openDlg("dl_saveselection", "Save the selected")
    }),
    $("#" + b.pre + "mn6_addlabelNo").add("#" + b.pre + "removeLabels").click(function(e) {
        var t = b.icn3d;
        t.pickpair = !1;
        for (var i in b.setLogCmd("set labels off", !0),
        t.labels)
            t.labels[i] = [];
        t.draw()
    }),
    $("." + b.pre + "mn6_labelscale").each(function() {
        var i = $(this).attr("v");
        $(this).click(function(e) {
            var t = b.icn3d;
            t.labelScale = i,
            t.draw(),
            b.setLogCmd("set label scale " + i, !0)
        })
    }),
    $("#" + b.pre + "mn6_distanceYes").click(function(e) {
        var t = b.icn3d;
        b.openDlg("dl_distance", "Measure the distance of atoms"),
        t.pk = 1,
        t.opts.pk = "atom",
        t.pickpair = !0,
        t.pAtomNum = 0,
        b.bMeasureDistance = !0
    }),
    $("#" + b.pre + "mn6_distTwoSets").click(function(e) {
        var t = b.icn3d;
        if (b.openDlg("dl_disttwosets", "Measure the distance between two sets"),
        void 0 === b.bSetChainsAdvancedMenu || !b.bSetChainsAdvancedMenu) {
            var i = t.cloneHash(t.hAtoms);
            b.setPredefinedInMenu(),
            b.bSetChainsAdvancedMenu = !0,
            t.hAtoms = t.cloneHash(i)
        }
        var n = b.setAtomMenu(["protein"]);
        $("#" + b.pre + "atomsCustomDist").length && $("#" + b.pre + "atomsCustomDist").html("  <option value='selected'>selected</option>" + n),
        $("#" + b.pre + "atomsCustomDist2").length && $("#" + b.pre + "atomsCustomDist2").html("  <option value='selected' selected>selected</option>" + n),
        $("#" + b.pre + "atomsCustomDist").resizable(),
        $("#" + b.pre + "atomsCustomDist2").resizable(),
        b.bMeasureDistance = !0
    }),
    $("#" + b.pre + "mn6_distanceNo").click(function(e) {
        var t = b.icn3d;
        t.pickpair = !1;
        b.setLogCmd("set lines off", !0),
        t.labels.distance = [],
        t.lines.distance = [],
        t.pk = 2,
        t.draw()
    }),
    $("#" + b.pre + "mn2_selectedcenter").add("#" + b.pre + "zoomin_selection").click(function(e) {
        var t = b.icn3d;
        t.zoominSelection(),
        t.draw(),
        b.setLogCmd("zoom selection", !0)
    }),
    $("#" + b.pre + "mn6_center").click(function(e) {
        var t = b.icn3d;
        t.centerSelection(),
        t.draw(),
        b.setLogCmd("center selection", !0)
    }),
    $("#" + b.pre + "mn6_resetOrientation").add("#" + b.pre + "resetOrientation").click(function(e) {
        var t = b.icn3d;
        t.resetOrientation(),
        t.draw(),
        b.setLogCmd("reset orientation", !0)
    }),
    $("#" + b.pre + "mn6_chemicalbindingshow").add("#" + b.pre + "chemicalbindingshow").click(function(e) {
        b.icn3d;
        b.setOption("chemicalbinding", "show"),
        b.setLogCmd("set chemicalbinding show", !0)
    }),
    $("#" + b.pre + "mn6_chemicalbindinghide").add("#" + b.pre + "chemicalbindinghide").click(function(e) {
        b.icn3d;
        b.setOption("chemicalbinding", "hide"),
        b.setLogCmd("set chemicalbinding hide", !0)
    }),
    $("#" + b.pre + "mn6_sidebyside").click(function(e) {
        b.icn3d;
        var t = b.shareLinkUrl(void 0);
        0 !== t.indexOf("http") ? alert("The url is more than 4000 characters and may not work.") : (t = t.replace("full.html", "full2.html"),
        window.open(t, "_blank"),
        b.setLogCmd("side by side | " + t, !0))
    }),
    $("." + b.pre + "mn6_rotate").each(function() {
        var i = $(this).attr("v").toLowerCase()
          , n = i.split(" ")[1];
        $(this).click(function(e) {
            var t = b.icn3d;
            b.setLogCmd(i, !0),
            t.bStopRotate = !1,
            t.rotateCount = 0,
            t.rotateCountMax = 6e3,
            b.ROT_DIR = n,
            b.rotStruc(n)
        })
    }),
    $("." + b.pre + "mn6_rotate90").each(function() {
        var r = $(this).attr("v").toLowerCase()
          , s = r.split("-")[0];
        $(this).click(function(e) {
            var t, i = b.icn3d;
            b.setLogCmd(r, !0),
            "x" == s ? t = new THREE.Vector3(1,0,0) : "y" == s ? t = new THREE.Vector3(0,1,0) : "z" == s && (t = new THREE.Vector3(0,0,1));
            var n = .5 * Math.PI;
            i.setRotation(t, n)
        })
    }),
    $("#" + b.pre + "mn6_cameraPers").click(function(e) {
        b.icn3d;
        b.setOption("camera", "perspective"),
        b.setLogCmd("set camera perspective", !0)
    }),
    $("#" + b.pre + "mn6_cameraOrth").click(function(e) {
        b.icn3d;
        b.setOption("camera", "orthographic"),
        b.setLogCmd("set camera orthographic", !0)
    }),
    $("#" + b.pre + "mn6_bkgdBlack").click(function(e) {
        b.icn3d;
        b.setBackground("black")
    }),
    $("#" + b.pre + "mn6_bkgdGrey").click(function(e) {
        b.icn3d;
        b.setBackground("grey")
    }),
    $("#" + b.pre + "mn6_bkgdWhite").click(function(e) {
        b.icn3d;
        b.setBackground("white")
    }),
    $("#" + b.pre + "mn6_bkgdTransparent").click(function(e) {
        b.icn3d;
        b.setBackground("transparent")
    }),
    $("#" + b.pre + "mn6_showfogYes").click(function(e) {
        var t = b.icn3d;
        t.opts.fog = "yes",
        t.setFog(!0),
        t.draw(),
        b.setLogCmd("set fog on", !0)
    }),
    $("#" + b.pre + "mn6_showfogNo").click(function(e) {
        var t = b.icn3d;
        t.opts.fog = "no",
        t.setFog(!0),
        t.draw(),
        b.setLogCmd("set fog off", !0)
    }),
    $("#" + b.pre + "mn6_showslabYes").click(function(e) {
        b.icn3d;
        b.setOption("slab", "yes"),
        b.setLogCmd("set slab on", !0)
    }),
    $("#" + b.pre + "mn6_showslabNo").click(function(e) {
        b.icn3d;
        b.setOption("slab", "no"),
        b.setLogCmd("set slab off", !0)
    }),
    $("#" + b.pre + "mn6_showaxisYes").click(function(e) {
        b.icn3d;
        b.setOption("axis", "yes"),
        b.setLogCmd("set axis on", !0)
    }),
    $("#" + b.pre + "mn6_showaxisSel").click(function(e) {
        var t = b.icn3d;
        t.pc1 = !0,
        t.setPc1Axes(),
        b.setLogCmd("set pc1 axis", !0)
    }),
    $("#" + b.pre + "mn6_showaxisNo").click(function(e) {
        var t = b.icn3d;
        t.pc1 = !1,
        t.axes = [],
        b.setOption("axis", "no"),
        b.setLogCmd("set axis off", !0)
    }),
    $("#" + b.pre + "mn6_symmetry").click(function(e) {
        var t = b.icn3d;
        b.retrieveSymmetry(Object.keys(t.structures)[0])
    }),
    $("#" + b.pre + "mn6_symd").click(function(e) {
        b.icn3d;
        b.retrieveSymd(),
        b.bSymd = !0,
        b.setLogCmd("symd symmetry", !0)
    }),
    $("#" + b.pre + "mn6_area").click(function(e) {
        b.icn3d;
        b.calculateArea(),
        b.setLogCmd("area", !0)
    }),
    $("#" + b.pre + "applysymmetry").click(function(e) {
        var t = b.icn3d
          , i = $("#" + b.pre + "selectSymmetry").val();
        t.symmetrytitle = "none" === i ? void 0 : i,
        t.draw(),
        b.setLogCmd("symmetry " + i, !0)
    }),
    $("#" + b.pre + "clearsymmetry").click(function(e) {
        var t = b.icn3d;
        t.symmetrytitle = void 0,
        t.draw(),
        b.setLogCmd("symmetry none", !0)
    }),
    $("#" + b.pre + "mn6_hbondsYes").add("#" + b.pre + "hbondsYes").click(function(e) {
        var t = b.icn3d;
        if (void 0 === b.bSetChainsAdvancedMenu || !b.bSetChainsAdvancedMenu) {
            var i = t.cloneHash(t.hAtoms);
            b.setPredefinedInMenu(),
            b.bSetChainsAdvancedMenu = !0,
            t.hAtoms = t.cloneHash(i)
        }
        var n = b.setAtomMenu(["protein"]);
        $("#" + b.pre + "atomsCustomHbond").length && $("#" + b.pre + "atomsCustomHbond").html("  <option value='non-selected' selected>non-selected</option><option value='selected'>selected</option>" + n),
        $("#" + b.pre + "atomsCustomHbond2").length && $("#" + b.pre + "atomsCustomHbond2").html("  <option value='selected' selected>selected</option>" + n),
        b.openDlg("dl_hbonds", "Hydrogen bonds/interactions between two sets of atoms"),
        b.bHbondCalc = !1,
        $("#" + b.pre + "atomsCustomHbond").resizable(),
        $("#" + b.pre + "atomsCustomHbond2").resizable()
    }),
    $("#" + b.pre + "mn6_hbondsNo").click(function(e) {
        var t = b.icn3d;
        b.hideHbondsContacts(),
        t.draw()
    }),
    $("#" + b.pre + "mn1_stabilizerYes").click(function(e) {
        b.icn3d;
        b.addStabilizer(),
        b.prepareFor3Dprint(),
        b.setLogCmd("stabilizer", !0)
    }),
    $("#" + b.pre + "mn1_stabilizerNo").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("set stabilizer off", !0),
        b.hideStabilizer(),
        t.draw()
    }),
    $("#" + b.pre + "mn1_stabilizerOne").click(function(e) {
        var t = b.icn3d;
        b.openDlg("dl_stabilizer", "Add One Stabilizer"),
        t.pk = 1,
        t.opts.pk = "atom",
        t.pickpair = !0,
        t.pAtomNum = 0
    }),
    $("#" + b.pre + "mn1_stabilizerRmOne").click(function(e) {
        var t = b.icn3d;
        b.openDlg("dl_stabilizer_rm", "Remove One Stabilizer"),
        t.pk = 1,
        t.opts.pk = "atom",
        t.pickpair = !0,
        t.pAtomNum = 0
    }),
    $("#" + b.pre + "mn1_thicknessSet").click(function(e) {
        b.icn3d;
        b.openDlg("dl_thickness", "Set Thickness for 3D Printing")
    }),
    $("#" + b.pre + "mn3_setThickness").click(function(e) {
        b.icn3d;
        b.openDlg("dl_thickness2", "Set Thickness")
    }),
    $("#" + b.pre + "mn1_thicknessReset").click(function(e) {
        var t = b.icn3d;
        b.setLogCmd("reset thickness", !0),
        b.bSetThickness = !1,
        b.resetAfter3Dprint(),
        t.draw()
    }),
    $("#" + b.pre + "mn6_ssbondsYes").click(function(e) {
        b.icn3d;
        b.setLogCmd("disulfide bonds", !0),
        b.showSsbonds()
    }),
    $("#" + b.pre + "mn6_ssbondsExport").click(function(e) {
        b.icn3d;
        b.exportSsbondPairs(),
        b.setLogCmd("export disulfide bond pairs", !1)
    }),
    $("#" + b.pre + "mn6_ssbondsNo").click(function(e) {
        var t = b.icn3d;
        t.opts.ssbonds = "no";
        b.setLogCmd("set disulfide bonds off", !0),
        t.lines.ssbond = [],
        b.setStyle("sidec", "nothing")
    }),
    $("#" + b.pre + "mn6_clbondsYes").click(function(e) {
        b.icn3d;
        b.setLogCmd("cross linkage", !0),
        b.showClbonds()
    }),
    $("#" + b.pre + "mn6_clbondsExport").click(function(e) {
        b.icn3d;
        b.exportClbondPairs(),
        b.setLogCmd("export cross linkage pairs", !1)
    }),
    $("#" + b.pre + "mn6_clbondsNo").click(function(e) {
        var t = b.icn3d;
        t.opts.clbonds = "no";
        b.setLogCmd("set cross linkage off", !0),
        t.lines.clbond = [],
        b.setStyle("sidec", "nothing")
    }),
    $("#" + b.pre + "anno_summary").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.setAnnoViewAndDisplay("overview"),
        b.setLogCmd("set view overview", !0)
    }),
    $("#" + b.pre + "anno_details").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.setAnnoViewAndDisplay("detailed view"),
        b.setLogCmd("set view detailed view", !0)
    }),
    $("#" + b.pre + "show_annotations").click(function(e) {
        b.icn3d;
        b.showAnnotations(),
        b.setLogCmd("view annotations", !0)
    }),
    $("#" + b.pre + "showallchains").click(function(e) {
        b.icn3d;
        b.showAnnoAllChains(),
        b.setLogCmd("show annotations all chains", !0)
    }),
    $("#" + b.pre + "show_alignsequences").click(function(e) {
        b.icn3d;
        b.openDlg("dl_alignment", "Select residues in aligned sequences")
    }),
    $("#" + b.pre + "show_2ddgm").add("#" + b.pre + "mn2_2ddgm").click(function(e) {
        b.icn3d;
        b.openDlg("dl_2ddgm", "2D Diagram"),
        b.retrieveInteractionData(),
        b.setLogCmd("view interactions", !0)
    }),
    $(document).on("click", "#" + b.pre + "search_seq_button", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $("#" + b.pre + "search_seq").val();
        isNaN(t) && -1 == t.indexOf("$") && -1 == t.indexOf(".") && -1 == t.indexOf(":") && -1 == t.indexOf("@") && (t = ":" + t);
        var i = t.replace(/\s+/g, "_")
          , n = i;
        b.selectByCommand(t, i, n),
        b.setLogCmd("select " + t + " | name " + i, !0)
    }),
    $("#" + b.pre + "reload_mmtf").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("load mmtf " + $("#" + b.pre + "mmtfid").val(), !1),
        window.open(b.baseUrl + "icn3d/full.html?mmtfid=" + $("#" + b.pre + "mmtfid").val(), "_blank")
    }),
    $("#" + b.pre + "reload_pdb").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("load pdb " + $("#" + b.pre + "pdbid").val(), !1),
        window.open(b.baseUrl + "icn3d/full.html?pdbid=" + $("#" + b.pre + "pdbid").val(), "_blank")
    }),
    $("#" + b.pre + "reload_opm").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("load opm " + $("#" + b.pre + "opmid").val(), !1),
        window.open(b.baseUrl + "icn3d/full.html?opmid=" + $("#" + b.pre + "opmid").val(), "_blank")
    }),
    $("#" + b.pre + "reload_align_refined").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var t = $("#" + b.pre + "alignid1").val() + "," + $("#" + b.pre + "alignid2").val();
        b.setLogCmd("load alignment " + t + " | parameters &atype=1", !1),
        window.open(b.baseUrl + "icn3d/full.html?align=" + t + "&showalignseq=1&atype=1", "_blank")
    }),
    $("#" + b.pre + "reload_align_ori").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var t = $("#" + b.pre + "alignid1").val() + "," + $("#" + b.pre + "alignid2").val();
        b.setLogCmd("load alignment " + t + " | parameters &atype=0", !1),
        window.open(b.baseUrl + "icn3d/full.html?align=" + t + "&showalignseq=1&atype=0", "_blank")
    }),
    $("#" + b.pre + "reload_chainalign").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var t = $("#" + b.pre + "chainalignid1").val() + "," + $("#" + b.pre + "chainalignid2").val();
        b.setLogCmd("load chain alignment " + t, !1),
        window.open(b.baseUrl + "icn3d/full.html?chainalign=" + t + "&showalignseq=1", "_blank")
    }),
    $("#" + b.pre + "reload_mmcif").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("load mmcif " + $("#" + b.pre + "mmcifid").val(), !1),
        window.open(b.baseUrl + "icn3d/full.html?mmcifid=" + $("#" + b.pre + "mmcifid").val(), "_blank")
    }),
    $("#" + b.pre + "reload_mmdb").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("load mmdb " + $("#" + b.pre + "mmdbid").val(), !1),
        window.open(b.baseUrl + "icn3d/full.html?mmdbid=" + $("#" + b.pre + "mmdbid").val(), "_blank")
    }),
    $("#" + b.pre + "reload_blast_rep_id").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var t = $("#" + b.pre + "query_id").val()
          , i = encodeURIComponent($("#" + b.pre + "query_fasta").val())
          , n = $("#" + b.pre + "blast_rep_id").val();
        b.setLogCmd("load seq_struc_ids " + t + "," + n, !1),
        t = "" !== t && void 0 !== t ? t : i,
        window.open(b.baseUrl + "icn3d/full.html?from=icn3d&blast_rep_id=" + n + "&command=view annotations; set annotation cdd; set annotation site; set view detailed view; select chain " + n + "; show selection&query_id=" + t, "_blank")
    }),
    $("#" + b.pre + "reload_gi").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("load gi " + $("#" + b.pre + "gi").val(), !1),
        window.open(b.baseUrl + "icn3d/full.html?gi=" + $("#" + b.pre + "gi").val(), "_blank")
    }),
    $("#" + b.pre + "reload_cid").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setLogCmd("load cid " + $("#" + b.pre + "cid").val(), !1),
        window.open(b.baseUrl + "icn3d/full.html?cid=" + $("#" + b.pre + "cid").val(), "_blank")
    }),
    $("#" + b.pre + "reload_pngimage").click(function(e) {
        var v = b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close"),
        b.init(),
        v.init();
        var t = $("#" + b.pre + "pngimage")[0].files[0];
        if (t) {
            b.fileSupport();
            var i = new FileReader;
            i.onload = function(e) {
                var t = e.target.result
                  , i = "Share Link: "
                  , n = t.indexOf(i)
                  , r = "Start of state file======\n"
                  , s = t.indexOf(r);
                if (-1 == n && -1 == s)
                    alert('Please load a PNG image saved by clicking "Save Datas > PNG Image" in the Data menu...');
                else if (-1 != n) {
                    var o = t.substr(n + i.length);
                    b.setLogCmd("load iCn3D PNG image " + $("#" + b.pre + "pngimage").val(), !1),
                    window.open(o)
                } else if (-1 != s) {
                    var a = "Start of data file======\n"
                      , l = t.indexOf(a);
                    if (b.bInputfile = -1 != l,
                    b.bInputfile) {
                        var d = t.indexOf("End of data file======\n")
                          , c = t.substr(l + a.length, d - l - a.length)
                          , h = "Start of type file======\n"
                          , p = t.indexOf(h)
                          , m = t.indexOf("End of type file======\n")
                          , u = t.substr(p + h.length, m - p - h.length - 1)
                          , f = t.indexOf("End of state file======\n")
                          , g = t.substr(s + r.length, f - s - r.length);
                        g = decodeURIComponent(g),
                        "pdb" === u ? $.when(b.loadPdbData(c)).then(function() {
                            v.commands = [],
                            v.optsHistory = [],
                            b.loadScript(g, !0)
                        }) : ("mol2" === u ? b.loadMol2Data(c) : "sdf" === u ? b.loadSdfData(c) : "xyz" === u ? b.loadXyzData(c) : "mmcif" === u && b.loadMmcifData(c),
                        v.commands = [],
                        v.optsHistory = [],
                        b.loadScript(g, !0))
                    } else {
                        f = t.indexOf("End of state file======\n"),
                        g = t.substr(s + r.length, f - s - r.length);
                        g = decodeURIComponent(g),
                        v.commands = [],
                        v.optsHistory = [],
                        b.loadScript(g, !0)
                    }
                    b.setLogCmd("load iCn3D PNG image " + $("#" + b.pre + "pngimage").val(), !1)
                }
            }
            ,
            i.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_state").click(function(e) {
        var i = b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close"),
        b.bInputfile || (b.init(),
        i.init());
        var t = $("#" + b.pre + "state")[0].files[0];
        if (t) {
            b.fileSupport();
            var n = new FileReader;
            n.onload = function(e) {
                b.bStatefile = !0;
                var t = e.target.result;
                b.setLogCmd("load state file " + $("#" + b.pre + "state").val(), !1),
                i.commands = [],
                i.optsHistory = [],
                b.loadScript(t, !0)
            }
            ,
            n.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_selectionfile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var t = $("#" + b.pre + "selectionfile")[0].files[0];
        if (t) {
            b.fileSupport();
            var i = new FileReader;
            i.onload = function(e) {
                var t = e.target.result;
                b.loadSelection(t),
                b.setLogCmd("load selection file " + $("#" + b.pre + "selectionfile").val(), !1)
            }
            ,
            i.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_dsn6file2fofc").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadDsn6File("2fofc")
    }),
    $("#" + b.pre + "reload_dsn6filefofc").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadDsn6File("fofc")
    }),
    $("#" + b.pre + "reload_delphifile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadDelphiFile("delphi")
    }),
    $("#" + b.pre + "reload_pqrfile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFile("pqr")
    }),
    $("#" + b.pre + "reload_phifile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFile("phi")
    }),
    $("#" + b.pre + "reload_cubefile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFile("cube")
    }),
    $("#" + b.pre + "reload_pqrurlfile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFileUrl("pqrurl")
    }),
    $("#" + b.pre + "reload_phiurlfile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFileUrl("phiurl")
    }),
    $("#" + b.pre + "reload_cubeurlfile").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFileUrl("cubeurl")
    }),
    $("#" + b.pre + "reload_delphifile2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.updateSurfPara("delphi"),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadDelphiFile("delphi2")
    }),
    $("#" + b.pre + "reload_pqrfile2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.updateSurfPara("phi"),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFile("pqr2")
    }),
    $("#" + b.pre + "reload_phifile2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.updateSurfPara("phi"),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFile("phi2")
    }),
    $("#" + b.pre + "reload_cubefile2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.updateSurfPara("phi"),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFile("cube2")
    }),
    $("#" + b.pre + "reload_pqrurlfile2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.updateSurfPara("phiurl"),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFileUrl("pqrurl2")
    }),
    $("#" + b.pre + "reload_phiurlfile2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.updateSurfPara("phiurl"),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFileUrl("phiurl2")
    }),
    $("#" + b.pre + "reload_cubeurlfile2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.updateSurfPara("phiurl"),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadPhiFileUrl("cubeurl2")
    }),
    $("#" + b.pre + "reload_dsn6fileurl2fofc").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadDsn6FileUrl("2fofc")
    }),
    $("#" + b.pre + "reload_dsn6fileurlfofc").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.loadDsn6FileUrl("fofc")
    }),
    $("#" + b.pre + "reload_pdbfile").click(function(e) {
        var i = b.icn3d;
        e.preventDefault(),
        b = b.setIcn3dui(this.id),
        i.bInitial = !0,
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close");
        var t = $("#" + b.pre + "pdbfile")[0].files[0];
        if (t) {
            b.fileSupport();
            var n = new FileReader;
            n.onload = function(e) {
                var t = e.target.result;
                b.setLogCmd("load pdb file " + $("#" + b.pre + "pdbfile").val(), !1),
                i.molTitle = "",
                b.init(),
                i.init(),
                b.bInputfile = !0,
                b.InputfileData = t,
                b.InputfileType = "pdb",
                b.loadPdbData(t)
            }
            ,
            n.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_mol2file").click(function(e) {
        var i = b.icn3d;
        e.preventDefault(),
        i.bInitial = !0,
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close");
        var t = $("#" + b.pre + "mol2file")[0].files[0];
        if (t) {
            b.fileSupport();
            var n = new FileReader;
            n.onload = function(e) {
                var t = e.target.result;
                b.setLogCmd("load mol2 file " + $("#" + b.pre + "mol2file").val(), !1),
                i.molTitle = "",
                b.inputid = void 0,
                b.init(),
                i.init(),
                b.bInputfile = !0,
                b.InputfileData = t,
                b.InputfileType = "mol2",
                b.loadMol2Data(t)
            }
            ,
            n.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_sdffile").click(function(e) {
        var i = b.icn3d;
        e.preventDefault(),
        i.bInitial = !0,
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close");
        var t = $("#" + b.pre + "sdffile")[0].files[0];
        if (t) {
            b.fileSupport();
            var n = new FileReader;
            n.onload = function(e) {
                var t = e.target.result;
                b.setLogCmd("load sdf file " + $("#" + b.pre + "sdffile").val(), !1),
                i.molTitle = "",
                b.inputid = void 0,
                b.init(),
                i.init(),
                b.bInputfile = !0,
                b.InputfileData = t,
                b.InputfileType = "sdf",
                b.loadSdfData(t)
            }
            ,
            n.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_xyzfile").click(function(e) {
        var i = b.icn3d;
        e.preventDefault(),
        i.bInitial = !0,
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close");
        var t = $("#" + b.pre + "xyzfile")[0].files[0];
        if (t) {
            b.fileSupport();
            var n = new FileReader;
            n.onload = function(e) {
                var t = e.target.result;
                b.setLogCmd("load xyz file " + $("#" + b.pre + "xyzfile").val(), !1),
                i.molTitle = "",
                b.inputid = void 0,
                b.init(),
                i.init(),
                b.bInputfile = !0,
                b.InputfileData = t,
                b.InputfileType = "xyz",
                b.loadXyzData(t)
            }
            ,
            n.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "reload_urlfile").click(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        t.bInitial = !0,
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close");
        var i = $("#" + b.pre + "filetype").val()
          , n = $("#" + b.pre + "urlfile").val();
        b.inputurl = "type=" + i + "&url=" + encodeURIComponent(n),
        b.init(),
        t.init(),
        b.bInputfile = !0,
        b.bInputUrlfile = !0,
        b.downloadUrl(n, i)
    }),
    $("#" + b.pre + "reload_mmciffile").click(function(e) {
        var n = b.icn3d;
        e.preventDefault(),
        n.bInitial = !0,
        b.cfg.notebook || dialog.dialog("close"),
        b.cfg.notebook ? b.closeDialogs() : $(".ui-dialog-content").dialog("close");
        var t = $("#" + b.pre + "mmciffile")[0].files[0];
        if (t) {
            b.fileSupport();
            var i = new FileReader;
            i.onload = function(e) {
                var t = e.target.result;
                b.setLogCmd("load mmcif file " + $("#" + b.pre + "mmciffile").val(), !1),
                n.molTitle = "";
                var i = b.baseUrl + "mmcifparser/mmcifparser.cgi";
                n.bCid = void 0,
                $.ajax({
                    url: i,
                    type: "POST",
                    data: {
                        mmciffile: t
                    },
                    dataType: "jsonp",
                    cache: !0,
                    tryCount: 0,
                    retryLimit: 1,
                    beforeSend: function() {
                        b.showLoading()
                    },
                    complete: function() {},
                    success: function(e) {
                        b.init(),
                        n.init(),
                        b.bInputfile = !0,
                        b.InputfileData = e,
                        b.InputfileType = "mmcif",
                        b.loadMmcifData(e)
                    },
                    error: function(e, t, i) {
                        this.tryCount++,
                        this.tryCount <= this.retryLimit && $.ajax(this)
                    }
                })
            }
            ,
            i.readAsText(t)
        } else
            alert("Please select a file before clicking 'Load'")
    }),
    $("#" + b.pre + "applycustomcolor").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.setOption("color", $("#" + b.pre + "colorcustom").val()),
        b.setLogCmd("color " + $("#" + b.pre + "colorcustom").val(), !0)
    }),
    $("#" + b.pre + "atomsCustomSphere2").add("#" + b.pre + "atomsCustomSphere").add("#" + b.pre + "radius_aroundsphere").change(function(e) {
        b.icn3d;
        b.bSphereCalc = !1
    }),
    $("#" + b.pre + "applypick_aroundsphere").click(function(e) {
        b.icn3d;
        var t = parseFloat($("#" + b.pre + "radius_aroundsphere").val())
          , i = $("#" + b.pre + "atomsCustomSphere").val()
          , n = $("#" + b.pre + "atomsCustomSphere2").val();
        if (0 == n.length)
            alert("Please select the first set at step #1");
        else {
            var r = "select zone cutoff " + t + " | sets " + n + " " + i + " | " + b.bSphereCalc;
            b.bSphereCalc || b.pickCustomSphere(t, n, i, b.bSphereCalc),
            b.bSphereCalc = !0,
            b.updateHlAll(),
            b.setLogCmd(r, !0)
        }
    }),
    $("#" + b.pre + "sphereExport").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = parseFloat($("#" + b.pre + "radius_aroundsphere").val())
          , i = $("#" + b.pre + "atomsCustomSphere").val()
          , n = $("#" + b.pre + "atomsCustomSphere2").val();
        if (0 == n.length)
            alert("Please select the first set at step #1");
        else {
            b.pickCustomSphere(t, n, i, b.bSphereCalc),
            b.bSphereCalc = !0;
            var r = b.exportSpherePairs()
              , s = b.inputid ? b.inputid : "custom";
            b.saveFile(s + "_sphere_pairs.html", "html", r),
            b.setLogCmd("export pairs | " + n + " " + i + " | dist " + t, !0)
        }
    }),
    $("#" + b.pre + "apply_adjustmem").click(function(e) {
        b.icn3d;
        b.cfg.notebook || dialog.dialog("close");
        var t = parseFloat($("#" + b.pre + "extra_mem_z").val())
          , i = parseFloat($("#" + b.pre + "intra_mem_z").val());
        b.adjustMembrane(t, i);
        var n = "adjust membrane z-axis " + t + " " + i;
        b.setLogCmd(n, !0)
    }),
    $("#" + b.pre + "apply_selectplane").click(function(e) {
        b.icn3d;
        b.cfg.notebook || dialog.dialog("close");
        var t = parseFloat($("#" + b.pre + "selectplane_z1").val())
          , i = parseFloat($("#" + b.pre + "selectplane_z2").val());
        b.selectBtwPlanes(t, i);
        var n = "select planes z-axis " + t + " " + i;
        b.setLogCmd(n, !0)
    }),
    $("#" + b.pre + "atomsCustomHbond2").add("#" + b.pre + "atomsCustomHbond").add("#" + b.pre + "analysis_hbond").add("#" + b.pre + "analysis_saltbridge").add("#" + b.pre + "analysis_contact").add("#" + b.pre + "hbondthreshold").add("#" + b.pre + "saltbridgethreshold").add("#" + b.pre + "contactthreshold").change(function(e) {
        b.icn3d;
        b.bHbondCalc = !1
    }),
    $("#" + b.pre + "crossstrucinter").change(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        t.crossstrucinter = parseInt($("#" + b.pre + "crossstrucinter").val()),
        b.setLogCmd("cross structure interaction " + t.crossstrucinter, !0)
    }),
    $("#" + b.pre + "applyhbonds").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.showInteractions("3d")
    }),
    $("#" + b.pre + "hbondWindow").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.showInteractions("view")
    }),
    $("#" + b.pre + "areaWindow").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = $("#" + b.pre + "atomsCustomHbond").val()
          , i = $("#" + b.pre + "atomsCustomHbond2").val();
        b.calcBuriedSurface(i, t),
        b.setLogCmd("calc buried surface | " + i + " " + t, !0)
    }),
    $("#" + b.pre + "sortSet1").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.showInteractions("save1")
    }),
    $(document).on("click", "." + b.pre + "showintercntonly", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        $(".icn3d-border").hide(),
        b.setLogCmd("table inter count only", !0)
    }),
    $(document).on("click", "." + b.pre + "showinterdetails", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        $(".icn3d-border").show(),
        b.setLogCmd("table inter details", !0)
    }),
    $("#" + b.pre + "sortSet2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.showInteractions("save2")
    }),
    $("#" + b.pre + "hbondGraph").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.showInteractions("graph")
    }),
    $("#" + b.pre + "hbondLineGraph").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.showInteractions("linegraph")
    }),
    $("#" + b.pre + "hbondScatterplot").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.showInteractions("scatterplot")
    }),
    $(document).on("click", "#" + b.svgid + " circle.selected", function(e) {
        var t = b.icn3d;
        e.stopImmediatePropagation();
        var i = $(this).attr("res");
        !1 !== b.bSelectResidue || t.bShift || t.bCtrl || b.removeSelection(),
        void 0 !== i && (b.selectResidues(i, this),
        t.addHlObjects())
    }),
    $("#" + b.svgid + "_svg").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.saveSvg(b.svgid, b.inputid + "_force_directed_graph.svg")
    }),
    $("#" + b.svgid + "_png").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = $("#" + b.pre + "dl_graph").width()
          , i = $("#" + b.pre + "dl_graph").height();
        b.savePng(b.svgid, b.inputid + "_force_directed_graph.png", t, i)
    }),
    $("#" + b.svgid + "_json").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = b.graphStr.substr(0, b.graphStr.lastIndexOf("}"));
        t += b.getLinkColor(),
        b.saveFile(b.inputid + "_force_directed_graph.json", "text", [t])
    }),
    $("#" + b.linegraphid + "_svg").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.saveSvg(b.linegraphid, b.inputid + "_line_graph.svg")
    }),
    $("#" + b.linegraphid + "_png").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = $("#" + b.pre + "dl_linegraph").width()
          , i = $("#" + b.pre + "dl_linegraph").height();
        b.savePng(b.linegraphid, b.inputid + "_line_graph.png", t, i)
    }),
    $("#" + b.linegraphid + "_json").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = b.lineGraphStr.substr(0, b.lineGraphStr.lastIndexOf("}"));
        t += b.getLinkColor(),
        b.saveFile(b.inputid + "_line_graph.json", "text", [t])
    }),
    $("#" + b.linegraphid + "_scale").change(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = $("#" + b.linegraphid + "_scale").val();
        $("#" + b.linegraphid).attr("width", (b.linegraphWidth * parseFloat(t)).toString() + "px"),
        b.setLogCmd("line graph scale " + t, !0)
    }),
    $("#" + b.scatterplotid + "_svg").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.saveSvg(b.scatterplotid, b.inputid + "_scatterplot.svg")
    }),
    $("#" + b.scatterplotid + "_png").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = $("#" + b.pre + "dl_scatterplot").width()
          , i = $("#" + b.pre + "dl_scatterplot").height();
        b.savePng(b.scatterplotid, b.inputid + "_scatterplot.png", t, i)
    }),
    $("#" + b.scatterplotid + "_json").click(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = b.scatterplotStr.substr(0, b.scatterplotStr.lastIndexOf("}"));
        t += b.getLinkColor(),
        b.saveFile(b.inputid + "_scatterplot.json", "text", [t])
    }),
    $("#" + b.scatterplotid + "_scale").change(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = $("#" + b.scatterplotid + "_scale").val();
        $("#" + b.scatterplotid).attr("width", (b.scatterplotWidth * parseFloat(t)).toString() + "px"),
        b.setLogCmd("scatterplot scale " + t, !0)
    }),
    $("#" + b.svgid + "_label").change(function(e) {
        b.icn3d;
        e.preventDefault();
        var t = $("#" + b.svgid + "_label").val();
        $("#" + b.svgid + " text").removeClass(),
        $("#" + b.svgid + " text").addClass(t),
        b.setLogCmd("graph label " + t, !0)
    }),
    $("#" + b.svgid + "_hideedges").change(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        b.hideedges = parseInt($("#" + b.svgid + "_hideedges").val()),
        b.hideedges ? (b.contactInsideColor = "FFF",
        b.hbondInsideColor = "FFF",
        b.ionicInsideColor = "FFF") : (b.contactInsideColor = "DDD",
        b.hbondInsideColor = "AFA",
        b.ionicInsideColor = "8FF"),
        void 0 !== b.graphStr && (t.bRender && b.force && b.drawGraph(b.graphStr, b.pre + "dl_graph"),
        b.setLogCmd("hide edges " + b.hideedges, !0))
    }),
    $("#" + b.svgid + "_force").change(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.force = parseInt($("#" + b.svgid + "_force").val()),
        void 0 !== b.graphStr && (b.setLogCmd("graph force " + b.force, !0),
        b.handleForce())
    }),
    $("#" + b.pre + "hbondReset").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.resetInteractionPairs(),
        b.setLogCmd("reset interaction pairs", !0)
    }),
    $("#" + b.pre + "applypick_labels").click(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var i = $("#" + b.pre + "labeltext").val()
          , n = $("#" + b.pre + "labelsize").val()
          , r = $("#" + b.pre + "labelcolor").val()
          , s = $("#" + b.pre + "labelbkgd").val();
        if ("0" !== n && "" !== n && "undefined" !== n || (n = 0),
        "0" !== r && "" !== r && "undefined" !== r || (r = 0),
        "0" !== s && "" !== s && "undefined" !== s || (s = 0),
        void 0 === t.pAtom || void 0 === t.pAtom2)
            alert("Please pick another atom");
        else {
            var o = (t.pAtom.coord.x + t.pAtom2.coord.x) / 2
              , a = (t.pAtom.coord.y + t.pAtom2.coord.y) / 2
              , l = (t.pAtom.coord.z + t.pAtom2.coord.z) / 2;
            b.addLabel(i, o, a, l, n, r, s, "custom"),
            t.pickpair = !1;
            var d = ""
              , c = ""
              , h = "";
            0 != n && (d = " | size " + n),
            0 != r && (c = " | color " + r),
            0 != s && (h = " | background " + s),
            b.setLogCmd("add label " + i + " | x " + o.toPrecision(4) + " y " + a.toPrecision(4) + " z " + l.toPrecision(4) + d + c + h + " | type custom", !0),
            t.draw()
        }
    }),
    $("#" + b.pre + "applyselection_labels").click(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close");
        var i = $("#" + b.pre + "labeltext2").val()
          , n = $("#" + b.pre + "labelsize2").val()
          , r = $("#" + b.pre + "labelcolor2").val()
          , s = $("#" + b.pre + "labelbkgd2").val();
        "0" !== n && "" !== n && "undefined" !== n || (n = 0),
        "0" !== r && "" !== r && "undefined" !== r || (r = 0),
        "0" !== s && "" !== s && "undefined" !== s || (s = 0);
        var o = t.centerAtoms(t.hash2Atoms(t.hAtoms))
          , a = o.center.x
          , l = o.center.y
          , d = o.center.z;
        b.addLabel(i, a, l, d, n, r, s, "custom");
        var c = ""
          , h = ""
          , p = "";
        0 != n && (c = " | size " + n),
        0 != r && (h = " | color " + r),
        0 != s && (p = " | background " + s),
        b.setLogCmd("add label " + i + " | x " + a.toPrecision(4) + " y " + l.toPrecision(4) + " z " + d.toPrecision(4) + c + h + p + " | type custom", !0),
        t.draw()
    }),
    $("#" + b.pre + "applypick_stabilizer").click(function(e) {
        var t = b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        void 0 === t.pAtom || void 0 === t.pAtom2 ? alert("Please pick another atom") : (t.pickpair = !1,
        b.setLogCmd("add one stabilizer | " + t.pAtom.serial + " " + t.pAtom2.serial, !0),
        void 0 === t.pairArray && (t.pairArray = []),
        t.pairArray.push(t.pAtom.serial),
        t.pairArray.push(t.pAtom2.serial),
        b.setThichknessFor3Dprint(),
        t.draw())
    });
    var t = new CP(document.querySelector("#" + b.pre + "colorcustom"));
    t.on("change", function(e) {
        this.target.value = e
    }),
    $("#" + b.pre + "colorcustom").on("input keyup paste cut", function() {
        var e = $("#" + b.pre + "colorcustom").val();
        t.set("#" + e).enter()
    }),
    $("#" + b.pre + "applypick_stabilizer_rm").click(function(e) {
        var t = b.icn3d;
        if (e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        void 0 === t.pAtom || void 0 === t.pAtom2)
            alert("Please pick another atom");
        else {
            t.pickpair = !1,
            b.setLogCmd("remove one stabilizer | " + t.pAtom.serial + " " + t.pAtom2.serial, !0);
            var i = [];
            i.push(t.pAtom.serial),
            i.push(t.pAtom2.serial),
            b.removeOneStabilizer(i),
            t.draw()
        }
    }),
    $("#" + b.pre + "applypick_measuredistance").click(function(e) {
        var t = b.icn3d;
        if (e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.bMeasureDistance = !1,
        void 0 === t.pAtom || void 0 === t.pAtom2)
            alert("Please pick another atom");
        else {
            var i = $("#" + b.pre + "linecolor").val()
              , n = (t.pAtom.coord.x + t.pAtom2.coord.x) / 2
              , r = (t.pAtom.coord.y + t.pAtom2.coord.y) / 2
              , s = (t.pAtom.coord.z + t.pAtom2.coord.z) / 2;
            b.addLineFromPicking("distance");
            var o = (parseInt(10 * t.pAtom.coord.distanceTo(t.pAtom2.coord)) / 10).toString() + " A";
            b.addLabel(o, n, r, s, 0, i, 0, "distance");
            var a = ""
              , l = ""
              , d = "";
            0,
            0 != i && (l = " | color " + i),
            b.setLogCmd("add label " + o + " | x " + n.toPrecision(4) + " y " + r.toPrecision(4) + " z " + s.toPrecision(4) + a + l + d + " | type distance", !0),
            t.draw(),
            t.pk = 2
        }
    }),
    $("#" + b.pre + "applydist2").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.cfg.notebook || dialog.dialog("close"),
        b.bMeasureDistance = !1;
        var t = $("#" + b.pre + "atomsCustomDist").val()
          , i = $("#" + b.pre + "atomsCustomDist2").val();
        b.measureDistTwoSets(t, i),
        b.setLogCmd("dist | " + i + " " + t, !0)
    }),
    $("#" + b.pre + "apply_thickness_3dprint").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.setLineThickness("3dprint")
    }),
    $("#" + b.pre + "apply_thickness_style").click(function(e) {
        b.icn3d;
        e.preventDefault(),
        b.setLineThickness("style")
    }),
    $("#" + b.pre + "reset").click(function(e) {
        var t = b.icn3d;
        t.maxD = t.oriMaxD,
        t.center = t.oriCenter.clone(),
        t.reinitAfterLoad(),
        b.renderFinalStep(1),
        b.setMode("all"),
        b.setLogCmd("reset", !0),
        b.removeSeqChainBkgd(),
        b.removeSeqResidueBkgd(),
        b.removeHl2D(),
        b.removeHlMenus()
    }),
    $("#" + b.pre + "toggleHighlight").add("#" + b.pre + "toggleHighlight2").click(function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.toggleHighlight(),
        b.setLogCmd("toggle highlight", !0)
    }),
    $(document).on("click", "#" + b.pre + "seq_clearselection", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.cfg.notebook || dialog.dialog("close"),
        b.clearHighlight(),
        b.setLogCmd("clear selection", !0)
    }),
    $(document).on("click", "#" + b.pre + "seq_clearselection2", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        e.preventDefault(),
        b.clearHighlight(),
        b.setLogCmd("clear selection", !0)
    }),
    $(document).on("click", "#" + b.pre + "alignseq_clearselection", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.clearHighlight(),
        b.setLogCmd("clear selection", !0)
    }),
    $("#" + b.pre + "replay").click(function(e) {
        var t = b.icn3d;
        e.stopImmediatePropagation(),
        b.CURRENTNUMBER++;
        var i = b.cfg.replay ? b.STATENUMBER : b.STATENUMBER - 1;
        if (b.CURRENTNUMBER == i)
            b.bReplay = 0,
            $("#" + b.pre + "replay").hide();
        else {
            b.execCommandsBase(b.CURRENTNUMBER, b.CURRENTNUMBER, b.STATENUMBER);
            var n = t.commands[b.CURRENTNUMBER].indexOf("|||")
              , r = -1 != n ? t.commands[b.CURRENTNUMBER].substr(0, n) : t.commands[b.CURRENTNUMBER]
              , s = 30 < r.length ? r.substr(0, 30) + "..." : r
              , o = b.getMenuFromCmd(s);
            $("#" + b.pre + "replay_cmd").html("Cmd: " + s),
            $("#" + b.pre + "replay_menu").html("Menu: " + o),
            t.draw()
        }
    }),
    $("#" + b.pre + "logtext").keypress(function(e) {
        var t = b.icn3d;
        if (b.bAddLogs = !1,
        13 == (e.keyCode ? e.keyCode : e.which)) {
            e.preventDefault();
            var i = $(this).val();
            t.bRender = !0;
            var n = i.split("\n")
              , r = n[n.length - 1].substr(2).trim();
            if (t.logs.push(r),
            $("#" + b.pre + "logtext").val("> " + t.logs.join("\n> ") + "\n> ").scrollTop($("#" + b.pre + "logtext")[0].scrollHeight),
            "" !== r) {
                var s = {};
                if (s.factor = t._zoomFactor,
                s.mouseChange = t.mouseChange,
                s.quaternion = t.quaternion,
                t.commands.push(r + "|||" + b.getTransformationStr(s)),
                t.optsHistory.push(t.cloneHash(t.opts)),
                t.optsHistory[t.optsHistory.length - 1].hlatomcount = Object.keys(t.hAtoms).length,
                b.isSessionStorageSupported() && b.saveCommandsToSession(),
                b.STATENUMBER = t.commands.length,
                -1 !== r.indexOf("load"))
                    b.applyCommandLoad(r);
                else if (-1 !== r.indexOf("set map") && -1 === r.indexOf("set map wireframe"))
                    b.applyCommandMap(r);
                else if (-1 !== r.indexOf("set emmap") && -1 === r.indexOf("set emmap wireframe"))
                    b.applyCommandEmmap(r);
                else if (-1 !== r.indexOf("set phi"))
                    b.applyCommandPhi(r);
                else if (-1 !== r.indexOf("set delphi"))
                    b.applyCommandDelphi(r);
                else if (0 == r.indexOf("view annotations"))
                    b.applyCommandAnnotationsAndCddSite(r);
                else if (0 == r.indexOf("set annotation clinvar"))
                    b.applyCommandClinvar(r);
                else if (0 == r.indexOf("set annotation snp"))
                    b.applyCommandSnp(r);
                else if (0 == r.indexOf("set annotation 3ddomain"))
                    b.applyCommand3ddomain(r);
                else if (0 == r.indexOf("set annotation all"))
                    $.when(b.applyCommandClinvar(r)).then(b.applyCommandSnp(r)).then(b.applyCommand3ddomain(r)),
                    b.setAnnoTabAll();
                else if (0 == r.indexOf("view interactions") && void 0 !== b.cfg.align)
                    b.applyCommandViewinteraction(r);
                else if (0 == r.indexOf("symmetry")) {
                    var o = r.substr(r.indexOf(" ") + 1);
                    t.symmetrytitle = "none" === o ? void 0 : o,
                    "none" !== o && void 0 === t.symmetryHash && b.applyCommandSymmetry(r)
                } else if (0 == r.indexOf("symd symmetry"))
                    b.applyCommandSymd(r);
                else if (0 == r.indexOf("scap "))
                    b.applyCommandScap(r);
                else if (0 == r.indexOf("realign on seq align")) {
                    var a = r.split(" | ");
                    if (2 == a.length) {
                        var l = a[1].split(",");
                        t.hAtoms = b.getAtomsFromNameArray(l)
                    }
                    b.applyCommandRealign(r)
                } else
                    0 == r.indexOf("graph interaction pairs") ? b.applyCommandGraphinteraction(r) : b.applyCommand(r + "|||" + b.getTransformationStr(s));
                b.saveSelectionIfSelected(),
                t.draw()
            }
        }
        b.bAddLogs = !0
    }),
    $(document).on("click", "#" + b.pre + "seq_saveselection", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.cfg.notebook || dialog.dialog("close"),
        b.saveSelectionPrep();
        var t = $("#" + b.pre + "seq_command_name").val().replace(/\s+/g, "_");
        b.saveSelection(t, t)
    }),
    $(document).on("click", "#" + b.pre + "seq_saveselection2", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.saveSelectionPrep();
        var t = $("#" + b.pre + "seq_command_name2").val().replace(/\s+/g, "_");
        b.saveSelection(t, t)
    }),
    $(document).on("click", "#" + b.pre + "alignseq_saveselection", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.saveSelectionPrep();
        var t = $("#" + b.pre + "alignseq_command_name").val().replace(/\s+/g, "_");
        b.saveSelection(t, t)
    }),
    $(document).on("click", "." + b.pre + "outputselection", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        b.bSelectResidue = !1,
        b.bSelectAlignResidue = !1,
        b.setLogCmd("output selection", !0),
        b.outputSelection()
    }),
    $(document).on("click", ".icn3d-saveicon", function(e) {
        var t = b.icn3d;
        e.stopImmediatePropagation();
        var i = $(this).attr("pid")
          , n = "";
        n += '<link rel="stylesheet" href="https:///structure.ncbi.nlm.nih.gov/icn3d/lib/jquery-ui-1.12.1.min.css">\n',
        n += '<link rel="stylesheet" href="https:///structure.ncbi.nlm.nih.gov/icn3d/icn3d_full_ui.css">\n',
        n += $("#" + i).html();
        var r = i.split("_")
          , s = 2 < r.length ? r[2] : i
          , o = Object.keys(t.structures)[0];
        1 < Object.keys(t.structures).length && (o += "-" + Object.keys(t.structures)[1]),
        b.saveFile(o + "-" + s + ".html", "html", encodeURIComponent(n))
    }),
    $(document).on("click", ".icn3d-hideicon", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("pid");
        if (!b.cfg.notebook)
            if (void 0 === b.dialogHashHideDone && (b.dialogHashHideDone = {}),
            void 0 === b.dialogHashPosToRight && (b.dialogHashPosToRight = {}),
            b.dialogHashHideDone.hasOwnProperty(t)) {
                var i = b.dialogHashHideDone[t].width
                  , n = b.dialogHashHideDone[t].height;
                s = b.dialogHashHideDone[t].position;
                $("#" + t).dialog("option", "width", i),
                $("#" + t).dialog("option", "height", n),
                $("#" + t).dialog("option", "position", s),
                delete b.dialogHashHideDone[t]
            } else {
                b.dialogHashHideDone[t] = {
                    width: $("#" + t).dialog("option", "width"),
                    height: $("#" + t).dialog("option", "height"),
                    position: $("#" + t).dialog("option", "position")
                };
                var r;
                $("#" + t).dialog("option", "width", 160),
                $("#" + t).dialog("option", "height", 80),
                b.dialogHashPosToRight.hasOwnProperty(t) ? r = b.dialogHashPosToRight[t] : (r = 170 * Object.keys(b.dialogHashPosToRight).length,
                b.dialogHashPosToRight[t] = r);
                var s = {
                    my: "right bottom",
                    at: "right-" + r + " bottom+60",
                    of: "#" + b.divid,
                    collision: "none"
                };
                $("#" + t).dialog("option", "position", s)
            }
    }),
    $(document).on("click", "." + b.pre + "selres", function(e) {
        var t = b.icn3d;
        e.stopImmediatePropagation(),
        b.bSelOneRes = !1;
        for (var i = $("." + b.pre + "seloneres"), n = 0, r = i.length; n < r; ++n)
            i[n].checked = !1;
        var s = $(this).attr("resid").split("|");
        t.hAtoms = {},
        b.selectedResidues = {};
        var o = "select ";
        for (n = 0,
        r = s.length; n < r; ++n) {
            var a = s[n];
            0 < n && (o += " or "),
            o += b.selectOneResid(a)
        }
        b.updateHlAll(),
        b.setLogCmd(o, !0)
    }),
    $(document).on("click", "." + b.pre + "seloneres", function(e) {
        var t = b.icn3d;
        e.stopImmediatePropagation(),
        b.bSelOneRes || (t.hAtoms = {},
        b.selectedResidues = {},
        b.bSelOneRes = !0);
        var i = $(this).attr("resid")
          , n = $(this).attr("id");
        $("#" + n).length && $("#" + n)[0].checked ? b.selectOneResid(i) : $("#" + n).length && !$("#" + n)[0].checked && b.selectOneResid(i, !0),
        b.updateHlAll()
    }),
    $(document).on("click", "." + b.pre + "selset", function(e) {
        var t = b.icn3d;
        e.stopImmediatePropagation(),
        b.bSelOneRes = !1;
        for (var i = $("." + b.pre + "seloneres"), n = 0, r = i.length; n < r; ++n)
            i[n].checked = !1;
        var s = $(this).attr("cmd");
        b.selectByCommand(s, "", ""),
        t.removeHlObjects(),
        t.addHlObjects(),
        b.setLogCmd(s, !0)
    }),
    $(document).on("click", ".icn3d-addtrack", function(e) {
        b.icn3d;
        e.stopImmediatePropagation(),
        $("#" + b.pre + "anno_custom")[0].checked = !0,
        $("[id^=" + b.pre + "custom]").show();
        var t = $(this).attr("chainid");
        $("#" + b.pre + "track_chainid").val(t),
        b.openDlg("dl_addtrack", "Add track for Chain: " + t),
        $("#" + b.pre + "track_gi").focus()
    }),
    $(document).on("click", ".icn3d-customcolor", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("chainid");
        $("#" + b.pre + "customcolor_chainid").val(t),
        b.openDlg("dl_customcolor", "Apply custom color or tube for Chain: " + t)
    }),
    $(document).on("click", ".icn3d-helixsets", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("chainid");
        b.defineSecondary(t, "helix"),
        b.setLogCmd("define helix sets | chain " + t, !0)
    }),
    $(document).on("click", ".icn3d-sheetsets", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("chainid");
        b.defineSecondary(t, "sheet"),
        b.setLogCmd("define sheet sets | chain " + t, !0)
    }),
    $(document).on("click", ".icn3d-coilsets", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("chainid");
        b.defineSecondary(t, "coil"),
        b.setLogCmd("define coil sets | chain " + t, !0)
    }),
    $("#" + b.pre + "deletesets").click(function(e) {
        b.icn3d;
        b.deleteSelectedSets(),
        b.setLogCmd("delete selected sets", !0)
    }),
    $("accordion").bind("mouseup touchend", function(e) {
        var t = b.icn3d;
        t.bControlGl ? window.controls && (window.controls.noRotate = !1,
        window.controls.noZoom = !1,
        window.controls.noPan = !1) : t.controls && (t.controls.noRotate = !1,
        t.controls.noZoom = !1,
        t.controls.noPan = !1)
    }),
    $("accordion").bind("mousedown touchstart", function(e) {
        var t = b.icn3d;
        t.bControlGl ? window.controls && (window.controls.noRotate = !0,
        window.controls.noZoom = !0,
        window.controls.noPan = !0) : t.controls && (t.controls.noRotate = !0,
        t.controls.noZoom = !0,
        t.controls.noPan = !0)
    }),
    $(document).on("click", ".icn3d-expand", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("id")
          , i = t.lastIndexOf("_")
          , n = t.substr(0, i);
        $("#" + n).show(),
        $("#" + n + "_expand").hide(),
        $("#" + n + "_shrink").show()
    }),
    $(document).on("click", ".icn3d-shrink", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("id")
          , i = t.lastIndexOf("_")
          , n = t.substr(0, i);
        $("#" + n).hide(),
        $("#" + n + "_expand").show(),
        $("#" + n + "_shrink").hide()
    }),
    window.onscroll = function(e) {
        b.icn3d;
        "detailed view" == b.view && 0 == $(window).scrollTop() && 0 == $(window).scrollTop() && 0 == $("#" + b.pre + "dl_selectannotations").scrollTop() ? b.showFixedTitle() : b.hideFixedTitle()
    }
    ,
    $("#" + b.pre + "dl_selectannotations").scroll(function() {
        "detailed view" == b.view && 0 == $(window).scrollTop() && 0 == $(window).scrollTop() && 0 == $("#" + b.pre + "dl_selectannotations").scrollTop() ? b.showFixedTitle() : b.hideFixedTitle()
    }),
    $("#" + b.pre + "mn6_themeBlue").click(function(e) {
        b.icn3d;
        b.setTheme("blue"),
        b.setLogCmd("set theme blue", !0)
    }),
    $("#" + b.pre + "mn6_themeOrange").click(function(e) {
        b.icn3d;
        b.setTheme("orange"),
        b.setLogCmd("set theme orange", !0)
    }),
    $("#" + b.pre + "mn6_themeBlack").click(function(e) {
        b.icn3d;
        b.setTheme("black"),
        b.setLogCmd("set theme black", !0)
    }),
    $("#" + b.pre + "mn6_doublecolorYes").click(function(e) {
        var t = b.icn3d;
        t.bDoublecolor = !0,
        t.draw(),
        b.setLogCmd("set double color on", !0)
    }),
    $("#" + b.pre + "mn6_doublecolorNo").click(function(e) {
        var t = b.icn3d;
        t.bDoublecolor = !1,
        t.draw(),
        b.setLogCmd("set double color off", !0)
    }),
    $(document).on("click", "." + b.pre + "snpin3d", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("snp");
        b.retrieveScap(t),
        b.setLogCmd("scap 3d " + t, !0),
        b.setLogCmd("select displayed set", !0)
    }),
    $(document).on("click", "." + b.pre + "snpinter", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("snp");
        b.retrieveScap(t, !0),
        b.setLogCmd("scap interaction " + t, !0);
        var i = t.split("_")
          , n = "." + i[1] + ":" + i[2]
          , r = "snp_" + i[1] + "_" + i[2];
        b.setLogCmd("select " + n + " | name " + r, !0),
        b.setLogCmd("line graph interaction pairs | selected non-selected | hbonds,salt bridge,interactions,halogen,pi-cation,pi-stacking | false | threshold 3.8 6 4 3.8 6 5.5", !0),
        b.setLogCmd("adjust dialog dl_linegraph", !0),
        b.setLogCmd("select displayed set", !0)
    }),
    $(document).on("click", "." + b.pre + "snppdb", function(e) {
        b.icn3d;
        e.stopImmediatePropagation();
        var t = $(this).attr("snp");
        b.retrieveScap(t, void 0, !0),
        b.setLogCmd("scap pdb " + t, !0)
    })
}
,
iCn3DUI.prototype.setTheme = function(e) {
    var t, i, n, r, s;
    this.icn3d;
    "orange" == (this.themecolor = e) ? (t = "#e78f08",
    i = "#f6a828",
    n = "ui-bg_gloss-wave_35_f6a828_500x100.png",
    r = "ui-icons_ef8c08_256x240.png",
    s = "#eb8f00") : "black" == e ? (i = t = "#333333",
    n = "ui-bg_gloss-wave_25_333333_500x100.png",
    r = "ui-icons_222222_256x240.png",
    s = "#222222") : "blue" == e && (t = "#4297d7",
    i = "#5c9ccc",
    n = "ui-bg_gloss-wave_55_5c9ccc_500x100.png",
    r = "ui-icons_228ef1_256x240.png",
    s = "#444"),
    $(".ui-widget-header").css({
        border: "1px solid " + t,
        background: i + ' url("lib/images/' + n + '") 50% 50% repeat-x',
        color: "#fff",
        "font-weight": "bold"
    }),
    $(".ui-button .ui-icon").css({
        "background-image": "url(lib/images/" + r + ")"
    }),
    $(".ui-state-active a, .ui-state-active a:link, .ui-state-active a:visited").css({
        color: s,
        "text-decoration": "none"
    })
}
,
iCn3DUI.prototype.fileSupport = function() {
    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.")
}
,
iCn3DUI.prototype.getLinkColor = function() {
    return ', linkmap: {\n3: {"type": "peptidebond", "c":""},\n4: {"type": "ssbond", "c":"FFA500"},\n5: {"type": "ionic", "c":"0FF"},\n6: {"type": "ionicInside", "c":"FFF"},\n11: {"type": "contact", "c":"888"},\n12: {"type": "contactInside", "c":"FFF"},\n13: {"type": "hbond", "c":"0F0"},\n14: {"type": "hbondInside", "c":"FFF"},\n15: {"type": "clbond", "c":"006400"},\n17: {"type": "halogen", "c":"F0F"},\n18: {"type": "halogenInside", "c":"FFF"},\n19: {"type": "pication", "c":"F00"},\n20: {"type": "picationInside", "c":"FFF"},\n21: {"type": "pistacking", "c":"00F"},\n22: {"type": "pistackingInside", "c":"FFF"}\n}}\n'
}
,
iCn3DUI.prototype.setLineThickness = function(e) {
    var t = this
      , i = t.icn3d;
    t.bSetThickness = !0,
    i.lineRadius = parseFloat($("#" + t.pre + "linerad_" + e).val()),
    i.coilWidth = parseFloat($("#" + t.pre + "coilrad_" + e).val()),
    i.cylinderRadius = parseFloat($("#" + t.pre + "stickrad_" + e).val()),
    i.traceRadius = parseFloat($("#" + t.pre + "stickrad_" + e).val()),
    i.dotSphereScale = parseFloat($("#" + t.pre + "ballscale_" + e).val()),
    i.ribbonthickness = parseFloat($("#" + t.pre + "ribbonthick_" + e).val()),
    i.helixSheetWidth = parseFloat($("#" + t.pre + "prtribbonwidth_" + e).val()),
    i.nucleicAcidWidth = parseFloat($("#" + t.pre + "nucleotideribbonwidth_" + e).val()),
    t.setLogCmd("set thickness | linerad " + i.lineRadius + " | coilrad " + i.coilWidth + " | stickrad " + i.cylinderRadius + " | tracerad " + i.traceRadius + " | ribbonthick " + i.ribbonthickness + " | proteinwidth " + i.helixSheetWidth + " | nucleotidewidth " + i.nucleicAcidWidth + " | ballscale " + i.dotSphereScale, !0),
    i.draw()
}
,
iCn3DUI.prototype.updateSurfPara = function(e) {
    var t = this.icn3d;
    t.phisurftype = $("#" + this.pre + e + "surftype").val(),
    t.phisurfop = $("#" + this.pre + e + "surfop").val(),
    t.phisurfwf = $("#" + this.pre + e + "surfwf").val()
}
,
iCn3DUI.prototype.exportPdb = function() {
    var e = this.icn3d
      , t = "";
    t += this.getPDBHeader();
    var i = e.intHash(e.dAtoms, e.hAtoms);
    t += this.getAtomPDB(i, void 0, !0);
    var n = this.inputid ? this.inputid : "custom";
    this.saveFile(n + "_icn3d.pdb", "text", [t])
}
,
iCn3DUI.prototype.exportPqr = function() {
    var n = this
      , e = n.icn3d
      , t = {}
      , i = {}
      , r = e.intHash(e.dAtoms, e.hAtoms);
    for (var s in r) {
        e.atoms[s];
        e.ions.hasOwnProperty(s) ? t[s] = 1 : i[s] = 1
    }
    if (n.cfg.cid) {
        var o = "";
        o += n.getPDBHeader(),
        o += n.getAtomPDB(i, !0) + n.getAtomPDB(t, !0);
        var a = n.inputid ? n.inputid : "custom";
        n.saveFile(a + "_icn3d.pqr", "text", [o])
    } else {
        if (e.isCalphaPhosOnly(e.hash2Atoms(i)))
            return void alert("The potential will not be shown because the side chains are missing in the structure...");
        var l = "";
        l += n.getPDBHeader(),
        l += n.getAtomPDB(i),
        l += n.getAtomPDB(t, !0);
        var d = n.cfg.cid ? n.cfg.cid : Object.keys(e.structures).toString();
        $.ajax({
            url: "https://www.ncbi.nlm.nih.gov/Structure/delphi/delphi.fcgi",
            type: "POST",
            data: {
                pdb2pqr: l,
                pdbid: d
            },
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 0,
            beforeSend: function() {
                n.showLoading()
            },
            complete: function() {
                n.hideLoading()
            },
            success: function(e) {
                var t = e
                  , i = n.inputid ? n.inputid : "custom";
                n.saveFile(i + "_icn3d_residues.pqr", "text", [t])
            },
            error: function(e, t, i) {
                this.tryCount++,
                this.tryCount <= this.retryLimit && $.ajax(this)
            }
        })
    }
}
,
iCn3DUI.prototype.openDlg = function(e, t) {
    this.icn3d;
    e = this.pre + e,
    this.cfg.notebook ? this.openDlgNotebook(e, t) : this.openDlgRegular(e, t),
    this.themecolor || (this.themecolor = "blue"),
    this.setTheme(this.themecolor)
}
,
iCn3DUI.prototype.addSaveButton = function(e) {
    this.icn3d;
    void 0 !== this.dialogHashSave && this.dialogHashSave.hasOwnProperty(e) || ($("#" + e).parent().children(".ui-dialog-titlebar").append("<span pid='" + e + "' class='icn3d-saveicon ui-icon ui-icon-disk' title='Save as an HTML file'></span>"),
    void 0 === this.dialogHashSave && (this.dialogHashSave = {}),
    this.dialogHashSave[e] = 1)
}
,
iCn3DUI.prototype.addHideButton = function(e) {
    this.icn3d;
    void 0 !== this.dialogHashHide && this.dialogHashHide.hasOwnProperty(e) || ($("#" + e).parent().children(".ui-dialog-titlebar").append("<span pid='" + e + "' class='icn3d-hideicon ui-icon ui-icon-arrowthick-2-ne-sw' title='Resize the window'></span>"),
    void 0 === this.dialogHashHide && (this.dialogHashHide = {}),
    this.dialogHashHide[e] = 1)
}
,
iCn3DUI.prototype.getDialogStatus = function() {
    var e = this
      , t = (e.icn3d,
    {})
      , i = $("#" + e.pre + "dl_selectannotations").hasClass("ui-dialog-content")
      , n = $("#" + e.pre + "dl_graph").hasClass("ui-dialog-content")
      , r = $("#" + e.pre + "dl_linegraph").hasClass("ui-dialog-content")
      , s = $("#" + e.pre + "dl_scatterplot").hasClass("ui-dialog-content")
      , o = $("#" + e.pre + "dl_interactionsorted").hasClass("ui-dialog-content")
      , a = $("#" + e.pre + "dl_alignment").hasClass("ui-dialog-content")
      , l = $("#" + e.pre + "dl_2ddgm").hasClass("ui-dialog-content")
      , d = $("#" + e.pre + "dl_definedsets").hasClass("ui-dialog-content");
    return t.bSelectannotationsInit2 = !1,
    t.bGraph2 = !1,
    t.bLineGraph2 = !1,
    t.bScatterplot2 = !1,
    t.bTable2 = !1,
    t.bAlignmentInit2 = !1,
    t.bTwoddgmInit2 = !1,
    t.bSetsInit2 = !1,
    i && (t.bSelectannotationsInit2 = $("#" + e.pre + "dl_selectannotations").dialog("isOpen")),
    n && (t.bGraph2 = $("#" + e.pre + "dl_graph").dialog("isOpen")),
    r && (t.bLineGraph2 = $("#" + e.pre + "dl_linegraph").dialog("isOpen")),
    s && (t.bScatterplot2 = $("#" + e.pre + "dl_scatterplot").dialog("isOpen")),
    o && (t.bTable2 = $("#" + e.pre + "dl_interactionsorted").dialog("isOpen")),
    a && (t.bAlignmentInit2 = $("#" + e.pre + "dl_alignment").dialog("isOpen")),
    l && (t.bTwoddgmInit2 = $("#" + e.pre + "dl_2ddgm").dialog("isOpen")),
    d && (t.bSetsInit2 = $("#" + e.pre + "dl_definedsets").dialog("isOpen")),
    t
}
,
iCn3DUI.prototype.openDlgHalfWindow = function(s, e, t, i) {
    var n, o = this;
    o.icn3d;
    o.resizeCanvas(o.WIDTH - t, o.HEIGHT, i),
    height = o.HEIGHT,
    width = t,
    n = !o.cfg.showmenu || o.isMobile() || o.cfg.mobilemenu ? {
        my: "left top",
        at: "right top",
        of: "#" + o.pre + "viewer",
        collision: "none"
    } : {
        my: "left top",
        at: "right top+40",
        of: "#" + o.pre + "viewer",
        collision: "none"
    },
    o.cfg.resize = !1,
    window.dialog = $("#" + s).dialog({
        autoOpen: !0,
        title: e,
        height: height,
        width: width,
        modal: !1,
        position: n,
        close: function(e) {
            var t = o.getDialogStatus();
            if (!((s !== o.pre + "dl_selectannotations" || t.bAlignmentInit2 || t.bGraph2 || t.bTable2 || t.bLineGraph2 || t.bScatterplot2) && (s !== o.pre + "dl_graph" || t.bSelectannotationsInit2 || t.bAlignmentInit2 || t.bTable2 || t.bLineGraph2 || t.bScatterplot2) && (s !== o.pre + "dl_alignment" || t.bSelectannotationsInit2 || t.bGraph2 || t.bTable2 || t.bLineGraph2 || t.bScatterplot2) && (s !== o.pre + "dl_interactionsorted" || t.bSelectannotationsInit2 || t.bGraph2 || t.bAlignmentInit2 || t.bLineGraph2 || t.bScatterplot2) && (s !== o.pre + "dl_linegraph" || t.bSelectannotationsInit2 || t.bGraph2 || t.bAlignmentInit2 || t.bTable2 || t.bScatterplot2) && (s !== o.pre + "dl_scatterplot" || t.bSelectannotationsInit2 || t.bGraph2 || t.bAlignmentInit2 || t.bTable2 || t.bLineGraph2)))
                if (t.bTwoddgmInit2 || t.bSetsInit2) {
                    var i = o.isMobile() ? o.WIDTH : o.WIDTH - 170;
                    o.resizeCanvas(i, o.HEIGHT, !0),
                    t.bTwoddgmInit2 && o.openDlg2Ddgm(o.pre + "dl_2ddgm", void 0, t.bSetsInit2),
                    t.bSetsInit2 && o.openDlg2Ddgm(o.pre + "dl_definedsets")
                } else
                    o.resizeCanvas(o.WIDTH, o.HEIGHT, !0)
        },
        resize: function(e) {
            if (s == o.pre + "dl_selectannotations")
                o.hideFixedTitle();
            else if (s == o.pre + "dl_graph") {
                var t = $("#" + s).width()
                  , i = $("#" + s).height();
                d3.select("#" + o.svgid).attr("width", t).attr("height", i)
            } else if (s == o.pre + "dl_linegraph" || s == o.pre + "dl_scatterplot") {
                var n = status.bTwoddgmInit2 || status.bSetsInit2 ? (o.WIDTH - 170) / 2 : o.WIDTH / 2
                  , r = $("#" + s).width() / n;
                if (s == o.pre + "dl_linegraph") {
                    t = o.linegraphWidth * r;
                    $("#" + o.linegraphid).attr("width", t)
                } else if (s == o.pre + "dl_scatterplot") {
                    t = o.scatterplotWidth * r;
                    $("#" + o.scatterplotid).attr("width", t)
                }
            }
        }
    }),
    o.addSaveButton(s),
    o.addHideButton(s)
}
,
iCn3DUI.prototype.openDlg2Ddgm = function(e, t, i) {
    var n, r, s = this;
    s.icn3d;
    e === s.pre + "dl_definedsets" ? (n = "right top",
    r = "Select sets") : e === s.pre + "dl_2ddgm" && (n = i ? "right top+240" : "right top",
    r = "2D Diagram");
    var o = {
        my: "left top+" + s.MENU_HEIGHT,
        at: n,
        of: "#" + s.pre + "viewer",
        collision: "none"
    };
    window.dialog = $("#" + e).dialog({
        autoOpen: !0,
        title: r,
        height: "auto",
        width: 170,
        modal: !1,
        position: o,
        close: function(e) {
            var t = s.getDialogStatus();
            t.bSelectannotationsInit2 || t.bGraph2 || t.bLineGraph2 || t.bScatterplot2 || t.bTable2 || t.bAlignmentInit2 || s.resizeCanvas(s.WIDTH, s.HEIGHT, !0)
        }
    }),
    s.addSaveButton(e),
    s.addHideButton(e)
}
,
iCn3DUI.prototype.openDlgRegular = function(s, e) {
    var o = this
      , t = (o.icn3d,
    400)
      , i = 150
      , a = o.getDialogStatus();
    if (s === o.pre + "dl_selectannotations" || s === o.pre + "dl_graph" || s === o.pre + "dl_linegraph" || s === o.pre + "dl_scatterplot" || s === o.pre + "dl_interactionsorted" || s === o.pre + "dl_alignment") {
        var n = .5 * o.WIDTH - 85;
        if (o.WIDTH >= o.HEIGHT)
            o.openDlgHalfWindow(s, e, n, !0),
            (a.bTwoddgmInit2 || a.bSetsInit2) && (o.resizeCanvas(o.WIDTH - n - 170, o.HEIGHT, !0),
            a.bTwoddgmInit2 && o.openDlg2Ddgm(o.pre + "dl_2ddgm", void 0, a.bSetsInit2),
            a.bSetsInit2 && o.openDlg2Ddgm(o.pre + "dl_definedsets"));
        else {
            o.resizeCanvas(o.WIDTH, .5 * o.HEIGHT, !0),
            i = .5 * o.HEIGHT,
            t = o.WIDTH;
            var r = {
                my: "left top",
                at: "left bottom+32",
                of: "#" + o.pre + "canvas",
                collision: "none"
            };
            window.dialog = $("#" + s).dialog({
                autoOpen: !0,
                title: e,
                height: i,
                width: t,
                modal: !1,
                position: r,
                close: function(e) {
                    if (!((s !== o.pre + "dl_selectannotations" || a.bAlignmentInit2 || a.bGraph2 || a.bTable2 || a.bLineGraph2 || a.bScatterplot2) && (s !== o.pre + "dl_graph" || a.bSelectannotationsInit2 || a.bAlignmentInit2 || a.bTable2 || a.bLineGraph2 || a.bScatterplot2) && (s !== o.pre + "dl_alignment" || a.bSelectannotationsInit2 || a.bGraph2 || a.bTable2 || a.bLineGraph2 || a.bScatterplot2) && (s !== o.pre + "dl_interactionsorted" || a.bSelectannotationsInit2 || a.bGraph2 || a.bAlignmentInit2 || a.bLineGraph2 || a.bScatterplot2) && (s !== o.pre + "dl_linegraph" || a.bSelectannotationsInit2 || a.bGraph2 || a.bAlignmentInit2 || a.bTable2 || a.bScatterplot2) && (s !== o.pre + "dl_scatterplot" || a.bSelectannotationsInit2 || a.bGraph2 || a.bAlignmentInit2 || a.bTable2 || a.bLineGraph2)))
                        if (a.bTwoddgmInit2 || a.bSetsInit2) {
                            var t = o.isMobile() ? o.WIDTH : o.WIDTH - 170;
                            o.resizeCanvas(t, o.HEIGHT, !0),
                            a.bTwoddgmInit2 && o.openDlg2Ddgm(o.pre + "dl_2ddgm", void 0, a.bSetsInit2),
                            a.bSetsInit2 && o.openDlg2Ddgm(o.pre + "dl_definedsets")
                        } else
                            o.resizeCanvas(o.WIDTH, o.HEIGHT, !0)
                },
                resize: function(e) {
                    if (s == o.pre + "dl_selectannotations")
                        o.hideFixedTitle();
                    else if (s == o.pre + "dl_graph") {
                        var t = $("#" + s).width()
                          , i = $("#" + s).height();
                        d3.select("#" + o.svgid).attr("width", t).attr("height", i)
                    } else if (s == o.pre + "dl_linegraph" || s == o.pre + "dl_scatterplot") {
                        var n = a.bTwoddgmInit2 || a.bSetsInit2 ? (o.WIDTH - 170) / 2 : o.WIDTH / 2
                          , r = $("#" + s).width() / n;
                        if (s == o.pre + "dl_linegraph") {
                            t = o.linegraphWidth * r;
                            $("#" + o.linegraphid).attr("width", t)
                        } else if (s == o.pre + "dl_scatterplot") {
                            t = o.scatterplotWidth * r;
                            $("#" + o.scatterplotid).attr("width", t)
                        }
                    }
                }
            }),
            o.addSaveButton(s),
            o.addHideButton(s)
        }
    } else if (s === o.pre + "dl_2ddgm") {
        var l = 0;
        if (o.WIDTH >= o.HEIGHT)
            (a.bSelectannotationsInit2 || a.bGraph2 || a.bLineGraph2 || a.bScatterplot2 || a.bTable2 || a.bAlignmentInit2) && (l = .5 * o.WIDTH - 85),
            o.resizeCanvas(o.WIDTH - l - 170, o.HEIGHT, !0),
            o.openDlg2Ddgm(s, void 0, a.bSetsInit2);
        else {
            var d = o.isMobile() ? o.WIDTH : o.WIDTH - 170;
            o.resizeCanvas(d, .5 * o.HEIGHT, !0),
            o.openDlg2Ddgm(s, .5 * o.HEIGHT),
            o.openDlg2Ddgm(s, .5 * o.HEIGHT, a.bSetsInit2)
        }
    } else {
        if (t = i = "auto",
        s === o.pre + "dl_addtrack" && (t = "50%"),
        s === o.pre + "dl_definedsets") {
            l = 0;
            if (o.WIDTH >= o.HEIGHT)
                (a.bSelectannotationsInit2 || a.bGraph2 || a.bLineGraph2 || a.bScatterplot2 || a.bTable2 || a.bAlignmentInit2) && (l = .5 * o.WIDTH - 85),
                o.resizeCanvas(o.WIDTH - l - 170, o.HEIGHT, !0),
                o.openDlg2Ddgm(s),
                a.bTwoddgmInit2 && o.openDlg2Ddgm(o.pre + "dl_2ddgm", void 0, !0);
            else {
                d = o.isMobile() ? o.WIDTH : o.WIDTH - 170;
                o.resizeCanvas(d, .5 * o.HEIGHT, !0),
                o.openDlg2Ddgm(s, .5 * o.HEIGHT),
                a.bTwoddgmInit2 && o.openDlg2Ddgm(o.pre + "dl_2ddgm", .5 * o.HEIGHT, !0)
            }
        } else
            o.isMobile() ? r = {
                my: "left top",
                at: "left bottom-50",
                of: "#" + o.pre + "canvas",
                collision: "none"
            } : s === o.pre + "dl_allinteraction" || s === o.pre + "dl_buriedarea" ? (r = {
                my: "right top",
                at: "right top+50",
                of: "#" + o.divid,
                collision: "none"
            },
            t = 700,
            i = 500) : r = s === o.pre + "dl_rmsd" ? {
                my: "left top",
                at: "right bottom-90",
                of: "#" + o.pre + "canvas",
                collision: "none"
            } : s === o.pre + "dl_symd" ? {
                my: "left top",
                at: "right-200 bottom-200",
                of: "#" + o.pre + "canvas",
                collision: "none"
            } : o.cfg.align ? {
                my: "left top",
                at: "left top+90",
                of: "#" + o.pre + "canvas",
                collision: "none"
            } : {
                my: "left top",
                at: "left top+50",
                of: "#" + o.pre + "canvas",
                collision: "none"
            },
            window.dialog = $("#" + s).dialog({
                autoOpen: !0,
                title: e,
                height: i,
                width: t,
                modal: !1,
                position: r
            }),
            o.addSaveButton(s),
            o.addHideButton(s)
    }
    $(".ui-dialog .ui-button span").removeClass("ui-icon-closethick").addClass("ui-icon-close")
}
,
iCn3DUI.prototype.openDlgNotebook = function(s, e) {
    var o = this
      , t = o.icn3d
      , i = 400
      , n = 150;
    s === o.pre + "dl_selectannotations" || s === o.pre + "dl_graph" || s === o.pre + "dl_linegraph" || s === o.pre + "dl_scatterplot" || s === o.pre + "dl_interactionsorted" || s === o.pre + "dl_alignment" ? ($("#" + s).show(),
    n = .5 * o.HEIGHT,
    i = o.WIDTH,
    $("#" + s).width(i),
    $("#" + s).height(n),
    $("#" + s).resize(function(e) {
        if (s == o.pre + "dl_selectannotations")
            o.hideFixedTitle();
        else if (s == o.pre + "dl_graph") {
            var t = $("#" + s).width()
              , i = $("#" + s).height();
            d3.select("#" + o.svgid).attr("width", t).attr("height", i)
        } else if (s == o.pre + "dl_linegraph") {
            var n = o.WIDTH / 2
              , r = $("#" + s).width() / n;
            t = o.linegraphWidth * r;
            $("#" + o.linegraphid).attr("width", t)
        } else if (s == o.pre + "dl_scatterplot") {
            n = o.WIDTH / 2,
            r = $("#" + s).width() / n,
            t = o.scatterplotWidth * r;
            $("#" + o.scatterplotid).attr("width", t)
        }
    })) : (t.bRender && $("#" + s).show(),
    i = n = "auto",
    s === o.pre + "dl_addtrack" ? i = "50%" : s === o.pre + "dl_2ddgm" || s === o.pre + "dl_definedsets" ? i = 170 : s !== o.pre + "dl_allinteraction" && s !== o.pre + "dl_buriedarea" || (i = 700,
    n = 500),
    $("#" + s).width(i),
    $("#" + s).height(n))
}
,
iCn3DUI.prototype.draw2Ddgm = function(e, t, i, n) {
    var r = this
      , s = r.icn3d;
    t = t.substr(0, 4);
    var o = {}
      , a = {}
      , l = {}
      , d = {}
      , c = {};
    if (void 0 === e)
        return "";
    for (var h in e.moleculeInfor) {
        var p = "#" + ("000000" + e.moleculeInfor[h].color.toString(16)).slice(-6)
          , m = e.moleculeInfor[h].chain.trim();
        void 0 === c[m] ? c[m] = 1 : ++c[m];
        var u = 1 === c[m] ? m : m + c[m].toString()
          , f = t + "_" + u;
        void 0 !== r.mmdbid_q && r.mmdbid_q === r.mmdbid_t && 0 === i && (f = t + r.postfix + "_" + u),
        o[h] = f,
        a[h] = p,
        l[h] = e.moleculeInfor[h].name,
        d[f] = h
    }
    if (void 0 === n || !n)
        for (var g = 0, v = e.intracResidues.length; g < v; ++g) {
            var b = e.intracResidues[g]
              , y = 0;
            for (var h in b) {
                f = o[h],
                0 === y ? be = f : ye = f,
                ++y
            }
            if (void 0 !== be && void 0 !== ye)
                for (var h in y = 0,
                b) {
                    var C, _, S = b[h];
                    _ = 0 === y ? (C = be,
                    ye) : (C = ye,
                    be),
                    void 0 === r.chainids2resids[C] && (r.chainids2resids[C] = {}),
                    void 0 === r.chainids2resids[C][_] && (r.chainids2resids[C][_] = []);
                    for (var w = 0, A = S.length; w < A; ++w) {
                        var x = S[w]
                          , k = r.mmdbMolidResid2mmdbChainResi[t.toUpperCase() + "_" + h + "_" + x];
                        r.chainids2resids[C][_].push(k)
                    }
                    void 0 === r.chainname2residues && (r.chainname2residues = {}),
                    ye = _;
                    var D, O = s.getFirstCalphaAtomObj(s.chains[ye]);
                    s.chemicals.hasOwnProperty(O.serial) ? D = "chemical" : s.nucleotides.hasOwnProperty(O.serial) ? D = "nucleotide" : s.ions.hasOwnProperty(O.serial) ? D = "ion" : s.proteins.hasOwnProperty(O.serial) ? D = "protein" : s.water.hasOwnProperty(O.serial) && (D = "water");
                    var R = ye.substr(ye.indexOf("_") + 1) + " (" + D + ")";
                    void 0 === r.chainname2residues[C] && (r.chainname2residues[C] = {}),
                    r.chainname2residues[C][R] = r.chainids2resids[C][_],
                    ++y
                }
        }
    var T = "<div id='#" + r.pre + t + "'>";
    T += "<b>" + t.toUpperCase() + "</b><br/>",
    T += "<svg viewBox='0,0,150,150'>";
    var E = {}
      , I = []
      , H = ""
      , L = ""
      , P = {};
    if (n)
        for (var g in s.dAtoms) {
            P[h = d[f = (ce = s.atoms[g]).structure + "_" + ce.chain]] = 1
        }
    var F = Object.keys(e.moleculeInfor)
      , M = Object.keys(e.intrac)
      , N = [];
    for (g = 0,
    v = F.length; g < v; ++g)
        -1 === M.indexOf(F[g]) && N.push(F[g]);
    var z = {};
    if (0 < N.length)
        for (var h in e.intrac) {
            for (g = 0,
            v = (J = e.intrac[h]).intrac.length; g < v; ++g) {
                var q = J.intrac[g].toString();
                -1 !== N.indexOf(q) && (void 0 === z[q] && (z[q] = []),
                z[q].push(h),
                I.push([q, h]))
            }
            if ("rect" === J.shape) {
                var j = .5 * J.coords[0]
                  , U = .5 * J.coords[1]
                  , B = .5 * J.coords[2] - j
                  , G = .5 * J.coords[3] - U;
                E[h] = [j + B / 2, U + G / 2]
            } else if ("circle" === J.shape) {
                j = .5 * J.coords[0],
                U = .5 * J.coords[1],
                J.coords[2];
                E[h] = [j, U]
            } else if ("poly" === J.shape) {
                var V = .5 * J.coords[0]
                  , W = (J.coords[1],
                .5 * J.coords[2])
                  , Y = .5 * J.coords[3]
                  , X = .5 * J.coords[4]
                  , Q = .5 * J.coords[5];
                J.coords[6],
                J.coords[7],
                j = V,
                U = Y;
                E[h] = [V, Y]
            }
        }
    for (var Z = 0, K = (y = 0,
    F.length); y < K; ++y) {
        f = o[h = F[y]];
        if (!n || P.hasOwnProperty(h)) {
            var J = e.intrac[h]
              , ee = (p = "#FFFFFF",
            a[h]);
            if (void 0 !== f) {
                var te = Object.keys(s.chains[f]);
                0 < te.length && (ee = "#" + s.atoms[te[0]].color.getHexString().toUpperCase())
            }
            var ie = "";
            s.bInitial && (void 0 !== i && 0 === i ? ee = void 0 !== r.alignmolid2color && r.alignmolid2color[0].hasOwnProperty(h) ? (ie = r.alignmolid2color[0][h],
            "#FF0000") : "#FFFFFF" : void 0 !== i && 1 === i && (ee = void 0 !== r.alignmolid2color && r.alignmolid2color[1].hasOwnProperty(h) ? (ie = r.alignmolid2color[1][h],
            "#FF0000") : "#FFFFFF"));
            var ne = l[h]
              , re = " "
              , se = " ";
            if (void 0 !== f) {
                var oe = f.indexOf("_");
                re = 1 < (se = f.substr(oe + 1)).length ? se.substr(0, 1) + ".." : se
            } else
                f = "Misc";
            void 0 === ee && (ee = "#FFFFFF");
            var ae = 1;
            if (s.bInitial && void 0 !== s.alnChains[f]) {
                var le = 0;
                for (var g in s.alnChains[f]) {
                    var de = s.atoms[g].color.getHexString().toUpperCase();
                    "FF0000" !== de && "00FF00" !== de || ++le
                }
                ae = le / Object.keys(s.chains[f]).length
            }
            if (ae < .2 && (ae = .2),
            -1 === N.indexOf(h)) {
                for (g = 0,
                v = J.intrac.length; g < v; ++g)
                    parseInt(h) < parseInt(J.intrac[g]) && I.push([h, J.intrac[g]]);
                if ("rect" === J.shape) {
                    j = .5 * J.coords[0],
                    U = .5 * J.coords[1],
                    B = .5 * J.coords[2] - j,
                    G = .5 * J.coords[3] - U;
                    H += r.draw2DNucleotide(j + .5 * B, U + .5 * G, f, se, re, ne, ie, p, ee, .5, ae),
                    E[h] = [j + B / 2, U + G / 2]
                } else if ("circle" === J.shape) {
                    j = .5 * J.coords[0],
                    U = .5 * J.coords[1];
                    H += r.draw2DProtein(j, U, f, se, re, ne, ie, p, ee, .5, ae),
                    E[h] = [j, U]
                } else if ("poly" === J.shape) {
                    V = .5 * J.coords[0],
                    J.coords[1],
                    W = .5 * J.coords[2],
                    Y = .5 * J.coords[3],
                    X = .5 * J.coords[4],
                    Q = .5 * J.coords[5],
                    J.coords[6],
                    J.coords[7],
                    j = V,
                    U = Y;
                    var ce = s.getFirstAtomObj(s.chains[f]);
                    L += r.draw2DChemical(j, U, f, se, re, ne, ie, p, ee, .5, ae),
                    E[h] = [V, Y]
                }
            } else {
                var he, pe;
                if (void 0 !== z[h] && 1 < z[h].length) {
                    var me = 0
                      , ue = 0;
                    for (w = 0,
                    A = z[h].length; w < A; ++w) {
                        q = z[h][w];
                        if (E.hasOwnProperty(q)) {
                            var fe = E[q];
                            me += fe[0],
                            ue += fe[1]
                        }
                    }
                    he = me / z[h].length,
                    pe = ue / z[h].length
                } else {
                    pe = Z < 5 ? (he = 50 * (Z + 1) * .5,
                    15) : Z - 5 < 5 ? (he = 15,
                    50 * (Z - 5 + 1) * .5) : he = 37.5,
                    ++Z
                }
                j = he,
                U = pe,
                ce = s.getFirstAtomObj(s.chains[f]);
                L += r.draw2DChemical(j, U, f, se, re, ne, ie, p, ee, .5, ae, !0),
                E[h] = [j, U]
            }
        }
    }
    for (g = 0,
    v = I.length; g < v; ++g) {
        b = I[g];
        if (!n || P.hasOwnProperty(b[0]) && P.hasOwnProperty(b[1])) {
            var ge = E[parseInt(b[0])]
              , ve = E[parseInt(b[1])];
            if (void 0 !== ge && void 0 !== ve) {
                var be, ye;
                be = o[b[0]],
                ye = o[b[1]];
                var Ce = be.indexOf("_")
                  , _e = ye.indexOf("_")
                  , Se = be.substr(Ce + 1)
                  , we = ye.substr(_e + 1)
                  , Ae = (W = ge[0],
                Y = ge[1],
                .5 * (W + (X = ve[0])))
                  , xe = .5 * (Y + (Q = ve[1]));
                T += "<g class='icn3d-interaction' chainid1='" + be + "' chainid2='" + ye + "' >",
                T += "<title>Interaction of chain " + Se + " with chain " + we + "</title>",
                T += "<line x1='" + W + "' y1='" + Y + "' x2='" + Ae + "' y2='" + xe + "' stroke='#000000' stroke-width='2' /></g>",
                T += "<g class='icn3d-interaction' chainid1='" + ye + "' chainid2='" + be + "' >",
                T += "<title>Interaction of chain " + we + " with chain " + Se + "</title>",
                T += "<line x1='" + Ae + "' y1='" + xe + "' x2='" + X + "' y2='" + Q + "' stroke='#000000' stroke-width='2' /></g>"
            }
        }
    }
    return T += L + H,
    T += "</svg>",
    T += "</div>",
    r.html2ddgm += T,
    $("#" + r.pre + "dl_2ddgm").html(r.html2ddgm),
    T
}
,
iCn3DUI.prototype.set2DdgmNote = function(e) {
    this.icn3d;
    var t = "<div style='width:150px'><b>Nodes</b>:<br>";
    return this.isMac() ? (t += "<span style='margin-right:18px;'>&#9711;</span>Protein<br>",
    t += "<span style='margin-right:18px;'>&#9634;</span>Nucleotide<br>",
    t += "<span style='margin-right:18px;'>&#9826;</span>Chemical<br>") : (t += "<span style='margin-right:18px;'>O</span>Protein<br>",
    t += "<span style='margin-right:18px;'>&#9634;</span>Nucleotide<br>",
    t += "<span style='margin-right:18px;'>&#9671;</span>Chemical<br>"),
    t += "<span style='margin-right:18px;display: inline-block;transform: skew(-25deg);'>&#9634;</span>Biopolymer<br>",
    t += "<br><b>Lines</b>:<br> Interactions at 4 &#197;<br>",
    e && (t += "<b>Numbers in red</b>:<br> Aligned chains"),
    t += "</div><br/>"
}
,
iCn3DUI.prototype.highlightNode = function(e, t, i, n) {
    this.icn3d;
    n < .2 && (n = .2);
    if ("rect" === e) {
        $(t).attr("stroke", this.ORANGE),
        $(t).attr("stroke-width", 3);
        var r = Number($(i).attr("x"))
          , s = Number($(i).attr("y"))
          , o = Number($(i).attr("width"))
          , a = Number($(i).attr("height"));
        $(t).attr("x", r + o / 2 * (1 - n)),
        $(t).attr("y", s + a / 2 * (1 - n)),
        $(t).attr("width", o * n),
        $(t).attr("height", a * n)
    } else if ("circle" === e)
        $(t).attr("stroke", this.ORANGE),
        $(t).attr("stroke-width", 3),
        $(t).attr("r", Number($(i).attr("r")) * n);
    else if ("polygon" === e) {
        $(t).attr("stroke", this.ORANGE),
        $(t).attr("stroke-width", 3);
        r = Number($(i).attr("x")),
        s = Number($(i).attr("y"));
        var l = Number($(i).attr("x0d"))
          , d = Number($(i).attr("y0d"))
          , c = Number($(i).attr("x1d"))
          , h = Number($(i).attr("y1d"))
          , p = Number($(i).attr("x2d"))
          , m = Number($(i).attr("y2d"))
          , u = Number($(i).attr("x3d"))
          , f = Number($(i).attr("y3d"));
        $(t).attr("points", (r + l * n).toString() + ", " + (s + d * n).toString() + ", " + (r + c * n).toString() + ", " + (s + h * n).toString() + ", " + (r + p * n).toString() + ", " + (s + m * n).toString() + ", " + (r + u * n).toString() + ", " + (s + f * n).toString())
    }
}
,
iCn3DUI.prototype.removeLineGraphSelection = function() {
    this.icn3d;
    $("#" + this.pre + "dl_linegraph circle").attr("stroke", "#000000"),
    $("#" + this.pre + "dl_linegraph circle").attr("stroke-width", 1),
    $("#" + this.pre + "dl_linegraph svg line.icn3d-hlline").attr("stroke", "#FFF")
}
,
iCn3DUI.prototype.removeScatterplotSelection = function() {
    this.icn3d;
    $("#" + this.pre + "dl_scatterplot circle").attr("stroke", "#000000"),
    $("#" + this.pre + "dl_scatterplot circle").attr("stroke-width", 1),
    $("#" + this.pre + "dl_scatterplot rect").attr("stroke", "#000000"),
    $("#" + this.pre + "dl_scatterplot rect").attr("stroke-width", 1)
}
,
iCn3DUI.prototype.click2Ddgm = function() {
    var a = this;
    $("#" + a.pre + "dl_2ddgm").on("click", ".icn3d-node", function(e) {
        var t = a.icn3d;
        e.stopImmediatePropagation(),
        Object.keys(t.hAtoms).length < Object.keys(t.atoms).length && a.setMode("selection");
        var i = $(this).attr("chainid");
        t.bCtrl || t.bShift || (a.removeSelection(),
        a.lineArray2d = []);
        var n = 1;
        void 0 !== t.alnChains[i] && (n = Object.keys(t.alnChains[i]).length / Object.keys(t.chains[i]).length);
        var r = $(this).find("rect[class='icn3d-hlnode']")
          , s = $(this).find("rect[class='icn3d-basenode']");
        a.highlightNode("rect", r, s, n),
        r = $(this).find("circle[class='icn3d-hlnode']"),
        s = $(this).find("circle[class='icn3d-basenode']"),
        a.highlightNode("circle", r, s, n),
        r = $(this).find("polygon[class='icn3d-hlnode']"),
        s = $(this).find("polygon[class='icn3d-basenode']"),
        a.highlightNode("polygon", r, s, n),
        t.bCtrl || t.bShift ? t.hAtoms = t.unionHash(t.hAtoms, t.chains[i]) : t.hAtoms = t.cloneHash(t.chains[i]),
        t.bCtrl || t.bShift ? (void 0 === a.chainArray2d && (a.chainArray2d = []),
        a.chainArray2d.push(i)) : a.chainArray2d = [i],
        a.updateHlAll(a.chainArray2d),
        a.showAnnoSelectedChains();
        var o = "select chain " + i;
        a.setLogCmd(o, !0),
        a.bSelectResidue = !1
    }),
    $("#" + a.pre + "dl_2ddgm").on("click", ".icn3d-interaction", function(e) {
        var t = a.icn3d;
        e.stopImmediatePropagation(),
        Object.keys(t.hAtoms).length < Object.keys(t.atoms).length && a.setMode("selection"),
        a.bClickInteraction = !0;
        var i = $(this).attr("chainid1")
          , n = $(this).attr("chainid2");
        $(this).find("line").attr("stroke", a.ORANGE),
        a.selectInteraction(i, n),
        a.showAnnoSelectedChains();
        var r = "select interaction " + i + "," + n;
        a.setLogCmd(r, !0),
        a.bClickInteraction = !1
    }),
    $("#" + a.pre + "dl_linegraph").on("click", ".icn3d-node", function(e) {
        var t = a.icn3d;
        e.stopImmediatePropagation(),
        Object.keys(t.hAtoms).length < Object.keys(t.atoms).length && a.setMode("selection");
        var i = $(this).attr("resid");
        t.bCtrl || t.bShift || (t.hAtoms = {},
        a.removeLineGraphSelection());
        $(this).find("circle").attr("stroke", a.ORANGE),
        $(this).find("circle").attr("stroke-width", 2),
        t.hAtoms = t.unionHash(t.hAtoms, t.residues[i]);
        var n = "select " + a.residueids2spec([i]);
        a.updateHlAll(),
        a.setLogCmd(n, !0),
        a.bSelectResidue = !1
    }),
    $("#" + a.pre + "dl_scatterplot").on("click", ".icn3d-node", function(e) {
        var t = a.icn3d;
        e.stopImmediatePropagation(),
        Object.keys(t.hAtoms).length < Object.keys(t.atoms).length && a.setMode("selection");
        var i = $(this).attr("resid");
        t.bCtrl || t.bShift || (t.hAtoms = {},
        a.removeScatterplotSelection());
        $(this).find("circle").attr("stroke", a.ORANGE),
        $(this).find("circle").attr("stroke-width", 2),
        t.hAtoms = t.unionHash(t.hAtoms, t.residues[i]);
        var n = "select " + a.residueids2spec([i]);
        a.updateHlAll(),
        a.setLogCmd(n, !0),
        a.bSelectResidue = !1
    }),
    $("#" + a.pre + "dl_linegraph").on("click", ".icn3d-interaction", function(e) {
        var t = a.icn3d;
        e.stopImmediatePropagation(),
        Object.keys(t.hAtoms).length < Object.keys(t.atoms).length && a.setMode("selection");
        var i = $(this).attr("resid1")
          , n = $(this).attr("resid2");
        t.bCtrl || t.bShift || (t.hAtoms = {},
        a.removeLineGraphSelection()),
        $(this).find("line.icn3d-hlline").attr("stroke", a.ORANGE),
        t.hAtoms = t.unionHash(t.hAtoms, t.residues[i]),
        t.hAtoms = t.unionHash(t.hAtoms, t.residues[n]);
        var r = "select " + a.residueids2spec([i, n]);
        a.updateHlAll(),
        a.setLogCmd(r, !0)
    }),
    $("#" + a.pre + "dl_scatterplot").on("click", ".icn3d-interaction", function(e) {
        var t = a.icn3d;
        e.stopImmediatePropagation(),
        Object.keys(t.hAtoms).length < Object.keys(t.atoms).length && a.setMode("selection");
        var i = $(this).attr("resid1")
          , n = $(this).attr("resid2");
        t.bCtrl || t.bShift || (t.hAtoms = {},
        a.removeScatterplotSelection());
        $(this).find("rect").attr("stroke", a.ORANGE),
        $(this).find("rect").attr("stroke-width", 2),
        t.hAtoms = t.unionHash(t.hAtoms, t.residues[i]),
        t.hAtoms = t.unionHash(t.hAtoms, t.residues[n]);
        var r = "select " + a.residueids2spec([i, n]);
        a.updateHlAll(),
        a.setLogCmd(r, !0)
    })
}
,
iCn3DUI.prototype.selectInteraction = function(e, t) {
    var i = this.icn3d;
    this.removeHl2D(),
    i.removeHlObjects(),
    i.bCtrl || i.bShift ? (void 0 === this.lineArray2d && (this.lineArray2d = []),
    this.lineArray2d.push(e),
    this.lineArray2d.push(t)) : this.lineArray2d = [e, t],
    this.selectInteractionAtoms(e, t),
    i.addHlObjects(),
    this.updateHlAll()
}
,
iCn3DUI.prototype.selectInteractionAtoms = function(e, t) {
    var i, n, r = this.icn3d, s = this.chainids2resids[e][t];
    r.bCtrl || r.bShift || (r.hAtoms = {});
    for (var o = 0, a = s.length; o < a; ++o)
        r.hAtoms = r.unionHash(r.hAtoms, r.residues[s[o]]);
    if (1 < Object.keys(r.structures).length)
        i = "inter_" + e + "_" + t;
    else {
        var l = e.indexOf("_")
          , d = t.indexOf("_");
        i = "inter_" + e.substr(l + 1) + "_" + t.substr(d + 1)
    }
    n = "select the atoms in chain " + e + " interacting with chain " + t + " in a distance of 4 angstrom";
    var c = "select interaction " + e + "," + t;
    this.addCustomSelection(s, i, n, c, !0)
}
,
iCn3DUI.prototype.draw2DProtein = function(e, t, i, n, r, s, o, a, l, d, c) {
    this.icn3d;
    var h = 20 * d
      , p = "<g class='icn3d-node' chainid='" + i + "' >";
    return p += "<title>Chain " + n + ": " + s + "</title>",
    p += "<circle class='icn3d-basenode' cx='" + e + "' cy='" + t + "' r='" + h + "' fill='" + a + "' stroke-width='1' stroke='#000000' class='icn3d-node' chainid='" + i + "' />",
    p += "<circle class='icn3d-hlnode' cx='" + e + "' cy='" + t + "' r='" + (h * c).toString() + "' fill='" + l + "' stroke-width='1' stroke='#000000' />",
    p += "<text x='" + (+e).toString() + "' y='" + (t + 4).toString() + "' style='fill:#000000; font-size:10; text-anchor:middle' >" + r + "</text>",
    "" !== o && (p += "<text x='" + (+e).toString() + "' y='" + (t + h + 4 + 6).toString() + "' style='fill:" + l + "; font-size:8; font-weight:bold; text-anchor:middle' >" + o + "</text>"),
    p += "</g>"
}
,
iCn3DUI.prototype.draw2DNucleotide = function(e, t, i, n, r, s, o, a, l, d, c) {
    this.icn3d;
    var h = 30 * d
      , p = 30 * d
      , m = "<g class='icn3d-node' chainid='" + i + "' >";
    return m += "<title>Chain " + n + ": " + s + "</title>",
    m += "<rect class='icn3d-basenode' x='" + (e -= .5 * h) + "' y='" + (t -= .5 * p) + "' width='" + h + "' height='" + p + "' fill='" + a + "' stroke-width='1' stroke='#000000' />",
    m += "<rect class='icn3d-hlnode' x='" + (e + h / 2 * (1 - c)).toString() + "' y='" + (t + p / 2 * (1 - c)).toString() + "' width='" + (h * c).toString() + "' height='" + (p * c).toString() + "' fill='" + l + "' stroke-width='1' stroke='#000000' />",
    m += "<text x='" + (+(e + h / 2)).toString() + "' y='" + (t + p / 2 + 4).toString() + "' style='fill:#000000; font-size:10; text-anchor:middle' >" + r + "</text>",
    "" !== o && (m += "<text x='" + (+(e + h / 2)).toString() + "' y='" + (t + p + 4 + 6).toString() + "' style='fill:" + l + "; font-size:8; font-weight:bold; text-anchor:middle' >" + o + "</text>"),
    m += "</g>"
}
,
iCn3DUI.prototype.draw2DChemical = function(e, t, i, n, r, s, o, a, l, d, c, h) {
    this.icn3d;
    var p, m, u, f, g, v, b, y, C, _, S = 30 * d;
    h ? (p = e - (C = .5 * S / Math.sqrt(3)),
    u = e + 3 * C,
    f = m = t - (_ = .5 * S),
    g = e + C,
    b = e - 3 * C,
    y = v = t + _) : (p = e - (C = .5 * S),
    f = (m = t) + (_ = .5 * S),
    g = (u = e) + C,
    b = e,
    y = (v = t) - _);
    var w = p - e
      , A = m - t
      , x = u - e
      , k = f - t
      , D = g - e
      , O = v - t
      , R = b - e
      , T = y - t
      , E = "<g class='icn3d-node' chainid='" + i + "' >";
    return E += "<title>Chain " + n + ": " + s + "</title>",
    E += "<polygon class='icn3d-basenode' points='" + p + ", " + m + "," + u + ", " + f + "," + g + ", " + v + "," + b + ", " + y + "' x='" + e + "' y='" + t + "' x0d='" + w + "' y0d='" + A + "' x1d='" + x + "' y1d='" + k + "' x2d='" + D + "' y2d='" + O + "' x3d='" + R + "' y3d='" + T + "' fill='" + a + "' stroke-width='1' stroke='#000000' />",
    E += "<polygon class='icn3d-hlnode' points='" + (e + w * c).toString() + ", " + (t + A * c).toString() + "," + (e + x * c).toString() + ", " + (t + k * c).toString() + "," + (e + D * c).toString() + ", " + (t + O * c).toString() + "," + (e + R * c).toString() + ", " + (t + T * c).toString() + "' fill='" + l + "' stroke-width='1' stroke='#000000' />",
    E += "<text x='" + (e + 1).toString() + "' y='" + (t + 2).toString() + "' style='fill:#000000; font-size:8; text-anchor:middle' >" + r + "</text>",
    "" !== o && (E += "<text x='" + (e + 1).toString() + "' y='" + (t + 2 + 6).toString() + "' style='fill:" + l + "; font-size:8; font-weight:bold; text-anchor:middle' >" + o + "</text>"),
    E += "</g>"
}
,
function(K, J) {
    var n, s = "__instance__", o = "firstChild", a = setTimeout;
    function f(e) {
        return void 0 !== e
    }
    function ee(e) {
        return "object" == typeof e
    }
    function l(e) {
        return Object.keys(e).length
    }
    function te(e, t, i) {
        return e < t ? t : i < e ? i : e
    }
    function t(e, t) {
        return parseInt(e, t || 10)
    }
    function p(e) {
        return Math.round(e)
    }
    function ie(e) {
        var t, i, n, r, s, o, a, l, d = +e[0], c = +e[1], h = +e[2];
        switch (o = h * (1 - c),
        a = (a = h * (1 - (s = 6 * d - (r = Math.floor(6 * d))) * c)) || 0,
        l = (l = h * (1 - (1 - s) * c)) || 0,
        (r = r || 0) % 6) {
        case 0:
            t = h,
            i = l,
            n = o;
            break;
        case 1:
            t = a,
            i = h,
            n = o;
            break;
        case 2:
            t = o,
            i = h,
            n = l;
            break;
        case 3:
            t = o,
            i = a,
            n = h;
            break;
        case 4:
            t = l,
            i = o,
            n = h;
            break;
        case 5:
            t = h,
            i = o,
            n = a
        }
        return [p(255 * t), p(255 * i), p(255 * n)]
    }
    function ne(e) {
        return i(ie(e))
    }
    function r(e) {
        var t, i = +e[0], n = +e[1], r = +e[2], s = Math.max(i, n, r), o = Math.min(i, n, r), a = s - o, l = 0 === s ? 0 : a / s, d = s / 255;
        switch (s) {
        case o:
            t = 0;
            break;
        case i:
            t = n - r + a * (n < r ? 6 : 0),
            t /= 6 * a;
            break;
        case n:
            t = r - i + 2 * a,
            t /= 6 * a;
            break;
        case r:
            t = i - n + 4 * a,
            t /= 6 * a
        }
        return [t, l, d]
    }
    function i(e) {
        var t = +e[2] | +e[1] << 8 | +e[0] << 16;
        return (t = "000000" + t.toString(16)).slice(-6)
    }
    function d(e) {
        return r(c(e))
    }
    function c(e) {
        return 3 === e.length && (e = e.replace(/./g, "$&$&")),
        [t(e[0] + e[1], 16), t(e[2] + e[3], 16), t(e[4] + e[5], 16)]
    }
    function h(e) {
        return [e[0] / 360, e[1] / 100, e[2] / 100]
    }
    function m(e) {
        return [p(360 * e[0]), p(100 * e[1]), p(100 * e[2])]
    }
    function e(e) {
        if (ee(e))
            return e;
        var t = /\s*rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)\s*$/i.exec(e)
          , i = /\s*hsv\s*\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*\)\s*$/i.exec(e);
        return "#" === e[0] && e.match(/^#([\da-f]{3}|[\da-f]{6})$/i) ? d(e.slice(1)) : i ? h([+i[1], +i[2], +i[3]]) : t ? r([+t[1], +t[2], +t[3]]) : [0, 1, 1]
    }
    (n = K.CP = function(g, v, b) {
        var y = J.body
          , h = J.documentElement
          , C = this
          , t = K.CP
          , i = !1
          , r = {}
          , _ = J.createElement("div")
          , S = "touchstart mousedown"
          , w = "touchmove mousemove"
          , A = "touchend mouseup"
          , x = "orientationchange resize";
        if (!(C instanceof t))
            return new t(g,v);
        function k(e, t, i) {
            for (var n = 0, r = (e = e.split(/\s+/)).length; n < r; ++n)
                t.addEventListener(e[n], i, !1)
        }
        function D(e, t, i) {
            for (var n = 0, r = (e = e.split(/\s+/)).length; n < r; ++n)
                t.removeEventListener(e[n], i)
        }
        function O(e, t) {
            var i = "touches"
              , n = t[i] ? t[i][0].clientX : t.clientX
              , r = t[i] ? t[i][0].clientY : t.clientY
              , s = p(e);
            return {
                x: n - s.l,
                y: r - s.t
            }
        }
        function p(e) {
            var t, i, n;
            return i = e === K ? (t = K.pageXOffset || h.scrollLeft,
            K.pageYOffset || h.scrollTop) : (t = (n = e.getBoundingClientRect()).left,
            n.top),
            {
                l: t,
                t: i
            }
        }
        function R(e, t) {
            for (; (e = e.parentElement) && e !== t; )
                ;
            return e
        }
        function T(e) {
            e && e.preventDefault()
        }
        function E(e) {
            return e === K ? {
                w: K.innerWidth,
                h: K.innerHeight
            } : {
                w: e.offsetWidth,
                h: e.offsetHeight
            }
        }
        function I(e) {
            return i || !!f(e) && e
        }
        function H(e) {
            i = e
        }
        function L(e, t, i) {
            if (!f(r[e]))
                return C;
            if (f(i))
                f(r[e][i]) && r[e][i].apply(C, t);
            else
                for (var n in r[e])
                    r[e][n].apply(C, t);
            return C
        }
        t[s][g.id || g.name || l(t[s])] = C,
        f(v) && !0 !== v || (v = S),
        H(t.parse(g.getAttribute("data-color") || g.value || [0, 1, 1])),
        _.className = "color-picker",
        _.innerHTML = '<div class="color-picker-control"><span class="color-picker-h"><i></i></span><span class="color-picker-sv"><i></i></span></div>';
        var $, e = _[o].children, P = I([0, 1, 1]), F = e[0], M = e[1], N = F[o], z = M[o], q = 0, j = 0, U = 0, B = 0, m = 0, u = 0, G = 0, V = 0, W = ne(P);
        function Y(e, t) {
            e && "h" !== e || L("change:h", t),
            e && "sv" !== e || L("change:sv", t),
            L("change", t)
        }
        function X() {
            return _.parentNode
        }
        function Q(e, t) {
            e || ((b || t || y).appendChild(_),
            C.visible = !0),
            G = E(_).w,
            V = E(_).h;
            var i = E(M)
              , n = E(z)
              , a = E(F).h
              , l = i.w
              , d = i.h
              , c = E(N).h
              , h = n.w
              , p = n.h;
            if (e) {
                function r(e) {
                    var t = e.target
                      , i = t === g || R(t, g) === g;
                    i ? Q() : C.exit(),
                    L(i ? "enter" : "exit", [C])
                }
                _.style.left = _.style.top = "-9999px",
                !1 !== v && k(v, g, r),
                C.create = function() {
                    return Q(1),
                    L("create", [C]),
                    C
                }
                ,
                C.destroy = function() {
                    return !1 !== v && D(v, g, r),
                    C.exit(),
                    H(!1),
                    L("destroy", [C]),
                    C
                }
            } else
                Z();
            function m(e) {
                ie(P);
                var t = ie([P[0], 1, 1]);
                M.style.backgroundColor = "rgb(" + t.join(",") + ")",
                H(P),
                T(e)
            }
            function s(e) {
                var t, i, n, r, s, o;
                U && (i = te(O(F, t = e).y, 0, a),
                P[0] = (a - i) / a,
                N.style.top = i - c / 2 + "px",
                m(t),
                W = ne(P),
                q || (L("drag:h", [W, C]),
                L("drag", [W, C]),
                Y("h", [W, C]))),
                B && (r = O(M, n = e),
                s = te(r.x, 0, l),
                o = te(r.y, 0, d),
                P[1] = 1 - (l - s) / l,
                P[2] = (d - o) / d,
                z.style.right = l - s - h / 2 + "px",
                z.style.top = o - p / 2 + "px",
                m(n),
                W = ne(P),
                j || (L("drag:sv", [W, C]),
                L("drag", [W, C]),
                Y("sv", [W, C]))),
                j = q = 0
            }
            function o(e) {
                var t = e.target
                  , i = U ? "h" : "sv"
                  , n = [ne(P), C]
                  , r = t === g || R(t, g) === g
                  , s = t === _ || R(t, _) === _;
                r || s ? s && (L("stop:" + i, n),
                L("stop", n),
                Y(i, n)) : X() && !1 !== v && (C.exit(),
                L("exit", [C]),
                Y(0, n)),
                B = U = 0
            }
            function u(e) {
                U = q = 1,
                s(e),
                T(e),
                L("start:h", [W, C]),
                L("start", [W, C]),
                Y("h", [W, C])
            }
            function f(e) {
                B = j = 1,
                s(e),
                T(e),
                L("start:sv", [W, C]),
                L("start", [W, C]),
                Y("sv", [W, C])
            }
            $ = function() {
                P = I(P),
                m(),
                N.style.top = a - c / 2 - a * P[0] + "px",
                z.style.right = l - h / 2 - l * P[1] + "px",
                z.style.top = d - p / 2 - d * P[2] + "px"
            }
            ,
            C.exit = function(e) {
                return X() && (X().removeChild(_),
                C.visible = !1),
                D(S, F, u),
                D(S, M, f),
                D(w, J, s),
                D(A, J, o),
                D(x, K, Z),
                C
            }
            ,
            $(),
            e || (k(S, F, u),
            k(S, M, f),
            k(w, J, s),
            k(A, J, o),
            k(x, K, Z))
        }
        function Z() {
            return C.fit()
        }
        return Q(1),
        a(function() {
            var e = [ne(P), C];
            L("create", e),
            Y(0, e)
        }, 0),
        C.fit = function(e) {
            var t = E(K)
              , i = E(h)
              , n = t.w - i.w
              , r = t.h - h.clientHeight
              , s = p(K)
              , o = p(g);
            if (m = o.l + s.l,
            u = o.t + s.t + E(g).h,
            ee(e))
                f(e[0]) && (m = e[0]),
                f(e[1]) && (u = e[1]);
            else {
                var a = s.l
                  , l = s.t
                  , d = s.l + t.w - G - n
                  , c = s.t + t.h - V - r;
                m = te(m, a, d) >> 0,
                u = te(u, l, c) >> 0
            }
            return _.style.left = m + "px",
            _.style.top = u + "px",
            L("fit", [C]),
            C
        }
        ,
        C.set = function(e) {
            return f(e) ? ("string" == typeof e && (e = t.parse(e)),
            H(e),
            $(),
            C) : I()
        }
        ,
        C.get = function(e) {
            return I(e)
        }
        ,
        C.target = g,
        C.picker = _,
        C.visible = !1,
        C.on = function(e, t, i) {
            return f(e) ? f(t) ? (f(r[e]) || (r[e] = {}),
            f(i) || (i = l(r[e])),
            r[e][i] = t,
            C) : r[e] : r
        }
        ,
        C.off = function(e, t) {
            return f(e) ? f(t) ? delete r[e][t] : r[e] = {} : r = {},
            C
        }
        ,
        C.fire = L,
        C.hooks = r,
        C.enter = function(e) {
            return Q(0, e)
        }
        ,
        C
    }
    ).version = "1.3.9",
    n[s] = {},
    n.each = function(i, e) {
        return a(function() {
            var e, t = n[s];
            for (e in t)
                i(t[e], e, t)
        }, 0 === e ? 0 : e || 1),
        n
    }
    ,
    n.parse = e,
    n._HSV2RGB = ie,
    n._HSV2HEX = ne,
    n._RGB2HSV = r,
    n._HEX2HSV = d,
    n._HEX2RGB = function(e) {
        return [(t = c(e))[0] / 255, t[1] / 255, t[2] / 255];
        var t
    }
    ,
    n.HSV2RGB = function(e) {
        return ie(h(e))
    }
    ,
    n.HSV2HEX = function(e) {
        return ne(h(e))
    }
    ,
    n.RGB2HSV = function(e) {
        return m(r(e))
    }
    ,
    n.RGB2HEX = i,
    n.HEX2HSV = function(e) {
        return m(d(e))
    }
    ,
    n.HEX2RGB = c
}(window, document);
